/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using mailslurp.Client;
using mailslurp.Api;
// uncomment below to import models
//using mailslurp.Model;

namespace mailslurp.Test.Api
{
    /// <summary>
    ///  Class for testing ConnectorControllerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ConnectorControllerApiTests : IDisposable
    {
        private ConnectorControllerApi instance;

        public ConnectorControllerApiTests()
        {
            instance = new ConnectorControllerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ConnectorControllerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ConnectorControllerApi
            //Assert.IsType<ConnectorControllerApi>(instance);
        }

        /// <summary>
        /// Test CreateConnector
        /// </summary>
        [Fact]
        public void CreateConnectorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateConnectorOptions createConnectorOptions = null;
            //var response = instance.CreateConnector(createConnectorOptions);
            //Assert.IsType<ConnectorDto>(response);
        }

        /// <summary>
        /// Test DeleteAllConnector
        /// </summary>
        [Fact]
        public void DeleteAllConnectorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteAllConnector();
        }

        /// <summary>
        /// Test DeleteConnector
        /// </summary>
        [Fact]
        public void DeleteConnectorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.DeleteConnector(id);
        }

        /// <summary>
        /// Test GetAllConnectorSyncEvents
        /// </summary>
        [Fact]
        public void GetAllConnectorSyncEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetAllConnectorSyncEvents(page, size, sort, since, before);
            //Assert.IsType<PageConnectorSyncEvents>(response);
        }

        /// <summary>
        /// Test GetConnector
        /// </summary>
        [Fact]
        public void GetConnectorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetConnector(id);
            //Assert.IsType<ConnectorDto>(response);
        }

        /// <summary>
        /// Test GetConnectorSyncEvent
        /// </summary>
        [Fact]
        public void GetConnectorSyncEventTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetConnectorSyncEvent(id);
            //Assert.IsType<ConnectorSyncEventDto>(response);
        }

        /// <summary>
        /// Test GetConnectorSyncEvents
        /// </summary>
        [Fact]
        public void GetConnectorSyncEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetConnectorSyncEvents(id, page, size, sort, since, before);
            //Assert.IsType<PageConnectorSyncEvents>(response);
        }

        /// <summary>
        /// Test GetConnectors
        /// </summary>
        [Fact]
        public void GetConnectorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetConnectors(page, size, sort, since, before);
            //Assert.IsType<PageConnector>(response);
        }

        /// <summary>
        /// Test SyncConnector
        /// </summary>
        [Fact]
        public void SyncConnectorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.SyncConnector(id);
            //Assert.IsType<ConnectorSyncRequestResult>(response);
        }

        /// <summary>
        /// Test UpdateConnector
        /// </summary>
        [Fact]
        public void UpdateConnectorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //CreateConnectorOptions createConnectorOptions = null;
            //var response = instance.UpdateConnector(id, createConnectorOptions);
            //Assert.IsType<ConnectorDto>(response);
        }
    }
}
