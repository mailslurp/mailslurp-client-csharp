/* 
 * MailSlurp API
 *
 * For documentation see [developer guide](https://www.mailslurp.com/developers). [Create an account](https://app.mailslurp.com) in the MailSlurp Dashboard to [view your API Key](https://app). For all bugs, feature requests, or help please [see support](https://www.mailslurp.com/support/).
 *
 * OpenAPI spec version: 0.0.1-alpha
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using mailslurp.Client;
using mailslurp.Api;
using mailslurp.Model;

namespace mailslurp.Test
{
    /// <summary>
    ///  Class for testing ExtraOperationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ExtraOperationsApiTests
    {
        private ExtraOperationsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ExtraOperationsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ExtraOperationsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ExtraOperationsApi
            //Assert.IsInstanceOfType(typeof(ExtraOperationsApi), instance, "instance is a ExtraOperationsApi");
        }

        
        /// <summary>
        /// Test BulkCreateInboxes
        /// </summary>
        [Test]
        public void BulkCreateInboxesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? count = null;
            //var response = instance.BulkCreateInboxes(count);
            //Assert.IsInstanceOf<List<Inbox>> (response, "response is List<Inbox>");
        }
        
        /// <summary>
        /// Test BulkDeleteInboxes
        /// </summary>
        [Test]
        public void BulkDeleteInboxesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<Guid?> requestBody = null;
            //instance.BulkDeleteInboxes(requestBody);
            
        }
        
        /// <summary>
        /// Test BulkSendEmails
        /// </summary>
        [Test]
        public void BulkSendEmailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BulkSendEmailOptions bulkSendEmailOptions = null;
            //instance.BulkSendEmails(bulkSendEmailOptions);
            
        }
        
        /// <summary>
        /// Test CreateInbox
        /// </summary>
        [Test]
        public void CreateInboxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CreateInbox();
            //Assert.IsInstanceOf<Inbox> (response, "response is Inbox");
        }
        
        /// <summary>
        /// Test CreateWebhook
        /// </summary>
        [Test]
        public void CreateWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? inboxId = null;
            //CreateWebhookOptions createWebhookOptions = null;
            //var response = instance.CreateWebhook(inboxId, createWebhookOptions);
            //Assert.IsInstanceOf<Webhook> (response, "response is Webhook");
        }
        
        /// <summary>
        /// Test DeleteEmail
        /// </summary>
        [Test]
        public void DeleteEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? emailId = null;
            //instance.DeleteEmail(emailId);
            
        }
        
        /// <summary>
        /// Test DeleteInbox
        /// </summary>
        [Test]
        public void DeleteInboxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? inboxId = null;
            //instance.DeleteInbox(inboxId);
            
        }
        
        /// <summary>
        /// Test DeleteWebhook
        /// </summary>
        [Test]
        public void DeleteWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? inboxId = null;
            //Guid? webhookId = null;
            //instance.DeleteWebhook(inboxId, webhookId);
            
        }
        
        /// <summary>
        /// Test DownloadAttachment
        /// </summary>
        [Test]
        public void DownloadAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string attachmentId = null;
            //Guid? emailId = null;
            //instance.DownloadAttachment(attachmentId, emailId);
            
        }
        
        /// <summary>
        /// Test GetEmail
        /// </summary>
        [Test]
        public void GetEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? emailId = null;
            //var response = instance.GetEmail(emailId);
            //Assert.IsInstanceOf<Email> (response, "response is Email");
        }
        
        /// <summary>
        /// Test GetEmails
        /// </summary>
        [Test]
        public void GetEmailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? inboxId = null;
            //int? limit = null;
            //long? minCount = null;
            //long? retryTimeout = null;
            //DateTime? since = null;
            //var response = instance.GetEmails(inboxId, limit, minCount, retryTimeout, since);
            //Assert.IsInstanceOf<List<EmailPreview>> (response, "response is List<EmailPreview>");
        }
        
        /// <summary>
        /// Test GetInbox
        /// </summary>
        [Test]
        public void GetInboxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? inboxId = null;
            //var response = instance.GetInbox(inboxId);
            //Assert.IsInstanceOf<Inbox> (response, "response is Inbox");
        }
        
        /// <summary>
        /// Test GetInboxes
        /// </summary>
        [Test]
        public void GetInboxesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetInboxes();
            //Assert.IsInstanceOf<List<Inbox>> (response, "response is List<Inbox>");
        }
        
        /// <summary>
        /// Test GetRawEmailContents
        /// </summary>
        [Test]
        public void GetRawEmailContentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? emailId = null;
            //var response = instance.GetRawEmailContents(emailId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetWebhooks
        /// </summary>
        [Test]
        public void GetWebhooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? inboxId = null;
            //var response = instance.GetWebhooks(inboxId);
            //Assert.IsInstanceOf<List<Webhook>> (response, "response is List<Webhook>");
        }
        
        /// <summary>
        /// Test SendEmail
        /// </summary>
        [Test]
        public void SendEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? inboxId = null;
            //SendEmailOptions sendEmailOptions = null;
            //instance.SendEmail(inboxId, sendEmailOptions);
            
        }
        
    }

}
