/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using mailslurp.Client;
using mailslurp.Api;
// uncomment below to import models
//using mailslurp.Model;

namespace mailslurp.Test.Api
{
    /// <summary>
    ///  Class for testing OAuthConnectionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OAuthConnectionApiTests : IDisposable
    {
        private OAuthConnectionApi instance;

        public OAuthConnectionApiTests()
        {
            instance = new OAuthConnectionApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OAuthConnectionApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OAuthConnectionApi
            //Assert.IsType<OAuthConnectionApi>(instance);
        }

        /// <summary>
        /// Test CreateOAuthConnection
        /// </summary>
        [Fact]
        public void CreateOAuthConnectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string redirectBase = null;
            //string oAuthConnectionType = null;
            //string emailAddress = null;
            //var response = instance.CreateOAuthConnection(redirectBase, oAuthConnectionType, emailAddress);
            //Assert.IsType<CreateOAuthConnectionResult>(response);
        }

        /// <summary>
        /// Test ExchangeAuthorizationTokenAndCreateOrUpdateInbox
        /// </summary>
        [Fact]
        public void ExchangeAuthorizationTokenAndCreateOrUpdateInboxTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorizationCode = null;
            //string redirectUri = null;
            //var response = instance.ExchangeAuthorizationTokenAndCreateOrUpdateInbox(authorizationCode, redirectUri);
            //Assert.IsType<CreateOAuthExchangeResult>(response);
        }
    }
}
