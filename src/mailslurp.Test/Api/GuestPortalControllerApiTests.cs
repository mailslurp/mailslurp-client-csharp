/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using mailslurp.Client;
using mailslurp.Api;
// uncomment below to import models
//using mailslurp.Model;

namespace mailslurp.Test.Api
{
    /// <summary>
    ///  Class for testing GuestPortalControllerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GuestPortalControllerApiTests : IDisposable
    {
        private GuestPortalControllerApi instance;

        public GuestPortalControllerApiTests()
        {
            instance = new GuestPortalControllerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GuestPortalControllerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GuestPortalControllerApi
            //Assert.IsType<GuestPortalControllerApi>(instance);
        }

        /// <summary>
        /// Test CreateGuestPortal
        /// </summary>
        [Fact]
        public void CreateGuestPortalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreatePortalOptions createPortalOptions = null;
            //var response = instance.CreateGuestPortal(createPortalOptions);
            //Assert.IsType<GuestPortalDto>(response);
        }

        /// <summary>
        /// Test CreateGuestPortalUser
        /// </summary>
        [Fact]
        public void CreateGuestPortalUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid portalId = null;
            //CreatePortalUserOptions createPortalUserOptions = null;
            //var response = instance.CreateGuestPortalUser(portalId, createPortalUserOptions);
            //Assert.IsType<GuestPortalUserCreateDto>(response);
        }

        /// <summary>
        /// Test GetAllGuestPortalUsers
        /// </summary>
        [Fact]
        public void GetAllGuestPortalUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? portalId = null;
            //string search = null;
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetAllGuestPortalUsers(portalId, search, page, size, sort, since, before);
            //Assert.IsType<PageGuestPortalUsers>(response);
        }

        /// <summary>
        /// Test GetGuestPortal
        /// </summary>
        [Fact]
        public void GetGuestPortalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid portalId = null;
            //var response = instance.GetGuestPortal(portalId);
            //Assert.IsType<GuestPortalDto>(response);
        }

        /// <summary>
        /// Test GetGuestPortalUser
        /// </summary>
        [Fact]
        public void GetGuestPortalUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid portalId = null;
            //Guid guestId = null;
            //var response = instance.GetGuestPortalUser(portalId, guestId);
            //Assert.IsType<GuestPortalUserDto>(response);
        }

        /// <summary>
        /// Test GetGuestPortalUserById
        /// </summary>
        [Fact]
        public void GetGuestPortalUserByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid guestId = null;
            //var response = instance.GetGuestPortalUserById(guestId);
            //Assert.IsType<GuestPortalUserDto>(response);
        }

        /// <summary>
        /// Test GetGuestPortalUsers
        /// </summary>
        [Fact]
        public void GetGuestPortalUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid portalId = null;
            //string search = null;
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetGuestPortalUsers(portalId, search, page, size, sort, since, before);
            //Assert.IsType<PageGuestPortalUsers>(response);
        }

        /// <summary>
        /// Test GetGuestPortals
        /// </summary>
        [Fact]
        public void GetGuestPortalsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetGuestPortals();
            //Assert.IsType<List<GuestPortalDto>>(response);
        }
    }
}
