/* 
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using mailslurp.Client;
using mailslurp.Api;
using mailslurp.Model;

namespace mailslurp.Test
{
    /// <summary>
    ///  Class for testing BounceControllerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BounceControllerApiTests : IDisposable
    {
        private BounceControllerApi instance;

        public BounceControllerApiTests()
        {
            instance = new BounceControllerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BounceControllerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BounceControllerApi
            //Assert.IsType(typeof(BounceControllerApi), instance, "instance is a BounceControllerApi");
        }

        
        /// <summary>
        /// Test GetBouncedEmail
        /// </summary>
        [Fact]
        public void GetBouncedEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.GetBouncedEmail(id);
            
        }
        
        /// <summary>
        /// Test GetBouncedEmail1
        /// </summary>
        [Fact]
        public void GetBouncedEmail1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.GetBouncedEmail1(id);
            
        }
        
        /// <summary>
        /// Test GetBouncedEmails
        /// </summary>
        [Fact]
        public void GetBouncedEmailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //instance.GetBouncedEmails(page, size, sort);
            
        }
        
        /// <summary>
        /// Test GetBouncedRecipients
        /// </summary>
        [Fact]
        public void GetBouncedRecipientsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //instance.GetBouncedRecipients(page, size, sort);
            
        }
        
    }

}
