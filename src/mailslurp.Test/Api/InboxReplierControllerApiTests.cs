/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using mailslurp.Client;
using mailslurp.Api;
// uncomment below to import models
//using mailslurp.Model;

namespace mailslurp.Test.Api
{
    /// <summary>
    ///  Class for testing InboxReplierControllerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InboxReplierControllerApiTests : IDisposable
    {
        private InboxReplierControllerApi instance;

        public InboxReplierControllerApiTests()
        {
            instance = new InboxReplierControllerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InboxReplierControllerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' InboxReplierControllerApi
            //Assert.IsType<InboxReplierControllerApi>(instance);
        }

        /// <summary>
        /// Test CreateNewInboxReplier
        /// </summary>
        [Fact]
        public void CreateNewInboxReplierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateInboxReplierOptions createInboxReplierOptions = null;
            //var response = instance.CreateNewInboxReplier(createInboxReplierOptions);
            //Assert.IsType<InboxReplierDto>(response);
        }

        /// <summary>
        /// Test DeleteInboxReplier
        /// </summary>
        [Fact]
        public void DeleteInboxReplierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.DeleteInboxReplier(id);
        }

        /// <summary>
        /// Test DeleteInboxRepliers
        /// </summary>
        [Fact]
        public void DeleteInboxRepliersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? inboxId = null;
            //instance.DeleteInboxRepliers(inboxId);
        }

        /// <summary>
        /// Test GetInboxReplier
        /// </summary>
        [Fact]
        public void GetInboxReplierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetInboxReplier(id);
            //Assert.IsType<InboxReplierDto>(response);
        }

        /// <summary>
        /// Test GetInboxReplierEvents
        /// </summary>
        [Fact]
        public void GetInboxReplierEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //var response = instance.GetInboxReplierEvents(id, page, size, sort);
            //Assert.IsType<PageInboxReplierEvents>(response);
        }

        /// <summary>
        /// Test GetInboxRepliers
        /// </summary>
        [Fact]
        public void GetInboxRepliersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? inboxId = null;
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetInboxRepliers(inboxId, page, size, sort, since, before);
            //Assert.IsType<PageInboxReplierDto>(response);
        }

        /// <summary>
        /// Test UpdateInboxReplier
        /// </summary>
        [Fact]
        public void UpdateInboxReplierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //UpdateInboxReplierOptions updateInboxReplierOptions = null;
            //var response = instance.UpdateInboxReplier(id, updateInboxReplierOptions);
            //Assert.IsType<InboxReplierDto>(response);
        }
    }
}
