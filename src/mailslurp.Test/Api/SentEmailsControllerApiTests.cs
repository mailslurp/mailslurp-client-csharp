/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using mailslurp.Client;
using mailslurp.Api;
// uncomment below to import models
//using mailslurp.Model;

namespace mailslurp.Test.Api
{
    /// <summary>
    ///  Class for testing SentEmailsControllerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SentEmailsControllerApiTests : IDisposable
    {
        private SentEmailsControllerApi instance;

        public SentEmailsControllerApiTests()
        {
            instance = new SentEmailsControllerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SentEmailsControllerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SentEmailsControllerApi
            //Assert.IsType<SentEmailsControllerApi>(instance);
        }

        /// <summary>
        /// Test DeleteAllSentEmails
        /// </summary>
        [Fact]
        public void DeleteAllSentEmailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteAllSentEmails();
        }

        /// <summary>
        /// Test DeleteSentEmail
        /// </summary>
        [Fact]
        public void DeleteSentEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.DeleteSentEmail(id);
        }

        /// <summary>
        /// Test GetAllSentTrackingPixels
        /// </summary>
        [Fact]
        public void GetAllSentTrackingPixelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //string searchFilter = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetAllSentTrackingPixels(page, size, sort, searchFilter, since, before);
            //Assert.IsType<PageTrackingPixelProjection>(response);
        }

        /// <summary>
        /// Test GetRawSentEmailContents
        /// </summary>
        [Fact]
        public void GetRawSentEmailContentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid emailId = null;
            //instance.GetRawSentEmailContents(emailId);
        }

        /// <summary>
        /// Test GetRawSentEmailJson
        /// </summary>
        [Fact]
        public void GetRawSentEmailJsonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid emailId = null;
            //var response = instance.GetRawSentEmailJson(emailId);
            //Assert.IsType<RawEmailJson>(response);
        }

        /// <summary>
        /// Test GetSentDeliveryStatus
        /// </summary>
        [Fact]
        public void GetSentDeliveryStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid deliveryId = null;
            //var response = instance.GetSentDeliveryStatus(deliveryId);
            //Assert.IsType<DeliveryStatusDto>(response);
        }

        /// <summary>
        /// Test GetSentDeliveryStatuses
        /// </summary>
        [Fact]
        public void GetSentDeliveryStatusesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetSentDeliveryStatuses(page, size, sort, since, before);
            //Assert.IsType<PageDeliveryStatus>(response);
        }

        /// <summary>
        /// Test GetSentDeliveryStatusesBySentId
        /// </summary>
        [Fact]
        public void GetSentDeliveryStatusesBySentIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid sentId = null;
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetSentDeliveryStatusesBySentId(sentId, page, size, sort, since, before);
            //Assert.IsType<PageDeliveryStatus>(response);
        }

        /// <summary>
        /// Test GetSentEmail
        /// </summary>
        [Fact]
        public void GetSentEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetSentEmail(id);
            //Assert.IsType<SentEmailDto>(response);
        }

        /// <summary>
        /// Test GetSentEmailHTMLContent
        /// </summary>
        [Fact]
        public void GetSentEmailHTMLContentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetSentEmailHTMLContent(id);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test GetSentEmailPreviewURLs
        /// </summary>
        [Fact]
        public void GetSentEmailPreviewURLsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetSentEmailPreviewURLs(id);
            //Assert.IsType<EmailPreviewUrls>(response);
        }

        /// <summary>
        /// Test GetSentEmailTrackingPixels
        /// </summary>
        [Fact]
        public void GetSentEmailTrackingPixelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //string searchFilter = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetSentEmailTrackingPixels(id, page, size, sort, searchFilter, since, before);
            //Assert.IsType<PageTrackingPixelProjection>(response);
        }

        /// <summary>
        /// Test GetSentEmails
        /// </summary>
        [Fact]
        public void GetSentEmailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? inboxId = null;
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //string searchFilter = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetSentEmails(inboxId, page, size, sort, searchFilter, since, before);
            //Assert.IsType<PageSentEmailProjection>(response);
        }

        /// <summary>
        /// Test GetSentEmailsWithQueueResults
        /// </summary>
        [Fact]
        public void GetSentEmailsWithQueueResultsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetSentEmailsWithQueueResults(page, size, sort, since, before);
            //Assert.IsType<PageSentEmailWithQueueProjection>(response);
        }

        /// <summary>
        /// Test GetSentOrganizationEmails
        /// </summary>
        [Fact]
        public void GetSentOrganizationEmailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? inboxId = null;
            //int? page = null;
            //int? size = null;
            //string sort = null;
            //string searchFilter = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.GetSentOrganizationEmails(inboxId, page, size, sort, searchFilter, since, before);
            //Assert.IsType<PageSentEmailProjection>(response);
        }

        /// <summary>
        /// Test WaitForDeliveryStatuses
        /// </summary>
        [Fact]
        public void WaitForDeliveryStatusesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? sentId = null;
            //Guid? inboxId = null;
            //long? timeout = null;
            //int? index = null;
            //DateTime? since = null;
            //DateTime? before = null;
            //var response = instance.WaitForDeliveryStatuses(sentId, inboxId, timeout, index, since, before);
            //Assert.IsType<DeliveryStatusDto>(response);
        }
    }
}
