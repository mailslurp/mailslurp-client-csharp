/* 
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using mailslurp.Client;
using mailslurp.Api;
using mailslurp.Model;

namespace mailslurp.Test
{
    /// <summary>
    ///  Class for testing AttachmentControllerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AttachmentControllerApiTests : IDisposable
    {
        private AttachmentControllerApi instance;

        public AttachmentControllerApiTests()
        {
            instance = new AttachmentControllerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AttachmentControllerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AttachmentControllerApi
            //Assert.IsType(typeof(AttachmentControllerApi), instance, "instance is a AttachmentControllerApi");
        }

        
        /// <summary>
        /// Test UploadAttachment
        /// </summary>
        [Fact]
        public void UploadAttachmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UploadAttachmentOptions uploadOptions = null;
            //var response = instance.UploadAttachment(uploadOptions);
            //Assert.IsType<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test UploadAttachmentBytes
        /// </summary>
        [Fact]
        public void UploadAttachmentBytesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _string = null;
            //string filename = null;
            //byte[] byteArray = null;
            //var response = instance.UploadAttachmentBytes(_string, filename, byteArray);
            //Assert.IsType<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test UploadMultipartForm
        /// </summary>
        [Fact]
        public void UploadMultipartFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream file = null;
            //string contentType = null;
            //string filename = null;
            //string xFilename = null;
            //var response = instance.UploadMultipartForm(file, contentType, filename, xFilename);
            //Assert.IsType<List<string>> (response, "response is List<string>");
        }
        
    }

}
