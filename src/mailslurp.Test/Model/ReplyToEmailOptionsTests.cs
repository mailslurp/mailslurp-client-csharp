/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Api;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing ReplyToEmailOptions
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ReplyToEmailOptionsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ReplyToEmailOptions
        //private ReplyToEmailOptions instance;

        public ReplyToEmailOptionsTests()
        {
            // TODO uncomment below to create an instance of ReplyToEmailOptions
            //instance = new ReplyToEmailOptions();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ReplyToEmailOptions
        /// </summary>
        [Fact]
        public void ReplyToEmailOptionsInstanceTest()
        {
            // TODO uncomment below to test "IsType" ReplyToEmailOptions
            //Assert.IsType<ReplyToEmailOptions>(instance);
        }


        /// <summary>
        /// Test the property 'Body'
        /// </summary>
        [Fact]
        public void BodyTest()
        {
            // TODO unit test for the property 'Body'
        }
        /// <summary>
        /// Test the property 'IsHTML'
        /// </summary>
        [Fact]
        public void IsHTMLTest()
        {
            // TODO unit test for the property 'IsHTML'
        }
        /// <summary>
        /// Test the property 'From'
        /// </summary>
        [Fact]
        public void FromTest()
        {
            // TODO unit test for the property 'From'
        }
        /// <summary>
        /// Test the property 'ReplyTo'
        /// </summary>
        [Fact]
        public void ReplyToTest()
        {
            // TODO unit test for the property 'ReplyTo'
        }
        /// <summary>
        /// Test the property 'CustomHeaders'
        /// </summary>
        [Fact]
        public void CustomHeadersTest()
        {
            // TODO unit test for the property 'CustomHeaders'
        }
        /// <summary>
        /// Test the property 'Charset'
        /// </summary>
        [Fact]
        public void CharsetTest()
        {
            // TODO unit test for the property 'Charset'
        }
        /// <summary>
        /// Test the property 'Attachments'
        /// </summary>
        [Fact]
        public void AttachmentsTest()
        {
            // TODO unit test for the property 'Attachments'
        }
        /// <summary>
        /// Test the property 'TemplateVariables'
        /// </summary>
        [Fact]
        public void TemplateVariablesTest()
        {
            // TODO unit test for the property 'TemplateVariables'
        }
        /// <summary>
        /// Test the property 'Template'
        /// </summary>
        [Fact]
        public void TemplateTest()
        {
            // TODO unit test for the property 'Template'
        }
        /// <summary>
        /// Test the property 'SendStrategy'
        /// </summary>
        [Fact]
        public void SendStrategyTest()
        {
            // TODO unit test for the property 'SendStrategy'
        }
        /// <summary>
        /// Test the property 'UseInboxName'
        /// </summary>
        [Fact]
        public void UseInboxNameTest()
        {
            // TODO unit test for the property 'UseInboxName'
        }
        /// <summary>
        /// Test the property 'Html'
        /// </summary>
        [Fact]
        public void HtmlTest()
        {
            // TODO unit test for the property 'Html'
        }

    }

}
