/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Api;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing CreateEmergencyAddressOptions
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CreateEmergencyAddressOptionsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CreateEmergencyAddressOptions
        //private CreateEmergencyAddressOptions instance;

        public CreateEmergencyAddressOptionsTests()
        {
            // TODO uncomment below to create an instance of CreateEmergencyAddressOptions
            //instance = new CreateEmergencyAddressOptions();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CreateEmergencyAddressOptions
        /// </summary>
        [Fact]
        public void CreateEmergencyAddressOptionsInstanceTest()
        {
            // TODO uncomment below to test "IsType" CreateEmergencyAddressOptions
            //Assert.IsType<CreateEmergencyAddressOptions>(instance);
        }


        /// <summary>
        /// Test the property 'CustomerName'
        /// </summary>
        [Fact]
        public void CustomerNameTest()
        {
            // TODO unit test for the property 'CustomerName'
        }
        /// <summary>
        /// Test the property 'Address1'
        /// </summary>
        [Fact]
        public void Address1Test()
        {
            // TODO unit test for the property 'Address1'
        }
        /// <summary>
        /// Test the property 'City'
        /// </summary>
        [Fact]
        public void CityTest()
        {
            // TODO unit test for the property 'City'
        }
        /// <summary>
        /// Test the property 'Region'
        /// </summary>
        [Fact]
        public void RegionTest()
        {
            // TODO unit test for the property 'Region'
        }
        /// <summary>
        /// Test the property 'PostalCode'
        /// </summary>
        [Fact]
        public void PostalCodeTest()
        {
            // TODO unit test for the property 'PostalCode'
        }
        /// <summary>
        /// Test the property 'IsoCountryCode'
        /// </summary>
        [Fact]
        public void IsoCountryCodeTest()
        {
            // TODO unit test for the property 'IsoCountryCode'
        }
        /// <summary>
        /// Test the property 'DisplayName'
        /// </summary>
        [Fact]
        public void DisplayNameTest()
        {
            // TODO unit test for the property 'DisplayName'
        }

    }

}
