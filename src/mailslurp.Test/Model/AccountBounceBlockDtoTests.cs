/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Api;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing AccountBounceBlockDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AccountBounceBlockDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AccountBounceBlockDto
        //private AccountBounceBlockDto instance;

        public AccountBounceBlockDtoTests()
        {
            // TODO uncomment below to create an instance of AccountBounceBlockDto
            //instance = new AccountBounceBlockDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AccountBounceBlockDto
        /// </summary>
        [Fact]
        public void AccountBounceBlockDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" AccountBounceBlockDto
            //Assert.IsType<AccountBounceBlockDto>(instance);
        }


        /// <summary>
        /// Test the property 'IsSendingBlocked'
        /// </summary>
        [Fact]
        public void IsSendingBlockedTest()
        {
            // TODO unit test for the property 'IsSendingBlocked'
        }
        /// <summary>
        /// Test the property 'BounceCount'
        /// </summary>
        [Fact]
        public void BounceCountTest()
        {
            // TODO unit test for the property 'BounceCount'
        }
        /// <summary>
        /// Test the property 'BounceCountToday'
        /// </summary>
        [Fact]
        public void BounceCountTodayTest()
        {
            // TODO unit test for the property 'BounceCountToday'
        }
        /// <summary>
        /// Test the property 'MaximumDailyBounces'
        /// </summary>
        [Fact]
        public void MaximumDailyBouncesTest()
        {
            // TODO unit test for the property 'MaximumDailyBounces'
        }
        /// <summary>
        /// Test the property 'MaximumAccountBounces'
        /// </summary>
        [Fact]
        public void MaximumAccountBouncesTest()
        {
            // TODO unit test for the property 'MaximumAccountBounces'
        }

    }

}
