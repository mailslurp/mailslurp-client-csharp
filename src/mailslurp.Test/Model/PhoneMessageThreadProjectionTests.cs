/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing PhoneMessageThreadProjection
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PhoneMessageThreadProjectionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PhoneMessageThreadProjection
        //private PhoneMessageThreadProjection instance;

        public PhoneMessageThreadProjectionTests()
        {
            // TODO uncomment below to create an instance of PhoneMessageThreadProjection
            //instance = new PhoneMessageThreadProjection();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PhoneMessageThreadProjection
        /// </summary>
        [Fact]
        public void PhoneMessageThreadProjectionInstanceTest()
        {
            // TODO uncomment below to test "IsType" PhoneMessageThreadProjection
            //Assert.IsType<PhoneMessageThreadProjection>(instance);
        }

        /// <summary>
        /// Test the property 'PhoneNumber'
        /// </summary>
        [Fact]
        public void PhoneNumberTest()
        {
            // TODO unit test for the property 'PhoneNumber'
        }

        /// <summary>
        /// Test the property 'PhoneNumberId'
        /// </summary>
        [Fact]
        public void PhoneNumberIdTest()
        {
            // TODO unit test for the property 'PhoneNumberId'
        }

        /// <summary>
        /// Test the property 'OtherPhoneNumber'
        /// </summary>
        [Fact]
        public void OtherPhoneNumberTest()
        {
            // TODO unit test for the property 'OtherPhoneNumber'
        }

        /// <summary>
        /// Test the property 'LastMessageDirection'
        /// </summary>
        [Fact]
        public void LastMessageDirectionTest()
        {
            // TODO unit test for the property 'LastMessageDirection'
        }

        /// <summary>
        /// Test the property 'LastBody'
        /// </summary>
        [Fact]
        public void LastBodyTest()
        {
            // TODO unit test for the property 'LastBody'
        }

        /// <summary>
        /// Test the property 'LastCreated'
        /// </summary>
        [Fact]
        public void LastCreatedTest()
        {
            // TODO unit test for the property 'LastCreated'
        }
    }
}
