/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing CreatePortalUserOptions
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CreatePortalUserOptionsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CreatePortalUserOptions
        //private CreatePortalUserOptions instance;

        public CreatePortalUserOptionsTests()
        {
            // TODO uncomment below to create an instance of CreatePortalUserOptions
            //instance = new CreatePortalUserOptions();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CreatePortalUserOptions
        /// </summary>
        [Fact]
        public void CreatePortalUserOptionsInstanceTest()
        {
            // TODO uncomment below to test "IsType" CreatePortalUserOptions
            //Assert.IsType<CreatePortalUserOptions>(instance);
        }

        /// <summary>
        /// Test the property 'Password'
        /// </summary>
        [Fact]
        public void PasswordTest()
        {
            // TODO unit test for the property 'Password'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Username'
        /// </summary>
        [Fact]
        public void UsernameTest()
        {
            // TODO unit test for the property 'Username'
        }

        /// <summary>
        /// Test the property 'SkipInboxCreation'
        /// </summary>
        [Fact]
        public void SkipInboxCreationTest()
        {
            // TODO unit test for the property 'SkipInboxCreation'
        }

        /// <summary>
        /// Test the property 'InboxId'
        /// </summary>
        [Fact]
        public void InboxIdTest()
        {
            // TODO unit test for the property 'InboxId'
        }

        /// <summary>
        /// Test the property 'CreateInboxOptions'
        /// </summary>
        [Fact]
        public void CreateInboxOptionsTest()
        {
            // TODO unit test for the property 'CreateInboxOptions'
        }
    }
}
