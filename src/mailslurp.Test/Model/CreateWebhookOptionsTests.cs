/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Api;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing CreateWebhookOptions
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CreateWebhookOptionsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CreateWebhookOptions
        //private CreateWebhookOptions instance;

        public CreateWebhookOptionsTests()
        {
            // TODO uncomment below to create an instance of CreateWebhookOptions
            //instance = new CreateWebhookOptions();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CreateWebhookOptions
        /// </summary>
        [Fact]
        public void CreateWebhookOptionsInstanceTest()
        {
            // TODO uncomment below to test "IsType" CreateWebhookOptions
            //Assert.IsType<CreateWebhookOptions>(instance);
        }


        /// <summary>
        /// Test the property 'Url'
        /// </summary>
        [Fact]
        public void UrlTest()
        {
            // TODO unit test for the property 'Url'
        }
        /// <summary>
        /// Test the property 'BasicAuth'
        /// </summary>
        [Fact]
        public void BasicAuthTest()
        {
            // TODO unit test for the property 'BasicAuth'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'EventName'
        /// </summary>
        [Fact]
        public void EventNameTest()
        {
            // TODO unit test for the property 'EventName'
        }
        /// <summary>
        /// Test the property 'IncludeHeaders'
        /// </summary>
        [Fact]
        public void IncludeHeadersTest()
        {
            // TODO unit test for the property 'IncludeHeaders'
        }
        /// <summary>
        /// Test the property 'RequestBodyTemplate'
        /// </summary>
        [Fact]
        public void RequestBodyTemplateTest()
        {
            // TODO unit test for the property 'RequestBodyTemplate'
        }
        /// <summary>
        /// Test the property 'UseStaticIpRange'
        /// </summary>
        [Fact]
        public void UseStaticIpRangeTest()
        {
            // TODO unit test for the property 'UseStaticIpRange'
        }
        /// <summary>
        /// Test the property 'IgnoreInsecureSslCertificates'
        /// </summary>
        [Fact]
        public void IgnoreInsecureSslCertificatesTest()
        {
            // TODO unit test for the property 'IgnoreInsecureSslCertificates'
        }

    }

}
