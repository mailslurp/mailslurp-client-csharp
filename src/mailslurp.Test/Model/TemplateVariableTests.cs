/* 
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: b386ac8a37a5e2f7ec170c77416dbd971223d596
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Api;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test
{
    /// <summary>
    ///  Class for testing TemplateVariable
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TemplateVariableTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TemplateVariable
        //private TemplateVariable instance;

        public TemplateVariableTests()
        {
            // TODO uncomment below to create an instance of TemplateVariable
            //instance = new TemplateVariable();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TemplateVariable
        /// </summary>
        [Fact]
        public void TemplateVariableInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" TemplateVariable
            //Assert.IsInstanceOfType<TemplateVariable> (instance, "variable 'instance' is a TemplateVariable");
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'VariableType'
        /// </summary>
        [Fact]
        public void VariableTypeTest()
        {
            // TODO unit test for the property 'VariableType'
        }

    }

}
