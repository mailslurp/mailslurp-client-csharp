/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Api;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing LookupMtaStsDomainResults
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class LookupMtaStsDomainResultsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for LookupMtaStsDomainResults
        //private LookupMtaStsDomainResults instance;

        public LookupMtaStsDomainResultsTests()
        {
            // TODO uncomment below to create an instance of LookupMtaStsDomainResults
            //instance = new LookupMtaStsDomainResults();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LookupMtaStsDomainResults
        /// </summary>
        [Fact]
        public void LookupMtaStsDomainResultsInstanceTest()
        {
            // TODO uncomment below to test "IsType" LookupMtaStsDomainResults
            //Assert.IsType<LookupMtaStsDomainResults>(instance);
        }


        /// <summary>
        /// Test the property 'Valid'
        /// </summary>
        [Fact]
        public void ValidTest()
        {
            // TODO unit test for the property 'Valid'
        }
        /// <summary>
        /// Test the property 'Query'
        /// </summary>
        [Fact]
        public void QueryTest()
        {
            // TODO unit test for the property 'Query'
        }
        /// <summary>
        /// Test the property 'Records'
        /// </summary>
        [Fact]
        public void RecordsTest()
        {
            // TODO unit test for the property 'Records'
        }
        /// <summary>
        /// Test the property 'WellKnownQuery'
        /// </summary>
        [Fact]
        public void WellKnownQueryTest()
        {
            // TODO unit test for the property 'WellKnownQuery'
        }
        /// <summary>
        /// Test the property 'WellKnownPresent'
        /// </summary>
        [Fact]
        public void WellKnownPresentTest()
        {
            // TODO unit test for the property 'WellKnownPresent'
        }
        /// <summary>
        /// Test the property 'WellKnownValue'
        /// </summary>
        [Fact]
        public void WellKnownValueTest()
        {
            // TODO unit test for the property 'WellKnownValue'
        }
        /// <summary>
        /// Test the property 'Errors'
        /// </summary>
        [Fact]
        public void ErrorsTest()
        {
            // TODO unit test for the property 'Errors'
        }
        /// <summary>
        /// Test the property 'Warnings'
        /// </summary>
        [Fact]
        public void WarningsTest()
        {
            // TODO unit test for the property 'Warnings'
        }

    }

}
