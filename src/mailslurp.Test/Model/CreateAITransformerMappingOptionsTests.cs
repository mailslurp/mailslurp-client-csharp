/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing CreateAITransformerMappingOptions
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CreateAITransformerMappingOptionsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CreateAITransformerMappingOptions
        //private CreateAITransformerMappingOptions instance;

        public CreateAITransformerMappingOptionsTests()
        {
            // TODO uncomment below to create an instance of CreateAITransformerMappingOptions
            //instance = new CreateAITransformerMappingOptions();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CreateAITransformerMappingOptions
        /// </summary>
        [Fact]
        public void CreateAITransformerMappingOptionsInstanceTest()
        {
            // TODO uncomment below to test "IsType" CreateAITransformerMappingOptions
            //Assert.IsType<CreateAITransformerMappingOptions>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'AiTransformId'
        /// </summary>
        [Fact]
        public void AiTransformIdTest()
        {
            // TODO unit test for the property 'AiTransformId'
        }

        /// <summary>
        /// Test the property 'EntityId'
        /// </summary>
        [Fact]
        public void EntityIdTest()
        {
            // TODO unit test for the property 'EntityId'
        }

        /// <summary>
        /// Test the property 'EntityType'
        /// </summary>
        [Fact]
        public void EntityTypeTest()
        {
            // TODO unit test for the property 'EntityType'
        }

        /// <summary>
        /// Test the property 'ContentSelector'
        /// </summary>
        [Fact]
        public void ContentSelectorTest()
        {
            // TODO unit test for the property 'ContentSelector'
        }

        /// <summary>
        /// Test the property 'TriggerSelector'
        /// </summary>
        [Fact]
        public void TriggerSelectorTest()
        {
            // TODO unit test for the property 'TriggerSelector'
        }

        /// <summary>
        /// Test the property 'SpreadRootArray'
        /// </summary>
        [Fact]
        public void SpreadRootArrayTest()
        {
            // TODO unit test for the property 'SpreadRootArray'
        }
    }
}
