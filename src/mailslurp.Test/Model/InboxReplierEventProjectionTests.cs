/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Api;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing InboxReplierEventProjection
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class InboxReplierEventProjectionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for InboxReplierEventProjection
        //private InboxReplierEventProjection instance;

        public InboxReplierEventProjectionTests()
        {
            // TODO uncomment below to create an instance of InboxReplierEventProjection
            //instance = new InboxReplierEventProjection();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InboxReplierEventProjection
        /// </summary>
        [Fact]
        public void InboxReplierEventProjectionInstanceTest()
        {
            // TODO uncomment below to test "IsType" InboxReplierEventProjection
            //Assert.IsType<InboxReplierEventProjection>(instance);
        }


        /// <summary>
        /// Test the property 'Recipients'
        /// </summary>
        [Fact]
        public void RecipientsTest()
        {
            // TODO unit test for the property 'Recipients'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Fact]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'EmailId'
        /// </summary>
        [Fact]
        public void EmailIdTest()
        {
            // TODO unit test for the property 'EmailId'
        }
        /// <summary>
        /// Test the property 'InboxId'
        /// </summary>
        [Fact]
        public void InboxIdTest()
        {
            // TODO unit test for the property 'InboxId'
        }
        /// <summary>
        /// Test the property 'SentId'
        /// </summary>
        [Fact]
        public void SentIdTest()
        {
            // TODO unit test for the property 'SentId'
        }
        /// <summary>
        /// Test the property 'ReplierId'
        /// </summary>
        [Fact]
        public void ReplierIdTest()
        {
            // TODO unit test for the property 'ReplierId'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Fact]
        public void MessageTest()
        {
            // TODO unit test for the property 'Message'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

    }

}
