/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing ProviderSettings
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ProviderSettingsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ProviderSettings
        //private ProviderSettings instance;

        public ProviderSettingsTests()
        {
            // TODO uncomment below to create an instance of ProviderSettings
            //instance = new ProviderSettings();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProviderSettings
        /// </summary>
        [Fact]
        public void ProviderSettingsInstanceTest()
        {
            // TODO uncomment below to test "IsType" ProviderSettings
            //Assert.IsType<ProviderSettings>(instance);
        }

        /// <summary>
        /// Test the property 'MailProvider'
        /// </summary>
        [Fact]
        public void MailProviderTest()
        {
            // TODO unit test for the property 'MailProvider'
        }

        /// <summary>
        /// Test the property 'ImapHost'
        /// </summary>
        [Fact]
        public void ImapHostTest()
        {
            // TODO unit test for the property 'ImapHost'
        }

        /// <summary>
        /// Test the property 'ImapPort'
        /// </summary>
        [Fact]
        public void ImapPortTest()
        {
            // TODO unit test for the property 'ImapPort'
        }

        /// <summary>
        /// Test the property 'ImapSsl'
        /// </summary>
        [Fact]
        public void ImapSslTest()
        {
            // TODO unit test for the property 'ImapSsl'
        }

        /// <summary>
        /// Test the property 'ImapStartTls'
        /// </summary>
        [Fact]
        public void ImapStartTlsTest()
        {
            // TODO unit test for the property 'ImapStartTls'
        }

        /// <summary>
        /// Test the property 'SmtpHost'
        /// </summary>
        [Fact]
        public void SmtpHostTest()
        {
            // TODO unit test for the property 'SmtpHost'
        }

        /// <summary>
        /// Test the property 'SmtpPort'
        /// </summary>
        [Fact]
        public void SmtpPortTest()
        {
            // TODO unit test for the property 'SmtpPort'
        }

        /// <summary>
        /// Test the property 'SmtpSsl'
        /// </summary>
        [Fact]
        public void SmtpSslTest()
        {
            // TODO unit test for the property 'SmtpSsl'
        }

        /// <summary>
        /// Test the property 'SmtpStartTls'
        /// </summary>
        [Fact]
        public void SmtpStartTlsTest()
        {
            // TODO unit test for the property 'SmtpStartTls'
        }
    }
}
