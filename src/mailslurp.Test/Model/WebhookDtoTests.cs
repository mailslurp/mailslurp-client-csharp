/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Api;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing WebhookDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class WebhookDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for WebhookDto
        //private WebhookDto instance;

        public WebhookDtoTests()
        {
            // TODO uncomment below to create an instance of WebhookDto
            //instance = new WebhookDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WebhookDto
        /// </summary>
        [Fact]
        public void WebhookDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" WebhookDto
            //Assert.IsType<WebhookDto>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Fact]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'BasicAuth'
        /// </summary>
        [Fact]
        public void BasicAuthTest()
        {
            // TODO unit test for the property 'BasicAuth'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'PhoneId'
        /// </summary>
        [Fact]
        public void PhoneIdTest()
        {
            // TODO unit test for the property 'PhoneId'
        }
        /// <summary>
        /// Test the property 'InboxId'
        /// </summary>
        [Fact]
        public void InboxIdTest()
        {
            // TODO unit test for the property 'InboxId'
        }
        /// <summary>
        /// Test the property 'RequestBodyTemplate'
        /// </summary>
        [Fact]
        public void RequestBodyTemplateTest()
        {
            // TODO unit test for the property 'RequestBodyTemplate'
        }
        /// <summary>
        /// Test the property 'Url'
        /// </summary>
        [Fact]
        public void UrlTest()
        {
            // TODO unit test for the property 'Url'
        }
        /// <summary>
        /// Test the property 'Method'
        /// </summary>
        [Fact]
        public void MethodTest()
        {
            // TODO unit test for the property 'Method'
        }
        /// <summary>
        /// Test the property 'PayloadJsonSchema'
        /// </summary>
        [Fact]
        public void PayloadJsonSchemaTest()
        {
            // TODO unit test for the property 'PayloadJsonSchema'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Fact]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }
        /// <summary>
        /// Test the property 'EventName'
        /// </summary>
        [Fact]
        public void EventNameTest()
        {
            // TODO unit test for the property 'EventName'
        }
        /// <summary>
        /// Test the property 'RequestHeaders'
        /// </summary>
        [Fact]
        public void RequestHeadersTest()
        {
            // TODO unit test for the property 'RequestHeaders'
        }
        /// <summary>
        /// Test the property 'IgnoreInsecureSslCertificates'
        /// </summary>
        [Fact]
        public void IgnoreInsecureSslCertificatesTest()
        {
            // TODO unit test for the property 'IgnoreInsecureSslCertificates'
        }
        /// <summary>
        /// Test the property 'UseStaticIpRange'
        /// </summary>
        [Fact]
        public void UseStaticIpRangeTest()
        {
            // TODO unit test for the property 'UseStaticIpRange'
        }

    }

}
