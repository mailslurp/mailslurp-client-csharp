/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Api;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing PageInboxForwarderDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PageInboxForwarderDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PageInboxForwarderDto
        //private PageInboxForwarderDto instance;

        public PageInboxForwarderDtoTests()
        {
            // TODO uncomment below to create an instance of PageInboxForwarderDto
            //instance = new PageInboxForwarderDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PageInboxForwarderDto
        /// </summary>
        [Fact]
        public void PageInboxForwarderDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" PageInboxForwarderDto
            //Assert.IsType<PageInboxForwarderDto>(instance);
        }


        /// <summary>
        /// Test the property 'Content'
        /// </summary>
        [Fact]
        public void ContentTest()
        {
            // TODO unit test for the property 'Content'
        }
        /// <summary>
        /// Test the property 'Pageable'
        /// </summary>
        [Fact]
        public void PageableTest()
        {
            // TODO unit test for the property 'Pageable'
        }
        /// <summary>
        /// Test the property 'TotalPages'
        /// </summary>
        [Fact]
        public void TotalPagesTest()
        {
            // TODO unit test for the property 'TotalPages'
        }
        /// <summary>
        /// Test the property 'TotalElements'
        /// </summary>
        [Fact]
        public void TotalElementsTest()
        {
            // TODO unit test for the property 'TotalElements'
        }
        /// <summary>
        /// Test the property 'Last'
        /// </summary>
        [Fact]
        public void LastTest()
        {
            // TODO unit test for the property 'Last'
        }
        /// <summary>
        /// Test the property 'NumberOfElements'
        /// </summary>
        [Fact]
        public void NumberOfElementsTest()
        {
            // TODO unit test for the property 'NumberOfElements'
        }
        /// <summary>
        /// Test the property 'First'
        /// </summary>
        [Fact]
        public void FirstTest()
        {
            // TODO unit test for the property 'First'
        }
        /// <summary>
        /// Test the property 'Size'
        /// </summary>
        [Fact]
        public void SizeTest()
        {
            // TODO unit test for the property 'Size'
        }
        /// <summary>
        /// Test the property 'Number'
        /// </summary>
        [Fact]
        public void NumberTest()
        {
            // TODO unit test for the property 'Number'
        }
        /// <summary>
        /// Test the property 'Sort'
        /// </summary>
        [Fact]
        public void SortTest()
        {
            // TODO unit test for the property 'Sort'
        }
        /// <summary>
        /// Test the property 'Empty'
        /// </summary>
        [Fact]
        public void EmptyTest()
        {
            // TODO unit test for the property 'Empty'
        }

    }

}
