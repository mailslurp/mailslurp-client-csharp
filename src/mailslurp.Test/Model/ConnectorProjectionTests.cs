/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Api;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing ConnectorProjection
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ConnectorProjectionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ConnectorProjection
        //private ConnectorProjection instance;

        public ConnectorProjectionTests()
        {
            // TODO uncomment below to create an instance of ConnectorProjection
            //instance = new ConnectorProjection();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ConnectorProjection
        /// </summary>
        [Fact]
        public void ConnectorProjectionInstanceTest()
        {
            // TODO uncomment below to test "IsType" ConnectorProjection
            //Assert.IsType<ConnectorProjection>(instance);
        }


        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'InboxId'
        /// </summary>
        [Fact]
        public void InboxIdTest()
        {
            // TODO unit test for the property 'InboxId'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Fact]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'SyncEnabled'
        /// </summary>
        [Fact]
        public void SyncEnabledTest()
        {
            // TODO unit test for the property 'SyncEnabled'
        }
        /// <summary>
        /// Test the property 'ConnectorType'
        /// </summary>
        [Fact]
        public void ConnectorTypeTest()
        {
            // TODO unit test for the property 'ConnectorType'
        }
        /// <summary>
        /// Test the property 'SyncScheduleType'
        /// </summary>
        [Fact]
        public void SyncScheduleTypeTest()
        {
            // TODO unit test for the property 'SyncScheduleType'
        }
        /// <summary>
        /// Test the property 'SyncInterval'
        /// </summary>
        [Fact]
        public void SyncIntervalTest()
        {
            // TODO unit test for the property 'SyncInterval'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

    }

}
