/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing StructuredOutputSchema
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class StructuredOutputSchemaTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for StructuredOutputSchema
        //private StructuredOutputSchema instance;

        public StructuredOutputSchemaTests()
        {
            // TODO uncomment below to create an instance of StructuredOutputSchema
            //instance = new StructuredOutputSchema();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of StructuredOutputSchema
        /// </summary>
        [Fact]
        public void StructuredOutputSchemaInstanceTest()
        {
            // TODO uncomment below to test "IsType" StructuredOutputSchema
            //Assert.IsType<StructuredOutputSchema>(instance);
        }

        /// <summary>
        /// Test the property 'AnyOf'
        /// </summary>
        [Fact]
        public void AnyOfTest()
        {
            // TODO unit test for the property 'AnyOf'
        }

        /// <summary>
        /// Test the property 'Default'
        /// </summary>
        [Fact]
        public void DefaultTest()
        {
            // TODO unit test for the property 'Default'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'Enum'
        /// </summary>
        [Fact]
        public void EnumTest()
        {
            // TODO unit test for the property 'Enum'
        }

        /// <summary>
        /// Test the property 'Example'
        /// </summary>
        [Fact]
        public void ExampleTest()
        {
            // TODO unit test for the property 'Example'
        }

        /// <summary>
        /// Test the property 'Format'
        /// </summary>
        [Fact]
        public void FormatTest()
        {
            // TODO unit test for the property 'Format'
        }

        /// <summary>
        /// Test the property 'Items'
        /// </summary>
        [Fact]
        public void ItemsTest()
        {
            // TODO unit test for the property 'Items'
        }

        /// <summary>
        /// Test the property 'MaxItems'
        /// </summary>
        [Fact]
        public void MaxItemsTest()
        {
            // TODO unit test for the property 'MaxItems'
        }

        /// <summary>
        /// Test the property 'MinItems'
        /// </summary>
        [Fact]
        public void MinItemsTest()
        {
            // TODO unit test for the property 'MinItems'
        }

        /// <summary>
        /// Test the property 'MaxLength'
        /// </summary>
        [Fact]
        public void MaxLengthTest()
        {
            // TODO unit test for the property 'MaxLength'
        }

        /// <summary>
        /// Test the property 'MinLength'
        /// </summary>
        [Fact]
        public void MinLengthTest()
        {
            // TODO unit test for the property 'MinLength'
        }

        /// <summary>
        /// Test the property 'Pattern'
        /// </summary>
        [Fact]
        public void PatternTest()
        {
            // TODO unit test for the property 'Pattern'
        }

        /// <summary>
        /// Test the property 'Properties'
        /// </summary>
        [Fact]
        public void PropertiesTest()
        {
            // TODO unit test for the property 'Properties'
        }

        /// <summary>
        /// Test the property 'PropertyOrdering'
        /// </summary>
        [Fact]
        public void PropertyOrderingTest()
        {
            // TODO unit test for the property 'PropertyOrdering'
        }

        /// <summary>
        /// Test the property 'Required'
        /// </summary>
        [Fact]
        public void RequiredTest()
        {
            // TODO unit test for the property 'Required'
        }

        /// <summary>
        /// Test the property 'MaxProperties'
        /// </summary>
        [Fact]
        public void MaxPropertiesTest()
        {
            // TODO unit test for the property 'MaxProperties'
        }

        /// <summary>
        /// Test the property 'MinProperties'
        /// </summary>
        [Fact]
        public void MinPropertiesTest()
        {
            // TODO unit test for the property 'MinProperties'
        }

        /// <summary>
        /// Test the property 'Maximum'
        /// </summary>
        [Fact]
        public void MaximumTest()
        {
            // TODO unit test for the property 'Maximum'
        }

        /// <summary>
        /// Test the property 'Minimum'
        /// </summary>
        [Fact]
        public void MinimumTest()
        {
            // TODO unit test for the property 'Minimum'
        }

        /// <summary>
        /// Test the property 'Nullable'
        /// </summary>
        [Fact]
        public void NullableTest()
        {
            // TODO unit test for the property 'Nullable'
        }

        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Fact]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
    }
}
