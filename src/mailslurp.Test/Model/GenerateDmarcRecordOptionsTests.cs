/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using mailslurp.Api;
using mailslurp.Model;
using mailslurp.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace mailslurp.Test.Model
{
    /// <summary>
    ///  Class for testing GenerateDmarcRecordOptions
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GenerateDmarcRecordOptionsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GenerateDmarcRecordOptions
        //private GenerateDmarcRecordOptions instance;

        public GenerateDmarcRecordOptionsTests()
        {
            // TODO uncomment below to create an instance of GenerateDmarcRecordOptions
            //instance = new GenerateDmarcRecordOptions();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GenerateDmarcRecordOptions
        /// </summary>
        [Fact]
        public void GenerateDmarcRecordOptionsInstanceTest()
        {
            // TODO uncomment below to test "IsType" GenerateDmarcRecordOptions
            //Assert.IsType<GenerateDmarcRecordOptions>(instance);
        }


        /// <summary>
        /// Test the property 'Domain'
        /// </summary>
        [Fact]
        public void DomainTest()
        {
            // TODO unit test for the property 'Domain'
        }
        /// <summary>
        /// Test the property '_Version'
        /// </summary>
        [Fact]
        public void _VersionTest()
        {
            // TODO unit test for the property '_Version'
        }
        /// <summary>
        /// Test the property 'Policy'
        /// </summary>
        [Fact]
        public void PolicyTest()
        {
            // TODO unit test for the property 'Policy'
        }
        /// <summary>
        /// Test the property 'SubdomainPolicy'
        /// </summary>
        [Fact]
        public void SubdomainPolicyTest()
        {
            // TODO unit test for the property 'SubdomainPolicy'
        }
        /// <summary>
        /// Test the property 'ReportEmailAddress'
        /// </summary>
        [Fact]
        public void ReportEmailAddressTest()
        {
            // TODO unit test for the property 'ReportEmailAddress'
        }
        /// <summary>
        /// Test the property 'ForensicEmailAddress'
        /// </summary>
        [Fact]
        public void ForensicEmailAddressTest()
        {
            // TODO unit test for the property 'ForensicEmailAddress'
        }
        /// <summary>
        /// Test the property 'Percentage'
        /// </summary>
        [Fact]
        public void PercentageTest()
        {
            // TODO unit test for the property 'Percentage'
        }
        /// <summary>
        /// Test the property 'ReportFormat'
        /// </summary>
        [Fact]
        public void ReportFormatTest()
        {
            // TODO unit test for the property 'ReportFormat'
        }
        /// <summary>
        /// Test the property 'SecondsBetweenReports'
        /// </summary>
        [Fact]
        public void SecondsBetweenReportsTest()
        {
            // TODO unit test for the property 'SecondsBetweenReports'
        }
        /// <summary>
        /// Test the property 'Adkim'
        /// </summary>
        [Fact]
        public void AdkimTest()
        {
            // TODO unit test for the property 'Adkim'
        }
        /// <summary>
        /// Test the property 'Aspf'
        /// </summary>
        [Fact]
        public void AspfTest()
        {
            // TODO unit test for the property 'Aspf'
        }
        /// <summary>
        /// Test the property 'Fo'
        /// </summary>
        [Fact]
        public void FoTest()
        {
            // TODO unit test for the property 'Fo'
        }

    }

}
