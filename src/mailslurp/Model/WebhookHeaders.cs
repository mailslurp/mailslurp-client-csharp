/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = mailslurp.Client.OpenAPIDateConverter;

namespace mailslurp.Model
{
    /// <summary>
    /// Webhook HTTP headers to include with each request from MailSlurp to your server
    /// </summary>
    [DataContract(Name = "WebhookHeaders")]
    public partial class WebhookHeaders : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebhookHeaders" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WebhookHeaders() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WebhookHeaders" /> class.
        /// </summary>
        /// <param name="headers">List of header name value pairs to include with webhook requests (required).</param>
        public WebhookHeaders(List<WebhookHeaderNameValue> headers = default)
        {
            // to ensure "headers" is required (not null)
            if (headers == null)
            {
                throw new ArgumentNullException("headers is a required property for WebhookHeaders and cannot be null");
            }
            this.Headers = headers;
        }

        /// <summary>
        /// List of header name value pairs to include with webhook requests
        /// </summary>
        /// <value>List of header name value pairs to include with webhook requests</value>
        [DataMember(Name = "headers", IsRequired = true, EmitDefaultValue = true)]
        public List<WebhookHeaderNameValue> Headers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebhookHeaders {\n");
            sb.Append("  Headers: ").Append(Headers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
