/* 
 * MailSlurp API
 *
 * ## Introduction  [MailSlurp](https://www.mailslurp.com) is an Email API for developers and QA testers. It let's users: - create emails addresses on demand - receive emails and attachments in code - send templated HTML emails  ## About  This page contains the REST API documentation for MailSlurp. All requests require API Key authentication passed as an `x-api-key` header.  Create an account to [get your free API Key](https://app.mailslurp.com/sign-up/).  ## Resources - üîë [Get API Key](https://app.mailslurp.com/sign-up/)                    - üéì [Developer Portal](https://www.mailslurp.com/docs/)           - üì¶ [Library SDKs](https://www.mailslurp.com/docs/) - ‚úçÔ∏è [Code Examples](https://www.mailslurp.com/examples) - ‚ö†Ô∏è [Report an issue](https://drift.me/mailslurp)  ## Explore  
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = mailslurp.Client.OpenAPIDateConverter;

namespace mailslurp.Model
{
    /// <summary>
    /// UpdateGroupContacts
    /// </summary>
    [DataContract]
    public partial class UpdateGroupContacts :  IEquatable<UpdateGroupContacts>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateGroupContacts" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdateGroupContacts() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateGroupContacts" /> class.
        /// </summary>
        /// <param name="contactIds">contactIds (required).</param>
        public UpdateGroupContacts(List<Guid> contactIds = default(List<Guid>))
        {
            // to ensure "contactIds" is required (not null)
            if (contactIds == null)
            {
                throw new InvalidDataException("contactIds is a required property for UpdateGroupContacts and cannot be null");
            }
            else
            {
                this.ContactIds = contactIds;
            }
            
        }
        
        /// <summary>
        /// Gets or Sets ContactIds
        /// </summary>
        [DataMember(Name="contactIds", EmitDefaultValue=false)]
        public List<Guid> ContactIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UpdateGroupContacts {\n");
            sb.Append("  ContactIds: ").Append(ContactIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpdateGroupContacts);
        }

        /// <summary>
        /// Returns true if UpdateGroupContacts instances are equal
        /// </summary>
        /// <param name="input">Instance of UpdateGroupContacts to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdateGroupContacts input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ContactIds == input.ContactIds ||
                    this.ContactIds != null &&
                    input.ContactIds != null &&
                    this.ContactIds.SequenceEqual(input.ContactIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ContactIds != null)
                    hashCode = hashCode * 59 + this.ContactIds.GetHashCode();
                return hashCode;
            }
        }
    }

}
