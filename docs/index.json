{
  "api/mailslurp.Api.AliasControllerApi.html": {
    "href": "api/mailslurp.Api.AliasControllerApi.html",
    "title": "Class AliasControllerApi | MailSlurp",
    "keywords": "Class AliasControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object AliasControllerApi Implements IAliasControllerApi IAliasControllerApiSync IAliasControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class AliasControllerApi : IAliasControllerApi, IAliasControllerApiSync, IAliasControllerApiAsync, IApiAccessor Constructors View Source AliasControllerApi() Initializes a new instance of the AliasControllerApi class. Declaration public AliasControllerApi() View Source AliasControllerApi(Configuration) Initializes a new instance of the AliasControllerApi class using Configuration object Declaration public AliasControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source AliasControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the AliasControllerApi class using a Configuration object and client instance. Declaration public AliasControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source AliasControllerApi(string) Initializes a new instance of the AliasControllerApi class. Declaration public AliasControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CreateAlias(CreateAliasOptions, int) Create an email alias. Must be verified by clicking link inside verification email that will be sent to the address. Once verified the alias will be active. Email aliases use a MailSlurp randomly generated email address (or a custom domain inbox that you provide) to mask or proxy a real email address. Emails sent to the alias address will be forwarded to the hidden email address it was created for. If you want to send a reply use the threadId attached Declaration public AliasDto CreateAlias(CreateAliasOptions createAliasOptions, int operationIndex = 0) Parameters Type Name Description CreateAliasOptions createAliasOptions int operationIndex Index associated with the operation. Returns Type Description AliasDto AliasDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateAliasAsync(CreateAliasOptions, int, CancellationToken) Create an email alias. Must be verified by clicking link inside verification email that will be sent to the address. Once verified the alias will be active. Email aliases use a MailSlurp randomly generated email address (or a custom domain inbox that you provide) to mask or proxy a real email address. Emails sent to the alias address will be forwarded to the hidden email address it was created for. If you want to send a reply use the threadId attached Declaration public Task<AliasDto> CreateAliasAsync(CreateAliasOptions createAliasOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateAliasOptions createAliasOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AliasDto> Task of AliasDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateAliasWithHttpInfo(CreateAliasOptions, int) Create an email alias. Must be verified by clicking link inside verification email that will be sent to the address. Once verified the alias will be active. Email aliases use a MailSlurp randomly generated email address (or a custom domain inbox that you provide) to mask or proxy a real email address. Emails sent to the alias address will be forwarded to the hidden email address it was created for. If you want to send a reply use the threadId attached Declaration public ApiResponse<AliasDto> CreateAliasWithHttpInfo(CreateAliasOptions createAliasOptions, int operationIndex = 0) Parameters Type Name Description CreateAliasOptions createAliasOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AliasDto> ApiResponse of AliasDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateAliasWithHttpInfoAsync(CreateAliasOptions, int, CancellationToken) Create an email alias. Must be verified by clicking link inside verification email that will be sent to the address. Once verified the alias will be active. Email aliases use a MailSlurp randomly generated email address (or a custom domain inbox that you provide) to mask or proxy a real email address. Emails sent to the alias address will be forwarded to the hidden email address it was created for. If you want to send a reply use the threadId attached Declaration public Task<ApiResponse<AliasDto>> CreateAliasWithHttpInfoAsync(CreateAliasOptions createAliasOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateAliasOptions createAliasOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AliasDto>> Task of ApiResponse (AliasDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAlias(Guid, int) Delete an email alias Declaration public void DeleteAlias(Guid aliasId, int operationIndex = 0) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAliasAsync(Guid, int, CancellationToken) Delete an email alias Declaration public Task DeleteAliasAsync(Guid aliasId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAliasWithHttpInfo(Guid, int) Delete an email alias Declaration public ApiResponse<object> DeleteAliasWithHttpInfo(Guid aliasId, int operationIndex = 0) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAliasWithHttpInfoAsync(Guid, int, CancellationToken) Delete an email alias Declaration public Task<ApiResponse<object>> DeleteAliasWithHttpInfoAsync(Guid aliasId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAlias(Guid, int) Get an email alias Get an email alias by ID Declaration public AliasDto GetAlias(Guid aliasId, int operationIndex = 0) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. Returns Type Description AliasDto AliasDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasAsync(Guid, int, CancellationToken) Get an email alias Get an email alias by ID Declaration public Task<AliasDto> GetAliasAsync(Guid aliasId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AliasDto> Task of AliasDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasEmails(Guid, int?, int?, string, DateTime?, DateTime?, int) Get emails for an alias Get paginated emails for an alias by ID Declaration public PageEmailProjection GetAliasEmails(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid aliasId int? page Optional page index alias email list pagination (optional, default to 0) int? size Optional page size alias email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageEmailProjection PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasEmailsAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get emails for an alias Get paginated emails for an alias by ID Declaration public Task<PageEmailProjection> GetAliasEmailsAsync(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int? page Optional page index alias email list pagination (optional, default to 0) int? size Optional page size alias email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailProjection> Task of PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasEmailsWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get emails for an alias Get paginated emails for an alias by ID Declaration public ApiResponse<PageEmailProjection> GetAliasEmailsWithHttpInfo(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid aliasId int? page Optional page index alias email list pagination (optional, default to 0) int? size Optional page size alias email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailProjection> ApiResponse of PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasEmailsWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get emails for an alias Get paginated emails for an alias by ID Declaration public Task<ApiResponse<PageEmailProjection>> GetAliasEmailsWithHttpInfoAsync(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int? page Optional page index alias email list pagination (optional, default to 0) int? size Optional page size alias email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailProjection>> Task of ApiResponse (PageEmailProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliases(string, int?, int?, string, DateTime?, DateTime?, int) Get all email aliases you have created Get all email aliases in paginated form Declaration public PageAlias GetAliases(string search = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description string search Optional search term (optional) int? page Optional page index in alias list pagination (optional, default to 0) int? size Optional page size in alias list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageAlias PageAlias Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasesAsync(string, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all email aliases you have created Get all email aliases in paginated form Declaration public Task<PageAlias> GetAliasesAsync(string search = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string search Optional search term (optional) int? page Optional page index in alias list pagination (optional, default to 0) int? size Optional page size in alias list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageAlias> Task of PageAlias Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasesWithHttpInfo(string, int?, int?, string, DateTime?, DateTime?, int) Get all email aliases you have created Get all email aliases in paginated form Declaration public ApiResponse<PageAlias> GetAliasesWithHttpInfo(string search = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description string search Optional search term (optional) int? page Optional page index in alias list pagination (optional, default to 0) int? size Optional page size in alias list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageAlias> ApiResponse of PageAlias Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasesWithHttpInfoAsync(string, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all email aliases you have created Get all email aliases in paginated form Declaration public Task<ApiResponse<PageAlias>> GetAliasesWithHttpInfoAsync(string search = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string search Optional search term (optional) int? page Optional page index in alias list pagination (optional, default to 0) int? size Optional page size in alias list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageAlias>> Task of ApiResponse (PageAlias) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasThreads(Guid, int?, int?, string, DateTime?, DateTime?, int) Get threads created for an alias Returns threads created for an email alias in paginated form Declaration public PageThreadProjection GetAliasThreads(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid aliasId int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageThreadProjection PageThreadProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasThreadsAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get threads created for an alias Returns threads created for an email alias in paginated form Declaration public Task<PageThreadProjection> GetAliasThreadsAsync(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageThreadProjection> Task of PageThreadProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasThreadsWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get threads created for an alias Returns threads created for an email alias in paginated form Declaration public ApiResponse<PageThreadProjection> GetAliasThreadsWithHttpInfo(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid aliasId int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageThreadProjection> ApiResponse of PageThreadProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasThreadsWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get threads created for an alias Returns threads created for an email alias in paginated form Declaration public Task<ApiResponse<PageThreadProjection>> GetAliasThreadsWithHttpInfoAsync(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageThreadProjection>> Task of ApiResponse (PageThreadProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasWithHttpInfo(Guid, int) Get an email alias Get an email alias by ID Declaration public ApiResponse<AliasDto> GetAliasWithHttpInfo(Guid aliasId, int operationIndex = 0) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AliasDto> ApiResponse of AliasDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasWithHttpInfoAsync(Guid, int, CancellationToken) Get an email alias Get an email alias by ID Declaration public Task<ApiResponse<AliasDto>> GetAliasWithHttpInfoAsync(Guid aliasId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AliasDto>> Task of ApiResponse (AliasDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetThread(Guid, int) Get a thread Return a thread associated with an alias Declaration public ThreadProjection GetThread(Guid threadId, int operationIndex = 0) Parameters Type Name Description Guid threadId int operationIndex Index associated with the operation. Returns Type Description ThreadProjection ThreadProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadAsync(Guid, int, CancellationToken) Get a thread Return a thread associated with an alias Declaration public Task<ThreadProjection> GetThreadAsync(Guid threadId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid threadId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ThreadProjection> Task of ThreadProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadsPaginated(int?, int?, string, DateTime?, DateTime?, int) Get all threads Returns threads created for all aliases in paginated form Declaration public PageThreadProjection GetThreadsPaginated(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageThreadProjection PageThreadProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadsPaginatedAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all threads Returns threads created for all aliases in paginated form Declaration public Task<PageThreadProjection> GetThreadsPaginatedAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageThreadProjection> Task of PageThreadProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadsPaginatedWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get all threads Returns threads created for all aliases in paginated form Declaration public ApiResponse<PageThreadProjection> GetThreadsPaginatedWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageThreadProjection> ApiResponse of PageThreadProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadsPaginatedWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all threads Returns threads created for all aliases in paginated form Declaration public Task<ApiResponse<PageThreadProjection>> GetThreadsPaginatedWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageThreadProjection>> Task of ApiResponse (PageThreadProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadWithHttpInfo(Guid, int) Get a thread Return a thread associated with an alias Declaration public ApiResponse<ThreadProjection> GetThreadWithHttpInfo(Guid threadId, int operationIndex = 0) Parameters Type Name Description Guid threadId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ThreadProjection> ApiResponse of ThreadProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadWithHttpInfoAsync(Guid, int, CancellationToken) Get a thread Return a thread associated with an alias Declaration public Task<ApiResponse<ThreadProjection>> GetThreadWithHttpInfoAsync(Guid threadId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid threadId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ThreadProjection>> Task of ApiResponse (ThreadProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToAliasEmail(Guid, Guid, ReplyToAliasEmailOptions, int) Reply to an email Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Declaration public SentEmailDto ReplyToAliasEmail(Guid aliasId, Guid emailId, ReplyToAliasEmailOptions replyToAliasEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid aliasId ID of the alias that email belongs to Guid emailId ID of the email that should be replied to ReplyToAliasEmailOptions replyToAliasEmailOptions int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToAliasEmailAsync(Guid, Guid, ReplyToAliasEmailOptions, int, CancellationToken) Reply to an email Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Declaration public Task<SentEmailDto> ReplyToAliasEmailAsync(Guid aliasId, Guid emailId, ReplyToAliasEmailOptions replyToAliasEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId ID of the alias that email belongs to Guid emailId ID of the email that should be replied to ReplyToAliasEmailOptions replyToAliasEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToAliasEmailWithHttpInfo(Guid, Guid, ReplyToAliasEmailOptions, int) Reply to an email Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Declaration public ApiResponse<SentEmailDto> ReplyToAliasEmailWithHttpInfo(Guid aliasId, Guid emailId, ReplyToAliasEmailOptions replyToAliasEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid aliasId ID of the alias that email belongs to Guid emailId ID of the email that should be replied to ReplyToAliasEmailOptions replyToAliasEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToAliasEmailWithHttpInfoAsync(Guid, Guid, ReplyToAliasEmailOptions, int, CancellationToken) Reply to an email Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Declaration public Task<ApiResponse<SentEmailDto>> ReplyToAliasEmailWithHttpInfoAsync(Guid aliasId, Guid emailId, ReplyToAliasEmailOptions replyToAliasEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId ID of the alias that email belongs to Guid emailId ID of the email that should be replied to ReplyToAliasEmailOptions replyToAliasEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendAliasEmail(Guid, SendEmailOptions, int) Send an email from an alias inbox Send an email from an alias. Replies to the email will be forwarded to the alias masked email address Declaration public SentEmailDto SendAliasEmail(Guid aliasId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid aliasId SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendAliasEmailAsync(Guid, SendEmailOptions, int, CancellationToken) Send an email from an alias inbox Send an email from an alias. Replies to the email will be forwarded to the alias masked email address Declaration public Task<SentEmailDto> SendAliasEmailAsync(Guid aliasId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendAliasEmailWithHttpInfo(Guid, SendEmailOptions, int) Send an email from an alias inbox Send an email from an alias. Replies to the email will be forwarded to the alias masked email address Declaration public ApiResponse<SentEmailDto> SendAliasEmailWithHttpInfo(Guid aliasId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid aliasId SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendAliasEmailWithHttpInfoAsync(Guid, SendEmailOptions, int, CancellationToken) Send an email from an alias inbox Send an email from an alias. Replies to the email will be forwarded to the alias masked email address Declaration public Task<ApiResponse<SentEmailDto>> SendAliasEmailWithHttpInfoAsync(Guid aliasId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateAlias(Guid, UpdateAliasOptions, int) Update an email alias Declaration public AliasDto UpdateAlias(Guid aliasId, UpdateAliasOptions updateAliasOptions, int operationIndex = 0) Parameters Type Name Description Guid aliasId UpdateAliasOptions updateAliasOptions int operationIndex Index associated with the operation. Returns Type Description AliasDto AliasDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateAliasAsync(Guid, UpdateAliasOptions, int, CancellationToken) Update an email alias Declaration public Task<AliasDto> UpdateAliasAsync(Guid aliasId, UpdateAliasOptions updateAliasOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId UpdateAliasOptions updateAliasOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AliasDto> Task of AliasDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateAliasWithHttpInfo(Guid, UpdateAliasOptions, int) Update an email alias Declaration public ApiResponse<AliasDto> UpdateAliasWithHttpInfo(Guid aliasId, UpdateAliasOptions updateAliasOptions, int operationIndex = 0) Parameters Type Name Description Guid aliasId UpdateAliasOptions updateAliasOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AliasDto> ApiResponse of AliasDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateAliasWithHttpInfoAsync(Guid, UpdateAliasOptions, int, CancellationToken) Update an email alias Declaration public Task<ApiResponse<AliasDto>> UpdateAliasWithHttpInfoAsync(Guid aliasId, UpdateAliasOptions updateAliasOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId UpdateAliasOptions updateAliasOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AliasDto>> Task of ApiResponse (AliasDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IAliasControllerApi IAliasControllerApiSync IAliasControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.AttachmentControllerApi.html": {
    "href": "api/mailslurp.Api.AttachmentControllerApi.html",
    "title": "Class AttachmentControllerApi | MailSlurp",
    "keywords": "Class AttachmentControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object AttachmentControllerApi Implements IAttachmentControllerApi IAttachmentControllerApiSync IAttachmentControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class AttachmentControllerApi : IAttachmentControllerApi, IAttachmentControllerApiSync, IAttachmentControllerApiAsync, IApiAccessor Constructors View Source AttachmentControllerApi() Initializes a new instance of the AttachmentControllerApi class. Declaration public AttachmentControllerApi() View Source AttachmentControllerApi(Configuration) Initializes a new instance of the AttachmentControllerApi class using Configuration object Declaration public AttachmentControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source AttachmentControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the AttachmentControllerApi class using a Configuration object and client instance. Declaration public AttachmentControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source AttachmentControllerApi(string) Initializes a new instance of the AttachmentControllerApi class. Declaration public AttachmentControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source DeleteAllAttachments(int) Delete all attachments Declaration public void DeleteAllAttachments(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllAttachmentsAsync(int, CancellationToken) Delete all attachments Declaration public Task DeleteAllAttachmentsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllAttachmentsWithHttpInfo(int) Delete all attachments Declaration public ApiResponse<object> DeleteAllAttachmentsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllAttachmentsWithHttpInfoAsync(int, CancellationToken) Delete all attachments Declaration public Task<ApiResponse<object>> DeleteAllAttachmentsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAttachment(string, int) Delete an attachment Declaration public void DeleteAttachment(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAttachmentAsync(string, int, CancellationToken) Delete an attachment Declaration public Task DeleteAttachmentAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAttachmentWithHttpInfo(string, int) Delete an attachment Declaration public ApiResponse<object> DeleteAttachmentWithHttpInfo(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAttachmentWithHttpInfoAsync(string, int, CancellationToken) Delete an attachment Declaration public Task<ApiResponse<object>> DeleteAttachmentWithHttpInfoAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBase64Encoded(string, int) Get email attachment as base64 encoded string as alternative to binary responses. To read the content decode the Base64 encoded contents. Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Declaration public DownloadAttachmentDto DownloadAttachmentAsBase64Encoded(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description DownloadAttachmentDto DownloadAttachmentDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBase64EncodedAsync(string, int, CancellationToken) Get email attachment as base64 encoded string as alternative to binary responses. To read the content decode the Base64 encoded contents. Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Declaration public Task<DownloadAttachmentDto> DownloadAttachmentAsBase64EncodedAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DownloadAttachmentDto> Task of DownloadAttachmentDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBase64EncodedWithHttpInfo(string, int) Get email attachment as base64 encoded string as alternative to binary responses. To read the content decode the Base64 encoded contents. Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Declaration public ApiResponse<DownloadAttachmentDto> DownloadAttachmentAsBase64EncodedWithHttpInfo(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DownloadAttachmentDto> ApiResponse of DownloadAttachmentDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBase64EncodedWithHttpInfoAsync(string, int, CancellationToken) Get email attachment as base64 encoded string as alternative to binary responses. To read the content decode the Base64 encoded contents. Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Declaration public Task<ApiResponse<DownloadAttachmentDto>> DownloadAttachmentAsBase64EncodedWithHttpInfoAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DownloadAttachmentDto>> Task of ApiResponse (DownloadAttachmentDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBytes(string, int) Download attachments. Get email attachment bytes. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints. Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Declaration public byte[] DownloadAttachmentAsBytes(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description byte[] byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBytesAsync(string, int, CancellationToken) Download attachments. Get email attachment bytes. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints. Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Declaration public Task<byte[]> DownloadAttachmentAsBytesAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<byte[]> Task of byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBytesWithHttpInfo(string, int) Download attachments. Get email attachment bytes. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints. Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Declaration public ApiResponse<byte[]> DownloadAttachmentAsBytesWithHttpInfo(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<byte[]> ApiResponse of byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBytesWithHttpInfoAsync(string, int, CancellationToken) Download attachments. Get email attachment bytes. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints. Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Declaration public Task<ApiResponse<byte[]>> DownloadAttachmentAsBytesWithHttpInfoAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<byte[]>> Task of ApiResponse (byte[]) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachment(string, int) Get an attachment entity Declaration public AttachmentEntity GetAttachment(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description AttachmentEntity AttachmentEntity Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentAsync(string, int, CancellationToken) Get an attachment entity Declaration public Task<AttachmentEntity> GetAttachmentAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AttachmentEntity> Task of AttachmentEntity Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentInfo(string, int) Get email attachment metadata information Returns the metadata for an attachment. It is saved separately to the content of the attachment. Contains properties name and content-type and content-length in bytes for a given attachment. Declaration public AttachmentMetaData GetAttachmentInfo(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description AttachmentMetaData AttachmentMetaData Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentInfoAsync(string, int, CancellationToken) Get email attachment metadata information Returns the metadata for an attachment. It is saved separately to the content of the attachment. Contains properties name and content-type and content-length in bytes for a given attachment. Declaration public Task<AttachmentMetaData> GetAttachmentInfoAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AttachmentMetaData> Task of AttachmentMetaData Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentInfoWithHttpInfo(string, int) Get email attachment metadata information Returns the metadata for an attachment. It is saved separately to the content of the attachment. Contains properties name and content-type and content-length in bytes for a given attachment. Declaration public ApiResponse<AttachmentMetaData> GetAttachmentInfoWithHttpInfo(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AttachmentMetaData> ApiResponse of AttachmentMetaData Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentInfoWithHttpInfoAsync(string, int, CancellationToken) Get email attachment metadata information Returns the metadata for an attachment. It is saved separately to the content of the attachment. Contains properties name and content-type and content-length in bytes for a given attachment. Declaration public Task<ApiResponse<AttachmentMetaData>> GetAttachmentInfoWithHttpInfoAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AttachmentMetaData>> Task of ApiResponse (AttachmentMetaData) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachments(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) Get email attachments Get all attachments in paginated response. Each entity contains meta data for the attachment such as name and content-type. Use the attachmentId and the download endpoints to get the file contents. Declaration public PageAttachmentEntity GetAttachments(int? page = null, int? size = null, string sort = null, string fileNameFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string fileNameFilter Optional file name and content type search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inboxId to filter attachments by (optional) int operationIndex Index associated with the operation. Returns Type Description PageAttachmentEntity PageAttachmentEntity Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentsAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) Get email attachments Get all attachments in paginated response. Each entity contains meta data for the attachment such as name and content-type. Use the attachmentId and the download endpoints to get the file contents. Declaration public Task<PageAttachmentEntity> GetAttachmentsAsync(int? page = null, int? size = null, string sort = null, string fileNameFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string fileNameFilter Optional file name and content type search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inboxId to filter attachments by (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageAttachmentEntity> Task of PageAttachmentEntity Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) Get email attachments Get all attachments in paginated response. Each entity contains meta data for the attachment such as name and content-type. Use the attachmentId and the download endpoints to get the file contents. Declaration public ApiResponse<PageAttachmentEntity> GetAttachmentsWithHttpInfo(int? page = null, int? size = null, string sort = null, string fileNameFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string fileNameFilter Optional file name and content type search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inboxId to filter attachments by (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageAttachmentEntity> ApiResponse of PageAttachmentEntity Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) Get email attachments Get all attachments in paginated response. Each entity contains meta data for the attachment such as name and content-type. Use the attachmentId and the download endpoints to get the file contents. Declaration public Task<ApiResponse<PageAttachmentEntity>> GetAttachmentsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string fileNameFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string fileNameFilter Optional file name and content type search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inboxId to filter attachments by (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageAttachmentEntity>> Task of ApiResponse (PageAttachmentEntity) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentWithHttpInfo(string, int) Get an attachment entity Declaration public ApiResponse<AttachmentEntity> GetAttachmentWithHttpInfo(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AttachmentEntity> ApiResponse of AttachmentEntity Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentWithHttpInfoAsync(string, int, CancellationToken) Get an attachment entity Declaration public Task<ApiResponse<AttachmentEntity>> GetAttachmentWithHttpInfoAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AttachmentEntity>> Task of ApiResponse (AttachmentEntity) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source UploadAttachment(UploadAttachmentOptions, int) Upload an attachment for sending using base64 file encoding. Returns an array whose first element is the ID of the uploaded attachment. Declaration public List<string> UploadAttachment(UploadAttachmentOptions uploadAttachmentOptions, int operationIndex = 0) Parameters Type Name Description UploadAttachmentOptions uploadAttachmentOptions int operationIndex Index associated with the operation. Returns Type Description List<string> List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentAsync(UploadAttachmentOptions, int, CancellationToken) Upload an attachment for sending using base64 file encoding. Returns an array whose first element is the ID of the uploaded attachment. Declaration public Task<List<string>> UploadAttachmentAsync(UploadAttachmentOptions uploadAttachmentOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description UploadAttachmentOptions uploadAttachmentOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<string>> Task of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentBytes(string, string, string, string, string, int) Upload an attachment for sending using file byte stream input octet stream. Returns an array whose first element is the ID of the uploaded attachment. Declaration public List<string> UploadAttachmentBytes(string contentType = null, string contentType2 = null, string contentId = null, string filename = null, string filename2 = null, int operationIndex = 0) Parameters Type Name Description string contentType (optional) string contentType2 Optional contentType for file. For instance application/pdf (optional) string contentId Optional content ID (CID) to save upload with (optional) string filename Optional filename to save upload with (optional) string filename2 (optional) int operationIndex Index associated with the operation. Returns Type Description List<string> List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentBytesAsync(string, string, string, string, string, int, CancellationToken) Upload an attachment for sending using file byte stream input octet stream. Returns an array whose first element is the ID of the uploaded attachment. Declaration public Task<List<string>> UploadAttachmentBytesAsync(string contentType = null, string contentType2 = null, string contentId = null, string filename = null, string filename2 = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string contentType (optional) string contentType2 Optional contentType for file. For instance application/pdf (optional) string contentId Optional content ID (CID) to save upload with (optional) string filename Optional filename to save upload with (optional) string filename2 (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<string>> Task of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentBytesWithHttpInfo(string, string, string, string, string, int) Upload an attachment for sending using file byte stream input octet stream. Returns an array whose first element is the ID of the uploaded attachment. Declaration public ApiResponse<List<string>> UploadAttachmentBytesWithHttpInfo(string contentType = null, string contentType2 = null, string contentId = null, string filename = null, string filename2 = null, int operationIndex = 0) Parameters Type Name Description string contentType (optional) string contentType2 Optional contentType for file. For instance application/pdf (optional) string contentId Optional content ID (CID) to save upload with (optional) string filename Optional filename to save upload with (optional) string filename2 (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<string>> ApiResponse of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentBytesWithHttpInfoAsync(string, string, string, string, string, int, CancellationToken) Upload an attachment for sending using file byte stream input octet stream. Returns an array whose first element is the ID of the uploaded attachment. Declaration public Task<ApiResponse<List<string>>> UploadAttachmentBytesWithHttpInfoAsync(string contentType = null, string contentType2 = null, string contentId = null, string filename = null, string filename2 = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string contentType (optional) string contentType2 Optional contentType for file. For instance application/pdf (optional) string contentId Optional content ID (CID) to save upload with (optional) string filename Optional filename to save upload with (optional) string filename2 (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<string>>> Task of ApiResponse (List<string>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentWithHttpInfo(UploadAttachmentOptions, int) Upload an attachment for sending using base64 file encoding. Returns an array whose first element is the ID of the uploaded attachment. Declaration public ApiResponse<List<string>> UploadAttachmentWithHttpInfo(UploadAttachmentOptions uploadAttachmentOptions, int operationIndex = 0) Parameters Type Name Description UploadAttachmentOptions uploadAttachmentOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<string>> ApiResponse of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentWithHttpInfoAsync(UploadAttachmentOptions, int, CancellationToken) Upload an attachment for sending using base64 file encoding. Returns an array whose first element is the ID of the uploaded attachment. Declaration public Task<ApiResponse<List<string>>> UploadAttachmentWithHttpInfoAsync(UploadAttachmentOptions uploadAttachmentOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description UploadAttachmentOptions uploadAttachmentOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<string>>> Task of ApiResponse (List<string>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadMultipartForm(string, string, string, string, UploadMultipartFormRequest, int) Upload an attachment for sending using a Multipart Form request. Returns an array whose first element is the ID of the uploaded attachment. Declaration public List<string> UploadMultipartForm(string contentId = null, string contentType = null, string filename = null, string xFilename = null, UploadMultipartFormRequest uploadMultipartFormRequest = null, int operationIndex = 0) Parameters Type Name Description string contentId Optional content ID of attachment (optional) string contentType Optional content type of attachment (optional) string filename Optional name of file (optional) string xFilename Optional content type header of attachment (optional) UploadMultipartFormRequest uploadMultipartFormRequest (optional) int operationIndex Index associated with the operation. Returns Type Description List<string> List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadMultipartFormAsync(string, string, string, string, UploadMultipartFormRequest, int, CancellationToken) Upload an attachment for sending using a Multipart Form request. Returns an array whose first element is the ID of the uploaded attachment. Declaration public Task<List<string>> UploadMultipartFormAsync(string contentId = null, string contentType = null, string filename = null, string xFilename = null, UploadMultipartFormRequest uploadMultipartFormRequest = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string contentId Optional content ID of attachment (optional) string contentType Optional content type of attachment (optional) string filename Optional name of file (optional) string xFilename Optional content type header of attachment (optional) UploadMultipartFormRequest uploadMultipartFormRequest (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<string>> Task of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadMultipartFormWithHttpInfo(string, string, string, string, UploadMultipartFormRequest, int) Upload an attachment for sending using a Multipart Form request. Returns an array whose first element is the ID of the uploaded attachment. Declaration public ApiResponse<List<string>> UploadMultipartFormWithHttpInfo(string contentId = null, string contentType = null, string filename = null, string xFilename = null, UploadMultipartFormRequest uploadMultipartFormRequest = null, int operationIndex = 0) Parameters Type Name Description string contentId Optional content ID of attachment (optional) string contentType Optional content type of attachment (optional) string filename Optional name of file (optional) string xFilename Optional content type header of attachment (optional) UploadMultipartFormRequest uploadMultipartFormRequest (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<string>> ApiResponse of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadMultipartFormWithHttpInfoAsync(string, string, string, string, UploadMultipartFormRequest, int, CancellationToken) Upload an attachment for sending using a Multipart Form request. Returns an array whose first element is the ID of the uploaded attachment. Declaration public Task<ApiResponse<List<string>>> UploadMultipartFormWithHttpInfoAsync(string contentId = null, string contentType = null, string filename = null, string xFilename = null, UploadMultipartFormRequest uploadMultipartFormRequest = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string contentId Optional content ID of attachment (optional) string contentType Optional content type of attachment (optional) string filename Optional name of file (optional) string xFilename Optional content type header of attachment (optional) UploadMultipartFormRequest uploadMultipartFormRequest (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<string>>> Task of ApiResponse (List<string>) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IAttachmentControllerApi IAttachmentControllerApiSync IAttachmentControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.BounceControllerApi.html": {
    "href": "api/mailslurp.Api.BounceControllerApi.html",
    "title": "Class BounceControllerApi | MailSlurp",
    "keywords": "Class BounceControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object BounceControllerApi Implements IBounceControllerApi IBounceControllerApiSync IBounceControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class BounceControllerApi : IBounceControllerApi, IBounceControllerApiSync, IBounceControllerApiAsync, IApiAccessor Constructors View Source BounceControllerApi() Initializes a new instance of the BounceControllerApi class. Declaration public BounceControllerApi() View Source BounceControllerApi(Configuration) Initializes a new instance of the BounceControllerApi class using Configuration object Declaration public BounceControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source BounceControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the BounceControllerApi class using a Configuration object and client instance. Declaration public BounceControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source BounceControllerApi(string) Initializes a new instance of the BounceControllerApi class. Declaration public BounceControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source FilterBouncedRecipient(FilterBouncedRecipientsOptions, int) Filter a list of email recipients and remove those who have bounced Prevent email sending errors by remove recipients who have resulted in past email bounces or complaints Declaration public FilterBouncedRecipientsResult FilterBouncedRecipient(FilterBouncedRecipientsOptions filterBouncedRecipientsOptions, int operationIndex = 0) Parameters Type Name Description FilterBouncedRecipientsOptions filterBouncedRecipientsOptions int operationIndex Index associated with the operation. Returns Type Description FilterBouncedRecipientsResult FilterBouncedRecipientsResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source FilterBouncedRecipientAsync(FilterBouncedRecipientsOptions, int, CancellationToken) Filter a list of email recipients and remove those who have bounced Prevent email sending errors by remove recipients who have resulted in past email bounces or complaints Declaration public Task<FilterBouncedRecipientsResult> FilterBouncedRecipientAsync(FilterBouncedRecipientsOptions filterBouncedRecipientsOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description FilterBouncedRecipientsOptions filterBouncedRecipientsOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<FilterBouncedRecipientsResult> Task of FilterBouncedRecipientsResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source FilterBouncedRecipientWithHttpInfo(FilterBouncedRecipientsOptions, int) Filter a list of email recipients and remove those who have bounced Prevent email sending errors by remove recipients who have resulted in past email bounces or complaints Declaration public ApiResponse<FilterBouncedRecipientsResult> FilterBouncedRecipientWithHttpInfo(FilterBouncedRecipientsOptions filterBouncedRecipientsOptions, int operationIndex = 0) Parameters Type Name Description FilterBouncedRecipientsOptions filterBouncedRecipientsOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<FilterBouncedRecipientsResult> ApiResponse of FilterBouncedRecipientsResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source FilterBouncedRecipientWithHttpInfoAsync(FilterBouncedRecipientsOptions, int, CancellationToken) Filter a list of email recipients and remove those who have bounced Prevent email sending errors by remove recipients who have resulted in past email bounces or complaints Declaration public Task<ApiResponse<FilterBouncedRecipientsResult>> FilterBouncedRecipientWithHttpInfoAsync(FilterBouncedRecipientsOptions filterBouncedRecipientsOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description FilterBouncedRecipientsOptions filterBouncedRecipientsOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<FilterBouncedRecipientsResult>> Task of ApiResponse (FilterBouncedRecipientsResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAccountBounceBlockStatus(int) Can account send email Check if account block status prevents sending Declaration public AccountBounceBlockDto GetAccountBounceBlockStatus(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description AccountBounceBlockDto AccountBounceBlockDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAccountBounceBlockStatusAsync(int, CancellationToken) Can account send email Check if account block status prevents sending Declaration public Task<AccountBounceBlockDto> GetAccountBounceBlockStatusAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AccountBounceBlockDto> Task of AccountBounceBlockDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAccountBounceBlockStatusWithHttpInfo(int) Can account send email Check if account block status prevents sending Declaration public ApiResponse<AccountBounceBlockDto> GetAccountBounceBlockStatusWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AccountBounceBlockDto> ApiResponse of AccountBounceBlockDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAccountBounceBlockStatusWithHttpInfoAsync(int, CancellationToken) Can account send email Check if account block status prevents sending Declaration public Task<ApiResponse<AccountBounceBlockDto>> GetAccountBounceBlockStatusWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AccountBounceBlockDto>> Task of ApiResponse (AccountBounceBlockDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetBouncedEmail(Guid, int) Get a bounced email. Bounced emails are email you have sent that were rejected by a recipient Declaration public BouncedEmailDto GetBouncedEmail(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of the bounced email to fetch int operationIndex Index associated with the operation. Returns Type Description BouncedEmailDto BouncedEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmailAsync(Guid, int, CancellationToken) Get a bounced email. Bounced emails are email you have sent that were rejected by a recipient Declaration public Task<BouncedEmailDto> GetBouncedEmailAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of the bounced email to fetch int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<BouncedEmailDto> Task of BouncedEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmails(int?, int?, string, DateTime?, DateTime?, int) Get paginated list of bounced emails. Bounced emails are email you have sent that were rejected by a recipient Declaration public PageBouncedEmail GetBouncedEmails(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageBouncedEmail PageBouncedEmail Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmailsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated list of bounced emails. Bounced emails are email you have sent that were rejected by a recipient Declaration public Task<PageBouncedEmail> GetBouncedEmailsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageBouncedEmail> Task of PageBouncedEmail Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmailsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get paginated list of bounced emails. Bounced emails are email you have sent that were rejected by a recipient Declaration public ApiResponse<PageBouncedEmail> GetBouncedEmailsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageBouncedEmail> ApiResponse of PageBouncedEmail Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmailsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated list of bounced emails. Bounced emails are email you have sent that were rejected by a recipient Declaration public Task<ApiResponse<PageBouncedEmail>> GetBouncedEmailsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageBouncedEmail>> Task of ApiResponse (PageBouncedEmail) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmailWithHttpInfo(Guid, int) Get a bounced email. Bounced emails are email you have sent that were rejected by a recipient Declaration public ApiResponse<BouncedEmailDto> GetBouncedEmailWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of the bounced email to fetch int operationIndex Index associated with the operation. Returns Type Description ApiResponse<BouncedEmailDto> ApiResponse of BouncedEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmailWithHttpInfoAsync(Guid, int, CancellationToken) Get a bounced email. Bounced emails are email you have sent that were rejected by a recipient Declaration public Task<ApiResponse<BouncedEmailDto>> GetBouncedEmailWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of the bounced email to fetch int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<BouncedEmailDto>> Task of ApiResponse (BouncedEmailDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipient(Guid, int) Get a bounced email. Bounced emails are email you have sent that were rejected by a recipient Declaration public BouncedRecipientDto GetBouncedRecipient(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of the bounced recipient int operationIndex Index associated with the operation. Returns Type Description BouncedRecipientDto BouncedRecipientDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipientAsync(Guid, int, CancellationToken) Get a bounced email. Bounced emails are email you have sent that were rejected by a recipient Declaration public Task<BouncedRecipientDto> GetBouncedRecipientAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of the bounced recipient int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<BouncedRecipientDto> Task of BouncedRecipientDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipients(int?, int?, string, DateTime?, DateTime?, int) Get paginated list of bounced recipients. Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address. Declaration public PageBouncedRecipients GetBouncedRecipients(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageBouncedRecipients PageBouncedRecipients Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipientsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated list of bounced recipients. Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address. Declaration public Task<PageBouncedRecipients> GetBouncedRecipientsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageBouncedRecipients> Task of PageBouncedRecipients Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipientsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get paginated list of bounced recipients. Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address. Declaration public ApiResponse<PageBouncedRecipients> GetBouncedRecipientsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageBouncedRecipients> ApiResponse of PageBouncedRecipients Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipientsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated list of bounced recipients. Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address. Declaration public Task<ApiResponse<PageBouncedRecipients>> GetBouncedRecipientsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageBouncedRecipients>> Task of ApiResponse (PageBouncedRecipients) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipientWithHttpInfo(Guid, int) Get a bounced email. Bounced emails are email you have sent that were rejected by a recipient Declaration public ApiResponse<BouncedRecipientDto> GetBouncedRecipientWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of the bounced recipient int operationIndex Index associated with the operation. Returns Type Description ApiResponse<BouncedRecipientDto> ApiResponse of BouncedRecipientDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipientWithHttpInfoAsync(Guid, int, CancellationToken) Get a bounced email. Bounced emails are email you have sent that were rejected by a recipient Declaration public Task<ApiResponse<BouncedRecipientDto>> GetBouncedRecipientWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of the bounced recipient int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<BouncedRecipientDto>> Task of ApiResponse (BouncedRecipientDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaint(Guid, int) Get complaint Get complaint Declaration public Complaint GetComplaint(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of the complaint int operationIndex Index associated with the operation. Returns Type Description Complaint Complaint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaintAsync(Guid, int, CancellationToken) Get complaint Get complaint Declaration public Task<Complaint> GetComplaintAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of the complaint int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Complaint> Task of Complaint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaints(int?, int?, string, DateTime?, DateTime?, int) Get paginated list of complaints. SMTP complaints made against your account Declaration public PageComplaint GetComplaints(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageComplaint PageComplaint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaintsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated list of complaints. SMTP complaints made against your account Declaration public Task<PageComplaint> GetComplaintsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageComplaint> Task of PageComplaint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaintsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get paginated list of complaints. SMTP complaints made against your account Declaration public ApiResponse<PageComplaint> GetComplaintsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageComplaint> ApiResponse of PageComplaint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaintsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated list of complaints. SMTP complaints made against your account Declaration public Task<ApiResponse<PageComplaint>> GetComplaintsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageComplaint>> Task of ApiResponse (PageComplaint) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaintWithHttpInfo(Guid, int) Get complaint Get complaint Declaration public ApiResponse<Complaint> GetComplaintWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of the complaint int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Complaint> ApiResponse of Complaint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaintWithHttpInfoAsync(Guid, int, CancellationToken) Get complaint Get complaint Declaration public Task<ApiResponse<Complaint>> GetComplaintWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of the complaint int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Complaint>> Task of ApiResponse (Complaint) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetListUnsubscribeRecipients(int?, int?, string, Guid?, int) Get paginated list of unsubscribed recipients. Unsubscribed recipient have unsubscribed from a mailing list for a user or domain and cannot be contacted again. Declaration public PageListUnsubscribeRecipients GetListUnsubscribeRecipients(int? page = null, int? size = null, string sort = null, Guid? domainId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) Guid? domainId Filter by domainId (optional) int operationIndex Index associated with the operation. Returns Type Description PageListUnsubscribeRecipients PageListUnsubscribeRecipients Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetListUnsubscribeRecipientsAsync(int?, int?, string, Guid?, int, CancellationToken) Get paginated list of unsubscribed recipients. Unsubscribed recipient have unsubscribed from a mailing list for a user or domain and cannot be contacted again. Declaration public Task<PageListUnsubscribeRecipients> GetListUnsubscribeRecipientsAsync(int? page = null, int? size = null, string sort = null, Guid? domainId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) Guid? domainId Filter by domainId (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageListUnsubscribeRecipients> Task of PageListUnsubscribeRecipients Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetListUnsubscribeRecipientsWithHttpInfo(int?, int?, string, Guid?, int) Get paginated list of unsubscribed recipients. Unsubscribed recipient have unsubscribed from a mailing list for a user or domain and cannot be contacted again. Declaration public ApiResponse<PageListUnsubscribeRecipients> GetListUnsubscribeRecipientsWithHttpInfo(int? page = null, int? size = null, string sort = null, Guid? domainId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) Guid? domainId Filter by domainId (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageListUnsubscribeRecipients> ApiResponse of PageListUnsubscribeRecipients Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetListUnsubscribeRecipientsWithHttpInfoAsync(int?, int?, string, Guid?, int, CancellationToken) Get paginated list of unsubscribed recipients. Unsubscribed recipient have unsubscribed from a mailing list for a user or domain and cannot be contacted again. Declaration public Task<ApiResponse<PageListUnsubscribeRecipients>> GetListUnsubscribeRecipientsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, Guid? domainId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) Guid? domainId Filter by domainId (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageListUnsubscribeRecipients>> Task of ApiResponse (PageListUnsubscribeRecipients) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IBounceControllerApi IBounceControllerApiSync IBounceControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.BulkActionsControllerApi.html": {
    "href": "api/mailslurp.Api.BulkActionsControllerApi.html",
    "title": "Class BulkActionsControllerApi | MailSlurp",
    "keywords": "Class BulkActionsControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object BulkActionsControllerApi Implements IBulkActionsControllerApi IBulkActionsControllerApiSync IBulkActionsControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class BulkActionsControllerApi : IBulkActionsControllerApi, IBulkActionsControllerApiSync, IBulkActionsControllerApiAsync, IApiAccessor Constructors View Source BulkActionsControllerApi() Initializes a new instance of the BulkActionsControllerApi class. Declaration public BulkActionsControllerApi() View Source BulkActionsControllerApi(Configuration) Initializes a new instance of the BulkActionsControllerApi class using Configuration object Declaration public BulkActionsControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source BulkActionsControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the BulkActionsControllerApi class using a Configuration object and client instance. Declaration public BulkActionsControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source BulkActionsControllerApi(string) Initializes a new instance of the BulkActionsControllerApi class. Declaration public BulkActionsControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source BulkCreateInboxes(int, int) Bulk create Inboxes (email addresses) Declaration public List<InboxDto> BulkCreateInboxes(int count, int operationIndex = 0) Parameters Type Name Description int count Number of inboxes to be created in bulk int operationIndex Index associated with the operation. Returns Type Description List<InboxDto> List<InboxDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkCreateInboxesAsync(int, int, CancellationToken) Bulk create Inboxes (email addresses) Declaration public Task<List<InboxDto>> BulkCreateInboxesAsync(int count, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int count Number of inboxes to be created in bulk int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<InboxDto>> Task of List<InboxDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkCreateInboxesWithHttpInfo(int, int) Bulk create Inboxes (email addresses) Declaration public ApiResponse<List<InboxDto>> BulkCreateInboxesWithHttpInfo(int count, int operationIndex = 0) Parameters Type Name Description int count Number of inboxes to be created in bulk int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<InboxDto>> ApiResponse of List<InboxDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkCreateInboxesWithHttpInfoAsync(int, int, CancellationToken) Bulk create Inboxes (email addresses) Declaration public Task<ApiResponse<List<InboxDto>>> BulkCreateInboxesWithHttpInfoAsync(int count, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int count Number of inboxes to be created in bulk int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<InboxDto>>> Task of ApiResponse (List<InboxDto>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkDeleteInboxes(List<Guid>, int) Bulk Delete Inboxes Declaration public void BulkDeleteInboxes(List<Guid> requestBody, int operationIndex = 0) Parameters Type Name Description List<Guid> requestBody int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkDeleteInboxesAsync(List<Guid>, int, CancellationToken) Bulk Delete Inboxes Declaration public Task BulkDeleteInboxesAsync(List<Guid> requestBody, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> requestBody int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkDeleteInboxesWithHttpInfo(List<Guid>, int) Bulk Delete Inboxes Declaration public ApiResponse<object> BulkDeleteInboxesWithHttpInfo(List<Guid> requestBody, int operationIndex = 0) Parameters Type Name Description List<Guid> requestBody int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkDeleteInboxesWithHttpInfoAsync(List<Guid>, int, CancellationToken) Bulk Delete Inboxes Declaration public Task<ApiResponse<object>> BulkDeleteInboxesWithHttpInfoAsync(List<Guid> requestBody, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> requestBody int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkSendEmails(BulkSendEmailOptions, int) Bulk Send Emails Declaration public void BulkSendEmails(BulkSendEmailOptions bulkSendEmailOptions, int operationIndex = 0) Parameters Type Name Description BulkSendEmailOptions bulkSendEmailOptions int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkSendEmailsAsync(BulkSendEmailOptions, int, CancellationToken) Bulk Send Emails Declaration public Task BulkSendEmailsAsync(BulkSendEmailOptions bulkSendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description BulkSendEmailOptions bulkSendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkSendEmailsWithHttpInfo(BulkSendEmailOptions, int) Bulk Send Emails Declaration public ApiResponse<object> BulkSendEmailsWithHttpInfo(BulkSendEmailOptions bulkSendEmailOptions, int operationIndex = 0) Parameters Type Name Description BulkSendEmailOptions bulkSendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkSendEmailsWithHttpInfoAsync(BulkSendEmailOptions, int, CancellationToken) Bulk Send Emails Declaration public Task<ApiResponse<object>> BulkSendEmailsWithHttpInfoAsync(BulkSendEmailOptions bulkSendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description BulkSendEmailOptions bulkSendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path Implements IBulkActionsControllerApi IBulkActionsControllerApiSync IBulkActionsControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.CommonActionsControllerApi.html": {
    "href": "api/mailslurp.Api.CommonActionsControllerApi.html",
    "title": "Class CommonActionsControllerApi | MailSlurp",
    "keywords": "Class CommonActionsControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object CommonActionsControllerApi Implements ICommonActionsControllerApi ICommonActionsControllerApiSync ICommonActionsControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class CommonActionsControllerApi : ICommonActionsControllerApi, ICommonActionsControllerApiSync, ICommonActionsControllerApiAsync, IApiAccessor Constructors View Source CommonActionsControllerApi() Initializes a new instance of the CommonActionsControllerApi class. Declaration public CommonActionsControllerApi() View Source CommonActionsControllerApi(Configuration) Initializes a new instance of the CommonActionsControllerApi class using Configuration object Declaration public CommonActionsControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source CommonActionsControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the CommonActionsControllerApi class using a Configuration object and client instance. Declaration public CommonActionsControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source CommonActionsControllerApi(string) Initializes a new instance of the CommonActionsControllerApi class. Declaration public CommonActionsControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CreateNewEmailAddress(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int) Create new random inbox Returns an Inbox with an id and an emailAddress Declaration public InboxDto CreateNewEmailAddress(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewEmailAddressAsync(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int, CancellationToken) Create new random inbox Returns an Inbox with an id and an emailAddress Declaration public Task<InboxDto> CreateNewEmailAddressAsync(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewEmailAddressWithHttpInfo(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int) Create new random inbox Returns an Inbox with an id and an emailAddress Declaration public ApiResponse<InboxDto> CreateNewEmailAddressWithHttpInfo(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewEmailAddressWithHttpInfoAsync(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int, CancellationToken) Create new random inbox Returns an Inbox with an id and an emailAddress Declaration public Task<ApiResponse<InboxDto>> CreateNewEmailAddressWithHttpInfoAsync(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateRandomInbox(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int) Create new random inbox Returns an Inbox with an id and an emailAddress Declaration public InboxDto CreateRandomInbox(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateRandomInboxAsync(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int, CancellationToken) Create new random inbox Returns an Inbox with an id and an emailAddress Declaration public Task<InboxDto> CreateRandomInboxAsync(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateRandomInboxWithHttpInfo(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int) Create new random inbox Returns an Inbox with an id and an emailAddress Declaration public ApiResponse<InboxDto> CreateRandomInboxWithHttpInfo(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateRandomInboxWithHttpInfoAsync(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int, CancellationToken) Create new random inbox Returns an Inbox with an id and an emailAddress Declaration public Task<ApiResponse<InboxDto>> CreateRandomInboxWithHttpInfoAsync(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailAddress(Guid, int) Delete inbox email address by inbox id Deletes inbox email address Declaration public void DeleteEmailAddress(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailAddressAsync(Guid, int, CancellationToken) Delete inbox email address by inbox id Deletes inbox email address Declaration public Task DeleteEmailAddressAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailAddressWithHttpInfo(Guid, int) Delete inbox email address by inbox id Deletes inbox email address Declaration public ApiResponse<object> DeleteEmailAddressWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailAddressWithHttpInfoAsync(Guid, int, CancellationToken) Delete inbox email address by inbox id Deletes inbox email address Declaration public Task<ApiResponse<object>> DeleteEmailAddressWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source EmptyInbox(Guid, int) Delete all emails in an inbox Deletes all emails Declaration public void EmptyInbox(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source EmptyInboxAsync(Guid, int, CancellationToken) Delete all emails in an inbox Deletes all emails Declaration public Task EmptyInboxAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source EmptyInboxWithHttpInfo(Guid, int) Delete all emails in an inbox Deletes all emails Declaration public ApiResponse<object> EmptyInboxWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source EmptyInboxWithHttpInfoAsync(Guid, int, CancellationToken) Delete all emails in an inbox Deletes all emails Declaration public Task<ApiResponse<object>> EmptyInboxWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source SendEmailQuery(string, Guid?, string, string, int) Send an email using query parameters If no senderId or inboxId provided a random email address will be used to send from. Ensure your parameters are URL encoded. Declaration public void SendEmailQuery(string to, Guid? senderId = null, string body = null, string subject = null, int operationIndex = 0) Parameters Type Name Description string to Email address to send to Guid? senderId ID of inbox to send from. If null an inbox will be created for sending (optional) string body Body of the email message. Supports HTML (optional) string subject Subject line of the email (optional) int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailQueryAsync(string, Guid?, string, string, int, CancellationToken) Send an email using query parameters If no senderId or inboxId provided a random email address will be used to send from. Ensure your parameters are URL encoded. Declaration public Task SendEmailQueryAsync(string to, Guid? senderId = null, string body = null, string subject = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string to Email address to send to Guid? senderId ID of inbox to send from. If null an inbox will be created for sending (optional) string body Body of the email message. Supports HTML (optional) string subject Subject line of the email (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailQueryWithHttpInfo(string, Guid?, string, string, int) Send an email using query parameters If no senderId or inboxId provided a random email address will be used to send from. Ensure your parameters are URL encoded. Declaration public ApiResponse<object> SendEmailQueryWithHttpInfo(string to, Guid? senderId = null, string body = null, string subject = null, int operationIndex = 0) Parameters Type Name Description string to Email address to send to Guid? senderId ID of inbox to send from. If null an inbox will be created for sending (optional) string body Body of the email message. Supports HTML (optional) string subject Subject line of the email (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailQueryWithHttpInfoAsync(string, Guid?, string, string, int, CancellationToken) Send an email using query parameters If no senderId or inboxId provided a random email address will be used to send from. Ensure your parameters are URL encoded. Declaration public Task<ApiResponse<object>> SendEmailQueryWithHttpInfoAsync(string to, Guid? senderId = null, string body = null, string subject = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string to Email address to send to Guid? senderId ID of inbox to send from. If null an inbox will be created for sending (optional) string body Body of the email message. Supports HTML (optional) string subject Subject line of the email (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSimple(SimpleSendEmailOptions, int) Send an email If no senderId or inboxId provided a random email address will be used to send from. Declaration public void SendEmailSimple(SimpleSendEmailOptions simpleSendEmailOptions, int operationIndex = 0) Parameters Type Name Description SimpleSendEmailOptions simpleSendEmailOptions int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSimpleAsync(SimpleSendEmailOptions, int, CancellationToken) Send an email If no senderId or inboxId provided a random email address will be used to send from. Declaration public Task SendEmailSimpleAsync(SimpleSendEmailOptions simpleSendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SimpleSendEmailOptions simpleSendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSimpleWithHttpInfo(SimpleSendEmailOptions, int) Send an email If no senderId or inboxId provided a random email address will be used to send from. Declaration public ApiResponse<object> SendEmailSimpleWithHttpInfo(SimpleSendEmailOptions simpleSendEmailOptions, int operationIndex = 0) Parameters Type Name Description SimpleSendEmailOptions simpleSendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSimpleWithHttpInfoAsync(SimpleSendEmailOptions, int, CancellationToken) Send an email If no senderId or inboxId provided a random email address will be used to send from. Declaration public Task<ApiResponse<object>> SendEmailSimpleWithHttpInfoAsync(SimpleSendEmailOptions simpleSendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SimpleSendEmailOptions simpleSendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call Implements ICommonActionsControllerApi ICommonActionsControllerApiSync ICommonActionsControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.ConnectorControllerApi.html": {
    "href": "api/mailslurp.Api.ConnectorControllerApi.html",
    "title": "Class ConnectorControllerApi | MailSlurp",
    "keywords": "Class ConnectorControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object ConnectorControllerApi Implements IConnectorControllerApi IConnectorControllerApiSync IConnectorControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class ConnectorControllerApi : IConnectorControllerApi, IConnectorControllerApiSync, IConnectorControllerApiAsync, IApiAccessor Constructors View Source ConnectorControllerApi() Initializes a new instance of the ConnectorControllerApi class. Declaration public ConnectorControllerApi() View Source ConnectorControllerApi(Configuration) Initializes a new instance of the ConnectorControllerApi class using Configuration object Declaration public ConnectorControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source ConnectorControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the ConnectorControllerApi class using a Configuration object and client instance. Declaration public ConnectorControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source ConnectorControllerApi(string) Initializes a new instance of the ConnectorControllerApi class. Declaration public ConnectorControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CreateConnector(CreateConnectorOptions, int) Create an inbox connector Sync emails between external mailboxes and MailSlurp inboxes Declaration public ConnectorDto CreateConnector(CreateConnectorOptions createConnectorOptions, int operationIndex = 0) Parameters Type Name Description CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. Returns Type Description ConnectorDto ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateConnectorAsync(CreateConnectorOptions, int, CancellationToken) Create an inbox connector Sync emails between external mailboxes and MailSlurp inboxes Declaration public Task<ConnectorDto> CreateConnectorAsync(CreateConnectorOptions createConnectorOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ConnectorDto> Task of ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateConnectorWithHttpInfo(CreateConnectorOptions, int) Create an inbox connector Sync emails between external mailboxes and MailSlurp inboxes Declaration public ApiResponse<ConnectorDto> CreateConnectorWithHttpInfo(CreateConnectorOptions createConnectorOptions, int operationIndex = 0) Parameters Type Name Description CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ConnectorDto> ApiResponse of ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateConnectorWithHttpInfoAsync(CreateConnectorOptions, int, CancellationToken) Create an inbox connector Sync emails between external mailboxes and MailSlurp inboxes Declaration public Task<ApiResponse<ConnectorDto>> CreateConnectorWithHttpInfoAsync(CreateConnectorOptions createConnectorOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ConnectorDto>> Task of ApiResponse (ConnectorDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllConnector(int) Delete all inbox connectors Declaration public void DeleteAllConnector(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllConnectorAsync(int, CancellationToken) Delete all inbox connectors Declaration public Task DeleteAllConnectorAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllConnectorWithHttpInfo(int) Delete all inbox connectors Declaration public ApiResponse<object> DeleteAllConnectorWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllConnectorWithHttpInfoAsync(int, CancellationToken) Delete all inbox connectors Declaration public Task<ApiResponse<object>> DeleteAllConnectorWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteConnector(Guid, int) Delete an inbox connector Declaration public void DeleteConnector(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteConnectorAsync(Guid, int, CancellationToken) Delete an inbox connector Declaration public Task DeleteConnectorAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteConnectorWithHttpInfo(Guid, int) Delete an inbox connector Declaration public ApiResponse<object> DeleteConnectorWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteConnectorWithHttpInfoAsync(Guid, int, CancellationToken) Delete an inbox connector Declaration public Task<ApiResponse<object>> DeleteConnectorWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllConnectorSyncEvents(int?, int?, string, DateTime?, DateTime?, int) Get all inbox connector sync events Declaration public PageConnectorSyncEvents GetAllConnectorSyncEvents(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageConnectorSyncEvents PageConnectorSyncEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllConnectorSyncEventsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all inbox connector sync events Declaration public Task<PageConnectorSyncEvents> GetAllConnectorSyncEventsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageConnectorSyncEvents> Task of PageConnectorSyncEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllConnectorSyncEventsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get all inbox connector sync events Declaration public ApiResponse<PageConnectorSyncEvents> GetAllConnectorSyncEventsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageConnectorSyncEvents> ApiResponse of PageConnectorSyncEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllConnectorSyncEventsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all inbox connector sync events Declaration public Task<ApiResponse<PageConnectorSyncEvents>> GetAllConnectorSyncEventsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageConnectorSyncEvents>> Task of ApiResponse (PageConnectorSyncEvents) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetConnector(Guid, int) Get an inbox connector Declaration public ConnectorDto GetConnector(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ConnectorDto ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorAsync(Guid, int, CancellationToken) Get an inbox connector Declaration public Task<ConnectorDto> GetConnectorAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ConnectorDto> Task of ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectors(int?, int?, string, DateTime?, DateTime?, int) Get inbox connectors List inbox connectors that sync external emails to MailSlurp inboxes Declaration public PageConnector GetConnectors(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageConnector PageConnector Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get inbox connectors List inbox connectors that sync external emails to MailSlurp inboxes Declaration public Task<PageConnector> GetConnectorsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageConnector> Task of PageConnector Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get inbox connectors List inbox connectors that sync external emails to MailSlurp inboxes Declaration public ApiResponse<PageConnector> GetConnectorsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageConnector> ApiResponse of PageConnector Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get inbox connectors List inbox connectors that sync external emails to MailSlurp inboxes Declaration public Task<ApiResponse<PageConnector>> GetConnectorsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageConnector>> Task of ApiResponse (PageConnector) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEvent(Guid, int) Get an inbox connector sync event Declaration public ConnectorSyncEventDto GetConnectorSyncEvent(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ConnectorSyncEventDto ConnectorSyncEventDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEventAsync(Guid, int, CancellationToken) Get an inbox connector sync event Declaration public Task<ConnectorSyncEventDto> GetConnectorSyncEventAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ConnectorSyncEventDto> Task of ConnectorSyncEventDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEvents(Guid, int?, int?, string, DateTime?, DateTime?, int) Get an inbox connector sync events Declaration public PageConnectorSyncEvents GetConnectorSyncEvents(Guid id, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid id int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageConnectorSyncEvents PageConnectorSyncEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEventsAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get an inbox connector sync events Declaration public Task<PageConnectorSyncEvents> GetConnectorSyncEventsAsync(Guid id, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageConnectorSyncEvents> Task of PageConnectorSyncEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEventsWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get an inbox connector sync events Declaration public ApiResponse<PageConnectorSyncEvents> GetConnectorSyncEventsWithHttpInfo(Guid id, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid id int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageConnectorSyncEvents> ApiResponse of PageConnectorSyncEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEventsWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get an inbox connector sync events Declaration public Task<ApiResponse<PageConnectorSyncEvents>> GetConnectorSyncEventsWithHttpInfoAsync(Guid id, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageConnectorSyncEvents>> Task of ApiResponse (PageConnectorSyncEvents) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEventWithHttpInfo(Guid, int) Get an inbox connector sync event Declaration public ApiResponse<ConnectorSyncEventDto> GetConnectorSyncEventWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ConnectorSyncEventDto> ApiResponse of ConnectorSyncEventDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEventWithHttpInfoAsync(Guid, int, CancellationToken) Get an inbox connector sync event Declaration public Task<ApiResponse<ConnectorSyncEventDto>> GetConnectorSyncEventWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ConnectorSyncEventDto>> Task of ApiResponse (ConnectorSyncEventDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorWithHttpInfo(Guid, int) Get an inbox connector Declaration public ApiResponse<ConnectorDto> GetConnectorWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ConnectorDto> ApiResponse of ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorWithHttpInfoAsync(Guid, int, CancellationToken) Get an inbox connector Declaration public Task<ApiResponse<ConnectorDto>> GetConnectorWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ConnectorDto>> Task of ApiResponse (ConnectorDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SyncConnector(Guid, int) Sync an inbox connector Declaration public ConnectorSyncRequestResult SyncConnector(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ConnectorSyncRequestResult ConnectorSyncRequestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source SyncConnectorAsync(Guid, int, CancellationToken) Sync an inbox connector Declaration public Task<ConnectorSyncRequestResult> SyncConnectorAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ConnectorSyncRequestResult> Task of ConnectorSyncRequestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source SyncConnectorWithHttpInfo(Guid, int) Sync an inbox connector Declaration public ApiResponse<ConnectorSyncRequestResult> SyncConnectorWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ConnectorSyncRequestResult> ApiResponse of ConnectorSyncRequestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source SyncConnectorWithHttpInfoAsync(Guid, int, CancellationToken) Sync an inbox connector Declaration public Task<ApiResponse<ConnectorSyncRequestResult>> SyncConnectorWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ConnectorSyncRequestResult>> Task of ApiResponse (ConnectorSyncRequestResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateConnector(Guid, CreateConnectorOptions, int) Update an inbox connector Declaration public ConnectorDto UpdateConnector(Guid id, CreateConnectorOptions createConnectorOptions, int operationIndex = 0) Parameters Type Name Description Guid id CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. Returns Type Description ConnectorDto ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateConnectorAsync(Guid, CreateConnectorOptions, int, CancellationToken) Update an inbox connector Declaration public Task<ConnectorDto> UpdateConnectorAsync(Guid id, CreateConnectorOptions createConnectorOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ConnectorDto> Task of ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateConnectorWithHttpInfo(Guid, CreateConnectorOptions, int) Update an inbox connector Declaration public ApiResponse<ConnectorDto> UpdateConnectorWithHttpInfo(Guid id, CreateConnectorOptions createConnectorOptions, int operationIndex = 0) Parameters Type Name Description Guid id CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ConnectorDto> ApiResponse of ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateConnectorWithHttpInfoAsync(Guid, CreateConnectorOptions, int, CancellationToken) Update an inbox connector Declaration public Task<ApiResponse<ConnectorDto>> UpdateConnectorWithHttpInfoAsync(Guid id, CreateConnectorOptions createConnectorOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ConnectorDto>> Task of ApiResponse (ConnectorDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IConnectorControllerApi IConnectorControllerApiSync IConnectorControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.ContactControllerApi.html": {
    "href": "api/mailslurp.Api.ContactControllerApi.html",
    "title": "Class ContactControllerApi | MailSlurp",
    "keywords": "Class ContactControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object ContactControllerApi Implements IContactControllerApi IContactControllerApiSync IContactControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class ContactControllerApi : IContactControllerApi, IContactControllerApiSync, IContactControllerApiAsync, IApiAccessor Constructors View Source ContactControllerApi() Initializes a new instance of the ContactControllerApi class. Declaration public ContactControllerApi() View Source ContactControllerApi(Configuration) Initializes a new instance of the ContactControllerApi class using Configuration object Declaration public ContactControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source ContactControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the ContactControllerApi class using a Configuration object and client instance. Declaration public ContactControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source ContactControllerApi(string) Initializes a new instance of the ContactControllerApi class. Declaration public ContactControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CreateContact(CreateContactOptions, int) Create a contact Declaration public ContactDto CreateContact(CreateContactOptions createContactOptions, int operationIndex = 0) Parameters Type Name Description CreateContactOptions createContactOptions int operationIndex Index associated with the operation. Returns Type Description ContactDto ContactDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateContactAsync(CreateContactOptions, int, CancellationToken) Create a contact Declaration public Task<ContactDto> CreateContactAsync(CreateContactOptions createContactOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateContactOptions createContactOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ContactDto> Task of ContactDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateContactWithHttpInfo(CreateContactOptions, int) Create a contact Declaration public ApiResponse<ContactDto> CreateContactWithHttpInfo(CreateContactOptions createContactOptions, int operationIndex = 0) Parameters Type Name Description CreateContactOptions createContactOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ContactDto> ApiResponse of ContactDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateContactWithHttpInfoAsync(CreateContactOptions, int, CancellationToken) Create a contact Declaration public Task<ApiResponse<ContactDto>> CreateContactWithHttpInfoAsync(CreateContactOptions createContactOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateContactOptions createContactOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ContactDto>> Task of ApiResponse (ContactDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteContact(Guid, int) Delete contact Declaration public void DeleteContact(Guid contactId, int operationIndex = 0) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteContactAsync(Guid, int, CancellationToken) Delete contact Declaration public Task DeleteContactAsync(Guid contactId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteContactWithHttpInfo(Guid, int) Delete contact Declaration public ApiResponse<object> DeleteContactWithHttpInfo(Guid contactId, int operationIndex = 0) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteContactWithHttpInfoAsync(Guid, int, CancellationToken) Delete contact Declaration public Task<ApiResponse<object>> DeleteContactWithHttpInfoAsync(Guid contactId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllContacts(int?, int?, string, DateTime?, DateTime?, string, int) Get all contacts Declaration public PageContactProjection GetAllContacts(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, string search = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) string search Search terms (optional) int operationIndex Index associated with the operation. Returns Type Description PageContactProjection PageContactProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllContactsAsync(int?, int?, string, DateTime?, DateTime?, string, int, CancellationToken) Get all contacts Declaration public Task<PageContactProjection> GetAllContactsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, string search = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) string search Search terms (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageContactProjection> Task of PageContactProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllContactsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, string, int) Get all contacts Declaration public ApiResponse<PageContactProjection> GetAllContactsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, string search = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) string search Search terms (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageContactProjection> ApiResponse of PageContactProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllContactsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, string, int, CancellationToken) Get all contacts Declaration public Task<ApiResponse<PageContactProjection>> GetAllContactsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, string search = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) string search Search terms (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageContactProjection>> Task of ApiResponse (PageContactProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetContact(Guid, int) Get contact Declaration public ContactDto GetContact(Guid contactId, int operationIndex = 0) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. Returns Type Description ContactDto ContactDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactAsync(Guid, int, CancellationToken) Get contact Declaration public Task<ContactDto> GetContactAsync(Guid contactId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ContactDto> Task of ContactDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContacts(int) Get all contacts Declaration public List<ContactProjection> GetContacts(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<ContactProjection> List<ContactProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactsAsync(int, CancellationToken) Get all contacts Declaration public Task<List<ContactProjection>> GetContactsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<ContactProjection>> Task of List<ContactProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactsWithHttpInfo(int) Get all contacts Declaration public ApiResponse<List<ContactProjection>> GetContactsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<ContactProjection>> ApiResponse of List<ContactProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactsWithHttpInfoAsync(int, CancellationToken) Get all contacts Declaration public Task<ApiResponse<List<ContactProjection>>> GetContactsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<ContactProjection>>> Task of ApiResponse (List<ContactProjection>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactVCard(Guid, int) Get contact vCard vcf file Declaration [Obsolete] public void GetContactVCard(Guid contactId, int operationIndex = 0) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactVCardAsync(Guid, int, CancellationToken) Get contact vCard vcf file Declaration [Obsolete] public Task GetContactVCardAsync(Guid contactId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactVCardWithHttpInfo(Guid, int) Get contact vCard vcf file Declaration [Obsolete] public ApiResponse<object> GetContactVCardWithHttpInfo(Guid contactId, int operationIndex = 0) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactVCardWithHttpInfoAsync(Guid, int, CancellationToken) Get contact vCard vcf file Declaration [Obsolete] public Task<ApiResponse<object>> GetContactVCardWithHttpInfoAsync(Guid contactId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactWithHttpInfo(Guid, int) Get contact Declaration public ApiResponse<ContactDto> GetContactWithHttpInfo(Guid contactId, int operationIndex = 0) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ContactDto> ApiResponse of ContactDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactWithHttpInfoAsync(Guid, int, CancellationToken) Get contact Declaration public Task<ApiResponse<ContactDto>> GetContactWithHttpInfoAsync(Guid contactId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ContactDto>> Task of ApiResponse (ContactDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IContactControllerApi IContactControllerApiSync IContactControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.DomainControllerApi.html": {
    "href": "api/mailslurp.Api.DomainControllerApi.html",
    "title": "Class DomainControllerApi | MailSlurp",
    "keywords": "Class DomainControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object DomainControllerApi Implements IDomainControllerApi IDomainControllerApiSync IDomainControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class DomainControllerApi : IDomainControllerApi, IDomainControllerApiSync, IDomainControllerApiAsync, IApiAccessor Constructors View Source DomainControllerApi() Initializes a new instance of the DomainControllerApi class. Declaration public DomainControllerApi() View Source DomainControllerApi(Configuration) Initializes a new instance of the DomainControllerApi class using Configuration object Declaration public DomainControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source DomainControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the DomainControllerApi class using a Configuration object and client instance. Declaration public DomainControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source DomainControllerApi(string) Initializes a new instance of the DomainControllerApi class. Declaration public DomainControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source AddDomainWildcardCatchAll(Guid, int) Add catch all wild card inbox to domain Add a catch all inbox to a domain so that any emails sent to it that cannot be matched will be sent to the catch all inbox generated Declaration public DomainDto AddDomainWildcardCatchAll(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description DomainDto DomainDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source AddDomainWildcardCatchAllAsync(Guid, int, CancellationToken) Add catch all wild card inbox to domain Add a catch all inbox to a domain so that any emails sent to it that cannot be matched will be sent to the catch all inbox generated Declaration public Task<DomainDto> AddDomainWildcardCatchAllAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DomainDto> Task of DomainDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source AddDomainWildcardCatchAllWithHttpInfo(Guid, int) Add catch all wild card inbox to domain Add a catch all inbox to a domain so that any emails sent to it that cannot be matched will be sent to the catch all inbox generated Declaration public ApiResponse<DomainDto> AddDomainWildcardCatchAllWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DomainDto> ApiResponse of DomainDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source AddDomainWildcardCatchAllWithHttpInfoAsync(Guid, int, CancellationToken) Add catch all wild card inbox to domain Add a catch all inbox to a domain so that any emails sent to it that cannot be matched will be sent to the catch all inbox generated Declaration public Task<ApiResponse<DomainDto>> AddDomainWildcardCatchAllWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DomainDto>> Task of ApiResponse (DomainDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateDomain(CreateDomainOptions, int) Create Domain Link a domain that you own with MailSlurp so you can create email addresses using it. Endpoint returns DNS records used for validation. You must add these verification records to your host provider's DNS setup to verify the domain. Declaration public DomainDto CreateDomain(CreateDomainOptions createDomainOptions, int operationIndex = 0) Parameters Type Name Description CreateDomainOptions createDomainOptions int operationIndex Index associated with the operation. Returns Type Description DomainDto DomainDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateDomainAsync(CreateDomainOptions, int, CancellationToken) Create Domain Link a domain that you own with MailSlurp so you can create email addresses using it. Endpoint returns DNS records used for validation. You must add these verification records to your host provider's DNS setup to verify the domain. Declaration public Task<DomainDto> CreateDomainAsync(CreateDomainOptions createDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateDomainOptions createDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DomainDto> Task of DomainDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateDomainWithHttpInfo(CreateDomainOptions, int) Create Domain Link a domain that you own with MailSlurp so you can create email addresses using it. Endpoint returns DNS records used for validation. You must add these verification records to your host provider's DNS setup to verify the domain. Declaration public ApiResponse<DomainDto> CreateDomainWithHttpInfo(CreateDomainOptions createDomainOptions, int operationIndex = 0) Parameters Type Name Description CreateDomainOptions createDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DomainDto> ApiResponse of DomainDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateDomainWithHttpInfoAsync(CreateDomainOptions, int, CancellationToken) Create Domain Link a domain that you own with MailSlurp so you can create email addresses using it. Endpoint returns DNS records used for validation. You must add these verification records to your host provider's DNS setup to verify the domain. Declaration public Task<ApiResponse<DomainDto>> CreateDomainWithHttpInfoAsync(CreateDomainOptions createDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateDomainOptions createDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DomainDto>> Task of ApiResponse (DomainDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteDomain(Guid, int) Delete a domain Delete a domain. This will disable any existing inboxes that use this domain. Declaration public List<string> DeleteDomain(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description List<string> List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteDomainAsync(Guid, int, CancellationToken) Delete a domain Delete a domain. This will disable any existing inboxes that use this domain. Declaration public Task<List<string>> DeleteDomainAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<string>> Task of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteDomainWithHttpInfo(Guid, int) Delete a domain Delete a domain. This will disable any existing inboxes that use this domain. Declaration public ApiResponse<List<string>> DeleteDomainWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<string>> ApiResponse of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteDomainWithHttpInfoAsync(Guid, int, CancellationToken) Delete a domain Delete a domain. This will disable any existing inboxes that use this domain. Declaration public Task<ApiResponse<List<string>>> DeleteDomainWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<string>>> Task of ApiResponse (List<string>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetDomain(Guid, bool?, int) Get a domain Returns domain verification status and tokens for a given domain Declaration public DomainDto GetDomain(Guid id, bool? checkForErrors = null, int operationIndex = 0) Parameters Type Name Description Guid id bool? checkForErrors (optional) int operationIndex Index associated with the operation. Returns Type Description DomainDto DomainDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainAsync(Guid, bool?, int, CancellationToken) Get a domain Returns domain verification status and tokens for a given domain Declaration public Task<DomainDto> GetDomainAsync(Guid id, bool? checkForErrors = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id bool? checkForErrors (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DomainDto> Task of DomainDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainIssues(int) Get domain issues List domain issues for domains you have created Declaration public DomainIssuesDto GetDomainIssues(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description DomainIssuesDto DomainIssuesDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainIssuesAsync(int, CancellationToken) Get domain issues List domain issues for domains you have created Declaration public Task<DomainIssuesDto> GetDomainIssuesAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DomainIssuesDto> Task of DomainIssuesDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainIssuesWithHttpInfo(int) Get domain issues List domain issues for domains you have created Declaration public ApiResponse<DomainIssuesDto> GetDomainIssuesWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DomainIssuesDto> ApiResponse of DomainIssuesDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainIssuesWithHttpInfoAsync(int, CancellationToken) Get domain issues List domain issues for domains you have created Declaration public Task<ApiResponse<DomainIssuesDto>> GetDomainIssuesWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DomainIssuesDto>> Task of ApiResponse (DomainIssuesDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomains(int) Get domains List all custom domains you have created Declaration public List<DomainPreview> GetDomains(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<DomainPreview> List<DomainPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainsAsync(int, CancellationToken) Get domains List all custom domains you have created Declaration public Task<List<DomainPreview>> GetDomainsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<DomainPreview>> Task of List<DomainPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainsWithHttpInfo(int) Get domains List all custom domains you have created Declaration public ApiResponse<List<DomainPreview>> GetDomainsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<DomainPreview>> ApiResponse of List<DomainPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainsWithHttpInfoAsync(int, CancellationToken) Get domains List all custom domains you have created Declaration public Task<ApiResponse<List<DomainPreview>>> GetDomainsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<DomainPreview>>> Task of ApiResponse (List<DomainPreview>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainWildcardCatchAllInbox(Guid, int) Get catch all wild card inbox for domain Get the catch all inbox for a domain for missed emails Declaration public InboxDto GetDomainWildcardCatchAllInbox(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainWildcardCatchAllInboxAsync(Guid, int, CancellationToken) Get catch all wild card inbox for domain Get the catch all inbox for a domain for missed emails Declaration public Task<InboxDto> GetDomainWildcardCatchAllInboxAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainWildcardCatchAllInboxWithHttpInfo(Guid, int) Get catch all wild card inbox for domain Get the catch all inbox for a domain for missed emails Declaration public ApiResponse<InboxDto> GetDomainWildcardCatchAllInboxWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainWildcardCatchAllInboxWithHttpInfoAsync(Guid, int, CancellationToken) Get catch all wild card inbox for domain Get the catch all inbox for a domain for missed emails Declaration public Task<ApiResponse<InboxDto>> GetDomainWildcardCatchAllInboxWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainWithHttpInfo(Guid, bool?, int) Get a domain Returns domain verification status and tokens for a given domain Declaration public ApiResponse<DomainDto> GetDomainWithHttpInfo(Guid id, bool? checkForErrors = null, int operationIndex = 0) Parameters Type Name Description Guid id bool? checkForErrors (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DomainDto> ApiResponse of DomainDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainWithHttpInfoAsync(Guid, bool?, int, CancellationToken) Get a domain Returns domain verification status and tokens for a given domain Declaration public Task<ApiResponse<DomainDto>> GetDomainWithHttpInfoAsync(Guid id, bool? checkForErrors = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id bool? checkForErrors (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DomainDto>> Task of ApiResponse (DomainDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateDomain(Guid, UpdateDomainOptions, int) Update a domain Update values on a domain. Note you cannot change the domain name as it is immutable. Recreate the domain if you need to alter this. Declaration public DomainDto UpdateDomain(Guid id, UpdateDomainOptions updateDomainOptions, int operationIndex = 0) Parameters Type Name Description Guid id UpdateDomainOptions updateDomainOptions int operationIndex Index associated with the operation. Returns Type Description DomainDto DomainDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateDomainAsync(Guid, UpdateDomainOptions, int, CancellationToken) Update a domain Update values on a domain. Note you cannot change the domain name as it is immutable. Recreate the domain if you need to alter this. Declaration public Task<DomainDto> UpdateDomainAsync(Guid id, UpdateDomainOptions updateDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id UpdateDomainOptions updateDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DomainDto> Task of DomainDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateDomainWithHttpInfo(Guid, UpdateDomainOptions, int) Update a domain Update values on a domain. Note you cannot change the domain name as it is immutable. Recreate the domain if you need to alter this. Declaration public ApiResponse<DomainDto> UpdateDomainWithHttpInfo(Guid id, UpdateDomainOptions updateDomainOptions, int operationIndex = 0) Parameters Type Name Description Guid id UpdateDomainOptions updateDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DomainDto> ApiResponse of DomainDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateDomainWithHttpInfoAsync(Guid, UpdateDomainOptions, int, CancellationToken) Update a domain Update values on a domain. Note you cannot change the domain name as it is immutable. Recreate the domain if you need to alter this. Declaration public Task<ApiResponse<DomainDto>> UpdateDomainWithHttpInfoAsync(Guid id, UpdateDomainOptions updateDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id UpdateDomainOptions updateDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DomainDto>> Task of ApiResponse (DomainDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IDomainControllerApi IDomainControllerApiSync IDomainControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.EmailControllerApi.html": {
    "href": "api/mailslurp.Api.EmailControllerApi.html",
    "title": "Class EmailControllerApi | MailSlurp",
    "keywords": "Class EmailControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object EmailControllerApi Implements IEmailControllerApi IEmailControllerApiSync IEmailControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class EmailControllerApi : IEmailControllerApi, IEmailControllerApiSync, IEmailControllerApiAsync, IApiAccessor Constructors View Source EmailControllerApi() Initializes a new instance of the EmailControllerApi class. Declaration public EmailControllerApi() View Source EmailControllerApi(Configuration) Initializes a new instance of the EmailControllerApi class using Configuration object Declaration public EmailControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source EmailControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the EmailControllerApi class using a Configuration object and client instance. Declaration public EmailControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source EmailControllerApi(string) Initializes a new instance of the EmailControllerApi class. Declaration public EmailControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source ApplyImapFlagOperation(Guid, ImapFlagOperationOptions, int) Set IMAP flags associated with a message. Only supports '\\Seen' flag. Apply RFC3501 section-2.3.2 IMAP flag operations on an email Declaration public EmailPreview ApplyImapFlagOperation(Guid emailId, ImapFlagOperationOptions imapFlagOperationOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ImapFlagOperationOptions imapFlagOperationOptions int operationIndex Index associated with the operation. Returns Type Description EmailPreview EmailPreview Exceptions Type Condition ApiException Thrown when fails to make API call View Source ApplyImapFlagOperationAsync(Guid, ImapFlagOperationOptions, int, CancellationToken) Set IMAP flags associated with a message. Only supports '\\Seen' flag. Apply RFC3501 section-2.3.2 IMAP flag operations on an email Declaration public Task<EmailPreview> ApplyImapFlagOperationAsync(Guid emailId, ImapFlagOperationOptions imapFlagOperationOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ImapFlagOperationOptions imapFlagOperationOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailPreview> Task of EmailPreview Exceptions Type Condition ApiException Thrown when fails to make API call View Source ApplyImapFlagOperationWithHttpInfo(Guid, ImapFlagOperationOptions, int) Set IMAP flags associated with a message. Only supports '\\Seen' flag. Apply RFC3501 section-2.3.2 IMAP flag operations on an email Declaration public ApiResponse<EmailPreview> ApplyImapFlagOperationWithHttpInfo(Guid emailId, ImapFlagOperationOptions imapFlagOperationOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ImapFlagOperationOptions imapFlagOperationOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailPreview> ApiResponse of EmailPreview Exceptions Type Condition ApiException Thrown when fails to make API call View Source ApplyImapFlagOperationWithHttpInfoAsync(Guid, ImapFlagOperationOptions, int, CancellationToken) Set IMAP flags associated with a message. Only supports '\\Seen' flag. Apply RFC3501 section-2.3.2 IMAP flag operations on an email Declaration public Task<ApiResponse<EmailPreview>> ApplyImapFlagOperationWithHttpInfoAsync(Guid emailId, ImapFlagOperationOptions imapFlagOperationOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ImapFlagOperationOptions imapFlagOperationOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailPreview>> Task of ApiResponse (EmailPreview) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CanSend(Guid, SendEmailOptions, int) Check if email can be sent and options are valid. Can user send email to given recipient or is the recipient blocked Declaration public CanSendEmailResults CanSend(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description CanSendEmailResults CanSendEmailResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CanSendAsync(Guid, SendEmailOptions, int, CancellationToken) Check if email can be sent and options are valid. Can user send email to given recipient or is the recipient blocked Declaration public Task<CanSendEmailResults> CanSendAsync(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CanSendEmailResults> Task of CanSendEmailResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CanSendWithHttpInfo(Guid, SendEmailOptions, int) Check if email can be sent and options are valid. Can user send email to given recipient or is the recipient blocked Declaration public ApiResponse<CanSendEmailResults> CanSendWithHttpInfo(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CanSendEmailResults> ApiResponse of CanSendEmailResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CanSendWithHttpInfoAsync(Guid, SendEmailOptions, int, CancellationToken) Check if email can be sent and options are valid. Can user send email to given recipient or is the recipient blocked Declaration public Task<ApiResponse<CanSendEmailResults>> CanSendWithHttpInfoAsync(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CanSendEmailResults>> Task of ApiResponse (CanSendEmailResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailBodyFeatureSupport(Guid, int) Show which mail clients support the HTML and CSS features used in an email body. Detect HTML and CSS features inside an email body and return a report of email client support across different platforms and versions. Declaration public CheckEmailBodyFeatureSupportResults CheckEmailBodyFeatureSupport(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. Returns Type Description CheckEmailBodyFeatureSupportResults CheckEmailBodyFeatureSupportResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailBodyFeatureSupportAsync(Guid, int, CancellationToken) Show which mail clients support the HTML and CSS features used in an email body. Detect HTML and CSS features inside an email body and return a report of email client support across different platforms and versions. Declaration public Task<CheckEmailBodyFeatureSupportResults> CheckEmailBodyFeatureSupportAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CheckEmailBodyFeatureSupportResults> Task of CheckEmailBodyFeatureSupportResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailBodyFeatureSupportWithHttpInfo(Guid, int) Show which mail clients support the HTML and CSS features used in an email body. Detect HTML and CSS features inside an email body and return a report of email client support across different platforms and versions. Declaration public ApiResponse<CheckEmailBodyFeatureSupportResults> CheckEmailBodyFeatureSupportWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CheckEmailBodyFeatureSupportResults> ApiResponse of CheckEmailBodyFeatureSupportResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailBodyFeatureSupportWithHttpInfoAsync(Guid, int, CancellationToken) Show which mail clients support the HTML and CSS features used in an email body. Detect HTML and CSS features inside an email body and return a report of email client support across different platforms and versions. Declaration public Task<ApiResponse<CheckEmailBodyFeatureSupportResults>> CheckEmailBodyFeatureSupportWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CheckEmailBodyFeatureSupportResults>> Task of ApiResponse (CheckEmailBodyFeatureSupportResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailClientSupport(CheckEmailClientSupportOptions, int) Show which email programs and devices support the features used in an email body. Evaluate the features used in an email body and return a report of email client support across different platforms and versions. Declaration public CheckEmailClientSupportResults CheckEmailClientSupport(CheckEmailClientSupportOptions checkEmailClientSupportOptions, int operationIndex = 0) Parameters Type Name Description CheckEmailClientSupportOptions checkEmailClientSupportOptions int operationIndex Index associated with the operation. Returns Type Description CheckEmailClientSupportResults CheckEmailClientSupportResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailClientSupportAsync(CheckEmailClientSupportOptions, int, CancellationToken) Show which email programs and devices support the features used in an email body. Evaluate the features used in an email body and return a report of email client support across different platforms and versions. Declaration public Task<CheckEmailClientSupportResults> CheckEmailClientSupportAsync(CheckEmailClientSupportOptions checkEmailClientSupportOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CheckEmailClientSupportOptions checkEmailClientSupportOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CheckEmailClientSupportResults> Task of CheckEmailClientSupportResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailClientSupportWithHttpInfo(CheckEmailClientSupportOptions, int) Show which email programs and devices support the features used in an email body. Evaluate the features used in an email body and return a report of email client support across different platforms and versions. Declaration public ApiResponse<CheckEmailClientSupportResults> CheckEmailClientSupportWithHttpInfo(CheckEmailClientSupportOptions checkEmailClientSupportOptions, int operationIndex = 0) Parameters Type Name Description CheckEmailClientSupportOptions checkEmailClientSupportOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CheckEmailClientSupportResults> ApiResponse of CheckEmailClientSupportResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailClientSupportWithHttpInfoAsync(CheckEmailClientSupportOptions, int, CancellationToken) Show which email programs and devices support the features used in an email body. Evaluate the features used in an email body and return a report of email client support across different platforms and versions. Declaration public Task<ApiResponse<CheckEmailClientSupportResults>> CheckEmailClientSupportWithHttpInfoAsync(CheckEmailClientSupportOptions checkEmailClientSupportOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CheckEmailClientSupportOptions checkEmailClientSupportOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CheckEmailClientSupportResults>> Task of ApiResponse (CheckEmailClientSupportResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllEmails(int) Delete all emails in all inboxes. Deletes all emails in your account. Be careful as emails cannot be recovered Declaration public void DeleteAllEmails(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllEmailsAsync(int, CancellationToken) Delete all emails in all inboxes. Deletes all emails in your account. Be careful as emails cannot be recovered Declaration public Task DeleteAllEmailsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllEmailsWithHttpInfo(int) Delete all emails in all inboxes. Deletes all emails in your account. Be careful as emails cannot be recovered Declaration public ApiResponse<object> DeleteAllEmailsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllEmailsWithHttpInfoAsync(int, CancellationToken) Delete all emails in all inboxes. Deletes all emails in your account. Be careful as emails cannot be recovered Declaration public Task<ApiResponse<object>> DeleteAllEmailsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmail(Guid, int) Delete an email Deletes an email and removes it from the inbox. Deleted emails cannot be recovered. Declaration public void DeleteEmail(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to delete int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailAsync(Guid, int, CancellationToken) Delete an email Deletes an email and removes it from the inbox. Deleted emails cannot be recovered. Declaration public Task DeleteEmailAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to delete int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailWithHttpInfo(Guid, int) Delete an email Deletes an email and removes it from the inbox. Deleted emails cannot be recovered. Declaration public ApiResponse<object> DeleteEmailWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to delete int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailWithHttpInfoAsync(Guid, int, CancellationToken) Delete an email Deletes an email and removes it from the inbox. Deleted emails cannot be recovered. Declaration public Task<ApiResponse<object>> DeleteEmailWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to delete int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachment(Guid, string, string, int) Get email attachment bytes. Returned as octet-stream with content type header. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints and convert the base 64 encoded content to a file or string. Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Declaration public byte[] DownloadAttachment(Guid emailId, string attachmentId, string apiKey = null, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment string apiKey Can pass apiKey in url for this request if you wish to download the file in a browser. Content type will be set to original content type of the attachment file. This is so that browsers can download the file correctly. (optional) int operationIndex Index associated with the operation. Returns Type Description byte[] byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsync(Guid, string, string, int, CancellationToken) Get email attachment bytes. Returned as octet-stream with content type header. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints and convert the base 64 encoded content to a file or string. Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Declaration public Task<byte[]> DownloadAttachmentAsync(Guid emailId, string attachmentId, string apiKey = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment string apiKey Can pass apiKey in url for this request if you wish to download the file in a browser. Content type will be set to original content type of the attachment file. This is so that browsers can download the file correctly. (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<byte[]> Task of byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentBase64(Guid, string, int) Get email attachment as base64 encoded string as an alternative to binary responses. Decode the base64FileContents as a utf-8 encoded string or array of bytes depending on the contentType. Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Declaration public DownloadAttachmentDto DownloadAttachmentBase64(Guid emailId, string attachmentId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description DownloadAttachmentDto DownloadAttachmentDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentBase64Async(Guid, string, int, CancellationToken) Get email attachment as base64 encoded string as an alternative to binary responses. Decode the base64FileContents as a utf-8 encoded string or array of bytes depending on the contentType. Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Declaration public Task<DownloadAttachmentDto> DownloadAttachmentBase64Async(Guid emailId, string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DownloadAttachmentDto> Task of DownloadAttachmentDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentBase64WithHttpInfo(Guid, string, int) Get email attachment as base64 encoded string as an alternative to binary responses. Decode the base64FileContents as a utf-8 encoded string or array of bytes depending on the contentType. Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Declaration public ApiResponse<DownloadAttachmentDto> DownloadAttachmentBase64WithHttpInfo(Guid emailId, string attachmentId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DownloadAttachmentDto> ApiResponse of DownloadAttachmentDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentBase64WithHttpInfoAsync(Guid, string, int, CancellationToken) Get email attachment as base64 encoded string as an alternative to binary responses. Decode the base64FileContents as a utf-8 encoded string or array of bytes depending on the contentType. Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Declaration public Task<ApiResponse<DownloadAttachmentDto>> DownloadAttachmentBase64WithHttpInfoAsync(Guid emailId, string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DownloadAttachmentDto>> Task of ApiResponse (DownloadAttachmentDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentWithHttpInfo(Guid, string, string, int) Get email attachment bytes. Returned as octet-stream with content type header. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints and convert the base 64 encoded content to a file or string. Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Declaration public ApiResponse<byte[]> DownloadAttachmentWithHttpInfo(Guid emailId, string attachmentId, string apiKey = null, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment string apiKey Can pass apiKey in url for this request if you wish to download the file in a browser. Content type will be set to original content type of the attachment file. This is so that browsers can download the file correctly. (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<byte[]> ApiResponse of byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentWithHttpInfoAsync(Guid, string, string, int, CancellationToken) Get email attachment bytes. Returned as octet-stream with content type header. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints and convert the base 64 encoded content to a file or string. Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Declaration public Task<ApiResponse<byte[]>> DownloadAttachmentWithHttpInfoAsync(Guid emailId, string attachmentId, string apiKey = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment string apiKey Can pass apiKey in url for this request if you wish to download the file in a browser. Content type will be set to original content type of the attachment file. This is so that browsers can download the file correctly. (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<byte[]>> Task of ApiResponse (byte[]) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBody(Guid, int) Get email body as string. Returned as plain/text with content type header. Returns the specified email body for a given email as a string Declaration public string DownloadBody(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description string string Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyAsync(Guid, int, CancellationToken) Get email body as string. Returned as plain/text with content type header. Returns the specified email body for a given email as a string Declaration public Task<string> DownloadBodyAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<string> Task of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyBytes(Guid, int) Get email body in bytes. Returned as octet-stream with content type header. Returns the specified email body for a given email as a stream / array of bytes. Declaration public byte[] DownloadBodyBytes(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description byte[] byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyBytesAsync(Guid, int, CancellationToken) Get email body in bytes. Returned as octet-stream with content type header. Returns the specified email body for a given email as a stream / array of bytes. Declaration public Task<byte[]> DownloadBodyBytesAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<byte[]> Task of byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyBytesWithHttpInfo(Guid, int) Get email body in bytes. Returned as octet-stream with content type header. Returns the specified email body for a given email as a stream / array of bytes. Declaration public ApiResponse<byte[]> DownloadBodyBytesWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<byte[]> ApiResponse of byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyBytesWithHttpInfoAsync(Guid, int, CancellationToken) Get email body in bytes. Returned as octet-stream with content type header. Returns the specified email body for a given email as a stream / array of bytes. Declaration public Task<ApiResponse<byte[]>> DownloadBodyBytesWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<byte[]>> Task of ApiResponse (byte[]) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyWithHttpInfo(Guid, int) Get email body as string. Returned as plain/text with content type header. Returns the specified email body for a given email as a string Declaration public ApiResponse<string> DownloadBodyWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<string> ApiResponse of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyWithHttpInfoAsync(Guid, int, CancellationToken) Get email body as string. Returned as plain/text with content type header. Returns the specified email body for a given email as a string Declaration public Task<ApiResponse<string>> DownloadBodyWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<string>> Task of ApiResponse (string) Exceptions Type Condition ApiException Thrown when fails to make API call View Source ForwardEmail(Guid, ForwardEmailOptions, int) Forward email to recipients Forward an existing email to new recipients. The sender of the email will be the inbox that received the email you are forwarding. You can override the sender with the from option. Note you must have access to the from address in MailSlurp to use the override. For more control consider fetching the email and sending it a new using the send email endpoints. Declaration public SentEmailDto ForwardEmail(Guid emailId, ForwardEmailOptions forwardEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email ForwardEmailOptions forwardEmailOptions int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ForwardEmailAsync(Guid, ForwardEmailOptions, int, CancellationToken) Forward email to recipients Forward an existing email to new recipients. The sender of the email will be the inbox that received the email you are forwarding. You can override the sender with the from option. Note you must have access to the from address in MailSlurp to use the override. For more control consider fetching the email and sending it a new using the send email endpoints. Declaration public Task<SentEmailDto> ForwardEmailAsync(Guid emailId, ForwardEmailOptions forwardEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email ForwardEmailOptions forwardEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ForwardEmailWithHttpInfo(Guid, ForwardEmailOptions, int) Forward email to recipients Forward an existing email to new recipients. The sender of the email will be the inbox that received the email you are forwarding. You can override the sender with the from option. Note you must have access to the from address in MailSlurp to use the override. For more control consider fetching the email and sending it a new using the send email endpoints. Declaration public ApiResponse<SentEmailDto> ForwardEmailWithHttpInfo(Guid emailId, ForwardEmailOptions forwardEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email ForwardEmailOptions forwardEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ForwardEmailWithHttpInfoAsync(Guid, ForwardEmailOptions, int, CancellationToken) Forward email to recipients Forward an existing email to new recipients. The sender of the email will be the inbox that received the email you are forwarding. You can override the sender with the from option. Note you must have access to the from address in MailSlurp to use the override. For more control consider fetching the email and sending it a new using the send email endpoints. Declaration public Task<ApiResponse<SentEmailDto>> ForwardEmailWithHttpInfoAsync(Guid emailId, ForwardEmailOptions forwardEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email ForwardEmailOptions forwardEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentMetaData(Guid, string, int) Get email attachment metadata. This is the contentType and contentLength of an attachment. To get the individual attachments use the downloadAttachment methods. Returns the metadata such as name and content-type for a given attachment and email. Declaration public AttachmentMetaData GetAttachmentMetaData(Guid emailId, string attachmentId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description AttachmentMetaData AttachmentMetaData Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentMetaDataAsync(Guid, string, int, CancellationToken) Get email attachment metadata. This is the contentType and contentLength of an attachment. To get the individual attachments use the downloadAttachment methods. Returns the metadata such as name and content-type for a given attachment and email. Declaration public Task<AttachmentMetaData> GetAttachmentMetaDataAsync(Guid emailId, string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AttachmentMetaData> Task of AttachmentMetaData Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentMetaDataWithHttpInfo(Guid, string, int) Get email attachment metadata. This is the contentType and contentLength of an attachment. To get the individual attachments use the downloadAttachment methods. Returns the metadata such as name and content-type for a given attachment and email. Declaration public ApiResponse<AttachmentMetaData> GetAttachmentMetaDataWithHttpInfo(Guid emailId, string attachmentId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AttachmentMetaData> ApiResponse of AttachmentMetaData Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentMetaDataWithHttpInfoAsync(Guid, string, int, CancellationToken) Get email attachment metadata. This is the contentType and contentLength of an attachment. To get the individual attachments use the downloadAttachment methods. Returns the metadata such as name and content-type for a given attachment and email. Declaration public Task<ApiResponse<AttachmentMetaData>> GetAttachmentMetaDataWithHttpInfoAsync(Guid emailId, string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AttachmentMetaData>> Task of ApiResponse (AttachmentMetaData) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetEmail(Guid, bool?, int) Get email content including headers and body. Expects email to exist by ID. For emails that may not have arrived yet use the WaitForController. Returns a email summary object with headers and content. To retrieve the raw unparsed email use the getRawEmail endpoints Declaration public Email GetEmail(Guid emailId, bool? decode = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? decode Decode email body quoted-printable encoding to plain text. SMTP servers often encode text using quoted-printable format (for instance =D7). This can be a pain for testing (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description Email Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailAsync(Guid, bool?, int, CancellationToken) Get email content including headers and body. Expects email to exist by ID. For emails that may not have arrived yet use the WaitForController. Returns a email summary object with headers and content. To retrieve the raw unparsed email use the getRawEmail endpoints Declaration public Task<Email> GetEmailAsync(Guid emailId, bool? decode = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? decode Decode email body quoted-printable encoding to plain text. SMTP servers often encode text using quoted-printable format (for instance =D7). This can be a pain for testing (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailAttachments(Guid, int) Get all email attachment metadata. Metadata includes name and size of attachments. Returns an array of attachment metadata such as name and content-type for a given email if present. Declaration public List<AttachmentMetaData> GetEmailAttachments(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description List<AttachmentMetaData> List<AttachmentMetaData> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailAttachmentsAsync(Guid, int, CancellationToken) Get all email attachment metadata. Metadata includes name and size of attachments. Returns an array of attachment metadata such as name and content-type for a given email if present. Declaration public Task<List<AttachmentMetaData>> GetEmailAttachmentsAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<AttachmentMetaData>> Task of List<AttachmentMetaData> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailAttachmentsWithHttpInfo(Guid, int) Get all email attachment metadata. Metadata includes name and size of attachments. Returns an array of attachment metadata such as name and content-type for a given email if present. Declaration public ApiResponse<List<AttachmentMetaData>> GetEmailAttachmentsWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<AttachmentMetaData>> ApiResponse of List<AttachmentMetaData> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailAttachmentsWithHttpInfoAsync(Guid, int, CancellationToken) Get all email attachment metadata. Metadata includes name and size of attachments. Returns an array of attachment metadata such as name and content-type for a given email if present. Declaration public Task<ApiResponse<List<AttachmentMetaData>>> GetEmailAttachmentsWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<AttachmentMetaData>>> Task of ApiResponse (List<AttachmentMetaData>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentMatch(Guid, ContentMatchOptions, int) Get email content regex pattern match results. Runs regex against email body and returns match groups. Return the matches for a given Java style regex pattern. Do not include the typical / at start or end of regex in some languages. Given an example your code is: 12345 the pattern to extract match looks like code is: (\\\\d{6}). This will return an array of matches with the first matching the entire pattern and the subsequent matching the groups: [&apos;code is: 123456&apos;, &apos;123456&apos;] See https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html for more information of available patterns. Declaration public EmailContentMatchResult GetEmailContentMatch(Guid emailId, ContentMatchOptions contentMatchOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to match against ContentMatchOptions contentMatchOptions int operationIndex Index associated with the operation. Returns Type Description EmailContentMatchResult EmailContentMatchResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentMatchAsync(Guid, ContentMatchOptions, int, CancellationToken) Get email content regex pattern match results. Runs regex against email body and returns match groups. Return the matches for a given Java style regex pattern. Do not include the typical / at start or end of regex in some languages. Given an example your code is: 12345 the pattern to extract match looks like code is: (\\\\d{6}). This will return an array of matches with the first matching the entire pattern and the subsequent matching the groups: [&apos;code is: 123456&apos;, &apos;123456&apos;] See https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html for more information of available patterns. Declaration public Task<EmailContentMatchResult> GetEmailContentMatchAsync(Guid emailId, ContentMatchOptions contentMatchOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to match against ContentMatchOptions contentMatchOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailContentMatchResult> Task of EmailContentMatchResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentMatchWithHttpInfo(Guid, ContentMatchOptions, int) Get email content regex pattern match results. Runs regex against email body and returns match groups. Return the matches for a given Java style regex pattern. Do not include the typical / at start or end of regex in some languages. Given an example your code is: 12345 the pattern to extract match looks like code is: (\\\\d{6}). This will return an array of matches with the first matching the entire pattern and the subsequent matching the groups: [&apos;code is: 123456&apos;, &apos;123456&apos;] See https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html for more information of available patterns. Declaration public ApiResponse<EmailContentMatchResult> GetEmailContentMatchWithHttpInfo(Guid emailId, ContentMatchOptions contentMatchOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to match against ContentMatchOptions contentMatchOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailContentMatchResult> ApiResponse of EmailContentMatchResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentMatchWithHttpInfoAsync(Guid, ContentMatchOptions, int, CancellationToken) Get email content regex pattern match results. Runs regex against email body and returns match groups. Return the matches for a given Java style regex pattern. Do not include the typical / at start or end of regex in some languages. Given an example your code is: 12345 the pattern to extract match looks like code is: (\\\\d{6}). This will return an array of matches with the first matching the entire pattern and the subsequent matching the groups: [&apos;code is: 123456&apos;, &apos;123456&apos;] See https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html for more information of available patterns. Declaration public Task<ApiResponse<EmailContentMatchResult>> GetEmailContentMatchWithHttpInfoAsync(Guid emailId, ContentMatchOptions contentMatchOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to match against ContentMatchOptions contentMatchOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailContentMatchResult>> Task of ApiResponse (EmailContentMatchResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentPart(Guid, string, int) Get email content part by content type Get email body content parts from a multipart email message for a given content type Declaration public EmailContentPartResult GetEmailContentPart(Guid emailId, string contentType, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to match against string contentType Content type int operationIndex Index associated with the operation. Returns Type Description EmailContentPartResult EmailContentPartResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentPartAsync(Guid, string, int, CancellationToken) Get email content part by content type Get email body content parts from a multipart email message for a given content type Declaration public Task<EmailContentPartResult> GetEmailContentPartAsync(Guid emailId, string contentType, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to match against string contentType Content type int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailContentPartResult> Task of EmailContentPartResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentPartWithHttpInfo(Guid, string, int) Get email content part by content type Get email body content parts from a multipart email message for a given content type Declaration public ApiResponse<EmailContentPartResult> GetEmailContentPartWithHttpInfo(Guid emailId, string contentType, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to match against string contentType Content type int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailContentPartResult> ApiResponse of EmailContentPartResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentPartWithHttpInfoAsync(Guid, string, int, CancellationToken) Get email content part by content type Get email body content parts from a multipart email message for a given content type Declaration public Task<ApiResponse<EmailContentPartResult>> GetEmailContentPartWithHttpInfoAsync(Guid emailId, string contentType, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to match against string contentType Content type int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailContentPartResult>> Task of ApiResponse (EmailContentPartResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailCount(int) Get email count Declaration public CountDto GetEmailCount(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description CountDto CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailCountAsync(int, CancellationToken) Get email count Declaration public Task<CountDto> GetEmailCountAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CountDto> Task of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailCountWithHttpInfo(int) Get email count Declaration public ApiResponse<CountDto> GetEmailCountWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CountDto> ApiResponse of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailCountWithHttpInfoAsync(int, CancellationToken) Get email count Declaration public Task<ApiResponse<CountDto>> GetEmailCountWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CountDto>> Task of ApiResponse (CountDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTML(Guid, bool?, bool?, int) Get email content as HTML. For displaying emails in browser context. Retrieve email content as HTML response for viewing in browsers. Decodes quoted-printable entities and converts charset to UTF-8. Pass your API KEY as a request parameter when viewing in a browser: ?apiKey=xxx. Returns content-type text/html;charset=utf-8 so you must call expecting that content response not JSON. For JSON response see the getEmailHTMLJson method. Declaration public string GetEmailHTML(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description string string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLAsync(Guid, bool?, bool?, int, CancellationToken) Get email content as HTML. For displaying emails in browser context. Retrieve email content as HTML response for viewing in browsers. Decodes quoted-printable entities and converts charset to UTF-8. Pass your API KEY as a request parameter when viewing in a browser: ?apiKey=xxx. Returns content-type text/html;charset=utf-8 so you must call expecting that content response not JSON. For JSON response see the getEmailHTMLJson method. Declaration public Task<string> GetEmailHTMLAsync(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<string> Task of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLJson(Guid, bool?, bool?, int) Get email content as HTML in JSON wrapper. For fetching entity decoded HTML content Retrieve email content as HTML response. Decodes quoted-printable entities and converts charset to UTF-8. Returns content-type application/json;charset=utf-8 so you must call expecting that content response not JSON. Declaration public EmailHtmlDto GetEmailHTMLJson(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description EmailHtmlDto EmailHtmlDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLJsonAsync(Guid, bool?, bool?, int, CancellationToken) Get email content as HTML in JSON wrapper. For fetching entity decoded HTML content Retrieve email content as HTML response. Decodes quoted-printable entities and converts charset to UTF-8. Returns content-type application/json;charset=utf-8 so you must call expecting that content response not JSON. Declaration public Task<EmailHtmlDto> GetEmailHTMLJsonAsync(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailHtmlDto> Task of EmailHtmlDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLJsonWithHttpInfo(Guid, bool?, bool?, int) Get email content as HTML in JSON wrapper. For fetching entity decoded HTML content Retrieve email content as HTML response. Decodes quoted-printable entities and converts charset to UTF-8. Returns content-type application/json;charset=utf-8 so you must call expecting that content response not JSON. Declaration public ApiResponse<EmailHtmlDto> GetEmailHTMLJsonWithHttpInfo(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailHtmlDto> ApiResponse of EmailHtmlDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLJsonWithHttpInfoAsync(Guid, bool?, bool?, int, CancellationToken) Get email content as HTML in JSON wrapper. For fetching entity decoded HTML content Retrieve email content as HTML response. Decodes quoted-printable entities and converts charset to UTF-8. Returns content-type application/json;charset=utf-8 so you must call expecting that content response not JSON. Declaration public Task<ApiResponse<EmailHtmlDto>> GetEmailHTMLJsonWithHttpInfoAsync(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailHtmlDto>> Task of ApiResponse (EmailHtmlDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLQuery(Guid, string, int) Parse and return text from an email, stripping HTML and decoding encoded characters Parse an email body and return the content as an array of text. HTML parsing uses JSoup which supports JQuery/CSS style selectors Declaration public EmailTextLinesResult GetEmailHTMLQuery(Guid emailId, string htmlSelector, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to perform HTML query on string htmlSelector HTML selector to search for. Uses JQuery/JSoup/CSS style selector like '.my-div' to match content. See https://jsoup.org/apidocs/org/jsoup/select/Selector.html for more information. int operationIndex Index associated with the operation. Returns Type Description EmailTextLinesResult EmailTextLinesResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLQueryAsync(Guid, string, int, CancellationToken) Parse and return text from an email, stripping HTML and decoding encoded characters Parse an email body and return the content as an array of text. HTML parsing uses JSoup which supports JQuery/CSS style selectors Declaration public Task<EmailTextLinesResult> GetEmailHTMLQueryAsync(Guid emailId, string htmlSelector, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to perform HTML query on string htmlSelector HTML selector to search for. Uses JQuery/JSoup/CSS style selector like '.my-div' to match content. See https://jsoup.org/apidocs/org/jsoup/select/Selector.html for more information. int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailTextLinesResult> Task of EmailTextLinesResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLQueryWithHttpInfo(Guid, string, int) Parse and return text from an email, stripping HTML and decoding encoded characters Parse an email body and return the content as an array of text. HTML parsing uses JSoup which supports JQuery/CSS style selectors Declaration public ApiResponse<EmailTextLinesResult> GetEmailHTMLQueryWithHttpInfo(Guid emailId, string htmlSelector, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to perform HTML query on string htmlSelector HTML selector to search for. Uses JQuery/JSoup/CSS style selector like '.my-div' to match content. See https://jsoup.org/apidocs/org/jsoup/select/Selector.html for more information. int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailTextLinesResult> ApiResponse of EmailTextLinesResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLQueryWithHttpInfoAsync(Guid, string, int, CancellationToken) Parse and return text from an email, stripping HTML and decoding encoded characters Parse an email body and return the content as an array of text. HTML parsing uses JSoup which supports JQuery/CSS style selectors Declaration public Task<ApiResponse<EmailTextLinesResult>> GetEmailHTMLQueryWithHttpInfoAsync(Guid emailId, string htmlSelector, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to perform HTML query on string htmlSelector HTML selector to search for. Uses JQuery/JSoup/CSS style selector like '.my-div' to match content. See https://jsoup.org/apidocs/org/jsoup/select/Selector.html for more information. int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailTextLinesResult>> Task of ApiResponse (EmailTextLinesResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLWithHttpInfo(Guid, bool?, bool?, int) Get email content as HTML. For displaying emails in browser context. Retrieve email content as HTML response for viewing in browsers. Decodes quoted-printable entities and converts charset to UTF-8. Pass your API KEY as a request parameter when viewing in a browser: ?apiKey=xxx. Returns content-type text/html;charset=utf-8 so you must call expecting that content response not JSON. For JSON response see the getEmailHTMLJson method. Declaration public ApiResponse<string> GetEmailHTMLWithHttpInfo(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<string> ApiResponse of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLWithHttpInfoAsync(Guid, bool?, bool?, int, CancellationToken) Get email content as HTML. For displaying emails in browser context. Retrieve email content as HTML response for viewing in browsers. Decodes quoted-printable entities and converts charset to UTF-8. Pass your API KEY as a request parameter when viewing in a browser: ?apiKey=xxx. Returns content-type text/html;charset=utf-8 so you must call expecting that content response not JSON. For JSON response see the getEmailHTMLJson method. Declaration public Task<ApiResponse<string>> GetEmailHTMLWithHttpInfoAsync(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<string>> Task of ApiResponse (string) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailLinks(Guid, int) Parse and return list of links found in an email (only works for HTML content) HTML parsing uses JSoup and UNIX line separators. Searches content for href attributes Declaration public EmailLinksResult GetEmailLinks(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to fetch text for int operationIndex Index associated with the operation. Returns Type Description EmailLinksResult EmailLinksResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailLinksAsync(Guid, int, CancellationToken) Parse and return list of links found in an email (only works for HTML content) HTML parsing uses JSoup and UNIX line separators. Searches content for href attributes Declaration public Task<EmailLinksResult> GetEmailLinksAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to fetch text for int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailLinksResult> Task of EmailLinksResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailLinksWithHttpInfo(Guid, int) Parse and return list of links found in an email (only works for HTML content) HTML parsing uses JSoup and UNIX line separators. Searches content for href attributes Declaration public ApiResponse<EmailLinksResult> GetEmailLinksWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to fetch text for int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailLinksResult> ApiResponse of EmailLinksResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailLinksWithHttpInfoAsync(Guid, int, CancellationToken) Parse and return list of links found in an email (only works for HTML content) HTML parsing uses JSoup and UNIX line separators. Searches content for href attributes Declaration public Task<ApiResponse<EmailLinksResult>> GetEmailLinksWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to fetch text for int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailLinksResult>> Task of ApiResponse (EmailLinksResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailPreviewURLs(Guid, int) Get email URLs for viewing in browser or downloading Get a list of URLs for email content as text/html or raw SMTP message for viewing the message in a browser. Declaration public EmailPreviewUrls GetEmailPreviewURLs(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. Returns Type Description EmailPreviewUrls EmailPreviewUrls Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailPreviewURLsAsync(Guid, int, CancellationToken) Get email URLs for viewing in browser or downloading Get a list of URLs for email content as text/html or raw SMTP message for viewing the message in a browser. Declaration public Task<EmailPreviewUrls> GetEmailPreviewURLsAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailPreviewUrls> Task of EmailPreviewUrls Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailPreviewURLsWithHttpInfo(Guid, int) Get email URLs for viewing in browser or downloading Get a list of URLs for email content as text/html or raw SMTP message for viewing the message in a browser. Declaration public ApiResponse<EmailPreviewUrls> GetEmailPreviewURLsWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailPreviewUrls> ApiResponse of EmailPreviewUrls Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailPreviewURLsWithHttpInfoAsync(Guid, int, CancellationToken) Get email URLs for viewing in browser or downloading Get a list of URLs for email content as text/html or raw SMTP message for viewing the message in a browser. Declaration public Task<ApiResponse<EmailPreviewUrls>> GetEmailPreviewURLsWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailPreviewUrls>> Task of ApiResponse (EmailPreviewUrls) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsOffsetPaginated(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) Get all emails in all inboxes in paginated form. Email API list all. By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Declaration public PageEmailProjection GetEmailsOffsetPaginated(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageEmailProjection PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsOffsetPaginatedAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) Get all emails in all inboxes in paginated form. Email API list all. By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Declaration public Task<PageEmailProjection> GetEmailsOffsetPaginatedAsync(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailProjection> Task of PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsOffsetPaginatedWithHttpInfo(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) Get all emails in all inboxes in paginated form. Email API list all. By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Declaration public ApiResponse<PageEmailProjection> GetEmailsOffsetPaginatedWithHttpInfo(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailProjection> ApiResponse of PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsOffsetPaginatedWithHttpInfoAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) Get all emails in all inboxes in paginated form. Email API list all. By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Declaration public Task<ApiResponse<PageEmailProjection>> GetEmailsOffsetPaginatedWithHttpInfoAsync(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailProjection>> Task of ApiResponse (PageEmailProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsPaginated(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) Get all emails in all inboxes in paginated form. Email API list all. By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Declaration public PageEmailProjection GetEmailsPaginated(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageEmailProjection PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsPaginatedAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) Get all emails in all inboxes in paginated form. Email API list all. By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Declaration public Task<PageEmailProjection> GetEmailsPaginatedAsync(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailProjection> Task of PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsPaginatedWithHttpInfo(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) Get all emails in all inboxes in paginated form. Email API list all. By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Declaration public ApiResponse<PageEmailProjection> GetEmailsPaginatedWithHttpInfo(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailProjection> ApiResponse of PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsPaginatedWithHttpInfoAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) Get all emails in all inboxes in paginated form. Email API list all. By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Declaration public Task<ApiResponse<PageEmailProjection>> GetEmailsPaginatedWithHttpInfoAsync(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailProjection>> Task of ApiResponse (PageEmailProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailTextLines(Guid, bool?, string, int) Parse and return text from an email, stripping HTML and decoding encoded characters Parse an email body and return the content as an array of strings. HTML parsing uses JSoup and UNIX line separators. Declaration public EmailTextLinesResult GetEmailTextLines(Guid emailId, bool? decodeHtmlEntities = null, string lineSeparator = null, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to fetch text for bool? decodeHtmlEntities Decode HTML entities (optional) string lineSeparator Line separator character (optional) int operationIndex Index associated with the operation. Returns Type Description EmailTextLinesResult EmailTextLinesResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailTextLinesAsync(Guid, bool?, string, int, CancellationToken) Parse and return text from an email, stripping HTML and decoding encoded characters Parse an email body and return the content as an array of strings. HTML parsing uses JSoup and UNIX line separators. Declaration public Task<EmailTextLinesResult> GetEmailTextLinesAsync(Guid emailId, bool? decodeHtmlEntities = null, string lineSeparator = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to fetch text for bool? decodeHtmlEntities Decode HTML entities (optional) string lineSeparator Line separator character (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailTextLinesResult> Task of EmailTextLinesResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailTextLinesWithHttpInfo(Guid, bool?, string, int) Parse and return text from an email, stripping HTML and decoding encoded characters Parse an email body and return the content as an array of strings. HTML parsing uses JSoup and UNIX line separators. Declaration public ApiResponse<EmailTextLinesResult> GetEmailTextLinesWithHttpInfo(Guid emailId, bool? decodeHtmlEntities = null, string lineSeparator = null, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to fetch text for bool? decodeHtmlEntities Decode HTML entities (optional) string lineSeparator Line separator character (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailTextLinesResult> ApiResponse of EmailTextLinesResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailTextLinesWithHttpInfoAsync(Guid, bool?, string, int, CancellationToken) Parse and return text from an email, stripping HTML and decoding encoded characters Parse an email body and return the content as an array of strings. HTML parsing uses JSoup and UNIX line separators. Declaration public Task<ApiResponse<EmailTextLinesResult>> GetEmailTextLinesWithHttpInfoAsync(Guid emailId, bool? decodeHtmlEntities = null, string lineSeparator = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to fetch text for bool? decodeHtmlEntities Decode HTML entities (optional) string lineSeparator Line separator character (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailTextLinesResult>> Task of ApiResponse (EmailTextLinesResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailWithHttpInfo(Guid, bool?, int) Get email content including headers and body. Expects email to exist by ID. For emails that may not have arrived yet use the WaitForController. Returns a email summary object with headers and content. To retrieve the raw unparsed email use the getRawEmail endpoints Declaration public ApiResponse<Email> GetEmailWithHttpInfo(Guid emailId, bool? decode = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? decode Decode email body quoted-printable encoding to plain text. SMTP servers often encode text using quoted-printable format (for instance =D7). This can be a pain for testing (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailWithHttpInfoAsync(Guid, bool?, int, CancellationToken) Get email content including headers and body. Expects email to exist by ID. For emails that may not have arrived yet use the WaitForController. Returns a email summary object with headers and content. To retrieve the raw unparsed email use the getRawEmail endpoints Declaration public Task<ApiResponse<Email>> GetEmailWithHttpInfoAsync(Guid emailId, bool? decode = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? decode Decode email body quoted-printable encoding to plain text. SMTP servers often encode text using quoted-printable format (for instance =D7). This can be a pain for testing (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGravatarUrlForEmailAddress(string, string, int) Get gravatar url for email address Declaration public GravatarUrl GetGravatarUrlForEmailAddress(string emailAddress, string size = null, int operationIndex = 0) Parameters Type Name Description string emailAddress string size (optional) int operationIndex Index associated with the operation. Returns Type Description GravatarUrl GravatarUrl Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGravatarUrlForEmailAddressAsync(string, string, int, CancellationToken) Get gravatar url for email address Declaration public Task<GravatarUrl> GetGravatarUrlForEmailAddressAsync(string emailAddress, string size = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress string size (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GravatarUrl> Task of GravatarUrl Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGravatarUrlForEmailAddressWithHttpInfo(string, string, int) Get gravatar url for email address Declaration public ApiResponse<GravatarUrl> GetGravatarUrlForEmailAddressWithHttpInfo(string emailAddress, string size = null, int operationIndex = 0) Parameters Type Name Description string emailAddress string size (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GravatarUrl> ApiResponse of GravatarUrl Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGravatarUrlForEmailAddressWithHttpInfoAsync(string, string, int, CancellationToken) Get gravatar url for email address Declaration public Task<ApiResponse<GravatarUrl>> GetGravatarUrlForEmailAddressWithHttpInfoAsync(string emailAddress, string size = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress string size (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GravatarUrl>> Task of ApiResponse (GravatarUrl) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmail(List<Guid>, int) Get latest email in all inboxes. Most recently received. Get the newest email in all inboxes or in a passed set of inbox IDs Declaration public Email GetLatestEmail(List<Guid> inboxIds = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxIds Optional set of inboxes to filter by. Only get the latest email from these inbox IDs. If not provided will search across all inboxes (optional) int operationIndex Index associated with the operation. Returns Type Description Email Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailAsync(List<Guid>, int, CancellationToken) Get latest email in all inboxes. Most recently received. Get the newest email in all inboxes or in a passed set of inbox IDs Declaration public Task<Email> GetLatestEmailAsync(List<Guid> inboxIds = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxIds Optional set of inboxes to filter by. Only get the latest email from these inbox IDs. If not provided will search across all inboxes (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInbox1(Guid, int) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Get the newest email in all inboxes or in a passed set of inbox IDs Declaration public Email GetLatestEmailInInbox1(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from int operationIndex Index associated with the operation. Returns Type Description Email Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInbox1Async(Guid, int, CancellationToken) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Get the newest email in all inboxes or in a passed set of inbox IDs Declaration public Task<Email> GetLatestEmailInInbox1Async(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInbox1WithHttpInfo(Guid, int) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Get the newest email in all inboxes or in a passed set of inbox IDs Declaration public ApiResponse<Email> GetLatestEmailInInbox1WithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInbox1WithHttpInfoAsync(Guid, int, CancellationToken) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Get the newest email in all inboxes or in a passed set of inbox IDs Declaration public Task<ApiResponse<Email>> GetLatestEmailInInbox1WithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailWithHttpInfo(List<Guid>, int) Get latest email in all inboxes. Most recently received. Get the newest email in all inboxes or in a passed set of inbox IDs Declaration public ApiResponse<Email> GetLatestEmailWithHttpInfo(List<Guid> inboxIds = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxIds Optional set of inboxes to filter by. Only get the latest email from these inbox IDs. If not provided will search across all inboxes (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailWithHttpInfoAsync(List<Guid>, int, CancellationToken) Get latest email in all inboxes. Most recently received. Get the newest email in all inboxes or in a passed set of inbox IDs Declaration public Task<ApiResponse<Email>> GetLatestEmailWithHttpInfoAsync(List<Guid> inboxIds = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxIds Optional set of inboxes to filter by. Only get the latest email from these inbox IDs. If not provided will search across all inboxes (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationEmailsPaginated(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) Get all organization emails. List team or shared test email accounts By default returns all emails across all team inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Declaration public PageEmailProjection GetOrganizationEmailsPaginated(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter search filter for emails. (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageEmailProjection PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationEmailsPaginatedAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) Get all organization emails. List team or shared test email accounts By default returns all emails across all team inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Declaration public Task<PageEmailProjection> GetOrganizationEmailsPaginatedAsync(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter search filter for emails. (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailProjection> Task of PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationEmailsPaginatedWithHttpInfo(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) Get all organization emails. List team or shared test email accounts By default returns all emails across all team inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Declaration public ApiResponse<PageEmailProjection> GetOrganizationEmailsPaginatedWithHttpInfo(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter search filter for emails. (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailProjection> ApiResponse of PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationEmailsPaginatedWithHttpInfoAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) Get all organization emails. List team or shared test email accounts By default returns all emails across all team inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Declaration public Task<ApiResponse<PageEmailProjection>> GetOrganizationEmailsPaginatedWithHttpInfoAsync(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter search filter for emails. (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailProjection>> Task of ApiResponse (PageEmailProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailContents(Guid, int) Get raw email string. Returns unparsed raw SMTP message with headers and body. Returns a raw, unparsed, and unprocessed email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawEmailJson endpoint Declaration public void GetRawEmailContents(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailContentsAsync(Guid, int, CancellationToken) Get raw email string. Returns unparsed raw SMTP message with headers and body. Returns a raw, unparsed, and unprocessed email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawEmailJson endpoint Declaration public Task GetRawEmailContentsAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailContentsWithHttpInfo(Guid, int) Get raw email string. Returns unparsed raw SMTP message with headers and body. Returns a raw, unparsed, and unprocessed email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawEmailJson endpoint Declaration public ApiResponse<object> GetRawEmailContentsWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailContentsWithHttpInfoAsync(Guid, int, CancellationToken) Get raw email string. Returns unparsed raw SMTP message with headers and body. Returns a raw, unparsed, and unprocessed email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawEmailJson endpoint Declaration public Task<ApiResponse<object>> GetRawEmailContentsWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailJson(Guid, int) Get raw email in JSON. Unparsed SMTP message in JSON wrapper format. Returns a raw, unparsed, and unprocessed email wrapped in a JSON response object for easier handling when compared with the getRawEmail text/plain response Declaration public RawEmailJson GetRawEmailJson(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description RawEmailJson RawEmailJson Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailJsonAsync(Guid, int, CancellationToken) Get raw email in JSON. Unparsed SMTP message in JSON wrapper format. Returns a raw, unparsed, and unprocessed email wrapped in a JSON response object for easier handling when compared with the getRawEmail text/plain response Declaration public Task<RawEmailJson> GetRawEmailJsonAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<RawEmailJson> Task of RawEmailJson Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailJsonWithHttpInfo(Guid, int) Get raw email in JSON. Unparsed SMTP message in JSON wrapper format. Returns a raw, unparsed, and unprocessed email wrapped in a JSON response object for easier handling when compared with the getRawEmail text/plain response Declaration public ApiResponse<RawEmailJson> GetRawEmailJsonWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<RawEmailJson> ApiResponse of RawEmailJson Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailJsonWithHttpInfoAsync(Guid, int, CancellationToken) Get raw email in JSON. Unparsed SMTP message in JSON wrapper format. Returns a raw, unparsed, and unprocessed email wrapped in a JSON response object for easier handling when compared with the getRawEmail text/plain response Declaration public Task<ApiResponse<RawEmailJson>> GetRawEmailJsonWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<RawEmailJson>> Task of ApiResponse (RawEmailJson) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadEmailCount(int) Get unread email count Get number of emails unread. Unread means has not been viewed in dashboard or returned in an email API response Declaration public UnreadCount GetUnreadEmailCount(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description UnreadCount UnreadCount Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadEmailCountAsync(int, CancellationToken) Get unread email count Get number of emails unread. Unread means has not been viewed in dashboard or returned in an email API response Declaration public Task<UnreadCount> GetUnreadEmailCountAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<UnreadCount> Task of UnreadCount Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadEmailCountWithHttpInfo(int) Get unread email count Get number of emails unread. Unread means has not been viewed in dashboard or returned in an email API response Declaration public ApiResponse<UnreadCount> GetUnreadEmailCountWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<UnreadCount> ApiResponse of UnreadCount Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadEmailCountWithHttpInfoAsync(int, CancellationToken) Get unread email count Get number of emails unread. Unread means has not been viewed in dashboard or returned in an email API response Declaration public Task<ApiResponse<UnreadCount>> GetUnreadEmailCountWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<UnreadCount>> Task of ApiResponse (UnreadCount) Exceptions Type Condition ApiException Thrown when fails to make API call View Source MarkAsRead(Guid, bool?, int) Mark an email as read on unread Marks an email as read or unread. Pass boolean read flag to set value. This is useful if you want to read an email but keep it as unread Declaration public EmailPreview MarkAsRead(Guid emailId, bool? read = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? read What value to assign to email read property. Default true. (optional, default to true) int operationIndex Index associated with the operation. Returns Type Description EmailPreview EmailPreview Exceptions Type Condition ApiException Thrown when fails to make API call View Source MarkAsReadAsync(Guid, bool?, int, CancellationToken) Mark an email as read on unread Marks an email as read or unread. Pass boolean read flag to set value. This is useful if you want to read an email but keep it as unread Declaration public Task<EmailPreview> MarkAsReadAsync(Guid emailId, bool? read = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? read What value to assign to email read property. Default true. (optional, default to true) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailPreview> Task of EmailPreview Exceptions Type Condition ApiException Thrown when fails to make API call View Source MarkAsReadWithHttpInfo(Guid, bool?, int) Mark an email as read on unread Marks an email as read or unread. Pass boolean read flag to set value. This is useful if you want to read an email but keep it as unread Declaration public ApiResponse<EmailPreview> MarkAsReadWithHttpInfo(Guid emailId, bool? read = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? read What value to assign to email read property. Default true. (optional, default to true) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailPreview> ApiResponse of EmailPreview Exceptions Type Condition ApiException Thrown when fails to make API call View Source MarkAsReadWithHttpInfoAsync(Guid, bool?, int, CancellationToken) Mark an email as read on unread Marks an email as read or unread. Pass boolean read flag to set value. This is useful if you want to read an email but keep it as unread Declaration public Task<ApiResponse<EmailPreview>> MarkAsReadWithHttpInfoAsync(Guid emailId, bool? read = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? read What value to assign to email read property. Default true. (optional, default to true) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailPreview>> Task of ApiResponse (EmailPreview) Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToEmail(Guid, ReplyToEmailOptions, int) Reply to an email Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Declaration public SentEmailDto ReplyToEmail(Guid emailId, ReplyToEmailOptions replyToEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of the email that should be replied to ReplyToEmailOptions replyToEmailOptions int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToEmailAsync(Guid, ReplyToEmailOptions, int, CancellationToken) Reply to an email Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Declaration public Task<SentEmailDto> ReplyToEmailAsync(Guid emailId, ReplyToEmailOptions replyToEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of the email that should be replied to ReplyToEmailOptions replyToEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToEmailWithHttpInfo(Guid, ReplyToEmailOptions, int) Reply to an email Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Declaration public ApiResponse<SentEmailDto> ReplyToEmailWithHttpInfo(Guid emailId, ReplyToEmailOptions replyToEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of the email that should be replied to ReplyToEmailOptions replyToEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToEmailWithHttpInfoAsync(Guid, ReplyToEmailOptions, int, CancellationToken) Reply to an email Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Declaration public Task<ApiResponse<SentEmailDto>> ReplyToEmailWithHttpInfoAsync(Guid emailId, ReplyToEmailOptions replyToEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of the email that should be replied to ReplyToEmailOptions replyToEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchEmails(SearchEmailsOptions, int) Get all emails by search criteria. Return in paginated form. Search emails by given criteria return matches in paginated format. Searches against email recipients, sender, subject, email address and ID. Does not search email body Declaration public PageEmailProjection SearchEmails(SearchEmailsOptions searchEmailsOptions, int operationIndex = 0) Parameters Type Name Description SearchEmailsOptions searchEmailsOptions int operationIndex Index associated with the operation. Returns Type Description PageEmailProjection PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchEmailsAsync(SearchEmailsOptions, int, CancellationToken) Get all emails by search criteria. Return in paginated form. Search emails by given criteria return matches in paginated format. Searches against email recipients, sender, subject, email address and ID. Does not search email body Declaration public Task<PageEmailProjection> SearchEmailsAsync(SearchEmailsOptions searchEmailsOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SearchEmailsOptions searchEmailsOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailProjection> Task of PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchEmailsWithHttpInfo(SearchEmailsOptions, int) Get all emails by search criteria. Return in paginated form. Search emails by given criteria return matches in paginated format. Searches against email recipients, sender, subject, email address and ID. Does not search email body Declaration public ApiResponse<PageEmailProjection> SearchEmailsWithHttpInfo(SearchEmailsOptions searchEmailsOptions, int operationIndex = 0) Parameters Type Name Description SearchEmailsOptions searchEmailsOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailProjection> ApiResponse of PageEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchEmailsWithHttpInfoAsync(SearchEmailsOptions, int, CancellationToken) Get all emails by search criteria. Return in paginated form. Search emails by given criteria return matches in paginated format. Searches against email recipients, sender, subject, email address and ID. Does not search email body Declaration public Task<ApiResponse<PageEmailProjection>> SearchEmailsWithHttpInfoAsync(SearchEmailsOptions searchEmailsOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SearchEmailsOptions searchEmailsOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailProjection>> Task of ApiResponse (PageEmailProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSourceOptional(SendEmailOptions, Guid?, bool?, bool?, int) Send email Alias for InboxController.sendEmail method - see original method for full details. Sends an email from a given inbox that you have created. If no inbox is supplied a random inbox will be created for you and used to send the email. Declaration public void SendEmailSourceOptional(SendEmailOptions sendEmailOptions, Guid? inboxId = null, bool? useDomainPool = null, bool? virtualSend = null, int operationIndex = 0) Parameters Type Name Description SendEmailOptions sendEmailOptions Guid? inboxId ID of the inbox you want to send the email from (optional) bool? useDomainPool Use domain pool. Optionally create inbox to send from using the mailslurp domain pool. (optional) bool? virtualSend Optionally create inbox to send from that is a virtual inbox and won't send to external addresses (optional) int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSourceOptionalAsync(SendEmailOptions, Guid?, bool?, bool?, int, CancellationToken) Send email Alias for InboxController.sendEmail method - see original method for full details. Sends an email from a given inbox that you have created. If no inbox is supplied a random inbox will be created for you and used to send the email. Declaration public Task SendEmailSourceOptionalAsync(SendEmailOptions sendEmailOptions, Guid? inboxId = null, bool? useDomainPool = null, bool? virtualSend = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SendEmailOptions sendEmailOptions Guid? inboxId ID of the inbox you want to send the email from (optional) bool? useDomainPool Use domain pool. Optionally create inbox to send from using the mailslurp domain pool. (optional) bool? virtualSend Optionally create inbox to send from that is a virtual inbox and won't send to external addresses (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSourceOptionalWithHttpInfo(SendEmailOptions, Guid?, bool?, bool?, int) Send email Alias for InboxController.sendEmail method - see original method for full details. Sends an email from a given inbox that you have created. If no inbox is supplied a random inbox will be created for you and used to send the email. Declaration public ApiResponse<object> SendEmailSourceOptionalWithHttpInfo(SendEmailOptions sendEmailOptions, Guid? inboxId = null, bool? useDomainPool = null, bool? virtualSend = null, int operationIndex = 0) Parameters Type Name Description SendEmailOptions sendEmailOptions Guid? inboxId ID of the inbox you want to send the email from (optional) bool? useDomainPool Use domain pool. Optionally create inbox to send from using the mailslurp domain pool. (optional) bool? virtualSend Optionally create inbox to send from that is a virtual inbox and won't send to external addresses (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSourceOptionalWithHttpInfoAsync(SendEmailOptions, Guid?, bool?, bool?, int, CancellationToken) Send email Alias for InboxController.sendEmail method - see original method for full details. Sends an email from a given inbox that you have created. If no inbox is supplied a random inbox will be created for you and used to send the email. Declaration public Task<ApiResponse<object>> SendEmailSourceOptionalWithHttpInfoAsync(SendEmailOptions sendEmailOptions, Guid? inboxId = null, bool? useDomainPool = null, bool? virtualSend = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SendEmailOptions sendEmailOptions Guid? inboxId ID of the inbox you want to send the email from (optional) bool? useDomainPool Use domain pool. Optionally create inbox to send from using the mailslurp domain pool. (optional) bool? virtualSend Optionally create inbox to send from that is a virtual inbox and won't send to external addresses (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmail(Guid, int) Validate email HTML contents Validate the HTML content of email if HTML is found. Considered valid if no HTML is present. Declaration public ValidationDto ValidateEmail(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ValidationDto ValidationDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailAsync(Guid, int, CancellationToken) Validate email HTML contents Validate the HTML content of email if HTML is found. Considered valid if no HTML is present. Declaration public Task<ValidationDto> ValidateEmailAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ValidationDto> Task of ValidationDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailWithHttpInfo(Guid, int) Validate email HTML contents Validate the HTML content of email if HTML is found. Considered valid if no HTML is present. Declaration public ApiResponse<ValidationDto> ValidateEmailWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ValidationDto> ApiResponse of ValidationDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailWithHttpInfoAsync(Guid, int, CancellationToken) Validate email HTML contents Validate the HTML content of email if HTML is found. Considered valid if no HTML is present. Declaration public Task<ApiResponse<ValidationDto>> ValidateEmailWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ValidationDto>> Task of ApiResponse (ValidationDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IEmailControllerApi IEmailControllerApiSync IEmailControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.EmailVerificationControllerApi.html": {
    "href": "api/mailslurp.Api.EmailVerificationControllerApi.html",
    "title": "Class EmailVerificationControllerApi | MailSlurp",
    "keywords": "Class EmailVerificationControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object EmailVerificationControllerApi Implements IEmailVerificationControllerApi IEmailVerificationControllerApiSync IEmailVerificationControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class EmailVerificationControllerApi : IEmailVerificationControllerApi, IEmailVerificationControllerApiSync, IEmailVerificationControllerApiAsync, IApiAccessor Constructors View Source EmailVerificationControllerApi() Initializes a new instance of the EmailVerificationControllerApi class. Declaration public EmailVerificationControllerApi() View Source EmailVerificationControllerApi(Configuration) Initializes a new instance of the EmailVerificationControllerApi class using Configuration object Declaration public EmailVerificationControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source EmailVerificationControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the EmailVerificationControllerApi class using a Configuration object and client instance. Declaration public EmailVerificationControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source EmailVerificationControllerApi(string) Initializes a new instance of the EmailVerificationControllerApi class. Declaration public EmailVerificationControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source DeleteAllValidationRequests(int) Delete all validation requests Declaration public void DeleteAllValidationRequests(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllValidationRequestsAsync(int, CancellationToken) Delete all validation requests Declaration public Task DeleteAllValidationRequestsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllValidationRequestsWithHttpInfo(int) Delete all validation requests Declaration public ApiResponse<object> DeleteAllValidationRequestsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllValidationRequestsWithHttpInfoAsync(int, CancellationToken) Delete all validation requests Declaration public Task<ApiResponse<object>> DeleteAllValidationRequestsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteValidationRequest(Guid, int) Delete a validation record Declaration public void DeleteValidationRequest(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteValidationRequestAsync(Guid, int, CancellationToken) Delete a validation record Declaration public Task DeleteValidationRequestAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteValidationRequestWithHttpInfo(Guid, int) Delete a validation record Declaration public ApiResponse<object> DeleteValidationRequestWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteValidationRequestWithHttpInfoAsync(Guid, int, CancellationToken) Delete a validation record Declaration public Task<ApiResponse<object>> DeleteValidationRequestWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetValidationRequests(int?, int?, string, string, DateTime?, DateTime?, bool?, int) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration public PageEmailValidationRequest GetValidationRequests(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? isValid = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? isValid Filter where email is valid is true or false (optional) int operationIndex Index associated with the operation. Returns Type Description PageEmailValidationRequest PageEmailValidationRequest Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetValidationRequestsAsync(int?, int?, string, string, DateTime?, DateTime?, bool?, int, CancellationToken) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration public Task<PageEmailValidationRequest> GetValidationRequestsAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? isValid = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? isValid Filter where email is valid is true or false (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailValidationRequest> Task of PageEmailValidationRequest Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetValidationRequestsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, bool?, int) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration public ApiResponse<PageEmailValidationRequest> GetValidationRequestsWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? isValid = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? isValid Filter where email is valid is true or false (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailValidationRequest> ApiResponse of PageEmailValidationRequest Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetValidationRequestsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, bool?, int, CancellationToken) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration public Task<ApiResponse<PageEmailValidationRequest>> GetValidationRequestsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? isValid = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? isValid Filter where email is valid is true or false (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailValidationRequest>> Task of ApiResponse (PageEmailValidationRequest) Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailAddressList(ValidateEmailAddressListOptions, int) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration public ValidateEmailAddressListResult ValidateEmailAddressList(ValidateEmailAddressListOptions validateEmailAddressListOptions, int operationIndex = 0) Parameters Type Name Description ValidateEmailAddressListOptions validateEmailAddressListOptions int operationIndex Index associated with the operation. Returns Type Description ValidateEmailAddressListResult ValidateEmailAddressListResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailAddressListAsync(ValidateEmailAddressListOptions, int, CancellationToken) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration public Task<ValidateEmailAddressListResult> ValidateEmailAddressListAsync(ValidateEmailAddressListOptions validateEmailAddressListOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description ValidateEmailAddressListOptions validateEmailAddressListOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ValidateEmailAddressListResult> Task of ValidateEmailAddressListResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailAddressListWithHttpInfo(ValidateEmailAddressListOptions, int) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration public ApiResponse<ValidateEmailAddressListResult> ValidateEmailAddressListWithHttpInfo(ValidateEmailAddressListOptions validateEmailAddressListOptions, int operationIndex = 0) Parameters Type Name Description ValidateEmailAddressListOptions validateEmailAddressListOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ValidateEmailAddressListResult> ApiResponse of ValidateEmailAddressListResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailAddressListWithHttpInfoAsync(ValidateEmailAddressListOptions, int, CancellationToken) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration public Task<ApiResponse<ValidateEmailAddressListResult>> ValidateEmailAddressListWithHttpInfoAsync(ValidateEmailAddressListOptions validateEmailAddressListOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description ValidateEmailAddressListOptions validateEmailAddressListOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ValidateEmailAddressListResult>> Task of ApiResponse (ValidateEmailAddressListResult) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IEmailVerificationControllerApi IEmailVerificationControllerApiSync IEmailVerificationControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.ExpiredControllerApi.html": {
    "href": "api/mailslurp.Api.ExpiredControllerApi.html",
    "title": "Class ExpiredControllerApi | MailSlurp",
    "keywords": "Class ExpiredControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object ExpiredControllerApi Implements IExpiredControllerApi IExpiredControllerApiSync IExpiredControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class ExpiredControllerApi : IExpiredControllerApi, IExpiredControllerApiSync, IExpiredControllerApiAsync, IApiAccessor Constructors View Source ExpiredControllerApi() Initializes a new instance of the ExpiredControllerApi class. Declaration public ExpiredControllerApi() View Source ExpiredControllerApi(Configuration) Initializes a new instance of the ExpiredControllerApi class using Configuration object Declaration public ExpiredControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source ExpiredControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the ExpiredControllerApi class using a Configuration object and client instance. Declaration public ExpiredControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source ExpiredControllerApi(string) Initializes a new instance of the ExpiredControllerApi class. Declaration public ExpiredControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetExpirationDefaults(int) Get default expiration settings Return default times used for inbox expiration Declaration public ExpirationDefaults GetExpirationDefaults(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ExpirationDefaults ExpirationDefaults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpirationDefaultsAsync(int, CancellationToken) Get default expiration settings Return default times used for inbox expiration Declaration public Task<ExpirationDefaults> GetExpirationDefaultsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ExpirationDefaults> Task of ExpirationDefaults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpirationDefaultsWithHttpInfo(int) Get default expiration settings Return default times used for inbox expiration Declaration public ApiResponse<ExpirationDefaults> GetExpirationDefaultsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ExpirationDefaults> ApiResponse of ExpirationDefaults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpirationDefaultsWithHttpInfoAsync(int, CancellationToken) Get default expiration settings Return default times used for inbox expiration Declaration public Task<ApiResponse<ExpirationDefaults>> GetExpirationDefaultsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ExpirationDefaults>> Task of ApiResponse (ExpirationDefaults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxByInboxId(Guid, int) Get expired inbox record for a previously existing inbox Use the inboxId to return an ExpiredInboxRecord if an inbox has expired. Inboxes expire and are disabled if an expiration date is set or plan requires. Returns 404 if no expired inbox is found for the inboxId Declaration public ExpiredInboxDto GetExpiredInboxByInboxId(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox you want to retrieve (not the inbox ID) int operationIndex Index associated with the operation. Returns Type Description ExpiredInboxDto ExpiredInboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxByInboxIdAsync(Guid, int, CancellationToken) Get expired inbox record for a previously existing inbox Use the inboxId to return an ExpiredInboxRecord if an inbox has expired. Inboxes expire and are disabled if an expiration date is set or plan requires. Returns 404 if no expired inbox is found for the inboxId Declaration public Task<ExpiredInboxDto> GetExpiredInboxByInboxIdAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox you want to retrieve (not the inbox ID) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ExpiredInboxDto> Task of ExpiredInboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxByInboxIdWithHttpInfo(Guid, int) Get expired inbox record for a previously existing inbox Use the inboxId to return an ExpiredInboxRecord if an inbox has expired. Inboxes expire and are disabled if an expiration date is set or plan requires. Returns 404 if no expired inbox is found for the inboxId Declaration public ApiResponse<ExpiredInboxDto> GetExpiredInboxByInboxIdWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox you want to retrieve (not the inbox ID) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ExpiredInboxDto> ApiResponse of ExpiredInboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxByInboxIdWithHttpInfoAsync(Guid, int, CancellationToken) Get expired inbox record for a previously existing inbox Use the inboxId to return an ExpiredInboxRecord if an inbox has expired. Inboxes expire and are disabled if an expiration date is set or plan requires. Returns 404 if no expired inbox is found for the inboxId Declaration public Task<ApiResponse<ExpiredInboxDto>> GetExpiredInboxByInboxIdWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox you want to retrieve (not the inbox ID) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ExpiredInboxDto>> Task of ApiResponse (ExpiredInboxDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxes(int?, int?, string, DateTime?, DateTime?, int) List records of expired inboxes Inboxes created with an expiration date will expire after the given date. An ExpiredInboxRecord is created that records the inboxes old ID and email address. You can still read emails in the inbox (using the inboxes old ID) but the email address associated with the inbox can no longer send or receive emails. Fetch expired inbox records to view the old inboxes properties Declaration public PageExpiredInboxRecordProjection GetExpiredInboxes(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageExpiredInboxRecordProjection PageExpiredInboxRecordProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxesAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) List records of expired inboxes Inboxes created with an expiration date will expire after the given date. An ExpiredInboxRecord is created that records the inboxes old ID and email address. You can still read emails in the inbox (using the inboxes old ID) but the email address associated with the inbox can no longer send or receive emails. Fetch expired inbox records to view the old inboxes properties Declaration public Task<PageExpiredInboxRecordProjection> GetExpiredInboxesAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageExpiredInboxRecordProjection> Task of PageExpiredInboxRecordProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxesWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) List records of expired inboxes Inboxes created with an expiration date will expire after the given date. An ExpiredInboxRecord is created that records the inboxes old ID and email address. You can still read emails in the inbox (using the inboxes old ID) but the email address associated with the inbox can no longer send or receive emails. Fetch expired inbox records to view the old inboxes properties Declaration public ApiResponse<PageExpiredInboxRecordProjection> GetExpiredInboxesWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageExpiredInboxRecordProjection> ApiResponse of PageExpiredInboxRecordProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxesWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) List records of expired inboxes Inboxes created with an expiration date will expire after the given date. An ExpiredInboxRecord is created that records the inboxes old ID and email address. You can still read emails in the inbox (using the inboxes old ID) but the email address associated with the inbox can no longer send or receive emails. Fetch expired inbox records to view the old inboxes properties Declaration public Task<ApiResponse<PageExpiredInboxRecordProjection>> GetExpiredInboxesWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageExpiredInboxRecordProjection>> Task of ApiResponse (PageExpiredInboxRecordProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxRecord(Guid, int) Get an expired inbox record Inboxes created with an expiration date will expire after the given date and be moved to an ExpiredInbox entity. You can still read emails in the inbox but it can no longer send or receive emails. Fetch the expired inboxes to view the old inboxes properties Declaration public ExpiredInboxDto GetExpiredInboxRecord(Guid expiredId, int operationIndex = 0) Parameters Type Name Description Guid expiredId ID of the ExpiredInboxRecord you want to retrieve. This is different from the ID of the inbox you are interested in. See other methods for getting ExpiredInboxRecord for an inbox inboxId int operationIndex Index associated with the operation. Returns Type Description ExpiredInboxDto ExpiredInboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxRecordAsync(Guid, int, CancellationToken) Get an expired inbox record Inboxes created with an expiration date will expire after the given date and be moved to an ExpiredInbox entity. You can still read emails in the inbox but it can no longer send or receive emails. Fetch the expired inboxes to view the old inboxes properties Declaration public Task<ExpiredInboxDto> GetExpiredInboxRecordAsync(Guid expiredId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid expiredId ID of the ExpiredInboxRecord you want to retrieve. This is different from the ID of the inbox you are interested in. See other methods for getting ExpiredInboxRecord for an inbox inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ExpiredInboxDto> Task of ExpiredInboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxRecordWithHttpInfo(Guid, int) Get an expired inbox record Inboxes created with an expiration date will expire after the given date and be moved to an ExpiredInbox entity. You can still read emails in the inbox but it can no longer send or receive emails. Fetch the expired inboxes to view the old inboxes properties Declaration public ApiResponse<ExpiredInboxDto> GetExpiredInboxRecordWithHttpInfo(Guid expiredId, int operationIndex = 0) Parameters Type Name Description Guid expiredId ID of the ExpiredInboxRecord you want to retrieve. This is different from the ID of the inbox you are interested in. See other methods for getting ExpiredInboxRecord for an inbox inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ExpiredInboxDto> ApiResponse of ExpiredInboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxRecordWithHttpInfoAsync(Guid, int, CancellationToken) Get an expired inbox record Inboxes created with an expiration date will expire after the given date and be moved to an ExpiredInbox entity. You can still read emails in the inbox but it can no longer send or receive emails. Fetch the expired inboxes to view the old inboxes properties Declaration public Task<ApiResponse<ExpiredInboxDto>> GetExpiredInboxRecordWithHttpInfoAsync(Guid expiredId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid expiredId ID of the ExpiredInboxRecord you want to retrieve. This is different from the ID of the inbox you are interested in. See other methods for getting ExpiredInboxRecord for an inbox inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ExpiredInboxDto>> Task of ApiResponse (ExpiredInboxDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IExpiredControllerApi IExpiredControllerApiSync IExpiredControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.ExportControllerApi.html": {
    "href": "api/mailslurp.Api.ExportControllerApi.html",
    "title": "Class ExportControllerApi | MailSlurp",
    "keywords": "Class ExportControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object ExportControllerApi Implements IExportControllerApi IExportControllerApiSync IExportControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class ExportControllerApi : IExportControllerApi, IExportControllerApiSync, IExportControllerApiAsync, IApiAccessor Constructors View Source ExportControllerApi() Initializes a new instance of the ExportControllerApi class. Declaration public ExportControllerApi() View Source ExportControllerApi(Configuration) Initializes a new instance of the ExportControllerApi class using Configuration object Declaration public ExportControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source ExportControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the ExportControllerApi class using a Configuration object and client instance. Declaration public ExportControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source ExportControllerApi(string) Initializes a new instance of the ExportControllerApi class. Declaration public ExportControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source ExportEntities(string, string, string, string, string, bool?, DateTime?, DateTime?, int) Export inboxes link callable via browser Declaration public byte[] ExportEntities(string exportType, string apiKey, string outputFormat, string filter = null, string listSeparatorToken = null, bool? excludePreviouslyExported = null, DateTime? createdEarliestTime = null, DateTime? createdOldestTime = null, int operationIndex = 0) Parameters Type Name Description string exportType string apiKey string outputFormat string filter (optional) string listSeparatorToken (optional) bool? excludePreviouslyExported (optional) DateTime? createdEarliestTime (optional) DateTime? createdOldestTime (optional) int operationIndex Index associated with the operation. Returns Type Description byte[] byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source ExportEntitiesAsync(string, string, string, string, string, bool?, DateTime?, DateTime?, int, CancellationToken) Export inboxes link callable via browser Declaration public Task<byte[]> ExportEntitiesAsync(string exportType, string apiKey, string outputFormat, string filter = null, string listSeparatorToken = null, bool? excludePreviouslyExported = null, DateTime? createdEarliestTime = null, DateTime? createdOldestTime = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string exportType string apiKey string outputFormat string filter (optional) string listSeparatorToken (optional) bool? excludePreviouslyExported (optional) DateTime? createdEarliestTime (optional) DateTime? createdOldestTime (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<byte[]> Task of byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source ExportEntitiesWithHttpInfo(string, string, string, string, string, bool?, DateTime?, DateTime?, int) Export inboxes link callable via browser Declaration public ApiResponse<byte[]> ExportEntitiesWithHttpInfo(string exportType, string apiKey, string outputFormat, string filter = null, string listSeparatorToken = null, bool? excludePreviouslyExported = null, DateTime? createdEarliestTime = null, DateTime? createdOldestTime = null, int operationIndex = 0) Parameters Type Name Description string exportType string apiKey string outputFormat string filter (optional) string listSeparatorToken (optional) bool? excludePreviouslyExported (optional) DateTime? createdEarliestTime (optional) DateTime? createdOldestTime (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<byte[]> ApiResponse of byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source ExportEntitiesWithHttpInfoAsync(string, string, string, string, string, bool?, DateTime?, DateTime?, int, CancellationToken) Export inboxes link callable via browser Declaration public Task<ApiResponse<byte[]>> ExportEntitiesWithHttpInfoAsync(string exportType, string apiKey, string outputFormat, string filter = null, string listSeparatorToken = null, bool? excludePreviouslyExported = null, DateTime? createdEarliestTime = null, DateTime? createdOldestTime = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string exportType string apiKey string outputFormat string filter (optional) string listSeparatorToken (optional) bool? excludePreviouslyExported (optional) DateTime? createdEarliestTime (optional) DateTime? createdOldestTime (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<byte[]>> Task of ApiResponse (byte[]) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetExportLink(string, ExportOptions, string, int) Get export link Declaration public ExportLink GetExportLink(string exportType, ExportOptions exportOptions, string apiKey = null, int operationIndex = 0) Parameters Type Name Description string exportType ExportOptions exportOptions string apiKey (optional) int operationIndex Index associated with the operation. Returns Type Description ExportLink ExportLink Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExportLinkAsync(string, ExportOptions, string, int, CancellationToken) Get export link Declaration public Task<ExportLink> GetExportLinkAsync(string exportType, ExportOptions exportOptions, string apiKey = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string exportType ExportOptions exportOptions string apiKey (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ExportLink> Task of ExportLink Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExportLinkWithHttpInfo(string, ExportOptions, string, int) Get export link Declaration public ApiResponse<ExportLink> GetExportLinkWithHttpInfo(string exportType, ExportOptions exportOptions, string apiKey = null, int operationIndex = 0) Parameters Type Name Description string exportType ExportOptions exportOptions string apiKey (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ExportLink> ApiResponse of ExportLink Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExportLinkWithHttpInfoAsync(string, ExportOptions, string, int, CancellationToken) Get export link Declaration public Task<ApiResponse<ExportLink>> GetExportLinkWithHttpInfoAsync(string exportType, ExportOptions exportOptions, string apiKey = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string exportType ExportOptions exportOptions string apiKey (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ExportLink>> Task of ApiResponse (ExportLink) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IExportControllerApi IExportControllerApiSync IExportControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.FormControllerApi.html": {
    "href": "api/mailslurp.Api.FormControllerApi.html",
    "title": "Class FormControllerApi | MailSlurp",
    "keywords": "Class FormControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object FormControllerApi Implements IFormControllerApi IFormControllerApiSync IFormControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class FormControllerApi : IFormControllerApi, IFormControllerApiSync, IFormControllerApiAsync, IApiAccessor Constructors View Source FormControllerApi() Initializes a new instance of the FormControllerApi class. Declaration public FormControllerApi() View Source FormControllerApi(Configuration) Initializes a new instance of the FormControllerApi class using Configuration object Declaration public FormControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source FormControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the FormControllerApi class using a Configuration object and client instance. Declaration public FormControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source FormControllerApi(string) Initializes a new instance of the FormControllerApi class. Declaration public FormControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source SubmitForm(string, string, string, string, string, string, string, int) Submit a form to be parsed and sent as an email to an address determined by the form fields This endpoint allows you to submit HTML forms and receive the field values and files via email. #### Parameters The endpoint looks for special meta parameters in the form fields OR in the URL request parameters. The meta parameters can be used to specify the behaviour of the email. You must provide at-least a _to email address to tell the endpoint where the form should be emailed. These can be submitted as hidden HTML input fields with the corresponding name attributes or as URL query parameters such as ?_to=test@example.com The endpoint takes all other form fields that are named and includes them in the message body of the email. Files are sent as attachments. #### Submitting This endpoint accepts form submission via POST method. It accepts application/x-www-form-urlencoded, and multipart/form-data content-types. #### HTML Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms\\&quot; method=\\&quot;post\\&quot; > &lt;input name=\\&quot;_to\\&quot; type=\\&quot;hidden\\&quot; value=\\&quot;test@example.com\\&quot;/> &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> #### URL Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms?_to=test@example.com\\&quot; method=\\&quot;post\\&quot; > &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> The email address is specified by a _to field OR is extracted from an email alias specified by a _toAlias field (see the alias controller for more information). Endpoint accepts . You can specify a content type in HTML forms using the enctype attribute, for instance: &lt;form enctype=\\&quot;multipart/form-data\\&quot;>. Declaration public string SubmitForm(string to = null, string subject = null, string redirectTo = null, string emailAddress = null, string successMessage = null, string spamCheck = null, string otherParameters = null, int operationIndex = 0) Parameters Type Name Description string to The email address that submitted form should be sent to. (optional) string subject Optional subject of the email that will be sent. (optional) string redirectTo Optional URL to redirect form submitter to after submission. If not present user will see a success message. (optional) string emailAddress Email address of the submitting user. Include this if you wish to record the submitters email address and reply to it later. (optional) string successMessage Optional success message to display if no _redirectTo present. (optional) string spamCheck Optional but recommended field that catches spammers out. Include as a hidden form field but LEAVE EMPTY. Spam-bots will usually fill every field. If the _spamCheck field is filled the form submission will be ignored. (optional) string otherParameters All other parameters or fields will be accepted and attached to the sent email. This includes files and any HTML form field with a name. These fields will become the body of the email that is sent. (optional) int operationIndex Index associated with the operation. Returns Type Description string string Exceptions Type Condition ApiException Thrown when fails to make API call View Source SubmitFormAsync(string, string, string, string, string, string, string, int, CancellationToken) Submit a form to be parsed and sent as an email to an address determined by the form fields This endpoint allows you to submit HTML forms and receive the field values and files via email. #### Parameters The endpoint looks for special meta parameters in the form fields OR in the URL request parameters. The meta parameters can be used to specify the behaviour of the email. You must provide at-least a _to email address to tell the endpoint where the form should be emailed. These can be submitted as hidden HTML input fields with the corresponding name attributes or as URL query parameters such as ?_to=test@example.com The endpoint takes all other form fields that are named and includes them in the message body of the email. Files are sent as attachments. #### Submitting This endpoint accepts form submission via POST method. It accepts application/x-www-form-urlencoded, and multipart/form-data content-types. #### HTML Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms\\&quot; method=\\&quot;post\\&quot; > &lt;input name=\\&quot;_to\\&quot; type=\\&quot;hidden\\&quot; value=\\&quot;test@example.com\\&quot;/> &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> #### URL Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms?_to=test@example.com\\&quot; method=\\&quot;post\\&quot; > &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> The email address is specified by a _to field OR is extracted from an email alias specified by a _toAlias field (see the alias controller for more information). Endpoint accepts . You can specify a content type in HTML forms using the enctype attribute, for instance: &lt;form enctype=\\&quot;multipart/form-data\\&quot;>. Declaration public Task<string> SubmitFormAsync(string to = null, string subject = null, string redirectTo = null, string emailAddress = null, string successMessage = null, string spamCheck = null, string otherParameters = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string to The email address that submitted form should be sent to. (optional) string subject Optional subject of the email that will be sent. (optional) string redirectTo Optional URL to redirect form submitter to after submission. If not present user will see a success message. (optional) string emailAddress Email address of the submitting user. Include this if you wish to record the submitters email address and reply to it later. (optional) string successMessage Optional success message to display if no _redirectTo present. (optional) string spamCheck Optional but recommended field that catches spammers out. Include as a hidden form field but LEAVE EMPTY. Spam-bots will usually fill every field. If the _spamCheck field is filled the form submission will be ignored. (optional) string otherParameters All other parameters or fields will be accepted and attached to the sent email. This includes files and any HTML form field with a name. These fields will become the body of the email that is sent. (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<string> Task of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source SubmitFormWithHttpInfo(string, string, string, string, string, string, string, int) Submit a form to be parsed and sent as an email to an address determined by the form fields This endpoint allows you to submit HTML forms and receive the field values and files via email. #### Parameters The endpoint looks for special meta parameters in the form fields OR in the URL request parameters. The meta parameters can be used to specify the behaviour of the email. You must provide at-least a _to email address to tell the endpoint where the form should be emailed. These can be submitted as hidden HTML input fields with the corresponding name attributes or as URL query parameters such as ?_to=test@example.com The endpoint takes all other form fields that are named and includes them in the message body of the email. Files are sent as attachments. #### Submitting This endpoint accepts form submission via POST method. It accepts application/x-www-form-urlencoded, and multipart/form-data content-types. #### HTML Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms\\&quot; method=\\&quot;post\\&quot; > &lt;input name=\\&quot;_to\\&quot; type=\\&quot;hidden\\&quot; value=\\&quot;test@example.com\\&quot;/> &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> #### URL Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms?_to=test@example.com\\&quot; method=\\&quot;post\\&quot; > &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> The email address is specified by a _to field OR is extracted from an email alias specified by a _toAlias field (see the alias controller for more information). Endpoint accepts . You can specify a content type in HTML forms using the enctype attribute, for instance: &lt;form enctype=\\&quot;multipart/form-data\\&quot;>. Declaration public ApiResponse<string> SubmitFormWithHttpInfo(string to = null, string subject = null, string redirectTo = null, string emailAddress = null, string successMessage = null, string spamCheck = null, string otherParameters = null, int operationIndex = 0) Parameters Type Name Description string to The email address that submitted form should be sent to. (optional) string subject Optional subject of the email that will be sent. (optional) string redirectTo Optional URL to redirect form submitter to after submission. If not present user will see a success message. (optional) string emailAddress Email address of the submitting user. Include this if you wish to record the submitters email address and reply to it later. (optional) string successMessage Optional success message to display if no _redirectTo present. (optional) string spamCheck Optional but recommended field that catches spammers out. Include as a hidden form field but LEAVE EMPTY. Spam-bots will usually fill every field. If the _spamCheck field is filled the form submission will be ignored. (optional) string otherParameters All other parameters or fields will be accepted and attached to the sent email. This includes files and any HTML form field with a name. These fields will become the body of the email that is sent. (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<string> ApiResponse of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source SubmitFormWithHttpInfoAsync(string, string, string, string, string, string, string, int, CancellationToken) Submit a form to be parsed and sent as an email to an address determined by the form fields This endpoint allows you to submit HTML forms and receive the field values and files via email. #### Parameters The endpoint looks for special meta parameters in the form fields OR in the URL request parameters. The meta parameters can be used to specify the behaviour of the email. You must provide at-least a _to email address to tell the endpoint where the form should be emailed. These can be submitted as hidden HTML input fields with the corresponding name attributes or as URL query parameters such as ?_to=test@example.com The endpoint takes all other form fields that are named and includes them in the message body of the email. Files are sent as attachments. #### Submitting This endpoint accepts form submission via POST method. It accepts application/x-www-form-urlencoded, and multipart/form-data content-types. #### HTML Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms\\&quot; method=\\&quot;post\\&quot; > &lt;input name=\\&quot;_to\\&quot; type=\\&quot;hidden\\&quot; value=\\&quot;test@example.com\\&quot;/> &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> #### URL Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms?_to=test@example.com\\&quot; method=\\&quot;post\\&quot; > &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> The email address is specified by a _to field OR is extracted from an email alias specified by a _toAlias field (see the alias controller for more information). Endpoint accepts . You can specify a content type in HTML forms using the enctype attribute, for instance: &lt;form enctype=\\&quot;multipart/form-data\\&quot;>. Declaration public Task<ApiResponse<string>> SubmitFormWithHttpInfoAsync(string to = null, string subject = null, string redirectTo = null, string emailAddress = null, string successMessage = null, string spamCheck = null, string otherParameters = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string to The email address that submitted form should be sent to. (optional) string subject Optional subject of the email that will be sent. (optional) string redirectTo Optional URL to redirect form submitter to after submission. If not present user will see a success message. (optional) string emailAddress Email address of the submitting user. Include this if you wish to record the submitters email address and reply to it later. (optional) string successMessage Optional success message to display if no _redirectTo present. (optional) string spamCheck Optional but recommended field that catches spammers out. Include as a hidden form field but LEAVE EMPTY. Spam-bots will usually fill every field. If the _spamCheck field is filled the form submission will be ignored. (optional) string otherParameters All other parameters or fields will be accepted and attached to the sent email. This includes files and any HTML form field with a name. These fields will become the body of the email that is sent. (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<string>> Task of ApiResponse (string) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IFormControllerApi IFormControllerApiSync IFormControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.GroupControllerApi.html": {
    "href": "api/mailslurp.Api.GroupControllerApi.html",
    "title": "Class GroupControllerApi | MailSlurp",
    "keywords": "Class GroupControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object GroupControllerApi Implements IGroupControllerApi IGroupControllerApiSync IGroupControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class GroupControllerApi : IGroupControllerApi, IGroupControllerApiSync, IGroupControllerApiAsync, IApiAccessor Constructors View Source GroupControllerApi() Initializes a new instance of the GroupControllerApi class. Declaration public GroupControllerApi() View Source GroupControllerApi(Configuration) Initializes a new instance of the GroupControllerApi class using Configuration object Declaration public GroupControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source GroupControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the GroupControllerApi class using a Configuration object and client instance. Declaration public GroupControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source GroupControllerApi(string) Initializes a new instance of the GroupControllerApi class. Declaration public GroupControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source AddContactsToGroup(Guid, UpdateGroupContacts, int) Add contacts to a group Declaration public GroupContactsDto AddContactsToGroup(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. Returns Type Description GroupContactsDto GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source AddContactsToGroupAsync(Guid, UpdateGroupContacts, int, CancellationToken) Add contacts to a group Declaration public Task<GroupContactsDto> AddContactsToGroupAsync(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GroupContactsDto> Task of GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source AddContactsToGroupWithHttpInfo(Guid, UpdateGroupContacts, int) Add contacts to a group Declaration public ApiResponse<GroupContactsDto> AddContactsToGroupWithHttpInfo(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GroupContactsDto> ApiResponse of GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source AddContactsToGroupWithHttpInfoAsync(Guid, UpdateGroupContacts, int, CancellationToken) Add contacts to a group Declaration public Task<ApiResponse<GroupContactsDto>> AddContactsToGroupWithHttpInfoAsync(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GroupContactsDto>> Task of ApiResponse (GroupContactsDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateGroup(CreateGroupOptions, int) Create a group Declaration public GroupDto CreateGroup(CreateGroupOptions createGroupOptions, int operationIndex = 0) Parameters Type Name Description CreateGroupOptions createGroupOptions int operationIndex Index associated with the operation. Returns Type Description GroupDto GroupDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateGroupAsync(CreateGroupOptions, int, CancellationToken) Create a group Declaration public Task<GroupDto> CreateGroupAsync(CreateGroupOptions createGroupOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateGroupOptions createGroupOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GroupDto> Task of GroupDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateGroupWithHttpInfo(CreateGroupOptions, int) Create a group Declaration public ApiResponse<GroupDto> CreateGroupWithHttpInfo(CreateGroupOptions createGroupOptions, int operationIndex = 0) Parameters Type Name Description CreateGroupOptions createGroupOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GroupDto> ApiResponse of GroupDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateGroupWithHttpInfoAsync(CreateGroupOptions, int, CancellationToken) Create a group Declaration public Task<ApiResponse<GroupDto>> CreateGroupWithHttpInfoAsync(CreateGroupOptions createGroupOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateGroupOptions createGroupOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GroupDto>> Task of ApiResponse (GroupDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteGroup(Guid, int) Delete group Declaration public void DeleteGroup(Guid groupId, int operationIndex = 0) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteGroupAsync(Guid, int, CancellationToken) Delete group Declaration public Task DeleteGroupAsync(Guid groupId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteGroupWithHttpInfo(Guid, int) Delete group Declaration public ApiResponse<object> DeleteGroupWithHttpInfo(Guid groupId, int operationIndex = 0) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteGroupWithHttpInfoAsync(Guid, int, CancellationToken) Delete group Declaration public Task<ApiResponse<object>> DeleteGroupWithHttpInfoAsync(Guid groupId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllGroups(int?, int?, string, DateTime?, DateTime?, int) Get all Contact Groups in paginated format Declaration public PageGroupProjection GetAllGroups(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageGroupProjection PageGroupProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllGroupsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all Contact Groups in paginated format Declaration public Task<PageGroupProjection> GetAllGroupsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageGroupProjection> Task of PageGroupProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllGroupsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get all Contact Groups in paginated format Declaration public ApiResponse<PageGroupProjection> GetAllGroupsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageGroupProjection> ApiResponse of PageGroupProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllGroupsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all Contact Groups in paginated format Declaration public Task<ApiResponse<PageGroupProjection>> GetAllGroupsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageGroupProjection>> Task of ApiResponse (PageGroupProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetGroup(Guid, int) Get group Declaration public GroupDto GetGroup(Guid groupId, int operationIndex = 0) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. Returns Type Description GroupDto GroupDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupAsync(Guid, int, CancellationToken) Get group Declaration public Task<GroupDto> GetGroupAsync(Guid groupId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GroupDto> Task of GroupDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroups(int) Get all groups Declaration public List<GroupProjection> GetGroups(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<GroupProjection> List<GroupProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupsAsync(int, CancellationToken) Get all groups Declaration public Task<List<GroupProjection>> GetGroupsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<GroupProjection>> Task of List<GroupProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupsWithHttpInfo(int) Get all groups Declaration public ApiResponse<List<GroupProjection>> GetGroupsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<GroupProjection>> ApiResponse of List<GroupProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupsWithHttpInfoAsync(int, CancellationToken) Get all groups Declaration public Task<ApiResponse<List<GroupProjection>>> GetGroupsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<GroupProjection>>> Task of ApiResponse (List<GroupProjection>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContacts(Guid, int) Get group and contacts belonging to it Declaration public GroupContactsDto GetGroupWithContacts(Guid groupId, int operationIndex = 0) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. Returns Type Description GroupContactsDto GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsAsync(Guid, int, CancellationToken) Get group and contacts belonging to it Declaration public Task<GroupContactsDto> GetGroupWithContactsAsync(Guid groupId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GroupContactsDto> Task of GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsPaginated(Guid, int?, int?, string, DateTime?, DateTime?, int) Get group and paginated contacts belonging to it Declaration public PageContactProjection GetGroupWithContactsPaginated(Guid groupId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid groupId int? page Optional page index in group contact pagination (optional, default to 0) int? size Optional page size in group contact pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageContactProjection PageContactProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsPaginatedAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get group and paginated contacts belonging to it Declaration public Task<PageContactProjection> GetGroupWithContactsPaginatedAsync(Guid groupId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int? page Optional page index in group contact pagination (optional, default to 0) int? size Optional page size in group contact pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageContactProjection> Task of PageContactProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsPaginatedWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get group and paginated contacts belonging to it Declaration public ApiResponse<PageContactProjection> GetGroupWithContactsPaginatedWithHttpInfo(Guid groupId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid groupId int? page Optional page index in group contact pagination (optional, default to 0) int? size Optional page size in group contact pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageContactProjection> ApiResponse of PageContactProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsPaginatedWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get group and paginated contacts belonging to it Declaration public Task<ApiResponse<PageContactProjection>> GetGroupWithContactsPaginatedWithHttpInfoAsync(Guid groupId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int? page Optional page index in group contact pagination (optional, default to 0) int? size Optional page size in group contact pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageContactProjection>> Task of ApiResponse (PageContactProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsWithHttpInfo(Guid, int) Get group and contacts belonging to it Declaration public ApiResponse<GroupContactsDto> GetGroupWithContactsWithHttpInfo(Guid groupId, int operationIndex = 0) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GroupContactsDto> ApiResponse of GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsWithHttpInfoAsync(Guid, int, CancellationToken) Get group and contacts belonging to it Declaration public Task<ApiResponse<GroupContactsDto>> GetGroupWithContactsWithHttpInfoAsync(Guid groupId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GroupContactsDto>> Task of ApiResponse (GroupContactsDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithHttpInfo(Guid, int) Get group Declaration public ApiResponse<GroupDto> GetGroupWithHttpInfo(Guid groupId, int operationIndex = 0) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GroupDto> ApiResponse of GroupDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithHttpInfoAsync(Guid, int, CancellationToken) Get group Declaration public Task<ApiResponse<GroupDto>> GetGroupWithHttpInfoAsync(Guid groupId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GroupDto>> Task of ApiResponse (GroupDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source RemoveContactsFromGroup(Guid, UpdateGroupContacts, int) Remove contacts from a group Declaration public GroupContactsDto RemoveContactsFromGroup(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. Returns Type Description GroupContactsDto GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source RemoveContactsFromGroupAsync(Guid, UpdateGroupContacts, int, CancellationToken) Remove contacts from a group Declaration public Task<GroupContactsDto> RemoveContactsFromGroupAsync(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GroupContactsDto> Task of GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source RemoveContactsFromGroupWithHttpInfo(Guid, UpdateGroupContacts, int) Remove contacts from a group Declaration public ApiResponse<GroupContactsDto> RemoveContactsFromGroupWithHttpInfo(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GroupContactsDto> ApiResponse of GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source RemoveContactsFromGroupWithHttpInfoAsync(Guid, UpdateGroupContacts, int, CancellationToken) Remove contacts from a group Declaration public Task<ApiResponse<GroupContactsDto>> RemoveContactsFromGroupWithHttpInfoAsync(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GroupContactsDto>> Task of ApiResponse (GroupContactsDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IGroupControllerApi IGroupControllerApiSync IGroupControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.html": {
    "href": "api/mailslurp.Api.html",
    "title": "Namespace mailslurp.Api | MailSlurp",
    "keywords": "Namespace mailslurp.Api Classes AliasControllerApi Represents a collection of functions to interact with the API endpoints AttachmentControllerApi Represents a collection of functions to interact with the API endpoints BounceControllerApi Represents a collection of functions to interact with the API endpoints BulkActionsControllerApi Represents a collection of functions to interact with the API endpoints CommonActionsControllerApi Represents a collection of functions to interact with the API endpoints ConnectorControllerApi Represents a collection of functions to interact with the API endpoints ContactControllerApi Represents a collection of functions to interact with the API endpoints DomainControllerApi Represents a collection of functions to interact with the API endpoints EmailControllerApi Represents a collection of functions to interact with the API endpoints EmailVerificationControllerApi Represents a collection of functions to interact with the API endpoints ExpiredControllerApi Represents a collection of functions to interact with the API endpoints ExportControllerApi Represents a collection of functions to interact with the API endpoints FormControllerApi Represents a collection of functions to interact with the API endpoints GroupControllerApi Represents a collection of functions to interact with the API endpoints InboxControllerApi Represents a collection of functions to interact with the API endpoints InboxForwarderControllerApi Represents a collection of functions to interact with the API endpoints InboxReplierControllerApi Represents a collection of functions to interact with the API endpoints InboxRulesetControllerApi Represents a collection of functions to interact with the API endpoints MailServerControllerApi Represents a collection of functions to interact with the API endpoints MissedEmailControllerApi Represents a collection of functions to interact with the API endpoints PhoneControllerApi Represents a collection of functions to interact with the API endpoints SentEmailsControllerApi Represents a collection of functions to interact with the API endpoints SmsControllerApi Represents a collection of functions to interact with the API endpoints TemplateControllerApi Represents a collection of functions to interact with the API endpoints ToolsControllerApi Represents a collection of functions to interact with the API endpoints TrackingControllerApi Represents a collection of functions to interact with the API endpoints UserControllerApi Represents a collection of functions to interact with the API endpoints WaitForControllerApi Represents a collection of functions to interact with the API endpoints WebhookControllerApi Represents a collection of functions to interact with the API endpoints Interfaces IAliasControllerApi Represents a collection of functions to interact with the API endpoints IAliasControllerApiAsync Represents a collection of functions to interact with the API endpoints IAliasControllerApiSync Represents a collection of functions to interact with the API endpoints IAttachmentControllerApi Represents a collection of functions to interact with the API endpoints IAttachmentControllerApiAsync Represents a collection of functions to interact with the API endpoints IAttachmentControllerApiSync Represents a collection of functions to interact with the API endpoints IBounceControllerApi Represents a collection of functions to interact with the API endpoints IBounceControllerApiAsync Represents a collection of functions to interact with the API endpoints IBounceControllerApiSync Represents a collection of functions to interact with the API endpoints IBulkActionsControllerApi Represents a collection of functions to interact with the API endpoints IBulkActionsControllerApiAsync Represents a collection of functions to interact with the API endpoints IBulkActionsControllerApiSync Represents a collection of functions to interact with the API endpoints ICommonActionsControllerApi Represents a collection of functions to interact with the API endpoints ICommonActionsControllerApiAsync Represents a collection of functions to interact with the API endpoints ICommonActionsControllerApiSync Represents a collection of functions to interact with the API endpoints IConnectorControllerApi Represents a collection of functions to interact with the API endpoints IConnectorControllerApiAsync Represents a collection of functions to interact with the API endpoints IConnectorControllerApiSync Represents a collection of functions to interact with the API endpoints IContactControllerApi Represents a collection of functions to interact with the API endpoints IContactControllerApiAsync Represents a collection of functions to interact with the API endpoints IContactControllerApiSync Represents a collection of functions to interact with the API endpoints IDomainControllerApi Represents a collection of functions to interact with the API endpoints IDomainControllerApiAsync Represents a collection of functions to interact with the API endpoints IDomainControllerApiSync Represents a collection of functions to interact with the API endpoints IEmailControllerApi Represents a collection of functions to interact with the API endpoints IEmailControllerApiAsync Represents a collection of functions to interact with the API endpoints IEmailControllerApiSync Represents a collection of functions to interact with the API endpoints IEmailVerificationControllerApi Represents a collection of functions to interact with the API endpoints IEmailVerificationControllerApiAsync Represents a collection of functions to interact with the API endpoints IEmailVerificationControllerApiSync Represents a collection of functions to interact with the API endpoints IExpiredControllerApi Represents a collection of functions to interact with the API endpoints IExpiredControllerApiAsync Represents a collection of functions to interact with the API endpoints IExpiredControllerApiSync Represents a collection of functions to interact with the API endpoints IExportControllerApi Represents a collection of functions to interact with the API endpoints IExportControllerApiAsync Represents a collection of functions to interact with the API endpoints IExportControllerApiSync Represents a collection of functions to interact with the API endpoints IFormControllerApi Represents a collection of functions to interact with the API endpoints IFormControllerApiAsync Represents a collection of functions to interact with the API endpoints IFormControllerApiSync Represents a collection of functions to interact with the API endpoints IGroupControllerApi Represents a collection of functions to interact with the API endpoints IGroupControllerApiAsync Represents a collection of functions to interact with the API endpoints IGroupControllerApiSync Represents a collection of functions to interact with the API endpoints IInboxControllerApi Represents a collection of functions to interact with the API endpoints IInboxControllerApiAsync Represents a collection of functions to interact with the API endpoints IInboxControllerApiSync Represents a collection of functions to interact with the API endpoints IInboxForwarderControllerApi Represents a collection of functions to interact with the API endpoints IInboxForwarderControllerApiAsync Represents a collection of functions to interact with the API endpoints IInboxForwarderControllerApiSync Represents a collection of functions to interact with the API endpoints IInboxReplierControllerApi Represents a collection of functions to interact with the API endpoints IInboxReplierControllerApiAsync Represents a collection of functions to interact with the API endpoints IInboxReplierControllerApiSync Represents a collection of functions to interact with the API endpoints IInboxRulesetControllerApi Represents a collection of functions to interact with the API endpoints IInboxRulesetControllerApiAsync Represents a collection of functions to interact with the API endpoints IInboxRulesetControllerApiSync Represents a collection of functions to interact with the API endpoints IMailServerControllerApi Represents a collection of functions to interact with the API endpoints IMailServerControllerApiAsync Represents a collection of functions to interact with the API endpoints IMailServerControllerApiSync Represents a collection of functions to interact with the API endpoints IMissedEmailControllerApi Represents a collection of functions to interact with the API endpoints IMissedEmailControllerApiAsync Represents a collection of functions to interact with the API endpoints IMissedEmailControllerApiSync Represents a collection of functions to interact with the API endpoints IPhoneControllerApi Represents a collection of functions to interact with the API endpoints IPhoneControllerApiAsync Represents a collection of functions to interact with the API endpoints IPhoneControllerApiSync Represents a collection of functions to interact with the API endpoints ISentEmailsControllerApi Represents a collection of functions to interact with the API endpoints ISentEmailsControllerApiAsync Represents a collection of functions to interact with the API endpoints ISentEmailsControllerApiSync Represents a collection of functions to interact with the API endpoints ISmsControllerApi Represents a collection of functions to interact with the API endpoints ISmsControllerApiAsync Represents a collection of functions to interact with the API endpoints ISmsControllerApiSync Represents a collection of functions to interact with the API endpoints ITemplateControllerApi Represents a collection of functions to interact with the API endpoints ITemplateControllerApiAsync Represents a collection of functions to interact with the API endpoints ITemplateControllerApiSync Represents a collection of functions to interact with the API endpoints IToolsControllerApi Represents a collection of functions to interact with the API endpoints IToolsControllerApiAsync Represents a collection of functions to interact with the API endpoints IToolsControllerApiSync Represents a collection of functions to interact with the API endpoints ITrackingControllerApi Represents a collection of functions to interact with the API endpoints ITrackingControllerApiAsync Represents a collection of functions to interact with the API endpoints ITrackingControllerApiSync Represents a collection of functions to interact with the API endpoints IUserControllerApi Represents a collection of functions to interact with the API endpoints IUserControllerApiAsync Represents a collection of functions to interact with the API endpoints IUserControllerApiSync Represents a collection of functions to interact with the API endpoints IWaitForControllerApi Represents a collection of functions to interact with the API endpoints IWaitForControllerApiAsync Represents a collection of functions to interact with the API endpoints IWaitForControllerApiSync Represents a collection of functions to interact with the API endpoints IWebhookControllerApi Represents a collection of functions to interact with the API endpoints IWebhookControllerApiAsync Represents a collection of functions to interact with the API endpoints IWebhookControllerApiSync Represents a collection of functions to interact with the API endpoints"
  },
  "api/mailslurp.Api.IAliasControllerApi.html": {
    "href": "api/mailslurp.Api.IAliasControllerApi.html",
    "title": "Interface IAliasControllerApi | MailSlurp",
    "keywords": "Interface IAliasControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IAliasControllerApiSync.CreateAlias(CreateAliasOptions, int) IAliasControllerApiSync.CreateAliasWithHttpInfo(CreateAliasOptions, int) IAliasControllerApiSync.DeleteAlias(Guid, int) IAliasControllerApiSync.DeleteAliasWithHttpInfo(Guid, int) IAliasControllerApiSync.GetAlias(Guid, int) IAliasControllerApiSync.GetAliasWithHttpInfo(Guid, int) IAliasControllerApiSync.GetAliasEmails(Guid, int?, int?, string, DateTime?, DateTime?, int) IAliasControllerApiSync.GetAliasEmailsWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) IAliasControllerApiSync.GetAliasThreads(Guid, int?, int?, string, DateTime?, DateTime?, int) IAliasControllerApiSync.GetAliasThreadsWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) IAliasControllerApiSync.GetAliases(string, int?, int?, string, DateTime?, DateTime?, int) IAliasControllerApiSync.GetAliasesWithHttpInfo(string, int?, int?, string, DateTime?, DateTime?, int) IAliasControllerApiSync.GetThread(Guid, int) IAliasControllerApiSync.GetThreadWithHttpInfo(Guid, int) IAliasControllerApiSync.GetThreadsPaginated(int?, int?, string, DateTime?, DateTime?, int) IAliasControllerApiSync.GetThreadsPaginatedWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) IAliasControllerApiSync.ReplyToAliasEmail(Guid, Guid, ReplyToAliasEmailOptions, int) IAliasControllerApiSync.ReplyToAliasEmailWithHttpInfo(Guid, Guid, ReplyToAliasEmailOptions, int) IAliasControllerApiSync.SendAliasEmail(Guid, SendEmailOptions, int) IAliasControllerApiSync.SendAliasEmailWithHttpInfo(Guid, SendEmailOptions, int) IAliasControllerApiSync.UpdateAlias(Guid, UpdateAliasOptions, int) IAliasControllerApiSync.UpdateAliasWithHttpInfo(Guid, UpdateAliasOptions, int) IAliasControllerApiAsync.CreateAliasAsync(CreateAliasOptions, int, CancellationToken) IAliasControllerApiAsync.CreateAliasWithHttpInfoAsync(CreateAliasOptions, int, CancellationToken) IAliasControllerApiAsync.DeleteAliasAsync(Guid, int, CancellationToken) IAliasControllerApiAsync.DeleteAliasWithHttpInfoAsync(Guid, int, CancellationToken) IAliasControllerApiAsync.GetAliasAsync(Guid, int, CancellationToken) IAliasControllerApiAsync.GetAliasWithHttpInfoAsync(Guid, int, CancellationToken) IAliasControllerApiAsync.GetAliasEmailsAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IAliasControllerApiAsync.GetAliasEmailsWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IAliasControllerApiAsync.GetAliasThreadsAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IAliasControllerApiAsync.GetAliasThreadsWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IAliasControllerApiAsync.GetAliasesAsync(string, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IAliasControllerApiAsync.GetAliasesWithHttpInfoAsync(string, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IAliasControllerApiAsync.GetThreadAsync(Guid, int, CancellationToken) IAliasControllerApiAsync.GetThreadWithHttpInfoAsync(Guid, int, CancellationToken) IAliasControllerApiAsync.GetThreadsPaginatedAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IAliasControllerApiAsync.GetThreadsPaginatedWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IAliasControllerApiAsync.ReplyToAliasEmailAsync(Guid, Guid, ReplyToAliasEmailOptions, int, CancellationToken) IAliasControllerApiAsync.ReplyToAliasEmailWithHttpInfoAsync(Guid, Guid, ReplyToAliasEmailOptions, int, CancellationToken) IAliasControllerApiAsync.SendAliasEmailAsync(Guid, SendEmailOptions, int, CancellationToken) IAliasControllerApiAsync.SendAliasEmailWithHttpInfoAsync(Guid, SendEmailOptions, int, CancellationToken) IAliasControllerApiAsync.UpdateAliasAsync(Guid, UpdateAliasOptions, int, CancellationToken) IAliasControllerApiAsync.UpdateAliasWithHttpInfoAsync(Guid, UpdateAliasOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IAliasControllerApi : IAliasControllerApiSync, IAliasControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IAliasControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IAliasControllerApiAsync.html",
    "title": "Interface IAliasControllerApiAsync | MailSlurp",
    "keywords": "Interface IAliasControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IAliasControllerApiAsync : IApiAccessor Methods View Source CreateAliasAsync(CreateAliasOptions, int, CancellationToken) Create an email alias. Must be verified by clicking link inside verification email that will be sent to the address. Once verified the alias will be active. Declaration Task<AliasDto> CreateAliasAsync(CreateAliasOptions createAliasOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateAliasOptions createAliasOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AliasDto> Task of AliasDto Remarks Email aliases use a MailSlurp randomly generated email address (or a custom domain inbox that you provide) to mask or proxy a real email address. Emails sent to the alias address will be forwarded to the hidden email address it was created for. If you want to send a reply use the threadId attached Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateAliasWithHttpInfoAsync(CreateAliasOptions, int, CancellationToken) Create an email alias. Must be verified by clicking link inside verification email that will be sent to the address. Once verified the alias will be active. Declaration Task<ApiResponse<AliasDto>> CreateAliasWithHttpInfoAsync(CreateAliasOptions createAliasOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateAliasOptions createAliasOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AliasDto>> Task of ApiResponse (AliasDto) Remarks Email aliases use a MailSlurp randomly generated email address (or a custom domain inbox that you provide) to mask or proxy a real email address. Emails sent to the alias address will be forwarded to the hidden email address it was created for. If you want to send a reply use the threadId attached Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAliasAsync(Guid, int, CancellationToken) Delete an email alias Declaration Task DeleteAliasAsync(Guid aliasId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAliasWithHttpInfoAsync(Guid, int, CancellationToken) Delete an email alias Declaration Task<ApiResponse<object>> DeleteAliasWithHttpInfoAsync(Guid aliasId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasAsync(Guid, int, CancellationToken) Get an email alias Declaration Task<AliasDto> GetAliasAsync(Guid aliasId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AliasDto> Task of AliasDto Remarks Get an email alias by ID Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasEmailsAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get emails for an alias Declaration Task<PageEmailProjection> GetAliasEmailsAsync(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int? page Optional page index alias email list pagination (optional, default to 0) int? size Optional page size alias email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailProjection> Task of PageEmailProjection Remarks Get paginated emails for an alias by ID Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasEmailsWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get emails for an alias Declaration Task<ApiResponse<PageEmailProjection>> GetAliasEmailsWithHttpInfoAsync(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int? page Optional page index alias email list pagination (optional, default to 0) int? size Optional page size alias email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailProjection>> Task of ApiResponse (PageEmailProjection) Remarks Get paginated emails for an alias by ID Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasesAsync(string, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all email aliases you have created Declaration Task<PageAlias> GetAliasesAsync(string search = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string search Optional search term (optional) int? page Optional page index in alias list pagination (optional, default to 0) int? size Optional page size in alias list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageAlias> Task of PageAlias Remarks Get all email aliases in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasesWithHttpInfoAsync(string, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all email aliases you have created Declaration Task<ApiResponse<PageAlias>> GetAliasesWithHttpInfoAsync(string search = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string search Optional search term (optional) int? page Optional page index in alias list pagination (optional, default to 0) int? size Optional page size in alias list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageAlias>> Task of ApiResponse (PageAlias) Remarks Get all email aliases in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasThreadsAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get threads created for an alias Declaration Task<PageThreadProjection> GetAliasThreadsAsync(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageThreadProjection> Task of PageThreadProjection Remarks Returns threads created for an email alias in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasThreadsWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get threads created for an alias Declaration Task<ApiResponse<PageThreadProjection>> GetAliasThreadsWithHttpInfoAsync(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageThreadProjection>> Task of ApiResponse (PageThreadProjection) Remarks Returns threads created for an email alias in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasWithHttpInfoAsync(Guid, int, CancellationToken) Get an email alias Declaration Task<ApiResponse<AliasDto>> GetAliasWithHttpInfoAsync(Guid aliasId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AliasDto>> Task of ApiResponse (AliasDto) Remarks Get an email alias by ID Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadAsync(Guid, int, CancellationToken) Get a thread Declaration Task<ThreadProjection> GetThreadAsync(Guid threadId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid threadId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ThreadProjection> Task of ThreadProjection Remarks Return a thread associated with an alias Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadsPaginatedAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all threads Declaration Task<PageThreadProjection> GetThreadsPaginatedAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageThreadProjection> Task of PageThreadProjection Remarks Returns threads created for all aliases in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadsPaginatedWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all threads Declaration Task<ApiResponse<PageThreadProjection>> GetThreadsPaginatedWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageThreadProjection>> Task of ApiResponse (PageThreadProjection) Remarks Returns threads created for all aliases in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadWithHttpInfoAsync(Guid, int, CancellationToken) Get a thread Declaration Task<ApiResponse<ThreadProjection>> GetThreadWithHttpInfoAsync(Guid threadId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid threadId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ThreadProjection>> Task of ApiResponse (ThreadProjection) Remarks Return a thread associated with an alias Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToAliasEmailAsync(Guid, Guid, ReplyToAliasEmailOptions, int, CancellationToken) Reply to an email Declaration Task<SentEmailDto> ReplyToAliasEmailAsync(Guid aliasId, Guid emailId, ReplyToAliasEmailOptions replyToAliasEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId ID of the alias that email belongs to Guid emailId ID of the email that should be replied to ReplyToAliasEmailOptions replyToAliasEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Remarks Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToAliasEmailWithHttpInfoAsync(Guid, Guid, ReplyToAliasEmailOptions, int, CancellationToken) Reply to an email Declaration Task<ApiResponse<SentEmailDto>> ReplyToAliasEmailWithHttpInfoAsync(Guid aliasId, Guid emailId, ReplyToAliasEmailOptions replyToAliasEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId ID of the alias that email belongs to Guid emailId ID of the email that should be replied to ReplyToAliasEmailOptions replyToAliasEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Remarks Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendAliasEmailAsync(Guid, SendEmailOptions, int, CancellationToken) Send an email from an alias inbox Declaration Task<SentEmailDto> SendAliasEmailAsync(Guid aliasId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Remarks Send an email from an alias. Replies to the email will be forwarded to the alias masked email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendAliasEmailWithHttpInfoAsync(Guid, SendEmailOptions, int, CancellationToken) Send an email from an alias inbox Declaration Task<ApiResponse<SentEmailDto>> SendAliasEmailWithHttpInfoAsync(Guid aliasId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Remarks Send an email from an alias. Replies to the email will be forwarded to the alias masked email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateAliasAsync(Guid, UpdateAliasOptions, int, CancellationToken) Update an email alias Declaration Task<AliasDto> UpdateAliasAsync(Guid aliasId, UpdateAliasOptions updateAliasOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId UpdateAliasOptions updateAliasOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AliasDto> Task of AliasDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateAliasWithHttpInfoAsync(Guid, UpdateAliasOptions, int, CancellationToken) Update an email alias Declaration Task<ApiResponse<AliasDto>> UpdateAliasWithHttpInfoAsync(Guid aliasId, UpdateAliasOptions updateAliasOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid aliasId UpdateAliasOptions updateAliasOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AliasDto>> Task of ApiResponse (AliasDto) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IAliasControllerApiSync.html": {
    "href": "api/mailslurp.Api.IAliasControllerApiSync.html",
    "title": "Interface IAliasControllerApiSync | MailSlurp",
    "keywords": "Interface IAliasControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IAliasControllerApiSync : IApiAccessor Methods View Source CreateAlias(CreateAliasOptions, int) Create an email alias. Must be verified by clicking link inside verification email that will be sent to the address. Once verified the alias will be active. Declaration AliasDto CreateAlias(CreateAliasOptions createAliasOptions, int operationIndex = 0) Parameters Type Name Description CreateAliasOptions createAliasOptions int operationIndex Index associated with the operation. Returns Type Description AliasDto AliasDto Remarks Email aliases use a MailSlurp randomly generated email address (or a custom domain inbox that you provide) to mask or proxy a real email address. Emails sent to the alias address will be forwarded to the hidden email address it was created for. If you want to send a reply use the threadId attached Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateAliasWithHttpInfo(CreateAliasOptions, int) Create an email alias. Must be verified by clicking link inside verification email that will be sent to the address. Once verified the alias will be active. Declaration ApiResponse<AliasDto> CreateAliasWithHttpInfo(CreateAliasOptions createAliasOptions, int operationIndex = 0) Parameters Type Name Description CreateAliasOptions createAliasOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AliasDto> ApiResponse of AliasDto Remarks Email aliases use a MailSlurp randomly generated email address (or a custom domain inbox that you provide) to mask or proxy a real email address. Emails sent to the alias address will be forwarded to the hidden email address it was created for. If you want to send a reply use the threadId attached Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAlias(Guid, int) Delete an email alias Declaration void DeleteAlias(Guid aliasId, int operationIndex = 0) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAliasWithHttpInfo(Guid, int) Delete an email alias Declaration ApiResponse<object> DeleteAliasWithHttpInfo(Guid aliasId, int operationIndex = 0) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAlias(Guid, int) Get an email alias Declaration AliasDto GetAlias(Guid aliasId, int operationIndex = 0) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. Returns Type Description AliasDto AliasDto Remarks Get an email alias by ID Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasEmails(Guid, int?, int?, string, DateTime?, DateTime?, int) Get emails for an alias Declaration PageEmailProjection GetAliasEmails(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid aliasId int? page Optional page index alias email list pagination (optional, default to 0) int? size Optional page size alias email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageEmailProjection PageEmailProjection Remarks Get paginated emails for an alias by ID Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasEmailsWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get emails for an alias Declaration ApiResponse<PageEmailProjection> GetAliasEmailsWithHttpInfo(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid aliasId int? page Optional page index alias email list pagination (optional, default to 0) int? size Optional page size alias email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailProjection> ApiResponse of PageEmailProjection Remarks Get paginated emails for an alias by ID Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliases(string, int?, int?, string, DateTime?, DateTime?, int) Get all email aliases you have created Declaration PageAlias GetAliases(string search = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description string search Optional search term (optional) int? page Optional page index in alias list pagination (optional, default to 0) int? size Optional page size in alias list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageAlias PageAlias Remarks Get all email aliases in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasesWithHttpInfo(string, int?, int?, string, DateTime?, DateTime?, int) Get all email aliases you have created Declaration ApiResponse<PageAlias> GetAliasesWithHttpInfo(string search = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description string search Optional search term (optional) int? page Optional page index in alias list pagination (optional, default to 0) int? size Optional page size in alias list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageAlias> ApiResponse of PageAlias Remarks Get all email aliases in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasThreads(Guid, int?, int?, string, DateTime?, DateTime?, int) Get threads created for an alias Declaration PageThreadProjection GetAliasThreads(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid aliasId int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageThreadProjection PageThreadProjection Remarks Returns threads created for an email alias in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasThreadsWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get threads created for an alias Declaration ApiResponse<PageThreadProjection> GetAliasThreadsWithHttpInfo(Guid aliasId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid aliasId int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageThreadProjection> ApiResponse of PageThreadProjection Remarks Returns threads created for an email alias in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAliasWithHttpInfo(Guid, int) Get an email alias Declaration ApiResponse<AliasDto> GetAliasWithHttpInfo(Guid aliasId, int operationIndex = 0) Parameters Type Name Description Guid aliasId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AliasDto> ApiResponse of AliasDto Remarks Get an email alias by ID Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThread(Guid, int) Get a thread Declaration ThreadProjection GetThread(Guid threadId, int operationIndex = 0) Parameters Type Name Description Guid threadId int operationIndex Index associated with the operation. Returns Type Description ThreadProjection ThreadProjection Remarks Return a thread associated with an alias Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadsPaginated(int?, int?, string, DateTime?, DateTime?, int) Get all threads Declaration PageThreadProjection GetThreadsPaginated(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageThreadProjection PageThreadProjection Remarks Returns threads created for all aliases in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadsPaginatedWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get all threads Declaration ApiResponse<PageThreadProjection> GetThreadsPaginatedWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in thread list pagination (optional, default to 0) int? size Optional page size in thread list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageThreadProjection> ApiResponse of PageThreadProjection Remarks Returns threads created for all aliases in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetThreadWithHttpInfo(Guid, int) Get a thread Declaration ApiResponse<ThreadProjection> GetThreadWithHttpInfo(Guid threadId, int operationIndex = 0) Parameters Type Name Description Guid threadId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ThreadProjection> ApiResponse of ThreadProjection Remarks Return a thread associated with an alias Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToAliasEmail(Guid, Guid, ReplyToAliasEmailOptions, int) Reply to an email Declaration SentEmailDto ReplyToAliasEmail(Guid aliasId, Guid emailId, ReplyToAliasEmailOptions replyToAliasEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid aliasId ID of the alias that email belongs to Guid emailId ID of the email that should be replied to ReplyToAliasEmailOptions replyToAliasEmailOptions int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Remarks Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToAliasEmailWithHttpInfo(Guid, Guid, ReplyToAliasEmailOptions, int) Reply to an email Declaration ApiResponse<SentEmailDto> ReplyToAliasEmailWithHttpInfo(Guid aliasId, Guid emailId, ReplyToAliasEmailOptions replyToAliasEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid aliasId ID of the alias that email belongs to Guid emailId ID of the email that should be replied to ReplyToAliasEmailOptions replyToAliasEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Remarks Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendAliasEmail(Guid, SendEmailOptions, int) Send an email from an alias inbox Declaration SentEmailDto SendAliasEmail(Guid aliasId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid aliasId SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Remarks Send an email from an alias. Replies to the email will be forwarded to the alias masked email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendAliasEmailWithHttpInfo(Guid, SendEmailOptions, int) Send an email from an alias inbox Declaration ApiResponse<SentEmailDto> SendAliasEmailWithHttpInfo(Guid aliasId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid aliasId SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Remarks Send an email from an alias. Replies to the email will be forwarded to the alias masked email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateAlias(Guid, UpdateAliasOptions, int) Update an email alias Declaration AliasDto UpdateAlias(Guid aliasId, UpdateAliasOptions updateAliasOptions, int operationIndex = 0) Parameters Type Name Description Guid aliasId UpdateAliasOptions updateAliasOptions int operationIndex Index associated with the operation. Returns Type Description AliasDto AliasDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateAliasWithHttpInfo(Guid, UpdateAliasOptions, int) Update an email alias Declaration ApiResponse<AliasDto> UpdateAliasWithHttpInfo(Guid aliasId, UpdateAliasOptions updateAliasOptions, int operationIndex = 0) Parameters Type Name Description Guid aliasId UpdateAliasOptions updateAliasOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AliasDto> ApiResponse of AliasDto Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IAttachmentControllerApi.html": {
    "href": "api/mailslurp.Api.IAttachmentControllerApi.html",
    "title": "Interface IAttachmentControllerApi | MailSlurp",
    "keywords": "Interface IAttachmentControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IAttachmentControllerApiSync.DeleteAllAttachments(int) IAttachmentControllerApiSync.DeleteAllAttachmentsWithHttpInfo(int) IAttachmentControllerApiSync.DeleteAttachment(string, int) IAttachmentControllerApiSync.DeleteAttachmentWithHttpInfo(string, int) IAttachmentControllerApiSync.DownloadAttachmentAsBase64Encoded(string, int) IAttachmentControllerApiSync.DownloadAttachmentAsBase64EncodedWithHttpInfo(string, int) IAttachmentControllerApiSync.DownloadAttachmentAsBytes(string, int) IAttachmentControllerApiSync.DownloadAttachmentAsBytesWithHttpInfo(string, int) IAttachmentControllerApiSync.GetAttachment(string, int) IAttachmentControllerApiSync.GetAttachmentWithHttpInfo(string, int) IAttachmentControllerApiSync.GetAttachmentInfo(string, int) IAttachmentControllerApiSync.GetAttachmentInfoWithHttpInfo(string, int) IAttachmentControllerApiSync.GetAttachments(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) IAttachmentControllerApiSync.GetAttachmentsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) IAttachmentControllerApiSync.UploadAttachment(UploadAttachmentOptions, int) IAttachmentControllerApiSync.UploadAttachmentWithHttpInfo(UploadAttachmentOptions, int) IAttachmentControllerApiSync.UploadAttachmentBytes(string, string, string, string, string, int) IAttachmentControllerApiSync.UploadAttachmentBytesWithHttpInfo(string, string, string, string, string, int) IAttachmentControllerApiSync.UploadMultipartForm(string, string, string, string, UploadMultipartFormRequest, int) IAttachmentControllerApiSync.UploadMultipartFormWithHttpInfo(string, string, string, string, UploadMultipartFormRequest, int) IAttachmentControllerApiAsync.DeleteAllAttachmentsAsync(int, CancellationToken) IAttachmentControllerApiAsync.DeleteAllAttachmentsWithHttpInfoAsync(int, CancellationToken) IAttachmentControllerApiAsync.DeleteAttachmentAsync(string, int, CancellationToken) IAttachmentControllerApiAsync.DeleteAttachmentWithHttpInfoAsync(string, int, CancellationToken) IAttachmentControllerApiAsync.DownloadAttachmentAsBase64EncodedAsync(string, int, CancellationToken) IAttachmentControllerApiAsync.DownloadAttachmentAsBase64EncodedWithHttpInfoAsync(string, int, CancellationToken) IAttachmentControllerApiAsync.DownloadAttachmentAsBytesAsync(string, int, CancellationToken) IAttachmentControllerApiAsync.DownloadAttachmentAsBytesWithHttpInfoAsync(string, int, CancellationToken) IAttachmentControllerApiAsync.GetAttachmentAsync(string, int, CancellationToken) IAttachmentControllerApiAsync.GetAttachmentWithHttpInfoAsync(string, int, CancellationToken) IAttachmentControllerApiAsync.GetAttachmentInfoAsync(string, int, CancellationToken) IAttachmentControllerApiAsync.GetAttachmentInfoWithHttpInfoAsync(string, int, CancellationToken) IAttachmentControllerApiAsync.GetAttachmentsAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) IAttachmentControllerApiAsync.GetAttachmentsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) IAttachmentControllerApiAsync.UploadAttachmentAsync(UploadAttachmentOptions, int, CancellationToken) IAttachmentControllerApiAsync.UploadAttachmentWithHttpInfoAsync(UploadAttachmentOptions, int, CancellationToken) IAttachmentControllerApiAsync.UploadAttachmentBytesAsync(string, string, string, string, string, int, CancellationToken) IAttachmentControllerApiAsync.UploadAttachmentBytesWithHttpInfoAsync(string, string, string, string, string, int, CancellationToken) IAttachmentControllerApiAsync.UploadMultipartFormAsync(string, string, string, string, UploadMultipartFormRequest, int, CancellationToken) IAttachmentControllerApiAsync.UploadMultipartFormWithHttpInfoAsync(string, string, string, string, UploadMultipartFormRequest, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IAttachmentControllerApi : IAttachmentControllerApiSync, IAttachmentControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IAttachmentControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IAttachmentControllerApiAsync.html",
    "title": "Interface IAttachmentControllerApiAsync | MailSlurp",
    "keywords": "Interface IAttachmentControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IAttachmentControllerApiAsync : IApiAccessor Methods View Source DeleteAllAttachmentsAsync(int, CancellationToken) Delete all attachments Declaration Task DeleteAllAttachmentsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllAttachmentsWithHttpInfoAsync(int, CancellationToken) Delete all attachments Declaration Task<ApiResponse<object>> DeleteAllAttachmentsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAttachmentAsync(string, int, CancellationToken) Delete an attachment Declaration Task DeleteAttachmentAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAttachmentWithHttpInfoAsync(string, int, CancellationToken) Delete an attachment Declaration Task<ApiResponse<object>> DeleteAttachmentWithHttpInfoAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBase64EncodedAsync(string, int, CancellationToken) Get email attachment as base64 encoded string as alternative to binary responses. To read the content decode the Base64 encoded contents. Declaration Task<DownloadAttachmentDto> DownloadAttachmentAsBase64EncodedAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DownloadAttachmentDto> Task of DownloadAttachmentDto Remarks Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBase64EncodedWithHttpInfoAsync(string, int, CancellationToken) Get email attachment as base64 encoded string as alternative to binary responses. To read the content decode the Base64 encoded contents. Declaration Task<ApiResponse<DownloadAttachmentDto>> DownloadAttachmentAsBase64EncodedWithHttpInfoAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DownloadAttachmentDto>> Task of ApiResponse (DownloadAttachmentDto) Remarks Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBytesAsync(string, int, CancellationToken) Download attachments. Get email attachment bytes. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints. Declaration Task<byte[]> DownloadAttachmentAsBytesAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<byte[]> Task of byte[] Remarks Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBytesWithHttpInfoAsync(string, int, CancellationToken) Download attachments. Get email attachment bytes. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints. Declaration Task<ApiResponse<byte[]>> DownloadAttachmentAsBytesWithHttpInfoAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<byte[]>> Task of ApiResponse (byte[]) Remarks Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentAsync(string, int, CancellationToken) Get an attachment entity Declaration Task<AttachmentEntity> GetAttachmentAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AttachmentEntity> Task of AttachmentEntity Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentInfoAsync(string, int, CancellationToken) Get email attachment metadata information Declaration Task<AttachmentMetaData> GetAttachmentInfoAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AttachmentMetaData> Task of AttachmentMetaData Remarks Returns the metadata for an attachment. It is saved separately to the content of the attachment. Contains properties name and content-type and content-length in bytes for a given attachment. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentInfoWithHttpInfoAsync(string, int, CancellationToken) Get email attachment metadata information Declaration Task<ApiResponse<AttachmentMetaData>> GetAttachmentInfoWithHttpInfoAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AttachmentMetaData>> Task of ApiResponse (AttachmentMetaData) Remarks Returns the metadata for an attachment. It is saved separately to the content of the attachment. Contains properties name and content-type and content-length in bytes for a given attachment. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentsAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) Get email attachments Declaration Task<PageAttachmentEntity> GetAttachmentsAsync(int? page = null, int? size = null, string sort = null, string fileNameFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string fileNameFilter Optional file name and content type search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inboxId to filter attachments by (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageAttachmentEntity> Task of PageAttachmentEntity Remarks Get all attachments in paginated response. Each entity contains meta data for the attachment such as name and content-type. Use the attachmentId and the download endpoints to get the file contents. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) Get email attachments Declaration Task<ApiResponse<PageAttachmentEntity>> GetAttachmentsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string fileNameFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string fileNameFilter Optional file name and content type search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inboxId to filter attachments by (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageAttachmentEntity>> Task of ApiResponse (PageAttachmentEntity) Remarks Get all attachments in paginated response. Each entity contains meta data for the attachment such as name and content-type. Use the attachmentId and the download endpoints to get the file contents. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentWithHttpInfoAsync(string, int, CancellationToken) Get an attachment entity Declaration Task<ApiResponse<AttachmentEntity>> GetAttachmentWithHttpInfoAsync(string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AttachmentEntity>> Task of ApiResponse (AttachmentEntity) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentAsync(UploadAttachmentOptions, int, CancellationToken) Upload an attachment for sending using base64 file encoding. Returns an array whose first element is the ID of the uploaded attachment. Declaration Task<List<string>> UploadAttachmentAsync(UploadAttachmentOptions uploadAttachmentOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description UploadAttachmentOptions uploadAttachmentOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<string>> Task of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentBytesAsync(string, string, string, string, string, int, CancellationToken) Upload an attachment for sending using file byte stream input octet stream. Returns an array whose first element is the ID of the uploaded attachment. Declaration Task<List<string>> UploadAttachmentBytesAsync(string contentType = null, string contentType2 = null, string contentId = null, string filename = null, string filename2 = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string contentType (optional) string contentType2 Optional contentType for file. For instance application/pdf (optional) string contentId Optional content ID (CID) to save upload with (optional) string filename Optional filename to save upload with (optional) string filename2 (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<string>> Task of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentBytesWithHttpInfoAsync(string, string, string, string, string, int, CancellationToken) Upload an attachment for sending using file byte stream input octet stream. Returns an array whose first element is the ID of the uploaded attachment. Declaration Task<ApiResponse<List<string>>> UploadAttachmentBytesWithHttpInfoAsync(string contentType = null, string contentType2 = null, string contentId = null, string filename = null, string filename2 = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string contentType (optional) string contentType2 Optional contentType for file. For instance application/pdf (optional) string contentId Optional content ID (CID) to save upload with (optional) string filename Optional filename to save upload with (optional) string filename2 (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<string>>> Task of ApiResponse (List<string>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentWithHttpInfoAsync(UploadAttachmentOptions, int, CancellationToken) Upload an attachment for sending using base64 file encoding. Returns an array whose first element is the ID of the uploaded attachment. Declaration Task<ApiResponse<List<string>>> UploadAttachmentWithHttpInfoAsync(UploadAttachmentOptions uploadAttachmentOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description UploadAttachmentOptions uploadAttachmentOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<string>>> Task of ApiResponse (List<string>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadMultipartFormAsync(string, string, string, string, UploadMultipartFormRequest, int, CancellationToken) Upload an attachment for sending using a Multipart Form request. Returns an array whose first element is the ID of the uploaded attachment. Declaration Task<List<string>> UploadMultipartFormAsync(string contentId = null, string contentType = null, string filename = null, string xFilename = null, UploadMultipartFormRequest uploadMultipartFormRequest = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string contentId Optional content ID of attachment (optional) string contentType Optional content type of attachment (optional) string filename Optional name of file (optional) string xFilename Optional content type header of attachment (optional) UploadMultipartFormRequest uploadMultipartFormRequest (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<string>> Task of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadMultipartFormWithHttpInfoAsync(string, string, string, string, UploadMultipartFormRequest, int, CancellationToken) Upload an attachment for sending using a Multipart Form request. Returns an array whose first element is the ID of the uploaded attachment. Declaration Task<ApiResponse<List<string>>> UploadMultipartFormWithHttpInfoAsync(string contentId = null, string contentType = null, string filename = null, string xFilename = null, UploadMultipartFormRequest uploadMultipartFormRequest = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string contentId Optional content ID of attachment (optional) string contentType Optional content type of attachment (optional) string filename Optional name of file (optional) string xFilename Optional content type header of attachment (optional) UploadMultipartFormRequest uploadMultipartFormRequest (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<string>>> Task of ApiResponse (List<string>) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IAttachmentControllerApiSync.html": {
    "href": "api/mailslurp.Api.IAttachmentControllerApiSync.html",
    "title": "Interface IAttachmentControllerApiSync | MailSlurp",
    "keywords": "Interface IAttachmentControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IAttachmentControllerApiSync : IApiAccessor Methods View Source DeleteAllAttachments(int) Delete all attachments Declaration void DeleteAllAttachments(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllAttachmentsWithHttpInfo(int) Delete all attachments Declaration ApiResponse<object> DeleteAllAttachmentsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAttachment(string, int) Delete an attachment Declaration void DeleteAttachment(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAttachmentWithHttpInfo(string, int) Delete an attachment Declaration ApiResponse<object> DeleteAttachmentWithHttpInfo(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBase64Encoded(string, int) Get email attachment as base64 encoded string as alternative to binary responses. To read the content decode the Base64 encoded contents. Declaration DownloadAttachmentDto DownloadAttachmentAsBase64Encoded(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description DownloadAttachmentDto DownloadAttachmentDto Remarks Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBase64EncodedWithHttpInfo(string, int) Get email attachment as base64 encoded string as alternative to binary responses. To read the content decode the Base64 encoded contents. Declaration ApiResponse<DownloadAttachmentDto> DownloadAttachmentAsBase64EncodedWithHttpInfo(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DownloadAttachmentDto> ApiResponse of DownloadAttachmentDto Remarks Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBytes(string, int) Download attachments. Get email attachment bytes. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints. Declaration byte[] DownloadAttachmentAsBytes(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description byte[] byte[] Remarks Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsBytesWithHttpInfo(string, int) Download attachments. Get email attachment bytes. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints. Declaration ApiResponse<byte[]> DownloadAttachmentAsBytesWithHttpInfo(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<byte[]> ApiResponse of byte[] Remarks Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachment(string, int) Get an attachment entity Declaration AttachmentEntity GetAttachment(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description AttachmentEntity AttachmentEntity Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentInfo(string, int) Get email attachment metadata information Declaration AttachmentMetaData GetAttachmentInfo(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description AttachmentMetaData AttachmentMetaData Remarks Returns the metadata for an attachment. It is saved separately to the content of the attachment. Contains properties name and content-type and content-length in bytes for a given attachment. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentInfoWithHttpInfo(string, int) Get email attachment metadata information Declaration ApiResponse<AttachmentMetaData> GetAttachmentInfoWithHttpInfo(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AttachmentMetaData> ApiResponse of AttachmentMetaData Remarks Returns the metadata for an attachment. It is saved separately to the content of the attachment. Contains properties name and content-type and content-length in bytes for a given attachment. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachments(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) Get email attachments Declaration PageAttachmentEntity GetAttachments(int? page = null, int? size = null, string sort = null, string fileNameFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string fileNameFilter Optional file name and content type search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inboxId to filter attachments by (optional) int operationIndex Index associated with the operation. Returns Type Description PageAttachmentEntity PageAttachmentEntity Remarks Get all attachments in paginated response. Each entity contains meta data for the attachment such as name and content-type. Use the attachmentId and the download endpoints to get the file contents. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) Get email attachments Declaration ApiResponse<PageAttachmentEntity> GetAttachmentsWithHttpInfo(int? page = null, int? size = null, string sort = null, string fileNameFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string fileNameFilter Optional file name and content type search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inboxId to filter attachments by (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageAttachmentEntity> ApiResponse of PageAttachmentEntity Remarks Get all attachments in paginated response. Each entity contains meta data for the attachment such as name and content-type. Use the attachmentId and the download endpoints to get the file contents. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentWithHttpInfo(string, int) Get an attachment entity Declaration ApiResponse<AttachmentEntity> GetAttachmentWithHttpInfo(string attachmentId, int operationIndex = 0) Parameters Type Name Description string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AttachmentEntity> ApiResponse of AttachmentEntity Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachment(UploadAttachmentOptions, int) Upload an attachment for sending using base64 file encoding. Returns an array whose first element is the ID of the uploaded attachment. Declaration List<string> UploadAttachment(UploadAttachmentOptions uploadAttachmentOptions, int operationIndex = 0) Parameters Type Name Description UploadAttachmentOptions uploadAttachmentOptions int operationIndex Index associated with the operation. Returns Type Description List<string> List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentBytes(string, string, string, string, string, int) Upload an attachment for sending using file byte stream input octet stream. Returns an array whose first element is the ID of the uploaded attachment. Declaration List<string> UploadAttachmentBytes(string contentType = null, string contentType2 = null, string contentId = null, string filename = null, string filename2 = null, int operationIndex = 0) Parameters Type Name Description string contentType (optional) string contentType2 Optional contentType for file. For instance application/pdf (optional) string contentId Optional content ID (CID) to save upload with (optional) string filename Optional filename to save upload with (optional) string filename2 (optional) int operationIndex Index associated with the operation. Returns Type Description List<string> List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentBytesWithHttpInfo(string, string, string, string, string, int) Upload an attachment for sending using file byte stream input octet stream. Returns an array whose first element is the ID of the uploaded attachment. Declaration ApiResponse<List<string>> UploadAttachmentBytesWithHttpInfo(string contentType = null, string contentType2 = null, string contentId = null, string filename = null, string filename2 = null, int operationIndex = 0) Parameters Type Name Description string contentType (optional) string contentType2 Optional contentType for file. For instance application/pdf (optional) string contentId Optional content ID (CID) to save upload with (optional) string filename Optional filename to save upload with (optional) string filename2 (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<string>> ApiResponse of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadAttachmentWithHttpInfo(UploadAttachmentOptions, int) Upload an attachment for sending using base64 file encoding. Returns an array whose first element is the ID of the uploaded attachment. Declaration ApiResponse<List<string>> UploadAttachmentWithHttpInfo(UploadAttachmentOptions uploadAttachmentOptions, int operationIndex = 0) Parameters Type Name Description UploadAttachmentOptions uploadAttachmentOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<string>> ApiResponse of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadMultipartForm(string, string, string, string, UploadMultipartFormRequest, int) Upload an attachment for sending using a Multipart Form request. Returns an array whose first element is the ID of the uploaded attachment. Declaration List<string> UploadMultipartForm(string contentId = null, string contentType = null, string filename = null, string xFilename = null, UploadMultipartFormRequest uploadMultipartFormRequest = null, int operationIndex = 0) Parameters Type Name Description string contentId Optional content ID of attachment (optional) string contentType Optional content type of attachment (optional) string filename Optional name of file (optional) string xFilename Optional content type header of attachment (optional) UploadMultipartFormRequest uploadMultipartFormRequest (optional) int operationIndex Index associated with the operation. Returns Type Description List<string> List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source UploadMultipartFormWithHttpInfo(string, string, string, string, UploadMultipartFormRequest, int) Upload an attachment for sending using a Multipart Form request. Returns an array whose first element is the ID of the uploaded attachment. Declaration ApiResponse<List<string>> UploadMultipartFormWithHttpInfo(string contentId = null, string contentType = null, string filename = null, string xFilename = null, UploadMultipartFormRequest uploadMultipartFormRequest = null, int operationIndex = 0) Parameters Type Name Description string contentId Optional content ID of attachment (optional) string contentType Optional content type of attachment (optional) string filename Optional name of file (optional) string xFilename Optional content type header of attachment (optional) UploadMultipartFormRequest uploadMultipartFormRequest (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<string>> ApiResponse of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IBounceControllerApi.html": {
    "href": "api/mailslurp.Api.IBounceControllerApi.html",
    "title": "Interface IBounceControllerApi | MailSlurp",
    "keywords": "Interface IBounceControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IBounceControllerApiSync.FilterBouncedRecipient(FilterBouncedRecipientsOptions, int) IBounceControllerApiSync.FilterBouncedRecipientWithHttpInfo(FilterBouncedRecipientsOptions, int) IBounceControllerApiSync.GetAccountBounceBlockStatus(int) IBounceControllerApiSync.GetAccountBounceBlockStatusWithHttpInfo(int) IBounceControllerApiSync.GetBouncedEmail(Guid, int) IBounceControllerApiSync.GetBouncedEmailWithHttpInfo(Guid, int) IBounceControllerApiSync.GetBouncedEmails(int?, int?, string, DateTime?, DateTime?, int) IBounceControllerApiSync.GetBouncedEmailsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) IBounceControllerApiSync.GetBouncedRecipient(Guid, int) IBounceControllerApiSync.GetBouncedRecipientWithHttpInfo(Guid, int) IBounceControllerApiSync.GetBouncedRecipients(int?, int?, string, DateTime?, DateTime?, int) IBounceControllerApiSync.GetBouncedRecipientsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) IBounceControllerApiSync.GetComplaint(Guid, int) IBounceControllerApiSync.GetComplaintWithHttpInfo(Guid, int) IBounceControllerApiSync.GetComplaints(int?, int?, string, DateTime?, DateTime?, int) IBounceControllerApiSync.GetComplaintsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) IBounceControllerApiSync.GetListUnsubscribeRecipients(int?, int?, string, Guid?, int) IBounceControllerApiSync.GetListUnsubscribeRecipientsWithHttpInfo(int?, int?, string, Guid?, int) IBounceControllerApiAsync.FilterBouncedRecipientAsync(FilterBouncedRecipientsOptions, int, CancellationToken) IBounceControllerApiAsync.FilterBouncedRecipientWithHttpInfoAsync(FilterBouncedRecipientsOptions, int, CancellationToken) IBounceControllerApiAsync.GetAccountBounceBlockStatusAsync(int, CancellationToken) IBounceControllerApiAsync.GetAccountBounceBlockStatusWithHttpInfoAsync(int, CancellationToken) IBounceControllerApiAsync.GetBouncedEmailAsync(Guid, int, CancellationToken) IBounceControllerApiAsync.GetBouncedEmailWithHttpInfoAsync(Guid, int, CancellationToken) IBounceControllerApiAsync.GetBouncedEmailsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IBounceControllerApiAsync.GetBouncedEmailsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IBounceControllerApiAsync.GetBouncedRecipientAsync(Guid, int, CancellationToken) IBounceControllerApiAsync.GetBouncedRecipientWithHttpInfoAsync(Guid, int, CancellationToken) IBounceControllerApiAsync.GetBouncedRecipientsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IBounceControllerApiAsync.GetBouncedRecipientsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IBounceControllerApiAsync.GetComplaintAsync(Guid, int, CancellationToken) IBounceControllerApiAsync.GetComplaintWithHttpInfoAsync(Guid, int, CancellationToken) IBounceControllerApiAsync.GetComplaintsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IBounceControllerApiAsync.GetComplaintsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IBounceControllerApiAsync.GetListUnsubscribeRecipientsAsync(int?, int?, string, Guid?, int, CancellationToken) IBounceControllerApiAsync.GetListUnsubscribeRecipientsWithHttpInfoAsync(int?, int?, string, Guid?, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IBounceControllerApi : IBounceControllerApiSync, IBounceControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IBounceControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IBounceControllerApiAsync.html",
    "title": "Interface IBounceControllerApiAsync | MailSlurp",
    "keywords": "Interface IBounceControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IBounceControllerApiAsync : IApiAccessor Methods View Source FilterBouncedRecipientAsync(FilterBouncedRecipientsOptions, int, CancellationToken) Filter a list of email recipients and remove those who have bounced Declaration Task<FilterBouncedRecipientsResult> FilterBouncedRecipientAsync(FilterBouncedRecipientsOptions filterBouncedRecipientsOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description FilterBouncedRecipientsOptions filterBouncedRecipientsOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<FilterBouncedRecipientsResult> Task of FilterBouncedRecipientsResult Remarks Prevent email sending errors by remove recipients who have resulted in past email bounces or complaints Exceptions Type Condition ApiException Thrown when fails to make API call View Source FilterBouncedRecipientWithHttpInfoAsync(FilterBouncedRecipientsOptions, int, CancellationToken) Filter a list of email recipients and remove those who have bounced Declaration Task<ApiResponse<FilterBouncedRecipientsResult>> FilterBouncedRecipientWithHttpInfoAsync(FilterBouncedRecipientsOptions filterBouncedRecipientsOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description FilterBouncedRecipientsOptions filterBouncedRecipientsOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<FilterBouncedRecipientsResult>> Task of ApiResponse (FilterBouncedRecipientsResult) Remarks Prevent email sending errors by remove recipients who have resulted in past email bounces or complaints Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAccountBounceBlockStatusAsync(int, CancellationToken) Can account send email Declaration Task<AccountBounceBlockDto> GetAccountBounceBlockStatusAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AccountBounceBlockDto> Task of AccountBounceBlockDto Remarks Check if account block status prevents sending Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAccountBounceBlockStatusWithHttpInfoAsync(int, CancellationToken) Can account send email Declaration Task<ApiResponse<AccountBounceBlockDto>> GetAccountBounceBlockStatusWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AccountBounceBlockDto>> Task of ApiResponse (AccountBounceBlockDto) Remarks Check if account block status prevents sending Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmailAsync(Guid, int, CancellationToken) Get a bounced email. Declaration Task<BouncedEmailDto> GetBouncedEmailAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of the bounced email to fetch int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<BouncedEmailDto> Task of BouncedEmailDto Remarks Bounced emails are email you have sent that were rejected by a recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmailsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated list of bounced emails. Declaration Task<PageBouncedEmail> GetBouncedEmailsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageBouncedEmail> Task of PageBouncedEmail Remarks Bounced emails are email you have sent that were rejected by a recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmailsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated list of bounced emails. Declaration Task<ApiResponse<PageBouncedEmail>> GetBouncedEmailsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageBouncedEmail>> Task of ApiResponse (PageBouncedEmail) Remarks Bounced emails are email you have sent that were rejected by a recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmailWithHttpInfoAsync(Guid, int, CancellationToken) Get a bounced email. Declaration Task<ApiResponse<BouncedEmailDto>> GetBouncedEmailWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of the bounced email to fetch int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<BouncedEmailDto>> Task of ApiResponse (BouncedEmailDto) Remarks Bounced emails are email you have sent that were rejected by a recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipientAsync(Guid, int, CancellationToken) Get a bounced email. Declaration Task<BouncedRecipientDto> GetBouncedRecipientAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of the bounced recipient int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<BouncedRecipientDto> Task of BouncedRecipientDto Remarks Bounced emails are email you have sent that were rejected by a recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipientsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated list of bounced recipients. Declaration Task<PageBouncedRecipients> GetBouncedRecipientsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageBouncedRecipients> Task of PageBouncedRecipients Remarks Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipientsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated list of bounced recipients. Declaration Task<ApiResponse<PageBouncedRecipients>> GetBouncedRecipientsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageBouncedRecipients>> Task of ApiResponse (PageBouncedRecipients) Remarks Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipientWithHttpInfoAsync(Guid, int, CancellationToken) Get a bounced email. Declaration Task<ApiResponse<BouncedRecipientDto>> GetBouncedRecipientWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of the bounced recipient int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<BouncedRecipientDto>> Task of ApiResponse (BouncedRecipientDto) Remarks Bounced emails are email you have sent that were rejected by a recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaintAsync(Guid, int, CancellationToken) Get complaint Declaration Task<Complaint> GetComplaintAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of the complaint int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Complaint> Task of Complaint Remarks Get complaint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaintsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated list of complaints. Declaration Task<PageComplaint> GetComplaintsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageComplaint> Task of PageComplaint Remarks SMTP complaints made against your account Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaintsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated list of complaints. Declaration Task<ApiResponse<PageComplaint>> GetComplaintsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageComplaint>> Task of ApiResponse (PageComplaint) Remarks SMTP complaints made against your account Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaintWithHttpInfoAsync(Guid, int, CancellationToken) Get complaint Declaration Task<ApiResponse<Complaint>> GetComplaintWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of the complaint int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Complaint>> Task of ApiResponse (Complaint) Remarks Get complaint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetListUnsubscribeRecipientsAsync(int?, int?, string, Guid?, int, CancellationToken) Get paginated list of unsubscribed recipients. Declaration Task<PageListUnsubscribeRecipients> GetListUnsubscribeRecipientsAsync(int? page = null, int? size = null, string sort = null, Guid? domainId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) Guid? domainId Filter by domainId (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageListUnsubscribeRecipients> Task of PageListUnsubscribeRecipients Remarks Unsubscribed recipient have unsubscribed from a mailing list for a user or domain and cannot be contacted again. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetListUnsubscribeRecipientsWithHttpInfoAsync(int?, int?, string, Guid?, int, CancellationToken) Get paginated list of unsubscribed recipients. Declaration Task<ApiResponse<PageListUnsubscribeRecipients>> GetListUnsubscribeRecipientsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, Guid? domainId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) Guid? domainId Filter by domainId (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageListUnsubscribeRecipients>> Task of ApiResponse (PageListUnsubscribeRecipients) Remarks Unsubscribed recipient have unsubscribed from a mailing list for a user or domain and cannot be contacted again. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IBounceControllerApiSync.html": {
    "href": "api/mailslurp.Api.IBounceControllerApiSync.html",
    "title": "Interface IBounceControllerApiSync | MailSlurp",
    "keywords": "Interface IBounceControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IBounceControllerApiSync : IApiAccessor Methods View Source FilterBouncedRecipient(FilterBouncedRecipientsOptions, int) Filter a list of email recipients and remove those who have bounced Declaration FilterBouncedRecipientsResult FilterBouncedRecipient(FilterBouncedRecipientsOptions filterBouncedRecipientsOptions, int operationIndex = 0) Parameters Type Name Description FilterBouncedRecipientsOptions filterBouncedRecipientsOptions int operationIndex Index associated with the operation. Returns Type Description FilterBouncedRecipientsResult FilterBouncedRecipientsResult Remarks Prevent email sending errors by remove recipients who have resulted in past email bounces or complaints Exceptions Type Condition ApiException Thrown when fails to make API call View Source FilterBouncedRecipientWithHttpInfo(FilterBouncedRecipientsOptions, int) Filter a list of email recipients and remove those who have bounced Declaration ApiResponse<FilterBouncedRecipientsResult> FilterBouncedRecipientWithHttpInfo(FilterBouncedRecipientsOptions filterBouncedRecipientsOptions, int operationIndex = 0) Parameters Type Name Description FilterBouncedRecipientsOptions filterBouncedRecipientsOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<FilterBouncedRecipientsResult> ApiResponse of FilterBouncedRecipientsResult Remarks Prevent email sending errors by remove recipients who have resulted in past email bounces or complaints Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAccountBounceBlockStatus(int) Can account send email Declaration AccountBounceBlockDto GetAccountBounceBlockStatus(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description AccountBounceBlockDto AccountBounceBlockDto Remarks Check if account block status prevents sending Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAccountBounceBlockStatusWithHttpInfo(int) Can account send email Declaration ApiResponse<AccountBounceBlockDto> GetAccountBounceBlockStatusWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AccountBounceBlockDto> ApiResponse of AccountBounceBlockDto Remarks Check if account block status prevents sending Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmail(Guid, int) Get a bounced email. Declaration BouncedEmailDto GetBouncedEmail(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of the bounced email to fetch int operationIndex Index associated with the operation. Returns Type Description BouncedEmailDto BouncedEmailDto Remarks Bounced emails are email you have sent that were rejected by a recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmails(int?, int?, string, DateTime?, DateTime?, int) Get paginated list of bounced emails. Declaration PageBouncedEmail GetBouncedEmails(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageBouncedEmail PageBouncedEmail Remarks Bounced emails are email you have sent that were rejected by a recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmailsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get paginated list of bounced emails. Declaration ApiResponse<PageBouncedEmail> GetBouncedEmailsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageBouncedEmail> ApiResponse of PageBouncedEmail Remarks Bounced emails are email you have sent that were rejected by a recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedEmailWithHttpInfo(Guid, int) Get a bounced email. Declaration ApiResponse<BouncedEmailDto> GetBouncedEmailWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of the bounced email to fetch int operationIndex Index associated with the operation. Returns Type Description ApiResponse<BouncedEmailDto> ApiResponse of BouncedEmailDto Remarks Bounced emails are email you have sent that were rejected by a recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipient(Guid, int) Get a bounced email. Declaration BouncedRecipientDto GetBouncedRecipient(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of the bounced recipient int operationIndex Index associated with the operation. Returns Type Description BouncedRecipientDto BouncedRecipientDto Remarks Bounced emails are email you have sent that were rejected by a recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipients(int?, int?, string, DateTime?, DateTime?, int) Get paginated list of bounced recipients. Declaration PageBouncedRecipients GetBouncedRecipients(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageBouncedRecipients PageBouncedRecipients Remarks Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipientsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get paginated list of bounced recipients. Declaration ApiResponse<PageBouncedRecipients> GetBouncedRecipientsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageBouncedRecipients> ApiResponse of PageBouncedRecipients Remarks Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBouncedRecipientWithHttpInfo(Guid, int) Get a bounced email. Declaration ApiResponse<BouncedRecipientDto> GetBouncedRecipientWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of the bounced recipient int operationIndex Index associated with the operation. Returns Type Description ApiResponse<BouncedRecipientDto> ApiResponse of BouncedRecipientDto Remarks Bounced emails are email you have sent that were rejected by a recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaint(Guid, int) Get complaint Declaration Complaint GetComplaint(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of the complaint int operationIndex Index associated with the operation. Returns Type Description Complaint Complaint Remarks Get complaint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaints(int?, int?, string, DateTime?, DateTime?, int) Get paginated list of complaints. Declaration PageComplaint GetComplaints(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageComplaint PageComplaint Remarks SMTP complaints made against your account Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaintsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get paginated list of complaints. Declaration ApiResponse<PageComplaint> GetComplaintsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageComplaint> ApiResponse of PageComplaint Remarks SMTP complaints made against your account Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetComplaintWithHttpInfo(Guid, int) Get complaint Declaration ApiResponse<Complaint> GetComplaintWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of the complaint int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Complaint> ApiResponse of Complaint Remarks Get complaint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetListUnsubscribeRecipients(int?, int?, string, Guid?, int) Get paginated list of unsubscribed recipients. Declaration PageListUnsubscribeRecipients GetListUnsubscribeRecipients(int? page = null, int? size = null, string sort = null, Guid? domainId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) Guid? domainId Filter by domainId (optional) int operationIndex Index associated with the operation. Returns Type Description PageListUnsubscribeRecipients PageListUnsubscribeRecipients Remarks Unsubscribed recipient have unsubscribed from a mailing list for a user or domain and cannot be contacted again. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetListUnsubscribeRecipientsWithHttpInfo(int?, int?, string, Guid?, int) Get paginated list of unsubscribed recipients. Declaration ApiResponse<PageListUnsubscribeRecipients> GetListUnsubscribeRecipientsWithHttpInfo(int? page = null, int? size = null, string sort = null, Guid? domainId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index (optional, default to 0) int? size Optional page size (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) Guid? domainId Filter by domainId (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageListUnsubscribeRecipients> ApiResponse of PageListUnsubscribeRecipients Remarks Unsubscribed recipient have unsubscribed from a mailing list for a user or domain and cannot be contacted again. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IBulkActionsControllerApi.html": {
    "href": "api/mailslurp.Api.IBulkActionsControllerApi.html",
    "title": "Interface IBulkActionsControllerApi | MailSlurp",
    "keywords": "Interface IBulkActionsControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IBulkActionsControllerApiSync.BulkCreateInboxes(int, int) IBulkActionsControllerApiSync.BulkCreateInboxesWithHttpInfo(int, int) IBulkActionsControllerApiSync.BulkDeleteInboxes(List<Guid>, int) IBulkActionsControllerApiSync.BulkDeleteInboxesWithHttpInfo(List<Guid>, int) IBulkActionsControllerApiSync.BulkSendEmails(BulkSendEmailOptions, int) IBulkActionsControllerApiSync.BulkSendEmailsWithHttpInfo(BulkSendEmailOptions, int) IBulkActionsControllerApiAsync.BulkCreateInboxesAsync(int, int, CancellationToken) IBulkActionsControllerApiAsync.BulkCreateInboxesWithHttpInfoAsync(int, int, CancellationToken) IBulkActionsControllerApiAsync.BulkDeleteInboxesAsync(List<Guid>, int, CancellationToken) IBulkActionsControllerApiAsync.BulkDeleteInboxesWithHttpInfoAsync(List<Guid>, int, CancellationToken) IBulkActionsControllerApiAsync.BulkSendEmailsAsync(BulkSendEmailOptions, int, CancellationToken) IBulkActionsControllerApiAsync.BulkSendEmailsWithHttpInfoAsync(BulkSendEmailOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IBulkActionsControllerApi : IBulkActionsControllerApiSync, IBulkActionsControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IBulkActionsControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IBulkActionsControllerApiAsync.html",
    "title": "Interface IBulkActionsControllerApiAsync | MailSlurp",
    "keywords": "Interface IBulkActionsControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IBulkActionsControllerApiAsync : IApiAccessor Methods View Source BulkCreateInboxesAsync(int, int, CancellationToken) Bulk create Inboxes (email addresses) Declaration Task<List<InboxDto>> BulkCreateInboxesAsync(int count, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int count Number of inboxes to be created in bulk int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<InboxDto>> Task of List<InboxDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkCreateInboxesWithHttpInfoAsync(int, int, CancellationToken) Bulk create Inboxes (email addresses) Declaration Task<ApiResponse<List<InboxDto>>> BulkCreateInboxesWithHttpInfoAsync(int count, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int count Number of inboxes to be created in bulk int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<InboxDto>>> Task of ApiResponse (List<InboxDto>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkDeleteInboxesAsync(List<Guid>, int, CancellationToken) Bulk Delete Inboxes Declaration Task BulkDeleteInboxesAsync(List<Guid> requestBody, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> requestBody int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkDeleteInboxesWithHttpInfoAsync(List<Guid>, int, CancellationToken) Bulk Delete Inboxes Declaration Task<ApiResponse<object>> BulkDeleteInboxesWithHttpInfoAsync(List<Guid> requestBody, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> requestBody int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkSendEmailsAsync(BulkSendEmailOptions, int, CancellationToken) Bulk Send Emails Declaration Task BulkSendEmailsAsync(BulkSendEmailOptions bulkSendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description BulkSendEmailOptions bulkSendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkSendEmailsWithHttpInfoAsync(BulkSendEmailOptions, int, CancellationToken) Bulk Send Emails Declaration Task<ApiResponse<object>> BulkSendEmailsWithHttpInfoAsync(BulkSendEmailOptions bulkSendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description BulkSendEmailOptions bulkSendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IBulkActionsControllerApiSync.html": {
    "href": "api/mailslurp.Api.IBulkActionsControllerApiSync.html",
    "title": "Interface IBulkActionsControllerApiSync | MailSlurp",
    "keywords": "Interface IBulkActionsControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IBulkActionsControllerApiSync : IApiAccessor Methods View Source BulkCreateInboxes(int, int) Bulk create Inboxes (email addresses) Declaration List<InboxDto> BulkCreateInboxes(int count, int operationIndex = 0) Parameters Type Name Description int count Number of inboxes to be created in bulk int operationIndex Index associated with the operation. Returns Type Description List<InboxDto> List<InboxDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkCreateInboxesWithHttpInfo(int, int) Bulk create Inboxes (email addresses) Declaration ApiResponse<List<InboxDto>> BulkCreateInboxesWithHttpInfo(int count, int operationIndex = 0) Parameters Type Name Description int count Number of inboxes to be created in bulk int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<InboxDto>> ApiResponse of List<InboxDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkDeleteInboxes(List<Guid>, int) Bulk Delete Inboxes Declaration void BulkDeleteInboxes(List<Guid> requestBody, int operationIndex = 0) Parameters Type Name Description List<Guid> requestBody int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkDeleteInboxesWithHttpInfo(List<Guid>, int) Bulk Delete Inboxes Declaration ApiResponse<object> BulkDeleteInboxesWithHttpInfo(List<Guid> requestBody, int operationIndex = 0) Parameters Type Name Description List<Guid> requestBody int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkSendEmails(BulkSendEmailOptions, int) Bulk Send Emails Declaration void BulkSendEmails(BulkSendEmailOptions bulkSendEmailOptions, int operationIndex = 0) Parameters Type Name Description BulkSendEmailOptions bulkSendEmailOptions int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source BulkSendEmailsWithHttpInfo(BulkSendEmailOptions, int) Bulk Send Emails Declaration ApiResponse<object> BulkSendEmailsWithHttpInfo(BulkSendEmailOptions bulkSendEmailOptions, int operationIndex = 0) Parameters Type Name Description BulkSendEmailOptions bulkSendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.ICommonActionsControllerApi.html": {
    "href": "api/mailslurp.Api.ICommonActionsControllerApi.html",
    "title": "Interface ICommonActionsControllerApi | MailSlurp",
    "keywords": "Interface ICommonActionsControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members ICommonActionsControllerApiSync.CreateNewEmailAddress(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int) ICommonActionsControllerApiSync.CreateNewEmailAddressWithHttpInfo(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int) ICommonActionsControllerApiSync.CreateRandomInbox(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int) ICommonActionsControllerApiSync.CreateRandomInboxWithHttpInfo(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int) ICommonActionsControllerApiSync.DeleteEmailAddress(Guid, int) ICommonActionsControllerApiSync.DeleteEmailAddressWithHttpInfo(Guid, int) ICommonActionsControllerApiSync.EmptyInbox(Guid, int) ICommonActionsControllerApiSync.EmptyInboxWithHttpInfo(Guid, int) ICommonActionsControllerApiSync.SendEmailQuery(string, Guid?, string, string, int) ICommonActionsControllerApiSync.SendEmailQueryWithHttpInfo(string, Guid?, string, string, int) ICommonActionsControllerApiSync.SendEmailSimple(SimpleSendEmailOptions, int) ICommonActionsControllerApiSync.SendEmailSimpleWithHttpInfo(SimpleSendEmailOptions, int) ICommonActionsControllerApiAsync.CreateNewEmailAddressAsync(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int, CancellationToken) ICommonActionsControllerApiAsync.CreateNewEmailAddressWithHttpInfoAsync(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int, CancellationToken) ICommonActionsControllerApiAsync.CreateRandomInboxAsync(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int, CancellationToken) ICommonActionsControllerApiAsync.CreateRandomInboxWithHttpInfoAsync(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int, CancellationToken) ICommonActionsControllerApiAsync.DeleteEmailAddressAsync(Guid, int, CancellationToken) ICommonActionsControllerApiAsync.DeleteEmailAddressWithHttpInfoAsync(Guid, int, CancellationToken) ICommonActionsControllerApiAsync.EmptyInboxAsync(Guid, int, CancellationToken) ICommonActionsControllerApiAsync.EmptyInboxWithHttpInfoAsync(Guid, int, CancellationToken) ICommonActionsControllerApiAsync.SendEmailQueryAsync(string, Guid?, string, string, int, CancellationToken) ICommonActionsControllerApiAsync.SendEmailQueryWithHttpInfoAsync(string, Guid?, string, string, int, CancellationToken) ICommonActionsControllerApiAsync.SendEmailSimpleAsync(SimpleSendEmailOptions, int, CancellationToken) ICommonActionsControllerApiAsync.SendEmailSimpleWithHttpInfoAsync(SimpleSendEmailOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ICommonActionsControllerApi : ICommonActionsControllerApiSync, ICommonActionsControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.ICommonActionsControllerApiAsync.html": {
    "href": "api/mailslurp.Api.ICommonActionsControllerApiAsync.html",
    "title": "Interface ICommonActionsControllerApiAsync | MailSlurp",
    "keywords": "Interface ICommonActionsControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ICommonActionsControllerApiAsync : IApiAccessor Methods View Source CreateNewEmailAddressAsync(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int, CancellationToken) Create new random inbox Declaration Task<InboxDto> CreateNewEmailAddressAsync(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Remarks Returns an Inbox with an id and an emailAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewEmailAddressWithHttpInfoAsync(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int, CancellationToken) Create new random inbox Declaration Task<ApiResponse<InboxDto>> CreateNewEmailAddressWithHttpInfoAsync(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Remarks Returns an Inbox with an id and an emailAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateRandomInboxAsync(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int, CancellationToken) Create new random inbox Declaration Task<InboxDto> CreateRandomInboxAsync(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Remarks Returns an Inbox with an id and an emailAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateRandomInboxWithHttpInfoAsync(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int, CancellationToken) Create new random inbox Declaration Task<ApiResponse<InboxDto>> CreateRandomInboxWithHttpInfoAsync(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Remarks Returns an Inbox with an id and an emailAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailAddressAsync(Guid, int, CancellationToken) Delete inbox email address by inbox id Declaration Task DeleteEmailAddressAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Deletes inbox email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailAddressWithHttpInfoAsync(Guid, int, CancellationToken) Delete inbox email address by inbox id Declaration Task<ApiResponse<object>> DeleteEmailAddressWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Deletes inbox email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source EmptyInboxAsync(Guid, int, CancellationToken) Delete all emails in an inbox Declaration Task EmptyInboxAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Deletes all emails Exceptions Type Condition ApiException Thrown when fails to make API call View Source EmptyInboxWithHttpInfoAsync(Guid, int, CancellationToken) Delete all emails in an inbox Declaration Task<ApiResponse<object>> EmptyInboxWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Deletes all emails Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailQueryAsync(string, Guid?, string, string, int, CancellationToken) Send an email using query parameters Declaration Task SendEmailQueryAsync(string to, Guid? senderId = null, string body = null, string subject = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string to Email address to send to Guid? senderId ID of inbox to send from. If null an inbox will be created for sending (optional) string body Body of the email message. Supports HTML (optional) string subject Subject line of the email (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks If no senderId or inboxId provided a random email address will be used to send from. Ensure your parameters are URL encoded. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailQueryWithHttpInfoAsync(string, Guid?, string, string, int, CancellationToken) Send an email using query parameters Declaration Task<ApiResponse<object>> SendEmailQueryWithHttpInfoAsync(string to, Guid? senderId = null, string body = null, string subject = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string to Email address to send to Guid? senderId ID of inbox to send from. If null an inbox will be created for sending (optional) string body Body of the email message. Supports HTML (optional) string subject Subject line of the email (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks If no senderId or inboxId provided a random email address will be used to send from. Ensure your parameters are URL encoded. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSimpleAsync(SimpleSendEmailOptions, int, CancellationToken) Send an email Declaration Task SendEmailSimpleAsync(SimpleSendEmailOptions simpleSendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SimpleSendEmailOptions simpleSendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks If no senderId or inboxId provided a random email address will be used to send from. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSimpleWithHttpInfoAsync(SimpleSendEmailOptions, int, CancellationToken) Send an email Declaration Task<ApiResponse<object>> SendEmailSimpleWithHttpInfoAsync(SimpleSendEmailOptions simpleSendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SimpleSendEmailOptions simpleSendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks If no senderId or inboxId provided a random email address will be used to send from. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.ICommonActionsControllerApiSync.html": {
    "href": "api/mailslurp.Api.ICommonActionsControllerApiSync.html",
    "title": "Interface ICommonActionsControllerApiSync | MailSlurp",
    "keywords": "Interface ICommonActionsControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ICommonActionsControllerApiSync : IApiAccessor Methods View Source CreateNewEmailAddress(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int) Create new random inbox Declaration InboxDto CreateNewEmailAddress(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Remarks Returns an Inbox with an id and an emailAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewEmailAddressWithHttpInfo(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int) Create new random inbox Declaration ApiResponse<InboxDto> CreateNewEmailAddressWithHttpInfo(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Remarks Returns an Inbox with an id and an emailAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateRandomInbox(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int) Create new random inbox Declaration InboxDto CreateRandomInbox(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Remarks Returns an Inbox with an id and an emailAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateRandomInboxWithHttpInfo(bool?, bool?, DateTime?, long?, string, string, string, string, List<string>, bool?, bool?, bool?, string, Guid?, string, int) Create new random inbox Declaration ApiResponse<InboxDto> CreateRandomInboxWithHttpInfo(bool? allowTeamAccess = null, bool? useDomainPool = null, DateTime? expiresAt = null, long? expiresIn = null, string emailAddress = null, string inboxType = null, string description = null, string name = null, List<string> tags = null, bool? favourite = null, bool? virtualInbox = null, bool? useShortAddress = null, string domainName = null, Guid? domainId = null, string prefix = null, int operationIndex = 0) Parameters Type Name Description bool? allowTeamAccess (optional) bool? useDomainPool (optional) DateTime? expiresAt (optional) long? expiresIn (optional) string emailAddress (optional) string inboxType (optional) string description (optional) string name (optional) List<string> tags (optional) bool? favourite (optional) bool? virtualInbox (optional) bool? useShortAddress (optional) string domainName (optional) Guid? domainId (optional) string prefix (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Remarks Returns an Inbox with an id and an emailAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailAddress(Guid, int) Delete inbox email address by inbox id Declaration void DeleteEmailAddress(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Remarks Deletes inbox email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailAddressWithHttpInfo(Guid, int) Delete inbox email address by inbox id Declaration ApiResponse<object> DeleteEmailAddressWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Deletes inbox email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source EmptyInbox(Guid, int) Delete all emails in an inbox Declaration void EmptyInbox(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Remarks Deletes all emails Exceptions Type Condition ApiException Thrown when fails to make API call View Source EmptyInboxWithHttpInfo(Guid, int) Delete all emails in an inbox Declaration ApiResponse<object> EmptyInboxWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Deletes all emails Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailQuery(string, Guid?, string, string, int) Send an email using query parameters Declaration void SendEmailQuery(string to, Guid? senderId = null, string body = null, string subject = null, int operationIndex = 0) Parameters Type Name Description string to Email address to send to Guid? senderId ID of inbox to send from. If null an inbox will be created for sending (optional) string body Body of the email message. Supports HTML (optional) string subject Subject line of the email (optional) int operationIndex Index associated with the operation. Remarks If no senderId or inboxId provided a random email address will be used to send from. Ensure your parameters are URL encoded. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailQueryWithHttpInfo(string, Guid?, string, string, int) Send an email using query parameters Declaration ApiResponse<object> SendEmailQueryWithHttpInfo(string to, Guid? senderId = null, string body = null, string subject = null, int operationIndex = 0) Parameters Type Name Description string to Email address to send to Guid? senderId ID of inbox to send from. If null an inbox will be created for sending (optional) string body Body of the email message. Supports HTML (optional) string subject Subject line of the email (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks If no senderId or inboxId provided a random email address will be used to send from. Ensure your parameters are URL encoded. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSimple(SimpleSendEmailOptions, int) Send an email Declaration void SendEmailSimple(SimpleSendEmailOptions simpleSendEmailOptions, int operationIndex = 0) Parameters Type Name Description SimpleSendEmailOptions simpleSendEmailOptions int operationIndex Index associated with the operation. Remarks If no senderId or inboxId provided a random email address will be used to send from. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSimpleWithHttpInfo(SimpleSendEmailOptions, int) Send an email Declaration ApiResponse<object> SendEmailSimpleWithHttpInfo(SimpleSendEmailOptions simpleSendEmailOptions, int operationIndex = 0) Parameters Type Name Description SimpleSendEmailOptions simpleSendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks If no senderId or inboxId provided a random email address will be used to send from. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IConnectorControllerApi.html": {
    "href": "api/mailslurp.Api.IConnectorControllerApi.html",
    "title": "Interface IConnectorControllerApi | MailSlurp",
    "keywords": "Interface IConnectorControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IConnectorControllerApiSync.CreateConnector(CreateConnectorOptions, int) IConnectorControllerApiSync.CreateConnectorWithHttpInfo(CreateConnectorOptions, int) IConnectorControllerApiSync.DeleteAllConnector(int) IConnectorControllerApiSync.DeleteAllConnectorWithHttpInfo(int) IConnectorControllerApiSync.DeleteConnector(Guid, int) IConnectorControllerApiSync.DeleteConnectorWithHttpInfo(Guid, int) IConnectorControllerApiSync.GetAllConnectorSyncEvents(int?, int?, string, DateTime?, DateTime?, int) IConnectorControllerApiSync.GetAllConnectorSyncEventsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) IConnectorControllerApiSync.GetConnector(Guid, int) IConnectorControllerApiSync.GetConnectorWithHttpInfo(Guid, int) IConnectorControllerApiSync.GetConnectorSyncEvent(Guid, int) IConnectorControllerApiSync.GetConnectorSyncEventWithHttpInfo(Guid, int) IConnectorControllerApiSync.GetConnectorSyncEvents(Guid, int?, int?, string, DateTime?, DateTime?, int) IConnectorControllerApiSync.GetConnectorSyncEventsWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) IConnectorControllerApiSync.GetConnectors(int?, int?, string, DateTime?, DateTime?, int) IConnectorControllerApiSync.GetConnectorsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) IConnectorControllerApiSync.SyncConnector(Guid, int) IConnectorControllerApiSync.SyncConnectorWithHttpInfo(Guid, int) IConnectorControllerApiSync.UpdateConnector(Guid, CreateConnectorOptions, int) IConnectorControllerApiSync.UpdateConnectorWithHttpInfo(Guid, CreateConnectorOptions, int) IConnectorControllerApiAsync.CreateConnectorAsync(CreateConnectorOptions, int, CancellationToken) IConnectorControllerApiAsync.CreateConnectorWithHttpInfoAsync(CreateConnectorOptions, int, CancellationToken) IConnectorControllerApiAsync.DeleteAllConnectorAsync(int, CancellationToken) IConnectorControllerApiAsync.DeleteAllConnectorWithHttpInfoAsync(int, CancellationToken) IConnectorControllerApiAsync.DeleteConnectorAsync(Guid, int, CancellationToken) IConnectorControllerApiAsync.DeleteConnectorWithHttpInfoAsync(Guid, int, CancellationToken) IConnectorControllerApiAsync.GetAllConnectorSyncEventsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IConnectorControllerApiAsync.GetAllConnectorSyncEventsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IConnectorControllerApiAsync.GetConnectorAsync(Guid, int, CancellationToken) IConnectorControllerApiAsync.GetConnectorWithHttpInfoAsync(Guid, int, CancellationToken) IConnectorControllerApiAsync.GetConnectorSyncEventAsync(Guid, int, CancellationToken) IConnectorControllerApiAsync.GetConnectorSyncEventWithHttpInfoAsync(Guid, int, CancellationToken) IConnectorControllerApiAsync.GetConnectorSyncEventsAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IConnectorControllerApiAsync.GetConnectorSyncEventsWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IConnectorControllerApiAsync.GetConnectorsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IConnectorControllerApiAsync.GetConnectorsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IConnectorControllerApiAsync.SyncConnectorAsync(Guid, int, CancellationToken) IConnectorControllerApiAsync.SyncConnectorWithHttpInfoAsync(Guid, int, CancellationToken) IConnectorControllerApiAsync.UpdateConnectorAsync(Guid, CreateConnectorOptions, int, CancellationToken) IConnectorControllerApiAsync.UpdateConnectorWithHttpInfoAsync(Guid, CreateConnectorOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IConnectorControllerApi : IConnectorControllerApiSync, IConnectorControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IConnectorControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IConnectorControllerApiAsync.html",
    "title": "Interface IConnectorControllerApiAsync | MailSlurp",
    "keywords": "Interface IConnectorControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IConnectorControllerApiAsync : IApiAccessor Methods View Source CreateConnectorAsync(CreateConnectorOptions, int, CancellationToken) Create an inbox connector Declaration Task<ConnectorDto> CreateConnectorAsync(CreateConnectorOptions createConnectorOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ConnectorDto> Task of ConnectorDto Remarks Sync emails between external mailboxes and MailSlurp inboxes Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateConnectorWithHttpInfoAsync(CreateConnectorOptions, int, CancellationToken) Create an inbox connector Declaration Task<ApiResponse<ConnectorDto>> CreateConnectorWithHttpInfoAsync(CreateConnectorOptions createConnectorOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ConnectorDto>> Task of ApiResponse (ConnectorDto) Remarks Sync emails between external mailboxes and MailSlurp inboxes Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllConnectorAsync(int, CancellationToken) Delete all inbox connectors Declaration Task DeleteAllConnectorAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllConnectorWithHttpInfoAsync(int, CancellationToken) Delete all inbox connectors Declaration Task<ApiResponse<object>> DeleteAllConnectorWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteConnectorAsync(Guid, int, CancellationToken) Delete an inbox connector Declaration Task DeleteConnectorAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteConnectorWithHttpInfoAsync(Guid, int, CancellationToken) Delete an inbox connector Declaration Task<ApiResponse<object>> DeleteConnectorWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllConnectorSyncEventsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all inbox connector sync events Declaration Task<PageConnectorSyncEvents> GetAllConnectorSyncEventsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageConnectorSyncEvents> Task of PageConnectorSyncEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllConnectorSyncEventsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all inbox connector sync events Declaration Task<ApiResponse<PageConnectorSyncEvents>> GetAllConnectorSyncEventsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageConnectorSyncEvents>> Task of ApiResponse (PageConnectorSyncEvents) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorAsync(Guid, int, CancellationToken) Get an inbox connector Declaration Task<ConnectorDto> GetConnectorAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ConnectorDto> Task of ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get inbox connectors Declaration Task<PageConnector> GetConnectorsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageConnector> Task of PageConnector Remarks List inbox connectors that sync external emails to MailSlurp inboxes Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get inbox connectors Declaration Task<ApiResponse<PageConnector>> GetConnectorsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageConnector>> Task of ApiResponse (PageConnector) Remarks List inbox connectors that sync external emails to MailSlurp inboxes Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEventAsync(Guid, int, CancellationToken) Get an inbox connector sync event Declaration Task<ConnectorSyncEventDto> GetConnectorSyncEventAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ConnectorSyncEventDto> Task of ConnectorSyncEventDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEventsAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get an inbox connector sync events Declaration Task<PageConnectorSyncEvents> GetConnectorSyncEventsAsync(Guid id, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageConnectorSyncEvents> Task of PageConnectorSyncEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEventsWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get an inbox connector sync events Declaration Task<ApiResponse<PageConnectorSyncEvents>> GetConnectorSyncEventsWithHttpInfoAsync(Guid id, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageConnectorSyncEvents>> Task of ApiResponse (PageConnectorSyncEvents) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEventWithHttpInfoAsync(Guid, int, CancellationToken) Get an inbox connector sync event Declaration Task<ApiResponse<ConnectorSyncEventDto>> GetConnectorSyncEventWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ConnectorSyncEventDto>> Task of ApiResponse (ConnectorSyncEventDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorWithHttpInfoAsync(Guid, int, CancellationToken) Get an inbox connector Declaration Task<ApiResponse<ConnectorDto>> GetConnectorWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ConnectorDto>> Task of ApiResponse (ConnectorDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SyncConnectorAsync(Guid, int, CancellationToken) Sync an inbox connector Declaration Task<ConnectorSyncRequestResult> SyncConnectorAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ConnectorSyncRequestResult> Task of ConnectorSyncRequestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source SyncConnectorWithHttpInfoAsync(Guid, int, CancellationToken) Sync an inbox connector Declaration Task<ApiResponse<ConnectorSyncRequestResult>> SyncConnectorWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ConnectorSyncRequestResult>> Task of ApiResponse (ConnectorSyncRequestResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateConnectorAsync(Guid, CreateConnectorOptions, int, CancellationToken) Update an inbox connector Declaration Task<ConnectorDto> UpdateConnectorAsync(Guid id, CreateConnectorOptions createConnectorOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ConnectorDto> Task of ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateConnectorWithHttpInfoAsync(Guid, CreateConnectorOptions, int, CancellationToken) Update an inbox connector Declaration Task<ApiResponse<ConnectorDto>> UpdateConnectorWithHttpInfoAsync(Guid id, CreateConnectorOptions createConnectorOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ConnectorDto>> Task of ApiResponse (ConnectorDto) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IConnectorControllerApiSync.html": {
    "href": "api/mailslurp.Api.IConnectorControllerApiSync.html",
    "title": "Interface IConnectorControllerApiSync | MailSlurp",
    "keywords": "Interface IConnectorControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IConnectorControllerApiSync : IApiAccessor Methods View Source CreateConnector(CreateConnectorOptions, int) Create an inbox connector Declaration ConnectorDto CreateConnector(CreateConnectorOptions createConnectorOptions, int operationIndex = 0) Parameters Type Name Description CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. Returns Type Description ConnectorDto ConnectorDto Remarks Sync emails between external mailboxes and MailSlurp inboxes Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateConnectorWithHttpInfo(CreateConnectorOptions, int) Create an inbox connector Declaration ApiResponse<ConnectorDto> CreateConnectorWithHttpInfo(CreateConnectorOptions createConnectorOptions, int operationIndex = 0) Parameters Type Name Description CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ConnectorDto> ApiResponse of ConnectorDto Remarks Sync emails between external mailboxes and MailSlurp inboxes Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllConnector(int) Delete all inbox connectors Declaration void DeleteAllConnector(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllConnectorWithHttpInfo(int) Delete all inbox connectors Declaration ApiResponse<object> DeleteAllConnectorWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteConnector(Guid, int) Delete an inbox connector Declaration void DeleteConnector(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteConnectorWithHttpInfo(Guid, int) Delete an inbox connector Declaration ApiResponse<object> DeleteConnectorWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllConnectorSyncEvents(int?, int?, string, DateTime?, DateTime?, int) Get all inbox connector sync events Declaration PageConnectorSyncEvents GetAllConnectorSyncEvents(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageConnectorSyncEvents PageConnectorSyncEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllConnectorSyncEventsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get all inbox connector sync events Declaration ApiResponse<PageConnectorSyncEvents> GetAllConnectorSyncEventsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageConnectorSyncEvents> ApiResponse of PageConnectorSyncEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnector(Guid, int) Get an inbox connector Declaration ConnectorDto GetConnector(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ConnectorDto ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectors(int?, int?, string, DateTime?, DateTime?, int) Get inbox connectors Declaration PageConnector GetConnectors(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageConnector PageConnector Remarks List inbox connectors that sync external emails to MailSlurp inboxes Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get inbox connectors Declaration ApiResponse<PageConnector> GetConnectorsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageConnector> ApiResponse of PageConnector Remarks List inbox connectors that sync external emails to MailSlurp inboxes Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEvent(Guid, int) Get an inbox connector sync event Declaration ConnectorSyncEventDto GetConnectorSyncEvent(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ConnectorSyncEventDto ConnectorSyncEventDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEvents(Guid, int?, int?, string, DateTime?, DateTime?, int) Get an inbox connector sync events Declaration PageConnectorSyncEvents GetConnectorSyncEvents(Guid id, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid id int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageConnectorSyncEvents PageConnectorSyncEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEventsWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get an inbox connector sync events Declaration ApiResponse<PageConnectorSyncEvents> GetConnectorSyncEventsWithHttpInfo(Guid id, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid id int? page Optional page index in connector list pagination (optional, default to 0) int? size Optional page size in connector list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageConnectorSyncEvents> ApiResponse of PageConnectorSyncEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorSyncEventWithHttpInfo(Guid, int) Get an inbox connector sync event Declaration ApiResponse<ConnectorSyncEventDto> GetConnectorSyncEventWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ConnectorSyncEventDto> ApiResponse of ConnectorSyncEventDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetConnectorWithHttpInfo(Guid, int) Get an inbox connector Declaration ApiResponse<ConnectorDto> GetConnectorWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ConnectorDto> ApiResponse of ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SyncConnector(Guid, int) Sync an inbox connector Declaration ConnectorSyncRequestResult SyncConnector(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ConnectorSyncRequestResult ConnectorSyncRequestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source SyncConnectorWithHttpInfo(Guid, int) Sync an inbox connector Declaration ApiResponse<ConnectorSyncRequestResult> SyncConnectorWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ConnectorSyncRequestResult> ApiResponse of ConnectorSyncRequestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateConnector(Guid, CreateConnectorOptions, int) Update an inbox connector Declaration ConnectorDto UpdateConnector(Guid id, CreateConnectorOptions createConnectorOptions, int operationIndex = 0) Parameters Type Name Description Guid id CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. Returns Type Description ConnectorDto ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateConnectorWithHttpInfo(Guid, CreateConnectorOptions, int) Update an inbox connector Declaration ApiResponse<ConnectorDto> UpdateConnectorWithHttpInfo(Guid id, CreateConnectorOptions createConnectorOptions, int operationIndex = 0) Parameters Type Name Description Guid id CreateConnectorOptions createConnectorOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ConnectorDto> ApiResponse of ConnectorDto Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IContactControllerApi.html": {
    "href": "api/mailslurp.Api.IContactControllerApi.html",
    "title": "Interface IContactControllerApi | MailSlurp",
    "keywords": "Interface IContactControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IContactControllerApiSync.CreateContact(CreateContactOptions, int) IContactControllerApiSync.CreateContactWithHttpInfo(CreateContactOptions, int) IContactControllerApiSync.DeleteContact(Guid, int) IContactControllerApiSync.DeleteContactWithHttpInfo(Guid, int) IContactControllerApiSync.GetAllContacts(int?, int?, string, DateTime?, DateTime?, string, int) IContactControllerApiSync.GetAllContactsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, string, int) IContactControllerApiSync.GetContact(Guid, int) IContactControllerApiSync.GetContactWithHttpInfo(Guid, int) IContactControllerApiSync.GetContactVCard(Guid, int) IContactControllerApiSync.GetContactVCardWithHttpInfo(Guid, int) IContactControllerApiSync.GetContacts(int) IContactControllerApiSync.GetContactsWithHttpInfo(int) IContactControllerApiAsync.CreateContactAsync(CreateContactOptions, int, CancellationToken) IContactControllerApiAsync.CreateContactWithHttpInfoAsync(CreateContactOptions, int, CancellationToken) IContactControllerApiAsync.DeleteContactAsync(Guid, int, CancellationToken) IContactControllerApiAsync.DeleteContactWithHttpInfoAsync(Guid, int, CancellationToken) IContactControllerApiAsync.GetAllContactsAsync(int?, int?, string, DateTime?, DateTime?, string, int, CancellationToken) IContactControllerApiAsync.GetAllContactsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, string, int, CancellationToken) IContactControllerApiAsync.GetContactAsync(Guid, int, CancellationToken) IContactControllerApiAsync.GetContactWithHttpInfoAsync(Guid, int, CancellationToken) IContactControllerApiAsync.GetContactVCardAsync(Guid, int, CancellationToken) IContactControllerApiAsync.GetContactVCardWithHttpInfoAsync(Guid, int, CancellationToken) IContactControllerApiAsync.GetContactsAsync(int, CancellationToken) IContactControllerApiAsync.GetContactsWithHttpInfoAsync(int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IContactControllerApi : IContactControllerApiSync, IContactControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IContactControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IContactControllerApiAsync.html",
    "title": "Interface IContactControllerApiAsync | MailSlurp",
    "keywords": "Interface IContactControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IContactControllerApiAsync : IApiAccessor Methods View Source CreateContactAsync(CreateContactOptions, int, CancellationToken) Create a contact Declaration Task<ContactDto> CreateContactAsync(CreateContactOptions createContactOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateContactOptions createContactOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ContactDto> Task of ContactDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateContactWithHttpInfoAsync(CreateContactOptions, int, CancellationToken) Create a contact Declaration Task<ApiResponse<ContactDto>> CreateContactWithHttpInfoAsync(CreateContactOptions createContactOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateContactOptions createContactOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ContactDto>> Task of ApiResponse (ContactDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteContactAsync(Guid, int, CancellationToken) Delete contact Declaration Task DeleteContactAsync(Guid contactId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteContactWithHttpInfoAsync(Guid, int, CancellationToken) Delete contact Declaration Task<ApiResponse<object>> DeleteContactWithHttpInfoAsync(Guid contactId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllContactsAsync(int?, int?, string, DateTime?, DateTime?, string, int, CancellationToken) Get all contacts Declaration Task<PageContactProjection> GetAllContactsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, string search = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) string search Search terms (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageContactProjection> Task of PageContactProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllContactsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, string, int, CancellationToken) Get all contacts Declaration Task<ApiResponse<PageContactProjection>> GetAllContactsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, string search = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) string search Search terms (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageContactProjection>> Task of ApiResponse (PageContactProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactAsync(Guid, int, CancellationToken) Get contact Declaration Task<ContactDto> GetContactAsync(Guid contactId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ContactDto> Task of ContactDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactsAsync(int, CancellationToken) Get all contacts Declaration Task<List<ContactProjection>> GetContactsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<ContactProjection>> Task of List<ContactProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactsWithHttpInfoAsync(int, CancellationToken) Get all contacts Declaration Task<ApiResponse<List<ContactProjection>>> GetContactsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<ContactProjection>>> Task of ApiResponse (List<ContactProjection>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactVCardAsync(Guid, int, CancellationToken) Get contact vCard vcf file Declaration [Obsolete] Task GetContactVCardAsync(Guid contactId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactVCardWithHttpInfoAsync(Guid, int, CancellationToken) Get contact vCard vcf file Declaration [Obsolete] Task<ApiResponse<object>> GetContactVCardWithHttpInfoAsync(Guid contactId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactWithHttpInfoAsync(Guid, int, CancellationToken) Get contact Declaration Task<ApiResponse<ContactDto>> GetContactWithHttpInfoAsync(Guid contactId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ContactDto>> Task of ApiResponse (ContactDto) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IContactControllerApiSync.html": {
    "href": "api/mailslurp.Api.IContactControllerApiSync.html",
    "title": "Interface IContactControllerApiSync | MailSlurp",
    "keywords": "Interface IContactControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IContactControllerApiSync : IApiAccessor Methods View Source CreateContact(CreateContactOptions, int) Create a contact Declaration ContactDto CreateContact(CreateContactOptions createContactOptions, int operationIndex = 0) Parameters Type Name Description CreateContactOptions createContactOptions int operationIndex Index associated with the operation. Returns Type Description ContactDto ContactDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateContactWithHttpInfo(CreateContactOptions, int) Create a contact Declaration ApiResponse<ContactDto> CreateContactWithHttpInfo(CreateContactOptions createContactOptions, int operationIndex = 0) Parameters Type Name Description CreateContactOptions createContactOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ContactDto> ApiResponse of ContactDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteContact(Guid, int) Delete contact Declaration void DeleteContact(Guid contactId, int operationIndex = 0) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteContactWithHttpInfo(Guid, int) Delete contact Declaration ApiResponse<object> DeleteContactWithHttpInfo(Guid contactId, int operationIndex = 0) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllContacts(int?, int?, string, DateTime?, DateTime?, string, int) Get all contacts Declaration PageContactProjection GetAllContacts(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, string search = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) string search Search terms (optional) int operationIndex Index associated with the operation. Returns Type Description PageContactProjection PageContactProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllContactsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, string, int) Get all contacts Declaration ApiResponse<PageContactProjection> GetAllContactsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, string search = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) string search Search terms (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageContactProjection> ApiResponse of PageContactProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContact(Guid, int) Get contact Declaration ContactDto GetContact(Guid contactId, int operationIndex = 0) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. Returns Type Description ContactDto ContactDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContacts(int) Get all contacts Declaration List<ContactProjection> GetContacts(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<ContactProjection> List<ContactProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactsWithHttpInfo(int) Get all contacts Declaration ApiResponse<List<ContactProjection>> GetContactsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<ContactProjection>> ApiResponse of List<ContactProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactVCard(Guid, int) Get contact vCard vcf file Declaration [Obsolete] void GetContactVCard(Guid contactId, int operationIndex = 0) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactVCardWithHttpInfo(Guid, int) Get contact vCard vcf file Declaration [Obsolete] ApiResponse<object> GetContactVCardWithHttpInfo(Guid contactId, int operationIndex = 0) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetContactWithHttpInfo(Guid, int) Get contact Declaration ApiResponse<ContactDto> GetContactWithHttpInfo(Guid contactId, int operationIndex = 0) Parameters Type Name Description Guid contactId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ContactDto> ApiResponse of ContactDto Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IDomainControllerApi.html": {
    "href": "api/mailslurp.Api.IDomainControllerApi.html",
    "title": "Interface IDomainControllerApi | MailSlurp",
    "keywords": "Interface IDomainControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IDomainControllerApiSync.AddDomainWildcardCatchAll(Guid, int) IDomainControllerApiSync.AddDomainWildcardCatchAllWithHttpInfo(Guid, int) IDomainControllerApiSync.CreateDomain(CreateDomainOptions, int) IDomainControllerApiSync.CreateDomainWithHttpInfo(CreateDomainOptions, int) IDomainControllerApiSync.DeleteDomain(Guid, int) IDomainControllerApiSync.DeleteDomainWithHttpInfo(Guid, int) IDomainControllerApiSync.GetDomain(Guid, bool?, int) IDomainControllerApiSync.GetDomainWithHttpInfo(Guid, bool?, int) IDomainControllerApiSync.GetDomainIssues(int) IDomainControllerApiSync.GetDomainIssuesWithHttpInfo(int) IDomainControllerApiSync.GetDomainWildcardCatchAllInbox(Guid, int) IDomainControllerApiSync.GetDomainWildcardCatchAllInboxWithHttpInfo(Guid, int) IDomainControllerApiSync.GetDomains(int) IDomainControllerApiSync.GetDomainsWithHttpInfo(int) IDomainControllerApiSync.UpdateDomain(Guid, UpdateDomainOptions, int) IDomainControllerApiSync.UpdateDomainWithHttpInfo(Guid, UpdateDomainOptions, int) IDomainControllerApiAsync.AddDomainWildcardCatchAllAsync(Guid, int, CancellationToken) IDomainControllerApiAsync.AddDomainWildcardCatchAllWithHttpInfoAsync(Guid, int, CancellationToken) IDomainControllerApiAsync.CreateDomainAsync(CreateDomainOptions, int, CancellationToken) IDomainControllerApiAsync.CreateDomainWithHttpInfoAsync(CreateDomainOptions, int, CancellationToken) IDomainControllerApiAsync.DeleteDomainAsync(Guid, int, CancellationToken) IDomainControllerApiAsync.DeleteDomainWithHttpInfoAsync(Guid, int, CancellationToken) IDomainControllerApiAsync.GetDomainAsync(Guid, bool?, int, CancellationToken) IDomainControllerApiAsync.GetDomainWithHttpInfoAsync(Guid, bool?, int, CancellationToken) IDomainControllerApiAsync.GetDomainIssuesAsync(int, CancellationToken) IDomainControllerApiAsync.GetDomainIssuesWithHttpInfoAsync(int, CancellationToken) IDomainControllerApiAsync.GetDomainWildcardCatchAllInboxAsync(Guid, int, CancellationToken) IDomainControllerApiAsync.GetDomainWildcardCatchAllInboxWithHttpInfoAsync(Guid, int, CancellationToken) IDomainControllerApiAsync.GetDomainsAsync(int, CancellationToken) IDomainControllerApiAsync.GetDomainsWithHttpInfoAsync(int, CancellationToken) IDomainControllerApiAsync.UpdateDomainAsync(Guid, UpdateDomainOptions, int, CancellationToken) IDomainControllerApiAsync.UpdateDomainWithHttpInfoAsync(Guid, UpdateDomainOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IDomainControllerApi : IDomainControllerApiSync, IDomainControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IDomainControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IDomainControllerApiAsync.html",
    "title": "Interface IDomainControllerApiAsync | MailSlurp",
    "keywords": "Interface IDomainControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IDomainControllerApiAsync : IApiAccessor Methods View Source AddDomainWildcardCatchAllAsync(Guid, int, CancellationToken) Add catch all wild card inbox to domain Declaration Task<DomainDto> AddDomainWildcardCatchAllAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DomainDto> Task of DomainDto Remarks Add a catch all inbox to a domain so that any emails sent to it that cannot be matched will be sent to the catch all inbox generated Exceptions Type Condition ApiException Thrown when fails to make API call View Source AddDomainWildcardCatchAllWithHttpInfoAsync(Guid, int, CancellationToken) Add catch all wild card inbox to domain Declaration Task<ApiResponse<DomainDto>> AddDomainWildcardCatchAllWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DomainDto>> Task of ApiResponse (DomainDto) Remarks Add a catch all inbox to a domain so that any emails sent to it that cannot be matched will be sent to the catch all inbox generated Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateDomainAsync(CreateDomainOptions, int, CancellationToken) Create Domain Declaration Task<DomainDto> CreateDomainAsync(CreateDomainOptions createDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateDomainOptions createDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DomainDto> Task of DomainDto Remarks Link a domain that you own with MailSlurp so you can create email addresses using it. Endpoint returns DNS records used for validation. You must add these verification records to your host provider's DNS setup to verify the domain. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateDomainWithHttpInfoAsync(CreateDomainOptions, int, CancellationToken) Create Domain Declaration Task<ApiResponse<DomainDto>> CreateDomainWithHttpInfoAsync(CreateDomainOptions createDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateDomainOptions createDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DomainDto>> Task of ApiResponse (DomainDto) Remarks Link a domain that you own with MailSlurp so you can create email addresses using it. Endpoint returns DNS records used for validation. You must add these verification records to your host provider's DNS setup to verify the domain. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteDomainAsync(Guid, int, CancellationToken) Delete a domain Declaration Task<List<string>> DeleteDomainAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<string>> Task of List<string> Remarks Delete a domain. This will disable any existing inboxes that use this domain. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteDomainWithHttpInfoAsync(Guid, int, CancellationToken) Delete a domain Declaration Task<ApiResponse<List<string>>> DeleteDomainWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<string>>> Task of ApiResponse (List<string>) Remarks Delete a domain. This will disable any existing inboxes that use this domain. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainAsync(Guid, bool?, int, CancellationToken) Get a domain Declaration Task<DomainDto> GetDomainAsync(Guid id, bool? checkForErrors = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id bool? checkForErrors (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DomainDto> Task of DomainDto Remarks Returns domain verification status and tokens for a given domain Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainIssuesAsync(int, CancellationToken) Get domain issues Declaration Task<DomainIssuesDto> GetDomainIssuesAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DomainIssuesDto> Task of DomainIssuesDto Remarks List domain issues for domains you have created Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainIssuesWithHttpInfoAsync(int, CancellationToken) Get domain issues Declaration Task<ApiResponse<DomainIssuesDto>> GetDomainIssuesWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DomainIssuesDto>> Task of ApiResponse (DomainIssuesDto) Remarks List domain issues for domains you have created Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainsAsync(int, CancellationToken) Get domains Declaration Task<List<DomainPreview>> GetDomainsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<DomainPreview>> Task of List<DomainPreview> Remarks List all custom domains you have created Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainsWithHttpInfoAsync(int, CancellationToken) Get domains Declaration Task<ApiResponse<List<DomainPreview>>> GetDomainsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<DomainPreview>>> Task of ApiResponse (List<DomainPreview>) Remarks List all custom domains you have created Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainWildcardCatchAllInboxAsync(Guid, int, CancellationToken) Get catch all wild card inbox for domain Declaration Task<InboxDto> GetDomainWildcardCatchAllInboxAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Remarks Get the catch all inbox for a domain for missed emails Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainWildcardCatchAllInboxWithHttpInfoAsync(Guid, int, CancellationToken) Get catch all wild card inbox for domain Declaration Task<ApiResponse<InboxDto>> GetDomainWildcardCatchAllInboxWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Remarks Get the catch all inbox for a domain for missed emails Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainWithHttpInfoAsync(Guid, bool?, int, CancellationToken) Get a domain Declaration Task<ApiResponse<DomainDto>> GetDomainWithHttpInfoAsync(Guid id, bool? checkForErrors = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id bool? checkForErrors (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DomainDto>> Task of ApiResponse (DomainDto) Remarks Returns domain verification status and tokens for a given domain Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateDomainAsync(Guid, UpdateDomainOptions, int, CancellationToken) Update a domain Declaration Task<DomainDto> UpdateDomainAsync(Guid id, UpdateDomainOptions updateDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id UpdateDomainOptions updateDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DomainDto> Task of DomainDto Remarks Update values on a domain. Note you cannot change the domain name as it is immutable. Recreate the domain if you need to alter this. Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateDomainWithHttpInfoAsync(Guid, UpdateDomainOptions, int, CancellationToken) Update a domain Declaration Task<ApiResponse<DomainDto>> UpdateDomainWithHttpInfoAsync(Guid id, UpdateDomainOptions updateDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id UpdateDomainOptions updateDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DomainDto>> Task of ApiResponse (DomainDto) Remarks Update values on a domain. Note you cannot change the domain name as it is immutable. Recreate the domain if you need to alter this. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IDomainControllerApiSync.html": {
    "href": "api/mailslurp.Api.IDomainControllerApiSync.html",
    "title": "Interface IDomainControllerApiSync | MailSlurp",
    "keywords": "Interface IDomainControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IDomainControllerApiSync : IApiAccessor Methods View Source AddDomainWildcardCatchAll(Guid, int) Add catch all wild card inbox to domain Declaration DomainDto AddDomainWildcardCatchAll(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description DomainDto DomainDto Remarks Add a catch all inbox to a domain so that any emails sent to it that cannot be matched will be sent to the catch all inbox generated Exceptions Type Condition ApiException Thrown when fails to make API call View Source AddDomainWildcardCatchAllWithHttpInfo(Guid, int) Add catch all wild card inbox to domain Declaration ApiResponse<DomainDto> AddDomainWildcardCatchAllWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DomainDto> ApiResponse of DomainDto Remarks Add a catch all inbox to a domain so that any emails sent to it that cannot be matched will be sent to the catch all inbox generated Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateDomain(CreateDomainOptions, int) Create Domain Declaration DomainDto CreateDomain(CreateDomainOptions createDomainOptions, int operationIndex = 0) Parameters Type Name Description CreateDomainOptions createDomainOptions int operationIndex Index associated with the operation. Returns Type Description DomainDto DomainDto Remarks Link a domain that you own with MailSlurp so you can create email addresses using it. Endpoint returns DNS records used for validation. You must add these verification records to your host provider's DNS setup to verify the domain. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateDomainWithHttpInfo(CreateDomainOptions, int) Create Domain Declaration ApiResponse<DomainDto> CreateDomainWithHttpInfo(CreateDomainOptions createDomainOptions, int operationIndex = 0) Parameters Type Name Description CreateDomainOptions createDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DomainDto> ApiResponse of DomainDto Remarks Link a domain that you own with MailSlurp so you can create email addresses using it. Endpoint returns DNS records used for validation. You must add these verification records to your host provider's DNS setup to verify the domain. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteDomain(Guid, int) Delete a domain Declaration List<string> DeleteDomain(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description List<string> List<string> Remarks Delete a domain. This will disable any existing inboxes that use this domain. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteDomainWithHttpInfo(Guid, int) Delete a domain Declaration ApiResponse<List<string>> DeleteDomainWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<string>> ApiResponse of List<string> Remarks Delete a domain. This will disable any existing inboxes that use this domain. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomain(Guid, bool?, int) Get a domain Declaration DomainDto GetDomain(Guid id, bool? checkForErrors = null, int operationIndex = 0) Parameters Type Name Description Guid id bool? checkForErrors (optional) int operationIndex Index associated with the operation. Returns Type Description DomainDto DomainDto Remarks Returns domain verification status and tokens for a given domain Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainIssues(int) Get domain issues Declaration DomainIssuesDto GetDomainIssues(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description DomainIssuesDto DomainIssuesDto Remarks List domain issues for domains you have created Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainIssuesWithHttpInfo(int) Get domain issues Declaration ApiResponse<DomainIssuesDto> GetDomainIssuesWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DomainIssuesDto> ApiResponse of DomainIssuesDto Remarks List domain issues for domains you have created Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomains(int) Get domains Declaration List<DomainPreview> GetDomains(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<DomainPreview> List<DomainPreview> Remarks List all custom domains you have created Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainsWithHttpInfo(int) Get domains Declaration ApiResponse<List<DomainPreview>> GetDomainsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<DomainPreview>> ApiResponse of List<DomainPreview> Remarks List all custom domains you have created Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainWildcardCatchAllInbox(Guid, int) Get catch all wild card inbox for domain Declaration InboxDto GetDomainWildcardCatchAllInbox(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Remarks Get the catch all inbox for a domain for missed emails Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainWildcardCatchAllInboxWithHttpInfo(Guid, int) Get catch all wild card inbox for domain Declaration ApiResponse<InboxDto> GetDomainWildcardCatchAllInboxWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Remarks Get the catch all inbox for a domain for missed emails Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDomainWithHttpInfo(Guid, bool?, int) Get a domain Declaration ApiResponse<DomainDto> GetDomainWithHttpInfo(Guid id, bool? checkForErrors = null, int operationIndex = 0) Parameters Type Name Description Guid id bool? checkForErrors (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DomainDto> ApiResponse of DomainDto Remarks Returns domain verification status and tokens for a given domain Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateDomain(Guid, UpdateDomainOptions, int) Update a domain Declaration DomainDto UpdateDomain(Guid id, UpdateDomainOptions updateDomainOptions, int operationIndex = 0) Parameters Type Name Description Guid id UpdateDomainOptions updateDomainOptions int operationIndex Index associated with the operation. Returns Type Description DomainDto DomainDto Remarks Update values on a domain. Note you cannot change the domain name as it is immutable. Recreate the domain if you need to alter this. Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateDomainWithHttpInfo(Guid, UpdateDomainOptions, int) Update a domain Declaration ApiResponse<DomainDto> UpdateDomainWithHttpInfo(Guid id, UpdateDomainOptions updateDomainOptions, int operationIndex = 0) Parameters Type Name Description Guid id UpdateDomainOptions updateDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DomainDto> ApiResponse of DomainDto Remarks Update values on a domain. Note you cannot change the domain name as it is immutable. Recreate the domain if you need to alter this. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IEmailControllerApi.html": {
    "href": "api/mailslurp.Api.IEmailControllerApi.html",
    "title": "Interface IEmailControllerApi | MailSlurp",
    "keywords": "Interface IEmailControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IEmailControllerApiSync.ApplyImapFlagOperation(Guid, ImapFlagOperationOptions, int) IEmailControllerApiSync.ApplyImapFlagOperationWithHttpInfo(Guid, ImapFlagOperationOptions, int) IEmailControllerApiSync.CanSend(Guid, SendEmailOptions, int) IEmailControllerApiSync.CanSendWithHttpInfo(Guid, SendEmailOptions, int) IEmailControllerApiSync.CheckEmailBodyFeatureSupport(Guid, int) IEmailControllerApiSync.CheckEmailBodyFeatureSupportWithHttpInfo(Guid, int) IEmailControllerApiSync.CheckEmailClientSupport(CheckEmailClientSupportOptions, int) IEmailControllerApiSync.CheckEmailClientSupportWithHttpInfo(CheckEmailClientSupportOptions, int) IEmailControllerApiSync.DeleteAllEmails(int) IEmailControllerApiSync.DeleteAllEmailsWithHttpInfo(int) IEmailControllerApiSync.DeleteEmail(Guid, int) IEmailControllerApiSync.DeleteEmailWithHttpInfo(Guid, int) IEmailControllerApiSync.DownloadAttachment(Guid, string, string, int) IEmailControllerApiSync.DownloadAttachmentWithHttpInfo(Guid, string, string, int) IEmailControllerApiSync.DownloadAttachmentBase64(Guid, string, int) IEmailControllerApiSync.DownloadAttachmentBase64WithHttpInfo(Guid, string, int) IEmailControllerApiSync.DownloadBody(Guid, int) IEmailControllerApiSync.DownloadBodyWithHttpInfo(Guid, int) IEmailControllerApiSync.DownloadBodyBytes(Guid, int) IEmailControllerApiSync.DownloadBodyBytesWithHttpInfo(Guid, int) IEmailControllerApiSync.ForwardEmail(Guid, ForwardEmailOptions, int) IEmailControllerApiSync.ForwardEmailWithHttpInfo(Guid, ForwardEmailOptions, int) IEmailControllerApiSync.GetAttachmentMetaData(Guid, string, int) IEmailControllerApiSync.GetAttachmentMetaDataWithHttpInfo(Guid, string, int) IEmailControllerApiSync.GetEmail(Guid, bool?, int) IEmailControllerApiSync.GetEmailWithHttpInfo(Guid, bool?, int) IEmailControllerApiSync.GetEmailAttachments(Guid, int) IEmailControllerApiSync.GetEmailAttachmentsWithHttpInfo(Guid, int) IEmailControllerApiSync.GetEmailContentMatch(Guid, ContentMatchOptions, int) IEmailControllerApiSync.GetEmailContentMatchWithHttpInfo(Guid, ContentMatchOptions, int) IEmailControllerApiSync.GetEmailContentPart(Guid, string, int) IEmailControllerApiSync.GetEmailContentPartWithHttpInfo(Guid, string, int) IEmailControllerApiSync.GetEmailCount(int) IEmailControllerApiSync.GetEmailCountWithHttpInfo(int) IEmailControllerApiSync.GetEmailHTML(Guid, bool?, bool?, int) IEmailControllerApiSync.GetEmailHTMLWithHttpInfo(Guid, bool?, bool?, int) IEmailControllerApiSync.GetEmailHTMLJson(Guid, bool?, bool?, int) IEmailControllerApiSync.GetEmailHTMLJsonWithHttpInfo(Guid, bool?, bool?, int) IEmailControllerApiSync.GetEmailHTMLQuery(Guid, string, int) IEmailControllerApiSync.GetEmailHTMLQueryWithHttpInfo(Guid, string, int) IEmailControllerApiSync.GetEmailLinks(Guid, int) IEmailControllerApiSync.GetEmailLinksWithHttpInfo(Guid, int) IEmailControllerApiSync.GetEmailPreviewURLs(Guid, int) IEmailControllerApiSync.GetEmailPreviewURLsWithHttpInfo(Guid, int) IEmailControllerApiSync.GetEmailTextLines(Guid, bool?, string, int) IEmailControllerApiSync.GetEmailTextLinesWithHttpInfo(Guid, bool?, string, int) IEmailControllerApiSync.GetEmailsOffsetPaginated(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) IEmailControllerApiSync.GetEmailsOffsetPaginatedWithHttpInfo(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) IEmailControllerApiSync.GetEmailsPaginated(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) IEmailControllerApiSync.GetEmailsPaginatedWithHttpInfo(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) IEmailControllerApiSync.GetGravatarUrlForEmailAddress(string, string, int) IEmailControllerApiSync.GetGravatarUrlForEmailAddressWithHttpInfo(string, string, int) IEmailControllerApiSync.GetLatestEmail(List<Guid>, int) IEmailControllerApiSync.GetLatestEmailWithHttpInfo(List<Guid>, int) IEmailControllerApiSync.GetLatestEmailInInbox1(Guid, int) IEmailControllerApiSync.GetLatestEmailInInbox1WithHttpInfo(Guid, int) IEmailControllerApiSync.GetOrganizationEmailsPaginated(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) IEmailControllerApiSync.GetOrganizationEmailsPaginatedWithHttpInfo(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) IEmailControllerApiSync.GetRawEmailContents(Guid, int) IEmailControllerApiSync.GetRawEmailContentsWithHttpInfo(Guid, int) IEmailControllerApiSync.GetRawEmailJson(Guid, int) IEmailControllerApiSync.GetRawEmailJsonWithHttpInfo(Guid, int) IEmailControllerApiSync.GetUnreadEmailCount(int) IEmailControllerApiSync.GetUnreadEmailCountWithHttpInfo(int) IEmailControllerApiSync.MarkAsRead(Guid, bool?, int) IEmailControllerApiSync.MarkAsReadWithHttpInfo(Guid, bool?, int) IEmailControllerApiSync.ReplyToEmail(Guid, ReplyToEmailOptions, int) IEmailControllerApiSync.ReplyToEmailWithHttpInfo(Guid, ReplyToEmailOptions, int) IEmailControllerApiSync.SearchEmails(SearchEmailsOptions, int) IEmailControllerApiSync.SearchEmailsWithHttpInfo(SearchEmailsOptions, int) IEmailControllerApiSync.SendEmailSourceOptional(SendEmailOptions, Guid?, bool?, bool?, int) IEmailControllerApiSync.SendEmailSourceOptionalWithHttpInfo(SendEmailOptions, Guid?, bool?, bool?, int) IEmailControllerApiSync.ValidateEmail(Guid, int) IEmailControllerApiSync.ValidateEmailWithHttpInfo(Guid, int) IEmailControllerApiAsync.ApplyImapFlagOperationAsync(Guid, ImapFlagOperationOptions, int, CancellationToken) IEmailControllerApiAsync.ApplyImapFlagOperationWithHttpInfoAsync(Guid, ImapFlagOperationOptions, int, CancellationToken) IEmailControllerApiAsync.CanSendAsync(Guid, SendEmailOptions, int, CancellationToken) IEmailControllerApiAsync.CanSendWithHttpInfoAsync(Guid, SendEmailOptions, int, CancellationToken) IEmailControllerApiAsync.CheckEmailBodyFeatureSupportAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.CheckEmailBodyFeatureSupportWithHttpInfoAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.CheckEmailClientSupportAsync(CheckEmailClientSupportOptions, int, CancellationToken) IEmailControllerApiAsync.CheckEmailClientSupportWithHttpInfoAsync(CheckEmailClientSupportOptions, int, CancellationToken) IEmailControllerApiAsync.DeleteAllEmailsAsync(int, CancellationToken) IEmailControllerApiAsync.DeleteAllEmailsWithHttpInfoAsync(int, CancellationToken) IEmailControllerApiAsync.DeleteEmailAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.DeleteEmailWithHttpInfoAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.DownloadAttachmentAsync(Guid, string, string, int, CancellationToken) IEmailControllerApiAsync.DownloadAttachmentWithHttpInfoAsync(Guid, string, string, int, CancellationToken) IEmailControllerApiAsync.DownloadAttachmentBase64Async(Guid, string, int, CancellationToken) IEmailControllerApiAsync.DownloadAttachmentBase64WithHttpInfoAsync(Guid, string, int, CancellationToken) IEmailControllerApiAsync.DownloadBodyAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.DownloadBodyWithHttpInfoAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.DownloadBodyBytesAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.DownloadBodyBytesWithHttpInfoAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.ForwardEmailAsync(Guid, ForwardEmailOptions, int, CancellationToken) IEmailControllerApiAsync.ForwardEmailWithHttpInfoAsync(Guid, ForwardEmailOptions, int, CancellationToken) IEmailControllerApiAsync.GetAttachmentMetaDataAsync(Guid, string, int, CancellationToken) IEmailControllerApiAsync.GetAttachmentMetaDataWithHttpInfoAsync(Guid, string, int, CancellationToken) IEmailControllerApiAsync.GetEmailAsync(Guid, bool?, int, CancellationToken) IEmailControllerApiAsync.GetEmailWithHttpInfoAsync(Guid, bool?, int, CancellationToken) IEmailControllerApiAsync.GetEmailAttachmentsAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.GetEmailAttachmentsWithHttpInfoAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.GetEmailContentMatchAsync(Guid, ContentMatchOptions, int, CancellationToken) IEmailControllerApiAsync.GetEmailContentMatchWithHttpInfoAsync(Guid, ContentMatchOptions, int, CancellationToken) IEmailControllerApiAsync.GetEmailContentPartAsync(Guid, string, int, CancellationToken) IEmailControllerApiAsync.GetEmailContentPartWithHttpInfoAsync(Guid, string, int, CancellationToken) IEmailControllerApiAsync.GetEmailCountAsync(int, CancellationToken) IEmailControllerApiAsync.GetEmailCountWithHttpInfoAsync(int, CancellationToken) IEmailControllerApiAsync.GetEmailHTMLAsync(Guid, bool?, bool?, int, CancellationToken) IEmailControllerApiAsync.GetEmailHTMLWithHttpInfoAsync(Guid, bool?, bool?, int, CancellationToken) IEmailControllerApiAsync.GetEmailHTMLJsonAsync(Guid, bool?, bool?, int, CancellationToken) IEmailControllerApiAsync.GetEmailHTMLJsonWithHttpInfoAsync(Guid, bool?, bool?, int, CancellationToken) IEmailControllerApiAsync.GetEmailHTMLQueryAsync(Guid, string, int, CancellationToken) IEmailControllerApiAsync.GetEmailHTMLQueryWithHttpInfoAsync(Guid, string, int, CancellationToken) IEmailControllerApiAsync.GetEmailLinksAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.GetEmailLinksWithHttpInfoAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.GetEmailPreviewURLsAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.GetEmailPreviewURLsWithHttpInfoAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.GetEmailTextLinesAsync(Guid, bool?, string, int, CancellationToken) IEmailControllerApiAsync.GetEmailTextLinesWithHttpInfoAsync(Guid, bool?, string, int, CancellationToken) IEmailControllerApiAsync.GetEmailsOffsetPaginatedAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) IEmailControllerApiAsync.GetEmailsOffsetPaginatedWithHttpInfoAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) IEmailControllerApiAsync.GetEmailsPaginatedAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) IEmailControllerApiAsync.GetEmailsPaginatedWithHttpInfoAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) IEmailControllerApiAsync.GetGravatarUrlForEmailAddressAsync(string, string, int, CancellationToken) IEmailControllerApiAsync.GetGravatarUrlForEmailAddressWithHttpInfoAsync(string, string, int, CancellationToken) IEmailControllerApiAsync.GetLatestEmailAsync(List<Guid>, int, CancellationToken) IEmailControllerApiAsync.GetLatestEmailWithHttpInfoAsync(List<Guid>, int, CancellationToken) IEmailControllerApiAsync.GetLatestEmailInInbox1Async(Guid, int, CancellationToken) IEmailControllerApiAsync.GetLatestEmailInInbox1WithHttpInfoAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.GetOrganizationEmailsPaginatedAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) IEmailControllerApiAsync.GetOrganizationEmailsPaginatedWithHttpInfoAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) IEmailControllerApiAsync.GetRawEmailContentsAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.GetRawEmailContentsWithHttpInfoAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.GetRawEmailJsonAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.GetRawEmailJsonWithHttpInfoAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.GetUnreadEmailCountAsync(int, CancellationToken) IEmailControllerApiAsync.GetUnreadEmailCountWithHttpInfoAsync(int, CancellationToken) IEmailControllerApiAsync.MarkAsReadAsync(Guid, bool?, int, CancellationToken) IEmailControllerApiAsync.MarkAsReadWithHttpInfoAsync(Guid, bool?, int, CancellationToken) IEmailControllerApiAsync.ReplyToEmailAsync(Guid, ReplyToEmailOptions, int, CancellationToken) IEmailControllerApiAsync.ReplyToEmailWithHttpInfoAsync(Guid, ReplyToEmailOptions, int, CancellationToken) IEmailControllerApiAsync.SearchEmailsAsync(SearchEmailsOptions, int, CancellationToken) IEmailControllerApiAsync.SearchEmailsWithHttpInfoAsync(SearchEmailsOptions, int, CancellationToken) IEmailControllerApiAsync.SendEmailSourceOptionalAsync(SendEmailOptions, Guid?, bool?, bool?, int, CancellationToken) IEmailControllerApiAsync.SendEmailSourceOptionalWithHttpInfoAsync(SendEmailOptions, Guid?, bool?, bool?, int, CancellationToken) IEmailControllerApiAsync.ValidateEmailAsync(Guid, int, CancellationToken) IEmailControllerApiAsync.ValidateEmailWithHttpInfoAsync(Guid, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IEmailControllerApi : IEmailControllerApiSync, IEmailControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IEmailControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IEmailControllerApiAsync.html",
    "title": "Interface IEmailControllerApiAsync | MailSlurp",
    "keywords": "Interface IEmailControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IEmailControllerApiAsync : IApiAccessor Methods View Source ApplyImapFlagOperationAsync(Guid, ImapFlagOperationOptions, int, CancellationToken) Set IMAP flags associated with a message. Only supports '\\Seen' flag. Declaration Task<EmailPreview> ApplyImapFlagOperationAsync(Guid emailId, ImapFlagOperationOptions imapFlagOperationOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ImapFlagOperationOptions imapFlagOperationOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailPreview> Task of EmailPreview Remarks Apply RFC3501 section-2.3.2 IMAP flag operations on an email Exceptions Type Condition ApiException Thrown when fails to make API call View Source ApplyImapFlagOperationWithHttpInfoAsync(Guid, ImapFlagOperationOptions, int, CancellationToken) Set IMAP flags associated with a message. Only supports '\\Seen' flag. Declaration Task<ApiResponse<EmailPreview>> ApplyImapFlagOperationWithHttpInfoAsync(Guid emailId, ImapFlagOperationOptions imapFlagOperationOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ImapFlagOperationOptions imapFlagOperationOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailPreview>> Task of ApiResponse (EmailPreview) Remarks Apply RFC3501 section-2.3.2 IMAP flag operations on an email Exceptions Type Condition ApiException Thrown when fails to make API call View Source CanSendAsync(Guid, SendEmailOptions, int, CancellationToken) Check if email can be sent and options are valid. Declaration Task<CanSendEmailResults> CanSendAsync(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CanSendEmailResults> Task of CanSendEmailResults Remarks Can user send email to given recipient or is the recipient blocked Exceptions Type Condition ApiException Thrown when fails to make API call View Source CanSendWithHttpInfoAsync(Guid, SendEmailOptions, int, CancellationToken) Check if email can be sent and options are valid. Declaration Task<ApiResponse<CanSendEmailResults>> CanSendWithHttpInfoAsync(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CanSendEmailResults>> Task of ApiResponse (CanSendEmailResults) Remarks Can user send email to given recipient or is the recipient blocked Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailBodyFeatureSupportAsync(Guid, int, CancellationToken) Show which mail clients support the HTML and CSS features used in an email body. Declaration Task<CheckEmailBodyFeatureSupportResults> CheckEmailBodyFeatureSupportAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CheckEmailBodyFeatureSupportResults> Task of CheckEmailBodyFeatureSupportResults Remarks Detect HTML and CSS features inside an email body and return a report of email client support across different platforms and versions. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailBodyFeatureSupportWithHttpInfoAsync(Guid, int, CancellationToken) Show which mail clients support the HTML and CSS features used in an email body. Declaration Task<ApiResponse<CheckEmailBodyFeatureSupportResults>> CheckEmailBodyFeatureSupportWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CheckEmailBodyFeatureSupportResults>> Task of ApiResponse (CheckEmailBodyFeatureSupportResults) Remarks Detect HTML and CSS features inside an email body and return a report of email client support across different platforms and versions. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailClientSupportAsync(CheckEmailClientSupportOptions, int, CancellationToken) Show which email programs and devices support the features used in an email body. Declaration Task<CheckEmailClientSupportResults> CheckEmailClientSupportAsync(CheckEmailClientSupportOptions checkEmailClientSupportOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CheckEmailClientSupportOptions checkEmailClientSupportOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CheckEmailClientSupportResults> Task of CheckEmailClientSupportResults Remarks Evaluate the features used in an email body and return a report of email client support across different platforms and versions. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailClientSupportWithHttpInfoAsync(CheckEmailClientSupportOptions, int, CancellationToken) Show which email programs and devices support the features used in an email body. Declaration Task<ApiResponse<CheckEmailClientSupportResults>> CheckEmailClientSupportWithHttpInfoAsync(CheckEmailClientSupportOptions checkEmailClientSupportOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CheckEmailClientSupportOptions checkEmailClientSupportOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CheckEmailClientSupportResults>> Task of ApiResponse (CheckEmailClientSupportResults) Remarks Evaluate the features used in an email body and return a report of email client support across different platforms and versions. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllEmailsAsync(int, CancellationToken) Delete all emails in all inboxes. Declaration Task DeleteAllEmailsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Deletes all emails in your account. Be careful as emails cannot be recovered Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllEmailsWithHttpInfoAsync(int, CancellationToken) Delete all emails in all inboxes. Declaration Task<ApiResponse<object>> DeleteAllEmailsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Deletes all emails in your account. Be careful as emails cannot be recovered Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailAsync(Guid, int, CancellationToken) Delete an email Declaration Task DeleteEmailAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to delete int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Deletes an email and removes it from the inbox. Deleted emails cannot be recovered. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailWithHttpInfoAsync(Guid, int, CancellationToken) Delete an email Declaration Task<ApiResponse<object>> DeleteEmailWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to delete int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Deletes an email and removes it from the inbox. Deleted emails cannot be recovered. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentAsync(Guid, string, string, int, CancellationToken) Get email attachment bytes. Returned as octet-stream with content type header. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints and convert the base 64 encoded content to a file or string. Declaration Task<byte[]> DownloadAttachmentAsync(Guid emailId, string attachmentId, string apiKey = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment string apiKey Can pass apiKey in url for this request if you wish to download the file in a browser. Content type will be set to original content type of the attachment file. This is so that browsers can download the file correctly. (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<byte[]> Task of byte[] Remarks Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentBase64Async(Guid, string, int, CancellationToken) Get email attachment as base64 encoded string as an alternative to binary responses. Decode the base64FileContents as a utf-8 encoded string or array of bytes depending on the contentType. Declaration Task<DownloadAttachmentDto> DownloadAttachmentBase64Async(Guid emailId, string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DownloadAttachmentDto> Task of DownloadAttachmentDto Remarks Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentBase64WithHttpInfoAsync(Guid, string, int, CancellationToken) Get email attachment as base64 encoded string as an alternative to binary responses. Decode the base64FileContents as a utf-8 encoded string or array of bytes depending on the contentType. Declaration Task<ApiResponse<DownloadAttachmentDto>> DownloadAttachmentBase64WithHttpInfoAsync(Guid emailId, string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DownloadAttachmentDto>> Task of ApiResponse (DownloadAttachmentDto) Remarks Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentWithHttpInfoAsync(Guid, string, string, int, CancellationToken) Get email attachment bytes. Returned as octet-stream with content type header. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints and convert the base 64 encoded content to a file or string. Declaration Task<ApiResponse<byte[]>> DownloadAttachmentWithHttpInfoAsync(Guid emailId, string attachmentId, string apiKey = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment string apiKey Can pass apiKey in url for this request if you wish to download the file in a browser. Content type will be set to original content type of the attachment file. This is so that browsers can download the file correctly. (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<byte[]>> Task of ApiResponse (byte[]) Remarks Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyAsync(Guid, int, CancellationToken) Get email body as string. Returned as plain/text with content type header. Declaration Task<string> DownloadBodyAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<string> Task of string Remarks Returns the specified email body for a given email as a string Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyBytesAsync(Guid, int, CancellationToken) Get email body in bytes. Returned as octet-stream with content type header. Declaration Task<byte[]> DownloadBodyBytesAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<byte[]> Task of byte[] Remarks Returns the specified email body for a given email as a stream / array of bytes. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyBytesWithHttpInfoAsync(Guid, int, CancellationToken) Get email body in bytes. Returned as octet-stream with content type header. Declaration Task<ApiResponse<byte[]>> DownloadBodyBytesWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<byte[]>> Task of ApiResponse (byte[]) Remarks Returns the specified email body for a given email as a stream / array of bytes. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyWithHttpInfoAsync(Guid, int, CancellationToken) Get email body as string. Returned as plain/text with content type header. Declaration Task<ApiResponse<string>> DownloadBodyWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<string>> Task of ApiResponse (string) Remarks Returns the specified email body for a given email as a string Exceptions Type Condition ApiException Thrown when fails to make API call View Source ForwardEmailAsync(Guid, ForwardEmailOptions, int, CancellationToken) Forward email to recipients Declaration Task<SentEmailDto> ForwardEmailAsync(Guid emailId, ForwardEmailOptions forwardEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email ForwardEmailOptions forwardEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Remarks Forward an existing email to new recipients. The sender of the email will be the inbox that received the email you are forwarding. You can override the sender with the from option. Note you must have access to the from address in MailSlurp to use the override. For more control consider fetching the email and sending it a new using the send email endpoints. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ForwardEmailWithHttpInfoAsync(Guid, ForwardEmailOptions, int, CancellationToken) Forward email to recipients Declaration Task<ApiResponse<SentEmailDto>> ForwardEmailWithHttpInfoAsync(Guid emailId, ForwardEmailOptions forwardEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email ForwardEmailOptions forwardEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Remarks Forward an existing email to new recipients. The sender of the email will be the inbox that received the email you are forwarding. You can override the sender with the from option. Note you must have access to the from address in MailSlurp to use the override. For more control consider fetching the email and sending it a new using the send email endpoints. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentMetaDataAsync(Guid, string, int, CancellationToken) Get email attachment metadata. This is the contentType and contentLength of an attachment. To get the individual attachments use the downloadAttachment methods. Declaration Task<AttachmentMetaData> GetAttachmentMetaDataAsync(Guid emailId, string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AttachmentMetaData> Task of AttachmentMetaData Remarks Returns the metadata such as name and content-type for a given attachment and email. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentMetaDataWithHttpInfoAsync(Guid, string, int, CancellationToken) Get email attachment metadata. This is the contentType and contentLength of an attachment. To get the individual attachments use the downloadAttachment methods. Declaration Task<ApiResponse<AttachmentMetaData>> GetAttachmentMetaDataWithHttpInfoAsync(Guid emailId, string attachmentId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AttachmentMetaData>> Task of ApiResponse (AttachmentMetaData) Remarks Returns the metadata such as name and content-type for a given attachment and email. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailAsync(Guid, bool?, int, CancellationToken) Get email content including headers and body. Expects email to exist by ID. For emails that may not have arrived yet use the WaitForController. Declaration Task<Email> GetEmailAsync(Guid emailId, bool? decode = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? decode Decode email body quoted-printable encoding to plain text. SMTP servers often encode text using quoted-printable format (for instance =D7). This can be a pain for testing (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Remarks Returns a email summary object with headers and content. To retrieve the raw unparsed email use the getRawEmail endpoints Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailAttachmentsAsync(Guid, int, CancellationToken) Get all email attachment metadata. Metadata includes name and size of attachments. Declaration Task<List<AttachmentMetaData>> GetEmailAttachmentsAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<AttachmentMetaData>> Task of List<AttachmentMetaData> Remarks Returns an array of attachment metadata such as name and content-type for a given email if present. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailAttachmentsWithHttpInfoAsync(Guid, int, CancellationToken) Get all email attachment metadata. Metadata includes name and size of attachments. Declaration Task<ApiResponse<List<AttachmentMetaData>>> GetEmailAttachmentsWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<AttachmentMetaData>>> Task of ApiResponse (List<AttachmentMetaData>) Remarks Returns an array of attachment metadata such as name and content-type for a given email if present. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentMatchAsync(Guid, ContentMatchOptions, int, CancellationToken) Get email content regex pattern match results. Runs regex against email body and returns match groups. Declaration Task<EmailContentMatchResult> GetEmailContentMatchAsync(Guid emailId, ContentMatchOptions contentMatchOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to match against ContentMatchOptions contentMatchOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailContentMatchResult> Task of EmailContentMatchResult Remarks Return the matches for a given Java style regex pattern. Do not include the typical / at start or end of regex in some languages. Given an example your code is: 12345 the pattern to extract match looks like code is: (\\\\d{6}). This will return an array of matches with the first matching the entire pattern and the subsequent matching the groups: [&apos;code is: 123456&apos;, &apos;123456&apos;] See https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html for more information of available patterns. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentMatchWithHttpInfoAsync(Guid, ContentMatchOptions, int, CancellationToken) Get email content regex pattern match results. Runs regex against email body and returns match groups. Declaration Task<ApiResponse<EmailContentMatchResult>> GetEmailContentMatchWithHttpInfoAsync(Guid emailId, ContentMatchOptions contentMatchOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to match against ContentMatchOptions contentMatchOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailContentMatchResult>> Task of ApiResponse (EmailContentMatchResult) Remarks Return the matches for a given Java style regex pattern. Do not include the typical / at start or end of regex in some languages. Given an example your code is: 12345 the pattern to extract match looks like code is: (\\\\d{6}). This will return an array of matches with the first matching the entire pattern and the subsequent matching the groups: [&apos;code is: 123456&apos;, &apos;123456&apos;] See https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html for more information of available patterns. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentPartAsync(Guid, string, int, CancellationToken) Get email content part by content type Declaration Task<EmailContentPartResult> GetEmailContentPartAsync(Guid emailId, string contentType, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to match against string contentType Content type int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailContentPartResult> Task of EmailContentPartResult Remarks Get email body content parts from a multipart email message for a given content type Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentPartWithHttpInfoAsync(Guid, string, int, CancellationToken) Get email content part by content type Declaration Task<ApiResponse<EmailContentPartResult>> GetEmailContentPartWithHttpInfoAsync(Guid emailId, string contentType, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to match against string contentType Content type int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailContentPartResult>> Task of ApiResponse (EmailContentPartResult) Remarks Get email body content parts from a multipart email message for a given content type Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailCountAsync(int, CancellationToken) Get email count Declaration Task<CountDto> GetEmailCountAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CountDto> Task of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailCountWithHttpInfoAsync(int, CancellationToken) Get email count Declaration Task<ApiResponse<CountDto>> GetEmailCountWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CountDto>> Task of ApiResponse (CountDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLAsync(Guid, bool?, bool?, int, CancellationToken) Get email content as HTML. For displaying emails in browser context. Declaration Task<string> GetEmailHTMLAsync(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<string> Task of string Remarks Retrieve email content as HTML response for viewing in browsers. Decodes quoted-printable entities and converts charset to UTF-8. Pass your API KEY as a request parameter when viewing in a browser: ?apiKey=xxx. Returns content-type text/html;charset=utf-8 so you must call expecting that content response not JSON. For JSON response see the getEmailHTMLJson method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLJsonAsync(Guid, bool?, bool?, int, CancellationToken) Get email content as HTML in JSON wrapper. For fetching entity decoded HTML content Declaration Task<EmailHtmlDto> GetEmailHTMLJsonAsync(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailHtmlDto> Task of EmailHtmlDto Remarks Retrieve email content as HTML response. Decodes quoted-printable entities and converts charset to UTF-8. Returns content-type application/json;charset=utf-8 so you must call expecting that content response not JSON. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLJsonWithHttpInfoAsync(Guid, bool?, bool?, int, CancellationToken) Get email content as HTML in JSON wrapper. For fetching entity decoded HTML content Declaration Task<ApiResponse<EmailHtmlDto>> GetEmailHTMLJsonWithHttpInfoAsync(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailHtmlDto>> Task of ApiResponse (EmailHtmlDto) Remarks Retrieve email content as HTML response. Decodes quoted-printable entities and converts charset to UTF-8. Returns content-type application/json;charset=utf-8 so you must call expecting that content response not JSON. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLQueryAsync(Guid, string, int, CancellationToken) Parse and return text from an email, stripping HTML and decoding encoded characters Declaration Task<EmailTextLinesResult> GetEmailHTMLQueryAsync(Guid emailId, string htmlSelector, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to perform HTML query on string htmlSelector HTML selector to search for. Uses JQuery/JSoup/CSS style selector like '.my-div' to match content. See https://jsoup.org/apidocs/org/jsoup/select/Selector.html for more information. int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailTextLinesResult> Task of EmailTextLinesResult Remarks Parse an email body and return the content as an array of text. HTML parsing uses JSoup which supports JQuery/CSS style selectors Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLQueryWithHttpInfoAsync(Guid, string, int, CancellationToken) Parse and return text from an email, stripping HTML and decoding encoded characters Declaration Task<ApiResponse<EmailTextLinesResult>> GetEmailHTMLQueryWithHttpInfoAsync(Guid emailId, string htmlSelector, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to perform HTML query on string htmlSelector HTML selector to search for. Uses JQuery/JSoup/CSS style selector like '.my-div' to match content. See https://jsoup.org/apidocs/org/jsoup/select/Selector.html for more information. int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailTextLinesResult>> Task of ApiResponse (EmailTextLinesResult) Remarks Parse an email body and return the content as an array of text. HTML parsing uses JSoup which supports JQuery/CSS style selectors Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLWithHttpInfoAsync(Guid, bool?, bool?, int, CancellationToken) Get email content as HTML. For displaying emails in browser context. Declaration Task<ApiResponse<string>> GetEmailHTMLWithHttpInfoAsync(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<string>> Task of ApiResponse (string) Remarks Retrieve email content as HTML response for viewing in browsers. Decodes quoted-printable entities and converts charset to UTF-8. Pass your API KEY as a request parameter when viewing in a browser: ?apiKey=xxx. Returns content-type text/html;charset=utf-8 so you must call expecting that content response not JSON. For JSON response see the getEmailHTMLJson method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailLinksAsync(Guid, int, CancellationToken) Parse and return list of links found in an email (only works for HTML content) Declaration Task<EmailLinksResult> GetEmailLinksAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to fetch text for int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailLinksResult> Task of EmailLinksResult Remarks HTML parsing uses JSoup and UNIX line separators. Searches content for href attributes Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailLinksWithHttpInfoAsync(Guid, int, CancellationToken) Parse and return list of links found in an email (only works for HTML content) Declaration Task<ApiResponse<EmailLinksResult>> GetEmailLinksWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to fetch text for int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailLinksResult>> Task of ApiResponse (EmailLinksResult) Remarks HTML parsing uses JSoup and UNIX line separators. Searches content for href attributes Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailPreviewURLsAsync(Guid, int, CancellationToken) Get email URLs for viewing in browser or downloading Declaration Task<EmailPreviewUrls> GetEmailPreviewURLsAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailPreviewUrls> Task of EmailPreviewUrls Remarks Get a list of URLs for email content as text/html or raw SMTP message for viewing the message in a browser. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailPreviewURLsWithHttpInfoAsync(Guid, int, CancellationToken) Get email URLs for viewing in browser or downloading Declaration Task<ApiResponse<EmailPreviewUrls>> GetEmailPreviewURLsWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailPreviewUrls>> Task of ApiResponse (EmailPreviewUrls) Remarks Get a list of URLs for email content as text/html or raw SMTP message for viewing the message in a browser. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsOffsetPaginatedAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) Get all emails in all inboxes in paginated form. Email API list all. Declaration Task<PageEmailProjection> GetEmailsOffsetPaginatedAsync(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailProjection> Task of PageEmailProjection Remarks By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsOffsetPaginatedWithHttpInfoAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) Get all emails in all inboxes in paginated form. Email API list all. Declaration Task<ApiResponse<PageEmailProjection>> GetEmailsOffsetPaginatedWithHttpInfoAsync(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailProjection>> Task of ApiResponse (PageEmailProjection) Remarks By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsPaginatedAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) Get all emails in all inboxes in paginated form. Email API list all. Declaration Task<PageEmailProjection> GetEmailsPaginatedAsync(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailProjection> Task of PageEmailProjection Remarks By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsPaginatedWithHttpInfoAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) Get all emails in all inboxes in paginated form. Email API list all. Declaration Task<ApiResponse<PageEmailProjection>> GetEmailsPaginatedWithHttpInfoAsync(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailProjection>> Task of ApiResponse (PageEmailProjection) Remarks By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailTextLinesAsync(Guid, bool?, string, int, CancellationToken) Parse and return text from an email, stripping HTML and decoding encoded characters Declaration Task<EmailTextLinesResult> GetEmailTextLinesAsync(Guid emailId, bool? decodeHtmlEntities = null, string lineSeparator = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to fetch text for bool? decodeHtmlEntities Decode HTML entities (optional) string lineSeparator Line separator character (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailTextLinesResult> Task of EmailTextLinesResult Remarks Parse an email body and return the content as an array of strings. HTML parsing uses JSoup and UNIX line separators. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailTextLinesWithHttpInfoAsync(Guid, bool?, string, int, CancellationToken) Parse and return text from an email, stripping HTML and decoding encoded characters Declaration Task<ApiResponse<EmailTextLinesResult>> GetEmailTextLinesWithHttpInfoAsync(Guid emailId, bool? decodeHtmlEntities = null, string lineSeparator = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email to fetch text for bool? decodeHtmlEntities Decode HTML entities (optional) string lineSeparator Line separator character (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailTextLinesResult>> Task of ApiResponse (EmailTextLinesResult) Remarks Parse an email body and return the content as an array of strings. HTML parsing uses JSoup and UNIX line separators. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailWithHttpInfoAsync(Guid, bool?, int, CancellationToken) Get email content including headers and body. Expects email to exist by ID. For emails that may not have arrived yet use the WaitForController. Declaration Task<ApiResponse<Email>> GetEmailWithHttpInfoAsync(Guid emailId, bool? decode = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? decode Decode email body quoted-printable encoding to plain text. SMTP servers often encode text using quoted-printable format (for instance =D7). This can be a pain for testing (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Remarks Returns a email summary object with headers and content. To retrieve the raw unparsed email use the getRawEmail endpoints Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGravatarUrlForEmailAddressAsync(string, string, int, CancellationToken) Declaration Task<GravatarUrl> GetGravatarUrlForEmailAddressAsync(string emailAddress, string size = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress string size (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GravatarUrl> Task of GravatarUrl Remarks Get gravatar url for email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGravatarUrlForEmailAddressWithHttpInfoAsync(string, string, int, CancellationToken) Declaration Task<ApiResponse<GravatarUrl>> GetGravatarUrlForEmailAddressWithHttpInfoAsync(string emailAddress, string size = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress string size (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GravatarUrl>> Task of ApiResponse (GravatarUrl) Remarks Get gravatar url for email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailAsync(List<Guid>, int, CancellationToken) Get latest email in all inboxes. Most recently received. Declaration Task<Email> GetLatestEmailAsync(List<Guid> inboxIds = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxIds Optional set of inboxes to filter by. Only get the latest email from these inbox IDs. If not provided will search across all inboxes (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Remarks Get the newest email in all inboxes or in a passed set of inbox IDs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInbox1Async(Guid, int, CancellationToken) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Declaration Task<Email> GetLatestEmailInInbox1Async(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Remarks Get the newest email in all inboxes or in a passed set of inbox IDs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInbox1WithHttpInfoAsync(Guid, int, CancellationToken) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Declaration Task<ApiResponse<Email>> GetLatestEmailInInbox1WithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Remarks Get the newest email in all inboxes or in a passed set of inbox IDs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailWithHttpInfoAsync(List<Guid>, int, CancellationToken) Get latest email in all inboxes. Most recently received. Declaration Task<ApiResponse<Email>> GetLatestEmailWithHttpInfoAsync(List<Guid> inboxIds = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxIds Optional set of inboxes to filter by. Only get the latest email from these inbox IDs. If not provided will search across all inboxes (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Remarks Get the newest email in all inboxes or in a passed set of inbox IDs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationEmailsPaginatedAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) Get all organization emails. List team or shared test email accounts Declaration Task<PageEmailProjection> GetOrganizationEmailsPaginatedAsync(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter search filter for emails. (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailProjection> Task of PageEmailProjection Remarks By default returns all emails across all team inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationEmailsPaginatedWithHttpInfoAsync(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int, CancellationToken) Get all organization emails. List team or shared test email accounts Declaration Task<ApiResponse<PageEmailProjection>> GetOrganizationEmailsPaginatedWithHttpInfoAsync(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter search filter for emails. (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailProjection>> Task of ApiResponse (PageEmailProjection) Remarks By default returns all emails across all team inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailContentsAsync(Guid, int, CancellationToken) Get raw email string. Returns unparsed raw SMTP message with headers and body. Declaration Task GetRawEmailContentsAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Returns a raw, unparsed, and unprocessed email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawEmailJson endpoint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailContentsWithHttpInfoAsync(Guid, int, CancellationToken) Get raw email string. Returns unparsed raw SMTP message with headers and body. Declaration Task<ApiResponse<object>> GetRawEmailContentsWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Returns a raw, unparsed, and unprocessed email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawEmailJson endpoint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailJsonAsync(Guid, int, CancellationToken) Get raw email in JSON. Unparsed SMTP message in JSON wrapper format. Declaration Task<RawEmailJson> GetRawEmailJsonAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<RawEmailJson> Task of RawEmailJson Remarks Returns a raw, unparsed, and unprocessed email wrapped in a JSON response object for easier handling when compared with the getRawEmail text/plain response Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailJsonWithHttpInfoAsync(Guid, int, CancellationToken) Get raw email in JSON. Unparsed SMTP message in JSON wrapper format. Declaration Task<ApiResponse<RawEmailJson>> GetRawEmailJsonWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<RawEmailJson>> Task of ApiResponse (RawEmailJson) Remarks Returns a raw, unparsed, and unprocessed email wrapped in a JSON response object for easier handling when compared with the getRawEmail text/plain response Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadEmailCountAsync(int, CancellationToken) Get unread email count Declaration Task<UnreadCount> GetUnreadEmailCountAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<UnreadCount> Task of UnreadCount Remarks Get number of emails unread. Unread means has not been viewed in dashboard or returned in an email API response Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadEmailCountWithHttpInfoAsync(int, CancellationToken) Get unread email count Declaration Task<ApiResponse<UnreadCount>> GetUnreadEmailCountWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<UnreadCount>> Task of ApiResponse (UnreadCount) Remarks Get number of emails unread. Unread means has not been viewed in dashboard or returned in an email API response Exceptions Type Condition ApiException Thrown when fails to make API call View Source MarkAsReadAsync(Guid, bool?, int, CancellationToken) Mark an email as read on unread Declaration Task<EmailPreview> MarkAsReadAsync(Guid emailId, bool? read = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? read What value to assign to email read property. Default true. (optional, default to true) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailPreview> Task of EmailPreview Remarks Marks an email as read or unread. Pass boolean read flag to set value. This is useful if you want to read an email but keep it as unread Exceptions Type Condition ApiException Thrown when fails to make API call View Source MarkAsReadWithHttpInfoAsync(Guid, bool?, int, CancellationToken) Mark an email as read on unread Declaration Task<ApiResponse<EmailPreview>> MarkAsReadWithHttpInfoAsync(Guid emailId, bool? read = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId bool? read What value to assign to email read property. Default true. (optional, default to true) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailPreview>> Task of ApiResponse (EmailPreview) Remarks Marks an email as read or unread. Pass boolean read flag to set value. This is useful if you want to read an email but keep it as unread Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToEmailAsync(Guid, ReplyToEmailOptions, int, CancellationToken) Reply to an email Declaration Task<SentEmailDto> ReplyToEmailAsync(Guid emailId, ReplyToEmailOptions replyToEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of the email that should be replied to ReplyToEmailOptions replyToEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Remarks Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToEmailWithHttpInfoAsync(Guid, ReplyToEmailOptions, int, CancellationToken) Reply to an email Declaration Task<ApiResponse<SentEmailDto>> ReplyToEmailWithHttpInfoAsync(Guid emailId, ReplyToEmailOptions replyToEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of the email that should be replied to ReplyToEmailOptions replyToEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Remarks Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchEmailsAsync(SearchEmailsOptions, int, CancellationToken) Get all emails by search criteria. Return in paginated form. Declaration Task<PageEmailProjection> SearchEmailsAsync(SearchEmailsOptions searchEmailsOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SearchEmailsOptions searchEmailsOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailProjection> Task of PageEmailProjection Remarks Search emails by given criteria return matches in paginated format. Searches against email recipients, sender, subject, email address and ID. Does not search email body Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchEmailsWithHttpInfoAsync(SearchEmailsOptions, int, CancellationToken) Get all emails by search criteria. Return in paginated form. Declaration Task<ApiResponse<PageEmailProjection>> SearchEmailsWithHttpInfoAsync(SearchEmailsOptions searchEmailsOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SearchEmailsOptions searchEmailsOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailProjection>> Task of ApiResponse (PageEmailProjection) Remarks Search emails by given criteria return matches in paginated format. Searches against email recipients, sender, subject, email address and ID. Does not search email body Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSourceOptionalAsync(SendEmailOptions, Guid?, bool?, bool?, int, CancellationToken) Send email Declaration Task SendEmailSourceOptionalAsync(SendEmailOptions sendEmailOptions, Guid? inboxId = null, bool? useDomainPool = null, bool? virtualSend = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SendEmailOptions sendEmailOptions Guid? inboxId ID of the inbox you want to send the email from (optional) bool? useDomainPool Use domain pool. Optionally create inbox to send from using the mailslurp domain pool. (optional) bool? virtualSend Optionally create inbox to send from that is a virtual inbox and won't send to external addresses (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Alias for InboxController.sendEmail method - see original method for full details. Sends an email from a given inbox that you have created. If no inbox is supplied a random inbox will be created for you and used to send the email. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSourceOptionalWithHttpInfoAsync(SendEmailOptions, Guid?, bool?, bool?, int, CancellationToken) Send email Declaration Task<ApiResponse<object>> SendEmailSourceOptionalWithHttpInfoAsync(SendEmailOptions sendEmailOptions, Guid? inboxId = null, bool? useDomainPool = null, bool? virtualSend = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SendEmailOptions sendEmailOptions Guid? inboxId ID of the inbox you want to send the email from (optional) bool? useDomainPool Use domain pool. Optionally create inbox to send from using the mailslurp domain pool. (optional) bool? virtualSend Optionally create inbox to send from that is a virtual inbox and won't send to external addresses (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Alias for InboxController.sendEmail method - see original method for full details. Sends an email from a given inbox that you have created. If no inbox is supplied a random inbox will be created for you and used to send the email. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailAsync(Guid, int, CancellationToken) Validate email HTML contents Declaration Task<ValidationDto> ValidateEmailAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ValidationDto> Task of ValidationDto Remarks Validate the HTML content of email if HTML is found. Considered valid if no HTML is present. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailWithHttpInfoAsync(Guid, int, CancellationToken) Validate email HTML contents Declaration Task<ApiResponse<ValidationDto>> ValidateEmailWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ValidationDto>> Task of ApiResponse (ValidationDto) Remarks Validate the HTML content of email if HTML is found. Considered valid if no HTML is present. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IEmailControllerApiSync.html": {
    "href": "api/mailslurp.Api.IEmailControllerApiSync.html",
    "title": "Interface IEmailControllerApiSync | MailSlurp",
    "keywords": "Interface IEmailControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IEmailControllerApiSync : IApiAccessor Methods View Source ApplyImapFlagOperation(Guid, ImapFlagOperationOptions, int) Set IMAP flags associated with a message. Only supports '\\Seen' flag. Declaration EmailPreview ApplyImapFlagOperation(Guid emailId, ImapFlagOperationOptions imapFlagOperationOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ImapFlagOperationOptions imapFlagOperationOptions int operationIndex Index associated with the operation. Returns Type Description EmailPreview EmailPreview Remarks Apply RFC3501 section-2.3.2 IMAP flag operations on an email Exceptions Type Condition ApiException Thrown when fails to make API call View Source ApplyImapFlagOperationWithHttpInfo(Guid, ImapFlagOperationOptions, int) Set IMAP flags associated with a message. Only supports '\\Seen' flag. Declaration ApiResponse<EmailPreview> ApplyImapFlagOperationWithHttpInfo(Guid emailId, ImapFlagOperationOptions imapFlagOperationOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ImapFlagOperationOptions imapFlagOperationOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailPreview> ApiResponse of EmailPreview Remarks Apply RFC3501 section-2.3.2 IMAP flag operations on an email Exceptions Type Condition ApiException Thrown when fails to make API call View Source CanSend(Guid, SendEmailOptions, int) Check if email can be sent and options are valid. Declaration CanSendEmailResults CanSend(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description CanSendEmailResults CanSendEmailResults Remarks Can user send email to given recipient or is the recipient blocked Exceptions Type Condition ApiException Thrown when fails to make API call View Source CanSendWithHttpInfo(Guid, SendEmailOptions, int) Check if email can be sent and options are valid. Declaration ApiResponse<CanSendEmailResults> CanSendWithHttpInfo(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CanSendEmailResults> ApiResponse of CanSendEmailResults Remarks Can user send email to given recipient or is the recipient blocked Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailBodyFeatureSupport(Guid, int) Show which mail clients support the HTML and CSS features used in an email body. Declaration CheckEmailBodyFeatureSupportResults CheckEmailBodyFeatureSupport(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. Returns Type Description CheckEmailBodyFeatureSupportResults CheckEmailBodyFeatureSupportResults Remarks Detect HTML and CSS features inside an email body and return a report of email client support across different platforms and versions. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailBodyFeatureSupportWithHttpInfo(Guid, int) Show which mail clients support the HTML and CSS features used in an email body. Declaration ApiResponse<CheckEmailBodyFeatureSupportResults> CheckEmailBodyFeatureSupportWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CheckEmailBodyFeatureSupportResults> ApiResponse of CheckEmailBodyFeatureSupportResults Remarks Detect HTML and CSS features inside an email body and return a report of email client support across different platforms and versions. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailClientSupport(CheckEmailClientSupportOptions, int) Show which email programs and devices support the features used in an email body. Declaration CheckEmailClientSupportResults CheckEmailClientSupport(CheckEmailClientSupportOptions checkEmailClientSupportOptions, int operationIndex = 0) Parameters Type Name Description CheckEmailClientSupportOptions checkEmailClientSupportOptions int operationIndex Index associated with the operation. Returns Type Description CheckEmailClientSupportResults CheckEmailClientSupportResults Remarks Evaluate the features used in an email body and return a report of email client support across different platforms and versions. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailClientSupportWithHttpInfo(CheckEmailClientSupportOptions, int) Show which email programs and devices support the features used in an email body. Declaration ApiResponse<CheckEmailClientSupportResults> CheckEmailClientSupportWithHttpInfo(CheckEmailClientSupportOptions checkEmailClientSupportOptions, int operationIndex = 0) Parameters Type Name Description CheckEmailClientSupportOptions checkEmailClientSupportOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CheckEmailClientSupportResults> ApiResponse of CheckEmailClientSupportResults Remarks Evaluate the features used in an email body and return a report of email client support across different platforms and versions. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllEmails(int) Delete all emails in all inboxes. Declaration void DeleteAllEmails(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Remarks Deletes all emails in your account. Be careful as emails cannot be recovered Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllEmailsWithHttpInfo(int) Delete all emails in all inboxes. Declaration ApiResponse<object> DeleteAllEmailsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Deletes all emails in your account. Be careful as emails cannot be recovered Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmail(Guid, int) Delete an email Declaration void DeleteEmail(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to delete int operationIndex Index associated with the operation. Remarks Deletes an email and removes it from the inbox. Deleted emails cannot be recovered. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmailWithHttpInfo(Guid, int) Delete an email Declaration ApiResponse<object> DeleteEmailWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to delete int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Deletes an email and removes it from the inbox. Deleted emails cannot be recovered. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachment(Guid, string, string, int) Get email attachment bytes. Returned as octet-stream with content type header. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints and convert the base 64 encoded content to a file or string. Declaration byte[] DownloadAttachment(Guid emailId, string attachmentId, string apiKey = null, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment string apiKey Can pass apiKey in url for this request if you wish to download the file in a browser. Content type will be set to original content type of the attachment file. This is so that browsers can download the file correctly. (optional) int operationIndex Index associated with the operation. Returns Type Description byte[] byte[] Remarks Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentBase64(Guid, string, int) Get email attachment as base64 encoded string as an alternative to binary responses. Decode the base64FileContents as a utf-8 encoded string or array of bytes depending on the contentType. Declaration DownloadAttachmentDto DownloadAttachmentBase64(Guid emailId, string attachmentId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description DownloadAttachmentDto DownloadAttachmentDto Remarks Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentBase64WithHttpInfo(Guid, string, int) Get email attachment as base64 encoded string as an alternative to binary responses. Decode the base64FileContents as a utf-8 encoded string or array of bytes depending on the contentType. Declaration ApiResponse<DownloadAttachmentDto> DownloadAttachmentBase64WithHttpInfo(Guid emailId, string attachmentId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DownloadAttachmentDto> ApiResponse of DownloadAttachmentDto Remarks Returns the specified attachment for a given email as a base 64 encoded string. The response type is application/json. This method is similar to the downloadAttachment method but allows some clients to get around issues with binary responses. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadAttachmentWithHttpInfo(Guid, string, string, int) Get email attachment bytes. Returned as octet-stream with content type header. If you have trouble with byte responses try the downloadAttachmentBase64 response endpoints and convert the base 64 encoded content to a file or string. Declaration ApiResponse<byte[]> DownloadAttachmentWithHttpInfo(Guid emailId, string attachmentId, string apiKey = null, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment string apiKey Can pass apiKey in url for this request if you wish to download the file in a browser. Content type will be set to original content type of the attachment file. This is so that browsers can download the file correctly. (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<byte[]> ApiResponse of byte[] Remarks Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBody(Guid, int) Get email body as string. Returned as plain/text with content type header. Declaration string DownloadBody(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description string string Remarks Returns the specified email body for a given email as a string Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyBytes(Guid, int) Get email body in bytes. Returned as octet-stream with content type header. Declaration byte[] DownloadBodyBytes(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description byte[] byte[] Remarks Returns the specified email body for a given email as a stream / array of bytes. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyBytesWithHttpInfo(Guid, int) Get email body in bytes. Returned as octet-stream with content type header. Declaration ApiResponse<byte[]> DownloadBodyBytesWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<byte[]> ApiResponse of byte[] Remarks Returns the specified email body for a given email as a stream / array of bytes. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DownloadBodyWithHttpInfo(Guid, int) Get email body as string. Returned as plain/text with content type header. Declaration ApiResponse<string> DownloadBodyWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<string> ApiResponse of string Remarks Returns the specified email body for a given email as a string Exceptions Type Condition ApiException Thrown when fails to make API call View Source ForwardEmail(Guid, ForwardEmailOptions, int) Forward email to recipients Declaration SentEmailDto ForwardEmail(Guid emailId, ForwardEmailOptions forwardEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email ForwardEmailOptions forwardEmailOptions int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Remarks Forward an existing email to new recipients. The sender of the email will be the inbox that received the email you are forwarding. You can override the sender with the from option. Note you must have access to the from address in MailSlurp to use the override. For more control consider fetching the email and sending it a new using the send email endpoints. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ForwardEmailWithHttpInfo(Guid, ForwardEmailOptions, int) Forward email to recipients Declaration ApiResponse<SentEmailDto> ForwardEmailWithHttpInfo(Guid emailId, ForwardEmailOptions forwardEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email ForwardEmailOptions forwardEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Remarks Forward an existing email to new recipients. The sender of the email will be the inbox that received the email you are forwarding. You can override the sender with the from option. Note you must have access to the from address in MailSlurp to use the override. For more control consider fetching the email and sending it a new using the send email endpoints. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentMetaData(Guid, string, int) Get email attachment metadata. This is the contentType and contentLength of an attachment. To get the individual attachments use the downloadAttachment methods. Declaration AttachmentMetaData GetAttachmentMetaData(Guid emailId, string attachmentId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description AttachmentMetaData AttachmentMetaData Remarks Returns the metadata such as name and content-type for a given attachment and email. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAttachmentMetaDataWithHttpInfo(Guid, string, int) Get email attachment metadata. This is the contentType and contentLength of an attachment. To get the individual attachments use the downloadAttachment methods. Declaration ApiResponse<AttachmentMetaData> GetAttachmentMetaDataWithHttpInfo(Guid emailId, string attachmentId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email string attachmentId ID of attachment int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AttachmentMetaData> ApiResponse of AttachmentMetaData Remarks Returns the metadata such as name and content-type for a given attachment and email. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmail(Guid, bool?, int) Get email content including headers and body. Expects email to exist by ID. For emails that may not have arrived yet use the WaitForController. Declaration Email GetEmail(Guid emailId, bool? decode = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? decode Decode email body quoted-printable encoding to plain text. SMTP servers often encode text using quoted-printable format (for instance =D7). This can be a pain for testing (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description Email Email Remarks Returns a email summary object with headers and content. To retrieve the raw unparsed email use the getRawEmail endpoints Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailAttachments(Guid, int) Get all email attachment metadata. Metadata includes name and size of attachments. Declaration List<AttachmentMetaData> GetEmailAttachments(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description List<AttachmentMetaData> List<AttachmentMetaData> Remarks Returns an array of attachment metadata such as name and content-type for a given email if present. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailAttachmentsWithHttpInfo(Guid, int) Get all email attachment metadata. Metadata includes name and size of attachments. Declaration ApiResponse<List<AttachmentMetaData>> GetEmailAttachmentsWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<AttachmentMetaData>> ApiResponse of List<AttachmentMetaData> Remarks Returns an array of attachment metadata such as name and content-type for a given email if present. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentMatch(Guid, ContentMatchOptions, int) Get email content regex pattern match results. Runs regex against email body and returns match groups. Declaration EmailContentMatchResult GetEmailContentMatch(Guid emailId, ContentMatchOptions contentMatchOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to match against ContentMatchOptions contentMatchOptions int operationIndex Index associated with the operation. Returns Type Description EmailContentMatchResult EmailContentMatchResult Remarks Return the matches for a given Java style regex pattern. Do not include the typical / at start or end of regex in some languages. Given an example your code is: 12345 the pattern to extract match looks like code is: (\\\\d{6}). This will return an array of matches with the first matching the entire pattern and the subsequent matching the groups: [&apos;code is: 123456&apos;, &apos;123456&apos;] See https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html for more information of available patterns. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentMatchWithHttpInfo(Guid, ContentMatchOptions, int) Get email content regex pattern match results. Runs regex against email body and returns match groups. Declaration ApiResponse<EmailContentMatchResult> GetEmailContentMatchWithHttpInfo(Guid emailId, ContentMatchOptions contentMatchOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to match against ContentMatchOptions contentMatchOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailContentMatchResult> ApiResponse of EmailContentMatchResult Remarks Return the matches for a given Java style regex pattern. Do not include the typical / at start or end of regex in some languages. Given an example your code is: 12345 the pattern to extract match looks like code is: (\\\\d{6}). This will return an array of matches with the first matching the entire pattern and the subsequent matching the groups: [&apos;code is: 123456&apos;, &apos;123456&apos;] See https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html for more information of available patterns. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentPart(Guid, string, int) Get email content part by content type Declaration EmailContentPartResult GetEmailContentPart(Guid emailId, string contentType, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to match against string contentType Content type int operationIndex Index associated with the operation. Returns Type Description EmailContentPartResult EmailContentPartResult Remarks Get email body content parts from a multipart email message for a given content type Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailContentPartWithHttpInfo(Guid, string, int) Get email content part by content type Declaration ApiResponse<EmailContentPartResult> GetEmailContentPartWithHttpInfo(Guid emailId, string contentType, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to match against string contentType Content type int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailContentPartResult> ApiResponse of EmailContentPartResult Remarks Get email body content parts from a multipart email message for a given content type Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailCount(int) Get email count Declaration CountDto GetEmailCount(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description CountDto CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailCountWithHttpInfo(int) Get email count Declaration ApiResponse<CountDto> GetEmailCountWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CountDto> ApiResponse of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTML(Guid, bool?, bool?, int) Get email content as HTML. For displaying emails in browser context. Declaration string GetEmailHTML(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description string string Remarks Retrieve email content as HTML response for viewing in browsers. Decodes quoted-printable entities and converts charset to UTF-8. Pass your API KEY as a request parameter when viewing in a browser: ?apiKey=xxx. Returns content-type text/html;charset=utf-8 so you must call expecting that content response not JSON. For JSON response see the getEmailHTMLJson method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLJson(Guid, bool?, bool?, int) Get email content as HTML in JSON wrapper. For fetching entity decoded HTML content Declaration EmailHtmlDto GetEmailHTMLJson(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description EmailHtmlDto EmailHtmlDto Remarks Retrieve email content as HTML response. Decodes quoted-printable entities and converts charset to UTF-8. Returns content-type application/json;charset=utf-8 so you must call expecting that content response not JSON. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLJsonWithHttpInfo(Guid, bool?, bool?, int) Get email content as HTML in JSON wrapper. For fetching entity decoded HTML content Declaration ApiResponse<EmailHtmlDto> GetEmailHTMLJsonWithHttpInfo(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailHtmlDto> ApiResponse of EmailHtmlDto Remarks Retrieve email content as HTML response. Decodes quoted-printable entities and converts charset to UTF-8. Returns content-type application/json;charset=utf-8 so you must call expecting that content response not JSON. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLQuery(Guid, string, int) Parse and return text from an email, stripping HTML and decoding encoded characters Declaration EmailTextLinesResult GetEmailHTMLQuery(Guid emailId, string htmlSelector, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to perform HTML query on string htmlSelector HTML selector to search for. Uses JQuery/JSoup/CSS style selector like '.my-div' to match content. See https://jsoup.org/apidocs/org/jsoup/select/Selector.html for more information. int operationIndex Index associated with the operation. Returns Type Description EmailTextLinesResult EmailTextLinesResult Remarks Parse an email body and return the content as an array of text. HTML parsing uses JSoup which supports JQuery/CSS style selectors Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLQueryWithHttpInfo(Guid, string, int) Parse and return text from an email, stripping HTML and decoding encoded characters Declaration ApiResponse<EmailTextLinesResult> GetEmailHTMLQueryWithHttpInfo(Guid emailId, string htmlSelector, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to perform HTML query on string htmlSelector HTML selector to search for. Uses JQuery/JSoup/CSS style selector like '.my-div' to match content. See https://jsoup.org/apidocs/org/jsoup/select/Selector.html for more information. int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailTextLinesResult> ApiResponse of EmailTextLinesResult Remarks Parse an email body and return the content as an array of text. HTML parsing uses JSoup which supports JQuery/CSS style selectors Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailHTMLWithHttpInfo(Guid, bool?, bool?, int) Get email content as HTML. For displaying emails in browser context. Declaration ApiResponse<string> GetEmailHTMLWithHttpInfo(Guid emailId, bool? decode = null, bool? replaceCidImages = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? decode (optional, default to false) bool? replaceCidImages (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<string> ApiResponse of string Remarks Retrieve email content as HTML response for viewing in browsers. Decodes quoted-printable entities and converts charset to UTF-8. Pass your API KEY as a request parameter when viewing in a browser: ?apiKey=xxx. Returns content-type text/html;charset=utf-8 so you must call expecting that content response not JSON. For JSON response see the getEmailHTMLJson method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailLinks(Guid, int) Parse and return list of links found in an email (only works for HTML content) Declaration EmailLinksResult GetEmailLinks(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to fetch text for int operationIndex Index associated with the operation. Returns Type Description EmailLinksResult EmailLinksResult Remarks HTML parsing uses JSoup and UNIX line separators. Searches content for href attributes Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailLinksWithHttpInfo(Guid, int) Parse and return list of links found in an email (only works for HTML content) Declaration ApiResponse<EmailLinksResult> GetEmailLinksWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to fetch text for int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailLinksResult> ApiResponse of EmailLinksResult Remarks HTML parsing uses JSoup and UNIX line separators. Searches content for href attributes Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailPreviewURLs(Guid, int) Get email URLs for viewing in browser or downloading Declaration EmailPreviewUrls GetEmailPreviewURLs(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. Returns Type Description EmailPreviewUrls EmailPreviewUrls Remarks Get a list of URLs for email content as text/html or raw SMTP message for viewing the message in a browser. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailPreviewURLsWithHttpInfo(Guid, int) Get email URLs for viewing in browser or downloading Declaration ApiResponse<EmailPreviewUrls> GetEmailPreviewURLsWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailPreviewUrls> ApiResponse of EmailPreviewUrls Remarks Get a list of URLs for email content as text/html or raw SMTP message for viewing the message in a browser. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsOffsetPaginated(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) Get all emails in all inboxes in paginated form. Email API list all. Declaration PageEmailProjection GetEmailsOffsetPaginated(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageEmailProjection PageEmailProjection Remarks By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsOffsetPaginatedWithHttpInfo(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) Get all emails in all inboxes in paginated form. Email API list all. Declaration ApiResponse<PageEmailProjection> GetEmailsOffsetPaginatedWithHttpInfo(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailProjection> ApiResponse of PageEmailProjection Remarks By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsPaginated(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) Get all emails in all inboxes in paginated form. Email API list all. Declaration PageEmailProjection GetEmailsPaginated(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageEmailProjection PageEmailProjection Remarks By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsPaginatedWithHttpInfo(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) Get all emails in all inboxes in paginated form. Email API list all. Declaration ApiResponse<PageEmailProjection> GetEmailsPaginatedWithHttpInfo(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailProjection> ApiResponse of PageEmailProjection Remarks By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailTextLines(Guid, bool?, string, int) Parse and return text from an email, stripping HTML and decoding encoded characters Declaration EmailTextLinesResult GetEmailTextLines(Guid emailId, bool? decodeHtmlEntities = null, string lineSeparator = null, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to fetch text for bool? decodeHtmlEntities Decode HTML entities (optional) string lineSeparator Line separator character (optional) int operationIndex Index associated with the operation. Returns Type Description EmailTextLinesResult EmailTextLinesResult Remarks Parse an email body and return the content as an array of strings. HTML parsing uses JSoup and UNIX line separators. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailTextLinesWithHttpInfo(Guid, bool?, string, int) Parse and return text from an email, stripping HTML and decoding encoded characters Declaration ApiResponse<EmailTextLinesResult> GetEmailTextLinesWithHttpInfo(Guid emailId, bool? decodeHtmlEntities = null, string lineSeparator = null, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email to fetch text for bool? decodeHtmlEntities Decode HTML entities (optional) string lineSeparator Line separator character (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailTextLinesResult> ApiResponse of EmailTextLinesResult Remarks Parse an email body and return the content as an array of strings. HTML parsing uses JSoup and UNIX line separators. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailWithHttpInfo(Guid, bool?, int) Get email content including headers and body. Expects email to exist by ID. For emails that may not have arrived yet use the WaitForController. Declaration ApiResponse<Email> GetEmailWithHttpInfo(Guid emailId, bool? decode = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? decode Decode email body quoted-printable encoding to plain text. SMTP servers often encode text using quoted-printable format (for instance =D7). This can be a pain for testing (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Remarks Returns a email summary object with headers and content. To retrieve the raw unparsed email use the getRawEmail endpoints Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGravatarUrlForEmailAddress(string, string, int) Declaration GravatarUrl GetGravatarUrlForEmailAddress(string emailAddress, string size = null, int operationIndex = 0) Parameters Type Name Description string emailAddress string size (optional) int operationIndex Index associated with the operation. Returns Type Description GravatarUrl GravatarUrl Remarks Get gravatar url for email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGravatarUrlForEmailAddressWithHttpInfo(string, string, int) Declaration ApiResponse<GravatarUrl> GetGravatarUrlForEmailAddressWithHttpInfo(string emailAddress, string size = null, int operationIndex = 0) Parameters Type Name Description string emailAddress string size (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GravatarUrl> ApiResponse of GravatarUrl Remarks Get gravatar url for email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmail(List<Guid>, int) Get latest email in all inboxes. Most recently received. Declaration Email GetLatestEmail(List<Guid> inboxIds = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxIds Optional set of inboxes to filter by. Only get the latest email from these inbox IDs. If not provided will search across all inboxes (optional) int operationIndex Index associated with the operation. Returns Type Description Email Email Remarks Get the newest email in all inboxes or in a passed set of inbox IDs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInbox1(Guid, int) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Declaration Email GetLatestEmailInInbox1(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from int operationIndex Index associated with the operation. Returns Type Description Email Email Remarks Get the newest email in all inboxes or in a passed set of inbox IDs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInbox1WithHttpInfo(Guid, int) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Declaration ApiResponse<Email> GetLatestEmailInInbox1WithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Remarks Get the newest email in all inboxes or in a passed set of inbox IDs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailWithHttpInfo(List<Guid>, int) Get latest email in all inboxes. Most recently received. Declaration ApiResponse<Email> GetLatestEmailWithHttpInfo(List<Guid> inboxIds = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxIds Optional set of inboxes to filter by. Only get the latest email from these inbox IDs. If not provided will search across all inboxes (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Remarks Get the newest email in all inboxes or in a passed set of inbox IDs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationEmailsPaginated(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) Get all organization emails. List team or shared test email accounts Declaration PageEmailProjection GetOrganizationEmailsPaginated(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter search filter for emails. (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageEmailProjection PageEmailProjection Remarks By default returns all emails across all team inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationEmailsPaginatedWithHttpInfo(List<Guid>, int?, int?, string, bool?, string, DateTime?, DateTime?, int) Get all organization emails. List team or shared test email accounts Declaration ApiResponse<PageEmailProjection> GetOrganizationEmailsPaginatedWithHttpInfo(List<Guid> inboxId = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description List<Guid> inboxId Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. (optional) int? page Optional page index in email list pagination (optional, default to 0) int? size Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) string searchFilter Optional search filter search filter for emails. (optional) DateTime? since Optional filter emails received after given date time. If unset will use time 24hours prior to now. (optional) DateTime? before Optional filter emails received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailProjection> ApiResponse of PageEmailProjection Remarks By default returns all emails across all team inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailContents(Guid, int) Get raw email string. Returns unparsed raw SMTP message with headers and body. Declaration void GetRawEmailContents(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Remarks Returns a raw, unparsed, and unprocessed email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawEmailJson endpoint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailContentsWithHttpInfo(Guid, int) Get raw email string. Returns unparsed raw SMTP message with headers and body. Declaration ApiResponse<object> GetRawEmailContentsWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Returns a raw, unparsed, and unprocessed email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawEmailJson endpoint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailJson(Guid, int) Get raw email in JSON. Unparsed SMTP message in JSON wrapper format. Declaration RawEmailJson GetRawEmailJson(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description RawEmailJson RawEmailJson Remarks Returns a raw, unparsed, and unprocessed email wrapped in a JSON response object for easier handling when compared with the getRawEmail text/plain response Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawEmailJsonWithHttpInfo(Guid, int) Get raw email in JSON. Unparsed SMTP message in JSON wrapper format. Declaration ApiResponse<RawEmailJson> GetRawEmailJsonWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<RawEmailJson> ApiResponse of RawEmailJson Remarks Returns a raw, unparsed, and unprocessed email wrapped in a JSON response object for easier handling when compared with the getRawEmail text/plain response Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadEmailCount(int) Get unread email count Declaration UnreadCount GetUnreadEmailCount(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description UnreadCount UnreadCount Remarks Get number of emails unread. Unread means has not been viewed in dashboard or returned in an email API response Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadEmailCountWithHttpInfo(int) Get unread email count Declaration ApiResponse<UnreadCount> GetUnreadEmailCountWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<UnreadCount> ApiResponse of UnreadCount Remarks Get number of emails unread. Unread means has not been viewed in dashboard or returned in an email API response Exceptions Type Condition ApiException Thrown when fails to make API call View Source MarkAsRead(Guid, bool?, int) Mark an email as read on unread Declaration EmailPreview MarkAsRead(Guid emailId, bool? read = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? read What value to assign to email read property. Default true. (optional, default to true) int operationIndex Index associated with the operation. Returns Type Description EmailPreview EmailPreview Remarks Marks an email as read or unread. Pass boolean read flag to set value. This is useful if you want to read an email but keep it as unread Exceptions Type Condition ApiException Thrown when fails to make API call View Source MarkAsReadWithHttpInfo(Guid, bool?, int) Mark an email as read on unread Declaration ApiResponse<EmailPreview> MarkAsReadWithHttpInfo(Guid emailId, bool? read = null, int operationIndex = 0) Parameters Type Name Description Guid emailId bool? read What value to assign to email read property. Default true. (optional, default to true) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailPreview> ApiResponse of EmailPreview Remarks Marks an email as read or unread. Pass boolean read flag to set value. This is useful if you want to read an email but keep it as unread Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToEmail(Guid, ReplyToEmailOptions, int) Reply to an email Declaration SentEmailDto ReplyToEmail(Guid emailId, ReplyToEmailOptions replyToEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of the email that should be replied to ReplyToEmailOptions replyToEmailOptions int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Remarks Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToEmailWithHttpInfo(Guid, ReplyToEmailOptions, int) Reply to an email Declaration ApiResponse<SentEmailDto> ReplyToEmailWithHttpInfo(Guid emailId, ReplyToEmailOptions replyToEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of the email that should be replied to ReplyToEmailOptions replyToEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Remarks Send the reply to the email sender or reply-to and include same subject cc bcc etc. Reply to an email and the contents will be sent with the existing subject to the emails to, cc, and bcc. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchEmails(SearchEmailsOptions, int) Get all emails by search criteria. Return in paginated form. Declaration PageEmailProjection SearchEmails(SearchEmailsOptions searchEmailsOptions, int operationIndex = 0) Parameters Type Name Description SearchEmailsOptions searchEmailsOptions int operationIndex Index associated with the operation. Returns Type Description PageEmailProjection PageEmailProjection Remarks Search emails by given criteria return matches in paginated format. Searches against email recipients, sender, subject, email address and ID. Does not search email body Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchEmailsWithHttpInfo(SearchEmailsOptions, int) Get all emails by search criteria. Return in paginated form. Declaration ApiResponse<PageEmailProjection> SearchEmailsWithHttpInfo(SearchEmailsOptions searchEmailsOptions, int operationIndex = 0) Parameters Type Name Description SearchEmailsOptions searchEmailsOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailProjection> ApiResponse of PageEmailProjection Remarks Search emails by given criteria return matches in paginated format. Searches against email recipients, sender, subject, email address and ID. Does not search email body Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSourceOptional(SendEmailOptions, Guid?, bool?, bool?, int) Send email Declaration void SendEmailSourceOptional(SendEmailOptions sendEmailOptions, Guid? inboxId = null, bool? useDomainPool = null, bool? virtualSend = null, int operationIndex = 0) Parameters Type Name Description SendEmailOptions sendEmailOptions Guid? inboxId ID of the inbox you want to send the email from (optional) bool? useDomainPool Use domain pool. Optionally create inbox to send from using the mailslurp domain pool. (optional) bool? virtualSend Optionally create inbox to send from that is a virtual inbox and won't send to external addresses (optional) int operationIndex Index associated with the operation. Remarks Alias for InboxController.sendEmail method - see original method for full details. Sends an email from a given inbox that you have created. If no inbox is supplied a random inbox will be created for you and used to send the email. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailSourceOptionalWithHttpInfo(SendEmailOptions, Guid?, bool?, bool?, int) Send email Declaration ApiResponse<object> SendEmailSourceOptionalWithHttpInfo(SendEmailOptions sendEmailOptions, Guid? inboxId = null, bool? useDomainPool = null, bool? virtualSend = null, int operationIndex = 0) Parameters Type Name Description SendEmailOptions sendEmailOptions Guid? inboxId ID of the inbox you want to send the email from (optional) bool? useDomainPool Use domain pool. Optionally create inbox to send from using the mailslurp domain pool. (optional) bool? virtualSend Optionally create inbox to send from that is a virtual inbox and won't send to external addresses (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Alias for InboxController.sendEmail method - see original method for full details. Sends an email from a given inbox that you have created. If no inbox is supplied a random inbox will be created for you and used to send the email. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmail(Guid, int) Validate email HTML contents Declaration ValidationDto ValidateEmail(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ValidationDto ValidationDto Remarks Validate the HTML content of email if HTML is found. Considered valid if no HTML is present. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailWithHttpInfo(Guid, int) Validate email HTML contents Declaration ApiResponse<ValidationDto> ValidateEmailWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ValidationDto> ApiResponse of ValidationDto Remarks Validate the HTML content of email if HTML is found. Considered valid if no HTML is present. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IEmailVerificationControllerApi.html": {
    "href": "api/mailslurp.Api.IEmailVerificationControllerApi.html",
    "title": "Interface IEmailVerificationControllerApi | MailSlurp",
    "keywords": "Interface IEmailVerificationControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IEmailVerificationControllerApiSync.DeleteAllValidationRequests(int) IEmailVerificationControllerApiSync.DeleteAllValidationRequestsWithHttpInfo(int) IEmailVerificationControllerApiSync.DeleteValidationRequest(Guid, int) IEmailVerificationControllerApiSync.DeleteValidationRequestWithHttpInfo(Guid, int) IEmailVerificationControllerApiSync.GetValidationRequests(int?, int?, string, string, DateTime?, DateTime?, bool?, int) IEmailVerificationControllerApiSync.GetValidationRequestsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, bool?, int) IEmailVerificationControllerApiSync.ValidateEmailAddressList(ValidateEmailAddressListOptions, int) IEmailVerificationControllerApiSync.ValidateEmailAddressListWithHttpInfo(ValidateEmailAddressListOptions, int) IEmailVerificationControllerApiAsync.DeleteAllValidationRequestsAsync(int, CancellationToken) IEmailVerificationControllerApiAsync.DeleteAllValidationRequestsWithHttpInfoAsync(int, CancellationToken) IEmailVerificationControllerApiAsync.DeleteValidationRequestAsync(Guid, int, CancellationToken) IEmailVerificationControllerApiAsync.DeleteValidationRequestWithHttpInfoAsync(Guid, int, CancellationToken) IEmailVerificationControllerApiAsync.GetValidationRequestsAsync(int?, int?, string, string, DateTime?, DateTime?, bool?, int, CancellationToken) IEmailVerificationControllerApiAsync.GetValidationRequestsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, bool?, int, CancellationToken) IEmailVerificationControllerApiAsync.ValidateEmailAddressListAsync(ValidateEmailAddressListOptions, int, CancellationToken) IEmailVerificationControllerApiAsync.ValidateEmailAddressListWithHttpInfoAsync(ValidateEmailAddressListOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IEmailVerificationControllerApi : IEmailVerificationControllerApiSync, IEmailVerificationControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IEmailVerificationControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IEmailVerificationControllerApiAsync.html",
    "title": "Interface IEmailVerificationControllerApiAsync | MailSlurp",
    "keywords": "Interface IEmailVerificationControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IEmailVerificationControllerApiAsync : IApiAccessor Methods View Source DeleteAllValidationRequestsAsync(int, CancellationToken) Delete all validation requests Declaration Task DeleteAllValidationRequestsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllValidationRequestsWithHttpInfoAsync(int, CancellationToken) Delete all validation requests Declaration Task<ApiResponse<object>> DeleteAllValidationRequestsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteValidationRequestAsync(Guid, int, CancellationToken) Delete a validation record Declaration Task DeleteValidationRequestAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteValidationRequestWithHttpInfoAsync(Guid, int, CancellationToken) Delete a validation record Declaration Task<ApiResponse<object>> DeleteValidationRequestWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetValidationRequestsAsync(int?, int?, string, string, DateTime?, DateTime?, bool?, int, CancellationToken) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration Task<PageEmailValidationRequest> GetValidationRequestsAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? isValid = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? isValid Filter where email is valid is true or false (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailValidationRequest> Task of PageEmailValidationRequest Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetValidationRequestsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, bool?, int, CancellationToken) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration Task<ApiResponse<PageEmailValidationRequest>> GetValidationRequestsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? isValid = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? isValid Filter where email is valid is true or false (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailValidationRequest>> Task of ApiResponse (PageEmailValidationRequest) Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailAddressListAsync(ValidateEmailAddressListOptions, int, CancellationToken) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration Task<ValidateEmailAddressListResult> ValidateEmailAddressListAsync(ValidateEmailAddressListOptions validateEmailAddressListOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description ValidateEmailAddressListOptions validateEmailAddressListOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ValidateEmailAddressListResult> Task of ValidateEmailAddressListResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailAddressListWithHttpInfoAsync(ValidateEmailAddressListOptions, int, CancellationToken) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration Task<ApiResponse<ValidateEmailAddressListResult>> ValidateEmailAddressListWithHttpInfoAsync(ValidateEmailAddressListOptions validateEmailAddressListOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description ValidateEmailAddressListOptions validateEmailAddressListOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ValidateEmailAddressListResult>> Task of ApiResponse (ValidateEmailAddressListResult) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IEmailVerificationControllerApiSync.html": {
    "href": "api/mailslurp.Api.IEmailVerificationControllerApiSync.html",
    "title": "Interface IEmailVerificationControllerApiSync | MailSlurp",
    "keywords": "Interface IEmailVerificationControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IEmailVerificationControllerApiSync : IApiAccessor Methods View Source DeleteAllValidationRequests(int) Delete all validation requests Declaration void DeleteAllValidationRequests(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllValidationRequestsWithHttpInfo(int) Delete all validation requests Declaration ApiResponse<object> DeleteAllValidationRequestsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteValidationRequest(Guid, int) Delete a validation record Declaration void DeleteValidationRequest(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteValidationRequestWithHttpInfo(Guid, int) Delete a validation record Declaration ApiResponse<object> DeleteValidationRequestWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetValidationRequests(int?, int?, string, string, DateTime?, DateTime?, bool?, int) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration PageEmailValidationRequest GetValidationRequests(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? isValid = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? isValid Filter where email is valid is true or false (optional) int operationIndex Index associated with the operation. Returns Type Description PageEmailValidationRequest PageEmailValidationRequest Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetValidationRequestsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, bool?, int) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration ApiResponse<PageEmailValidationRequest> GetValidationRequestsWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? isValid = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? isValid Filter where email is valid is true or false (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailValidationRequest> ApiResponse of PageEmailValidationRequest Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailAddressList(ValidateEmailAddressListOptions, int) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration ValidateEmailAddressListResult ValidateEmailAddressList(ValidateEmailAddressListOptions validateEmailAddressListOptions, int operationIndex = 0) Parameters Type Name Description ValidateEmailAddressListOptions validateEmailAddressListOptions int operationIndex Index associated with the operation. Returns Type Description ValidateEmailAddressListResult ValidateEmailAddressListResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source ValidateEmailAddressListWithHttpInfo(ValidateEmailAddressListOptions, int) Validate a list of email addresses. Per unit billing. See your plan for pricing. Declaration ApiResponse<ValidateEmailAddressListResult> ValidateEmailAddressListWithHttpInfo(ValidateEmailAddressListOptions validateEmailAddressListOptions, int operationIndex = 0) Parameters Type Name Description ValidateEmailAddressListOptions validateEmailAddressListOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ValidateEmailAddressListResult> ApiResponse of ValidateEmailAddressListResult Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IExpiredControllerApi.html": {
    "href": "api/mailslurp.Api.IExpiredControllerApi.html",
    "title": "Interface IExpiredControllerApi | MailSlurp",
    "keywords": "Interface IExpiredControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IExpiredControllerApiSync.GetExpirationDefaults(int) IExpiredControllerApiSync.GetExpirationDefaultsWithHttpInfo(int) IExpiredControllerApiSync.GetExpiredInboxByInboxId(Guid, int) IExpiredControllerApiSync.GetExpiredInboxByInboxIdWithHttpInfo(Guid, int) IExpiredControllerApiSync.GetExpiredInboxRecord(Guid, int) IExpiredControllerApiSync.GetExpiredInboxRecordWithHttpInfo(Guid, int) IExpiredControllerApiSync.GetExpiredInboxes(int?, int?, string, DateTime?, DateTime?, int) IExpiredControllerApiSync.GetExpiredInboxesWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) IExpiredControllerApiAsync.GetExpirationDefaultsAsync(int, CancellationToken) IExpiredControllerApiAsync.GetExpirationDefaultsWithHttpInfoAsync(int, CancellationToken) IExpiredControllerApiAsync.GetExpiredInboxByInboxIdAsync(Guid, int, CancellationToken) IExpiredControllerApiAsync.GetExpiredInboxByInboxIdWithHttpInfoAsync(Guid, int, CancellationToken) IExpiredControllerApiAsync.GetExpiredInboxRecordAsync(Guid, int, CancellationToken) IExpiredControllerApiAsync.GetExpiredInboxRecordWithHttpInfoAsync(Guid, int, CancellationToken) IExpiredControllerApiAsync.GetExpiredInboxesAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IExpiredControllerApiAsync.GetExpiredInboxesWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IExpiredControllerApi : IExpiredControllerApiSync, IExpiredControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IExpiredControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IExpiredControllerApiAsync.html",
    "title": "Interface IExpiredControllerApiAsync | MailSlurp",
    "keywords": "Interface IExpiredControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IExpiredControllerApiAsync : IApiAccessor Methods View Source GetExpirationDefaultsAsync(int, CancellationToken) Get default expiration settings Declaration Task<ExpirationDefaults> GetExpirationDefaultsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ExpirationDefaults> Task of ExpirationDefaults Remarks Return default times used for inbox expiration Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpirationDefaultsWithHttpInfoAsync(int, CancellationToken) Get default expiration settings Declaration Task<ApiResponse<ExpirationDefaults>> GetExpirationDefaultsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ExpirationDefaults>> Task of ApiResponse (ExpirationDefaults) Remarks Return default times used for inbox expiration Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxByInboxIdAsync(Guid, int, CancellationToken) Get expired inbox record for a previously existing inbox Declaration Task<ExpiredInboxDto> GetExpiredInboxByInboxIdAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox you want to retrieve (not the inbox ID) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ExpiredInboxDto> Task of ExpiredInboxDto Remarks Use the inboxId to return an ExpiredInboxRecord if an inbox has expired. Inboxes expire and are disabled if an expiration date is set or plan requires. Returns 404 if no expired inbox is found for the inboxId Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxByInboxIdWithHttpInfoAsync(Guid, int, CancellationToken) Get expired inbox record for a previously existing inbox Declaration Task<ApiResponse<ExpiredInboxDto>> GetExpiredInboxByInboxIdWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox you want to retrieve (not the inbox ID) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ExpiredInboxDto>> Task of ApiResponse (ExpiredInboxDto) Remarks Use the inboxId to return an ExpiredInboxRecord if an inbox has expired. Inboxes expire and are disabled if an expiration date is set or plan requires. Returns 404 if no expired inbox is found for the inboxId Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxesAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) List records of expired inboxes Declaration Task<PageExpiredInboxRecordProjection> GetExpiredInboxesAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageExpiredInboxRecordProjection> Task of PageExpiredInboxRecordProjection Remarks Inboxes created with an expiration date will expire after the given date. An ExpiredInboxRecord is created that records the inboxes old ID and email address. You can still read emails in the inbox (using the inboxes old ID) but the email address associated with the inbox can no longer send or receive emails. Fetch expired inbox records to view the old inboxes properties Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxesWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) List records of expired inboxes Declaration Task<ApiResponse<PageExpiredInboxRecordProjection>> GetExpiredInboxesWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageExpiredInboxRecordProjection>> Task of ApiResponse (PageExpiredInboxRecordProjection) Remarks Inboxes created with an expiration date will expire after the given date. An ExpiredInboxRecord is created that records the inboxes old ID and email address. You can still read emails in the inbox (using the inboxes old ID) but the email address associated with the inbox can no longer send or receive emails. Fetch expired inbox records to view the old inboxes properties Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxRecordAsync(Guid, int, CancellationToken) Get an expired inbox record Declaration Task<ExpiredInboxDto> GetExpiredInboxRecordAsync(Guid expiredId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid expiredId ID of the ExpiredInboxRecord you want to retrieve. This is different from the ID of the inbox you are interested in. See other methods for getting ExpiredInboxRecord for an inbox inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ExpiredInboxDto> Task of ExpiredInboxDto Remarks Inboxes created with an expiration date will expire after the given date and be moved to an ExpiredInbox entity. You can still read emails in the inbox but it can no longer send or receive emails. Fetch the expired inboxes to view the old inboxes properties Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxRecordWithHttpInfoAsync(Guid, int, CancellationToken) Get an expired inbox record Declaration Task<ApiResponse<ExpiredInboxDto>> GetExpiredInboxRecordWithHttpInfoAsync(Guid expiredId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid expiredId ID of the ExpiredInboxRecord you want to retrieve. This is different from the ID of the inbox you are interested in. See other methods for getting ExpiredInboxRecord for an inbox inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ExpiredInboxDto>> Task of ApiResponse (ExpiredInboxDto) Remarks Inboxes created with an expiration date will expire after the given date and be moved to an ExpiredInbox entity. You can still read emails in the inbox but it can no longer send or receive emails. Fetch the expired inboxes to view the old inboxes properties Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IExpiredControllerApiSync.html": {
    "href": "api/mailslurp.Api.IExpiredControllerApiSync.html",
    "title": "Interface IExpiredControllerApiSync | MailSlurp",
    "keywords": "Interface IExpiredControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IExpiredControllerApiSync : IApiAccessor Methods View Source GetExpirationDefaults(int) Get default expiration settings Declaration ExpirationDefaults GetExpirationDefaults(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ExpirationDefaults ExpirationDefaults Remarks Return default times used for inbox expiration Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpirationDefaultsWithHttpInfo(int) Get default expiration settings Declaration ApiResponse<ExpirationDefaults> GetExpirationDefaultsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ExpirationDefaults> ApiResponse of ExpirationDefaults Remarks Return default times used for inbox expiration Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxByInboxId(Guid, int) Get expired inbox record for a previously existing inbox Declaration ExpiredInboxDto GetExpiredInboxByInboxId(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox you want to retrieve (not the inbox ID) int operationIndex Index associated with the operation. Returns Type Description ExpiredInboxDto ExpiredInboxDto Remarks Use the inboxId to return an ExpiredInboxRecord if an inbox has expired. Inboxes expire and are disabled if an expiration date is set or plan requires. Returns 404 if no expired inbox is found for the inboxId Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxByInboxIdWithHttpInfo(Guid, int) Get expired inbox record for a previously existing inbox Declaration ApiResponse<ExpiredInboxDto> GetExpiredInboxByInboxIdWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox you want to retrieve (not the inbox ID) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ExpiredInboxDto> ApiResponse of ExpiredInboxDto Remarks Use the inboxId to return an ExpiredInboxRecord if an inbox has expired. Inboxes expire and are disabled if an expiration date is set or plan requires. Returns 404 if no expired inbox is found for the inboxId Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxes(int?, int?, string, DateTime?, DateTime?, int) List records of expired inboxes Declaration PageExpiredInboxRecordProjection GetExpiredInboxes(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageExpiredInboxRecordProjection PageExpiredInboxRecordProjection Remarks Inboxes created with an expiration date will expire after the given date. An ExpiredInboxRecord is created that records the inboxes old ID and email address. You can still read emails in the inbox (using the inboxes old ID) but the email address associated with the inbox can no longer send or receive emails. Fetch expired inbox records to view the old inboxes properties Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxesWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) List records of expired inboxes Declaration ApiResponse<PageExpiredInboxRecordProjection> GetExpiredInboxesWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageExpiredInboxRecordProjection> ApiResponse of PageExpiredInboxRecordProjection Remarks Inboxes created with an expiration date will expire after the given date. An ExpiredInboxRecord is created that records the inboxes old ID and email address. You can still read emails in the inbox (using the inboxes old ID) but the email address associated with the inbox can no longer send or receive emails. Fetch expired inbox records to view the old inboxes properties Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxRecord(Guid, int) Get an expired inbox record Declaration ExpiredInboxDto GetExpiredInboxRecord(Guid expiredId, int operationIndex = 0) Parameters Type Name Description Guid expiredId ID of the ExpiredInboxRecord you want to retrieve. This is different from the ID of the inbox you are interested in. See other methods for getting ExpiredInboxRecord for an inbox inboxId int operationIndex Index associated with the operation. Returns Type Description ExpiredInboxDto ExpiredInboxDto Remarks Inboxes created with an expiration date will expire after the given date and be moved to an ExpiredInbox entity. You can still read emails in the inbox but it can no longer send or receive emails. Fetch the expired inboxes to view the old inboxes properties Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExpiredInboxRecordWithHttpInfo(Guid, int) Get an expired inbox record Declaration ApiResponse<ExpiredInboxDto> GetExpiredInboxRecordWithHttpInfo(Guid expiredId, int operationIndex = 0) Parameters Type Name Description Guid expiredId ID of the ExpiredInboxRecord you want to retrieve. This is different from the ID of the inbox you are interested in. See other methods for getting ExpiredInboxRecord for an inbox inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ExpiredInboxDto> ApiResponse of ExpiredInboxDto Remarks Inboxes created with an expiration date will expire after the given date and be moved to an ExpiredInbox entity. You can still read emails in the inbox but it can no longer send or receive emails. Fetch the expired inboxes to view the old inboxes properties Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IExportControllerApi.html": {
    "href": "api/mailslurp.Api.IExportControllerApi.html",
    "title": "Interface IExportControllerApi | MailSlurp",
    "keywords": "Interface IExportControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IExportControllerApiSync.ExportEntities(string, string, string, string, string, bool?, DateTime?, DateTime?, int) IExportControllerApiSync.ExportEntitiesWithHttpInfo(string, string, string, string, string, bool?, DateTime?, DateTime?, int) IExportControllerApiSync.GetExportLink(string, ExportOptions, string, int) IExportControllerApiSync.GetExportLinkWithHttpInfo(string, ExportOptions, string, int) IExportControllerApiAsync.ExportEntitiesAsync(string, string, string, string, string, bool?, DateTime?, DateTime?, int, CancellationToken) IExportControllerApiAsync.ExportEntitiesWithHttpInfoAsync(string, string, string, string, string, bool?, DateTime?, DateTime?, int, CancellationToken) IExportControllerApiAsync.GetExportLinkAsync(string, ExportOptions, string, int, CancellationToken) IExportControllerApiAsync.GetExportLinkWithHttpInfoAsync(string, ExportOptions, string, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IExportControllerApi : IExportControllerApiSync, IExportControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IExportControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IExportControllerApiAsync.html",
    "title": "Interface IExportControllerApiAsync | MailSlurp",
    "keywords": "Interface IExportControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IExportControllerApiAsync : IApiAccessor Methods View Source ExportEntitiesAsync(string, string, string, string, string, bool?, DateTime?, DateTime?, int, CancellationToken) Export inboxes link callable via browser Declaration Task<byte[]> ExportEntitiesAsync(string exportType, string apiKey, string outputFormat, string filter = null, string listSeparatorToken = null, bool? excludePreviouslyExported = null, DateTime? createdEarliestTime = null, DateTime? createdOldestTime = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string exportType string apiKey string outputFormat string filter (optional) string listSeparatorToken (optional) bool? excludePreviouslyExported (optional) DateTime? createdEarliestTime (optional) DateTime? createdOldestTime (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<byte[]> Task of byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source ExportEntitiesWithHttpInfoAsync(string, string, string, string, string, bool?, DateTime?, DateTime?, int, CancellationToken) Export inboxes link callable via browser Declaration Task<ApiResponse<byte[]>> ExportEntitiesWithHttpInfoAsync(string exportType, string apiKey, string outputFormat, string filter = null, string listSeparatorToken = null, bool? excludePreviouslyExported = null, DateTime? createdEarliestTime = null, DateTime? createdOldestTime = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string exportType string apiKey string outputFormat string filter (optional) string listSeparatorToken (optional) bool? excludePreviouslyExported (optional) DateTime? createdEarliestTime (optional) DateTime? createdOldestTime (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<byte[]>> Task of ApiResponse (byte[]) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExportLinkAsync(string, ExportOptions, string, int, CancellationToken) Get export link Declaration Task<ExportLink> GetExportLinkAsync(string exportType, ExportOptions exportOptions, string apiKey = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string exportType ExportOptions exportOptions string apiKey (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ExportLink> Task of ExportLink Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExportLinkWithHttpInfoAsync(string, ExportOptions, string, int, CancellationToken) Get export link Declaration Task<ApiResponse<ExportLink>> GetExportLinkWithHttpInfoAsync(string exportType, ExportOptions exportOptions, string apiKey = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string exportType ExportOptions exportOptions string apiKey (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ExportLink>> Task of ApiResponse (ExportLink) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IExportControllerApiSync.html": {
    "href": "api/mailslurp.Api.IExportControllerApiSync.html",
    "title": "Interface IExportControllerApiSync | MailSlurp",
    "keywords": "Interface IExportControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IExportControllerApiSync : IApiAccessor Methods View Source ExportEntities(string, string, string, string, string, bool?, DateTime?, DateTime?, int) Export inboxes link callable via browser Declaration byte[] ExportEntities(string exportType, string apiKey, string outputFormat, string filter = null, string listSeparatorToken = null, bool? excludePreviouslyExported = null, DateTime? createdEarliestTime = null, DateTime? createdOldestTime = null, int operationIndex = 0) Parameters Type Name Description string exportType string apiKey string outputFormat string filter (optional) string listSeparatorToken (optional) bool? excludePreviouslyExported (optional) DateTime? createdEarliestTime (optional) DateTime? createdOldestTime (optional) int operationIndex Index associated with the operation. Returns Type Description byte[] byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source ExportEntitiesWithHttpInfo(string, string, string, string, string, bool?, DateTime?, DateTime?, int) Export inboxes link callable via browser Declaration ApiResponse<byte[]> ExportEntitiesWithHttpInfo(string exportType, string apiKey, string outputFormat, string filter = null, string listSeparatorToken = null, bool? excludePreviouslyExported = null, DateTime? createdEarliestTime = null, DateTime? createdOldestTime = null, int operationIndex = 0) Parameters Type Name Description string exportType string apiKey string outputFormat string filter (optional) string listSeparatorToken (optional) bool? excludePreviouslyExported (optional) DateTime? createdEarliestTime (optional) DateTime? createdOldestTime (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<byte[]> ApiResponse of byte[] Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExportLink(string, ExportOptions, string, int) Get export link Declaration ExportLink GetExportLink(string exportType, ExportOptions exportOptions, string apiKey = null, int operationIndex = 0) Parameters Type Name Description string exportType ExportOptions exportOptions string apiKey (optional) int operationIndex Index associated with the operation. Returns Type Description ExportLink ExportLink Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetExportLinkWithHttpInfo(string, ExportOptions, string, int) Get export link Declaration ApiResponse<ExportLink> GetExportLinkWithHttpInfo(string exportType, ExportOptions exportOptions, string apiKey = null, int operationIndex = 0) Parameters Type Name Description string exportType ExportOptions exportOptions string apiKey (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ExportLink> ApiResponse of ExportLink Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IFormControllerApi.html": {
    "href": "api/mailslurp.Api.IFormControllerApi.html",
    "title": "Interface IFormControllerApi | MailSlurp",
    "keywords": "Interface IFormControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IFormControllerApiSync.SubmitForm(string, string, string, string, string, string, string, int) IFormControllerApiSync.SubmitFormWithHttpInfo(string, string, string, string, string, string, string, int) IFormControllerApiAsync.SubmitFormAsync(string, string, string, string, string, string, string, int, CancellationToken) IFormControllerApiAsync.SubmitFormWithHttpInfoAsync(string, string, string, string, string, string, string, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IFormControllerApi : IFormControllerApiSync, IFormControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IFormControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IFormControllerApiAsync.html",
    "title": "Interface IFormControllerApiAsync | MailSlurp",
    "keywords": "Interface IFormControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IFormControllerApiAsync : IApiAccessor Methods View Source SubmitFormAsync(string, string, string, string, string, string, string, int, CancellationToken) Submit a form to be parsed and sent as an email to an address determined by the form fields Declaration Task<string> SubmitFormAsync(string to = null, string subject = null, string redirectTo = null, string emailAddress = null, string successMessage = null, string spamCheck = null, string otherParameters = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string to The email address that submitted form should be sent to. (optional) string subject Optional subject of the email that will be sent. (optional) string redirectTo Optional URL to redirect form submitter to after submission. If not present user will see a success message. (optional) string emailAddress Email address of the submitting user. Include this if you wish to record the submitters email address and reply to it later. (optional) string successMessage Optional success message to display if no _redirectTo present. (optional) string spamCheck Optional but recommended field that catches spammers out. Include as a hidden form field but LEAVE EMPTY. Spam-bots will usually fill every field. If the _spamCheck field is filled the form submission will be ignored. (optional) string otherParameters All other parameters or fields will be accepted and attached to the sent email. This includes files and any HTML form field with a name. These fields will become the body of the email that is sent. (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<string> Task of string Remarks This endpoint allows you to submit HTML forms and receive the field values and files via email. #### Parameters The endpoint looks for special meta parameters in the form fields OR in the URL request parameters. The meta parameters can be used to specify the behaviour of the email. You must provide at-least a _to email address to tell the endpoint where the form should be emailed. These can be submitted as hidden HTML input fields with the corresponding name attributes or as URL query parameters such as ?_to=test@example.com The endpoint takes all other form fields that are named and includes them in the message body of the email. Files are sent as attachments. #### Submitting This endpoint accepts form submission via POST method. It accepts application/x-www-form-urlencoded, and multipart/form-data content-types. #### HTML Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms\\&quot; method=\\&quot;post\\&quot; > &lt;input name=\\&quot;_to\\&quot; type=\\&quot;hidden\\&quot; value=\\&quot;test@example.com\\&quot;/> &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> #### URL Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms?_to=test@example.com\\&quot; method=\\&quot;post\\&quot; > &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> The email address is specified by a _to field OR is extracted from an email alias specified by a _toAlias field (see the alias controller for more information). Endpoint accepts . You can specify a content type in HTML forms using the enctype attribute, for instance: &lt;form enctype=\\&quot;multipart/form-data\\&quot;>. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SubmitFormWithHttpInfoAsync(string, string, string, string, string, string, string, int, CancellationToken) Submit a form to be parsed and sent as an email to an address determined by the form fields Declaration Task<ApiResponse<string>> SubmitFormWithHttpInfoAsync(string to = null, string subject = null, string redirectTo = null, string emailAddress = null, string successMessage = null, string spamCheck = null, string otherParameters = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string to The email address that submitted form should be sent to. (optional) string subject Optional subject of the email that will be sent. (optional) string redirectTo Optional URL to redirect form submitter to after submission. If not present user will see a success message. (optional) string emailAddress Email address of the submitting user. Include this if you wish to record the submitters email address and reply to it later. (optional) string successMessage Optional success message to display if no _redirectTo present. (optional) string spamCheck Optional but recommended field that catches spammers out. Include as a hidden form field but LEAVE EMPTY. Spam-bots will usually fill every field. If the _spamCheck field is filled the form submission will be ignored. (optional) string otherParameters All other parameters or fields will be accepted and attached to the sent email. This includes files and any HTML form field with a name. These fields will become the body of the email that is sent. (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<string>> Task of ApiResponse (string) Remarks This endpoint allows you to submit HTML forms and receive the field values and files via email. #### Parameters The endpoint looks for special meta parameters in the form fields OR in the URL request parameters. The meta parameters can be used to specify the behaviour of the email. You must provide at-least a _to email address to tell the endpoint where the form should be emailed. These can be submitted as hidden HTML input fields with the corresponding name attributes or as URL query parameters such as ?_to=test@example.com The endpoint takes all other form fields that are named and includes them in the message body of the email. Files are sent as attachments. #### Submitting This endpoint accepts form submission via POST method. It accepts application/x-www-form-urlencoded, and multipart/form-data content-types. #### HTML Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms\\&quot; method=\\&quot;post\\&quot; > &lt;input name=\\&quot;_to\\&quot; type=\\&quot;hidden\\&quot; value=\\&quot;test@example.com\\&quot;/> &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> #### URL Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms?_to=test@example.com\\&quot; method=\\&quot;post\\&quot; > &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> The email address is specified by a _to field OR is extracted from an email alias specified by a _toAlias field (see the alias controller for more information). Endpoint accepts . You can specify a content type in HTML forms using the enctype attribute, for instance: &lt;form enctype=\\&quot;multipart/form-data\\&quot;>. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IFormControllerApiSync.html": {
    "href": "api/mailslurp.Api.IFormControllerApiSync.html",
    "title": "Interface IFormControllerApiSync | MailSlurp",
    "keywords": "Interface IFormControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IFormControllerApiSync : IApiAccessor Methods View Source SubmitForm(string, string, string, string, string, string, string, int) Submit a form to be parsed and sent as an email to an address determined by the form fields Declaration string SubmitForm(string to = null, string subject = null, string redirectTo = null, string emailAddress = null, string successMessage = null, string spamCheck = null, string otherParameters = null, int operationIndex = 0) Parameters Type Name Description string to The email address that submitted form should be sent to. (optional) string subject Optional subject of the email that will be sent. (optional) string redirectTo Optional URL to redirect form submitter to after submission. If not present user will see a success message. (optional) string emailAddress Email address of the submitting user. Include this if you wish to record the submitters email address and reply to it later. (optional) string successMessage Optional success message to display if no _redirectTo present. (optional) string spamCheck Optional but recommended field that catches spammers out. Include as a hidden form field but LEAVE EMPTY. Spam-bots will usually fill every field. If the _spamCheck field is filled the form submission will be ignored. (optional) string otherParameters All other parameters or fields will be accepted and attached to the sent email. This includes files and any HTML form field with a name. These fields will become the body of the email that is sent. (optional) int operationIndex Index associated with the operation. Returns Type Description string string Remarks This endpoint allows you to submit HTML forms and receive the field values and files via email. #### Parameters The endpoint looks for special meta parameters in the form fields OR in the URL request parameters. The meta parameters can be used to specify the behaviour of the email. You must provide at-least a _to email address to tell the endpoint where the form should be emailed. These can be submitted as hidden HTML input fields with the corresponding name attributes or as URL query parameters such as ?_to=test@example.com The endpoint takes all other form fields that are named and includes them in the message body of the email. Files are sent as attachments. #### Submitting This endpoint accepts form submission via POST method. It accepts application/x-www-form-urlencoded, and multipart/form-data content-types. #### HTML Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms\\&quot; method=\\&quot;post\\&quot; > &lt;input name=\\&quot;_to\\&quot; type=\\&quot;hidden\\&quot; value=\\&quot;test@example.com\\&quot;/> &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> #### URL Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms?_to=test@example.com\\&quot; method=\\&quot;post\\&quot; > &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> The email address is specified by a _to field OR is extracted from an email alias specified by a _toAlias field (see the alias controller for more information). Endpoint accepts . You can specify a content type in HTML forms using the enctype attribute, for instance: &lt;form enctype=\\&quot;multipart/form-data\\&quot;>. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SubmitFormWithHttpInfo(string, string, string, string, string, string, string, int) Submit a form to be parsed and sent as an email to an address determined by the form fields Declaration ApiResponse<string> SubmitFormWithHttpInfo(string to = null, string subject = null, string redirectTo = null, string emailAddress = null, string successMessage = null, string spamCheck = null, string otherParameters = null, int operationIndex = 0) Parameters Type Name Description string to The email address that submitted form should be sent to. (optional) string subject Optional subject of the email that will be sent. (optional) string redirectTo Optional URL to redirect form submitter to after submission. If not present user will see a success message. (optional) string emailAddress Email address of the submitting user. Include this if you wish to record the submitters email address and reply to it later. (optional) string successMessage Optional success message to display if no _redirectTo present. (optional) string spamCheck Optional but recommended field that catches spammers out. Include as a hidden form field but LEAVE EMPTY. Spam-bots will usually fill every field. If the _spamCheck field is filled the form submission will be ignored. (optional) string otherParameters All other parameters or fields will be accepted and attached to the sent email. This includes files and any HTML form field with a name. These fields will become the body of the email that is sent. (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<string> ApiResponse of string Remarks This endpoint allows you to submit HTML forms and receive the field values and files via email. #### Parameters The endpoint looks for special meta parameters in the form fields OR in the URL request parameters. The meta parameters can be used to specify the behaviour of the email. You must provide at-least a _to email address to tell the endpoint where the form should be emailed. These can be submitted as hidden HTML input fields with the corresponding name attributes or as URL query parameters such as ?_to=test@example.com The endpoint takes all other form fields that are named and includes them in the message body of the email. Files are sent as attachments. #### Submitting This endpoint accepts form submission via POST method. It accepts application/x-www-form-urlencoded, and multipart/form-data content-types. #### HTML Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms\\&quot; method=\\&quot;post\\&quot; > &lt;input name=\\&quot;_to\\&quot; type=\\&quot;hidden\\&quot; value=\\&quot;test@example.com\\&quot;/> &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> #### URL Example html &lt;form action=\\&quot;https://csharp.api.mailslurp.com/forms?_to=test@example.com\\&quot; method=\\&quot;post\\&quot; > &lt;textarea name=\\&quot;feedback\\&quot;>&lt;/textarea> &lt;button type=\\&quot;submit\\&quot;>Submit&lt;/button> &lt;/form> The email address is specified by a _to field OR is extracted from an email alias specified by a _toAlias field (see the alias controller for more information). Endpoint accepts . You can specify a content type in HTML forms using the enctype attribute, for instance: &lt;form enctype=\\&quot;multipart/form-data\\&quot;>. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IGroupControllerApi.html": {
    "href": "api/mailslurp.Api.IGroupControllerApi.html",
    "title": "Interface IGroupControllerApi | MailSlurp",
    "keywords": "Interface IGroupControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IGroupControllerApiSync.AddContactsToGroup(Guid, UpdateGroupContacts, int) IGroupControllerApiSync.AddContactsToGroupWithHttpInfo(Guid, UpdateGroupContacts, int) IGroupControllerApiSync.CreateGroup(CreateGroupOptions, int) IGroupControllerApiSync.CreateGroupWithHttpInfo(CreateGroupOptions, int) IGroupControllerApiSync.DeleteGroup(Guid, int) IGroupControllerApiSync.DeleteGroupWithHttpInfo(Guid, int) IGroupControllerApiSync.GetAllGroups(int?, int?, string, DateTime?, DateTime?, int) IGroupControllerApiSync.GetAllGroupsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) IGroupControllerApiSync.GetGroup(Guid, int) IGroupControllerApiSync.GetGroupWithHttpInfo(Guid, int) IGroupControllerApiSync.GetGroupWithContacts(Guid, int) IGroupControllerApiSync.GetGroupWithContactsWithHttpInfo(Guid, int) IGroupControllerApiSync.GetGroupWithContactsPaginated(Guid, int?, int?, string, DateTime?, DateTime?, int) IGroupControllerApiSync.GetGroupWithContactsPaginatedWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) IGroupControllerApiSync.GetGroups(int) IGroupControllerApiSync.GetGroupsWithHttpInfo(int) IGroupControllerApiSync.RemoveContactsFromGroup(Guid, UpdateGroupContacts, int) IGroupControllerApiSync.RemoveContactsFromGroupWithHttpInfo(Guid, UpdateGroupContacts, int) IGroupControllerApiAsync.AddContactsToGroupAsync(Guid, UpdateGroupContacts, int, CancellationToken) IGroupControllerApiAsync.AddContactsToGroupWithHttpInfoAsync(Guid, UpdateGroupContacts, int, CancellationToken) IGroupControllerApiAsync.CreateGroupAsync(CreateGroupOptions, int, CancellationToken) IGroupControllerApiAsync.CreateGroupWithHttpInfoAsync(CreateGroupOptions, int, CancellationToken) IGroupControllerApiAsync.DeleteGroupAsync(Guid, int, CancellationToken) IGroupControllerApiAsync.DeleteGroupWithHttpInfoAsync(Guid, int, CancellationToken) IGroupControllerApiAsync.GetAllGroupsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IGroupControllerApiAsync.GetAllGroupsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IGroupControllerApiAsync.GetGroupAsync(Guid, int, CancellationToken) IGroupControllerApiAsync.GetGroupWithHttpInfoAsync(Guid, int, CancellationToken) IGroupControllerApiAsync.GetGroupWithContactsAsync(Guid, int, CancellationToken) IGroupControllerApiAsync.GetGroupWithContactsWithHttpInfoAsync(Guid, int, CancellationToken) IGroupControllerApiAsync.GetGroupWithContactsPaginatedAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IGroupControllerApiAsync.GetGroupWithContactsPaginatedWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IGroupControllerApiAsync.GetGroupsAsync(int, CancellationToken) IGroupControllerApiAsync.GetGroupsWithHttpInfoAsync(int, CancellationToken) IGroupControllerApiAsync.RemoveContactsFromGroupAsync(Guid, UpdateGroupContacts, int, CancellationToken) IGroupControllerApiAsync.RemoveContactsFromGroupWithHttpInfoAsync(Guid, UpdateGroupContacts, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IGroupControllerApi : IGroupControllerApiSync, IGroupControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IGroupControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IGroupControllerApiAsync.html",
    "title": "Interface IGroupControllerApiAsync | MailSlurp",
    "keywords": "Interface IGroupControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IGroupControllerApiAsync : IApiAccessor Methods View Source AddContactsToGroupAsync(Guid, UpdateGroupContacts, int, CancellationToken) Add contacts to a group Declaration Task<GroupContactsDto> AddContactsToGroupAsync(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GroupContactsDto> Task of GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source AddContactsToGroupWithHttpInfoAsync(Guid, UpdateGroupContacts, int, CancellationToken) Add contacts to a group Declaration Task<ApiResponse<GroupContactsDto>> AddContactsToGroupWithHttpInfoAsync(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GroupContactsDto>> Task of ApiResponse (GroupContactsDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateGroupAsync(CreateGroupOptions, int, CancellationToken) Create a group Declaration Task<GroupDto> CreateGroupAsync(CreateGroupOptions createGroupOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateGroupOptions createGroupOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GroupDto> Task of GroupDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateGroupWithHttpInfoAsync(CreateGroupOptions, int, CancellationToken) Create a group Declaration Task<ApiResponse<GroupDto>> CreateGroupWithHttpInfoAsync(CreateGroupOptions createGroupOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateGroupOptions createGroupOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GroupDto>> Task of ApiResponse (GroupDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteGroupAsync(Guid, int, CancellationToken) Delete group Declaration Task DeleteGroupAsync(Guid groupId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteGroupWithHttpInfoAsync(Guid, int, CancellationToken) Delete group Declaration Task<ApiResponse<object>> DeleteGroupWithHttpInfoAsync(Guid groupId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllGroupsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all Contact Groups in paginated format Declaration Task<PageGroupProjection> GetAllGroupsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageGroupProjection> Task of PageGroupProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllGroupsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all Contact Groups in paginated format Declaration Task<ApiResponse<PageGroupProjection>> GetAllGroupsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageGroupProjection>> Task of ApiResponse (PageGroupProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupAsync(Guid, int, CancellationToken) Get group Declaration Task<GroupDto> GetGroupAsync(Guid groupId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GroupDto> Task of GroupDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupsAsync(int, CancellationToken) Get all groups Declaration Task<List<GroupProjection>> GetGroupsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<GroupProjection>> Task of List<GroupProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupsWithHttpInfoAsync(int, CancellationToken) Get all groups Declaration Task<ApiResponse<List<GroupProjection>>> GetGroupsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<GroupProjection>>> Task of ApiResponse (List<GroupProjection>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsAsync(Guid, int, CancellationToken) Get group and contacts belonging to it Declaration Task<GroupContactsDto> GetGroupWithContactsAsync(Guid groupId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GroupContactsDto> Task of GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsPaginatedAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<PageContactProjection> GetGroupWithContactsPaginatedAsync(Guid groupId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int? page Optional page index in group contact pagination (optional, default to 0) int? size Optional page size in group contact pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageContactProjection> Task of PageContactProjection Remarks Get group and paginated contacts belonging to it Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsPaginatedWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<ApiResponse<PageContactProjection>> GetGroupWithContactsPaginatedWithHttpInfoAsync(Guid groupId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int? page Optional page index in group contact pagination (optional, default to 0) int? size Optional page size in group contact pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageContactProjection>> Task of ApiResponse (PageContactProjection) Remarks Get group and paginated contacts belonging to it Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsWithHttpInfoAsync(Guid, int, CancellationToken) Get group and contacts belonging to it Declaration Task<ApiResponse<GroupContactsDto>> GetGroupWithContactsWithHttpInfoAsync(Guid groupId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GroupContactsDto>> Task of ApiResponse (GroupContactsDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithHttpInfoAsync(Guid, int, CancellationToken) Get group Declaration Task<ApiResponse<GroupDto>> GetGroupWithHttpInfoAsync(Guid groupId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GroupDto>> Task of ApiResponse (GroupDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source RemoveContactsFromGroupAsync(Guid, UpdateGroupContacts, int, CancellationToken) Remove contacts from a group Declaration Task<GroupContactsDto> RemoveContactsFromGroupAsync(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GroupContactsDto> Task of GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source RemoveContactsFromGroupWithHttpInfoAsync(Guid, UpdateGroupContacts, int, CancellationToken) Remove contacts from a group Declaration Task<ApiResponse<GroupContactsDto>> RemoveContactsFromGroupWithHttpInfoAsync(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GroupContactsDto>> Task of ApiResponse (GroupContactsDto) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IGroupControllerApiSync.html": {
    "href": "api/mailslurp.Api.IGroupControllerApiSync.html",
    "title": "Interface IGroupControllerApiSync | MailSlurp",
    "keywords": "Interface IGroupControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IGroupControllerApiSync : IApiAccessor Methods View Source AddContactsToGroup(Guid, UpdateGroupContacts, int) Add contacts to a group Declaration GroupContactsDto AddContactsToGroup(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. Returns Type Description GroupContactsDto GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source AddContactsToGroupWithHttpInfo(Guid, UpdateGroupContacts, int) Add contacts to a group Declaration ApiResponse<GroupContactsDto> AddContactsToGroupWithHttpInfo(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GroupContactsDto> ApiResponse of GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateGroup(CreateGroupOptions, int) Create a group Declaration GroupDto CreateGroup(CreateGroupOptions createGroupOptions, int operationIndex = 0) Parameters Type Name Description CreateGroupOptions createGroupOptions int operationIndex Index associated with the operation. Returns Type Description GroupDto GroupDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateGroupWithHttpInfo(CreateGroupOptions, int) Create a group Declaration ApiResponse<GroupDto> CreateGroupWithHttpInfo(CreateGroupOptions createGroupOptions, int operationIndex = 0) Parameters Type Name Description CreateGroupOptions createGroupOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GroupDto> ApiResponse of GroupDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteGroup(Guid, int) Delete group Declaration void DeleteGroup(Guid groupId, int operationIndex = 0) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteGroupWithHttpInfo(Guid, int) Delete group Declaration ApiResponse<object> DeleteGroupWithHttpInfo(Guid groupId, int operationIndex = 0) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllGroups(int?, int?, string, DateTime?, DateTime?, int) Get all Contact Groups in paginated format Declaration PageGroupProjection GetAllGroups(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageGroupProjection PageGroupProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllGroupsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get all Contact Groups in paginated format Declaration ApiResponse<PageGroupProjection> GetAllGroupsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageGroupProjection> ApiResponse of PageGroupProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroup(Guid, int) Get group Declaration GroupDto GetGroup(Guid groupId, int operationIndex = 0) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. Returns Type Description GroupDto GroupDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroups(int) Get all groups Declaration List<GroupProjection> GetGroups(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<GroupProjection> List<GroupProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupsWithHttpInfo(int) Get all groups Declaration ApiResponse<List<GroupProjection>> GetGroupsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<GroupProjection>> ApiResponse of List<GroupProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContacts(Guid, int) Get group and contacts belonging to it Declaration GroupContactsDto GetGroupWithContacts(Guid groupId, int operationIndex = 0) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. Returns Type Description GroupContactsDto GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsPaginated(Guid, int?, int?, string, DateTime?, DateTime?, int) Declaration PageContactProjection GetGroupWithContactsPaginated(Guid groupId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid groupId int? page Optional page index in group contact pagination (optional, default to 0) int? size Optional page size in group contact pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageContactProjection PageContactProjection Remarks Get group and paginated contacts belonging to it Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsPaginatedWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Declaration ApiResponse<PageContactProjection> GetGroupWithContactsPaginatedWithHttpInfo(Guid groupId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid groupId int? page Optional page index in group contact pagination (optional, default to 0) int? size Optional page size in group contact pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageContactProjection> ApiResponse of PageContactProjection Remarks Get group and paginated contacts belonging to it Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithContactsWithHttpInfo(Guid, int) Get group and contacts belonging to it Declaration ApiResponse<GroupContactsDto> GetGroupWithContactsWithHttpInfo(Guid groupId, int operationIndex = 0) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GroupContactsDto> ApiResponse of GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetGroupWithHttpInfo(Guid, int) Get group Declaration ApiResponse<GroupDto> GetGroupWithHttpInfo(Guid groupId, int operationIndex = 0) Parameters Type Name Description Guid groupId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GroupDto> ApiResponse of GroupDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source RemoveContactsFromGroup(Guid, UpdateGroupContacts, int) Remove contacts from a group Declaration GroupContactsDto RemoveContactsFromGroup(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. Returns Type Description GroupContactsDto GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source RemoveContactsFromGroupWithHttpInfo(Guid, UpdateGroupContacts, int) Remove contacts from a group Declaration ApiResponse<GroupContactsDto> RemoveContactsFromGroupWithHttpInfo(Guid groupId, UpdateGroupContacts updateGroupContacts, int operationIndex = 0) Parameters Type Name Description Guid groupId UpdateGroupContacts updateGroupContacts int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GroupContactsDto> ApiResponse of GroupContactsDto Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IInboxControllerApi.html": {
    "href": "api/mailslurp.Api.IInboxControllerApi.html",
    "title": "Interface IInboxControllerApi | MailSlurp",
    "keywords": "Interface IInboxControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IInboxControllerApiSync.CancelScheduledJob(Guid, int) IInboxControllerApiSync.CancelScheduledJobWithHttpInfo(Guid, int) IInboxControllerApiSync.CreateInbox(string, List<string>, string, string, bool?, bool?, DateTime?, long?, bool?, string, bool?, bool?, Guid?, string, string, int) IInboxControllerApiSync.CreateInboxWithHttpInfo(string, List<string>, string, string, bool?, bool?, DateTime?, long?, bool?, string, bool?, bool?, Guid?, string, string, int) IInboxControllerApiSync.CreateInboxRuleset(Guid, CreateInboxRulesetOptions, int) IInboxControllerApiSync.CreateInboxRulesetWithHttpInfo(Guid, CreateInboxRulesetOptions, int) IInboxControllerApiSync.CreateInboxWithDefaults(int) IInboxControllerApiSync.CreateInboxWithDefaultsWithHttpInfo(int) IInboxControllerApiSync.CreateInboxWithOptions(CreateInboxDto, int) IInboxControllerApiSync.CreateInboxWithOptionsWithHttpInfo(CreateInboxDto, int) IInboxControllerApiSync.DeleteAllInboxEmails(Guid, int) IInboxControllerApiSync.DeleteAllInboxEmailsWithHttpInfo(Guid, int) IInboxControllerApiSync.DeleteAllInboxes(int) IInboxControllerApiSync.DeleteAllInboxesWithHttpInfo(int) IInboxControllerApiSync.DeleteAllInboxesByDescription(string, int) IInboxControllerApiSync.DeleteAllInboxesByDescriptionWithHttpInfo(string, int) IInboxControllerApiSync.DeleteAllInboxesByName(string, int) IInboxControllerApiSync.DeleteAllInboxesByNameWithHttpInfo(string, int) IInboxControllerApiSync.DeleteAllInboxesByTag(string, int) IInboxControllerApiSync.DeleteAllInboxesByTagWithHttpInfo(string, int) IInboxControllerApiSync.DeleteInbox(Guid, int) IInboxControllerApiSync.DeleteInboxWithHttpInfo(Guid, int) IInboxControllerApiSync.DoesInboxExist(string, bool?, int) IInboxControllerApiSync.DoesInboxExistWithHttpInfo(string, bool?, int) IInboxControllerApiSync.FlushExpired(DateTime?, int) IInboxControllerApiSync.FlushExpiredWithHttpInfo(DateTime?, int) IInboxControllerApiSync.GetAllInboxes(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int) IInboxControllerApiSync.GetAllInboxesWithHttpInfo(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int) IInboxControllerApiSync.GetAllInboxesOffsetPaginated(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int) IInboxControllerApiSync.GetAllInboxesOffsetPaginatedWithHttpInfo(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int) IInboxControllerApiSync.GetAllScheduledJobs(int?, int?, string, DateTime?, DateTime?, int) IInboxControllerApiSync.GetAllScheduledJobsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) IInboxControllerApiSync.GetDeliveryStatusesByInboxId(Guid, int?, int?, string, DateTime?, DateTime?, int) IInboxControllerApiSync.GetDeliveryStatusesByInboxIdWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) IInboxControllerApiSync.GetEmails(Guid, int?, int?, string, long?, long?, long?, bool?, DateTime?, DateTime?, int) IInboxControllerApiSync.GetEmailsWithHttpInfo(Guid, int?, int?, string, long?, long?, long?, bool?, DateTime?, DateTime?, int) IInboxControllerApiSync.GetImapSmtpAccess(Guid?, int) IInboxControllerApiSync.GetImapSmtpAccessWithHttpInfo(Guid?, int) IInboxControllerApiSync.GetInbox(Guid, int) IInboxControllerApiSync.GetInboxWithHttpInfo(Guid, int) IInboxControllerApiSync.GetInboxByEmailAddress(string, int) IInboxControllerApiSync.GetInboxByEmailAddressWithHttpInfo(string, int) IInboxControllerApiSync.GetInboxByName(string, int) IInboxControllerApiSync.GetInboxByNameWithHttpInfo(string, int) IInboxControllerApiSync.GetInboxCount(int) IInboxControllerApiSync.GetInboxCountWithHttpInfo(int) IInboxControllerApiSync.GetInboxEmailCount(Guid, int) IInboxControllerApiSync.GetInboxEmailCountWithHttpInfo(Guid, int) IInboxControllerApiSync.GetInboxEmailsPaginated(Guid, int?, int?, string, DateTime?, DateTime?, int) IInboxControllerApiSync.GetInboxEmailsPaginatedWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) IInboxControllerApiSync.GetInboxIds(int) IInboxControllerApiSync.GetInboxIdsWithHttpInfo(int) IInboxControllerApiSync.GetInboxSentEmails(Guid, int?, int?, string, string, DateTime?, DateTime?, int) IInboxControllerApiSync.GetInboxSentEmailsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) IInboxControllerApiSync.GetInboxTags(int) IInboxControllerApiSync.GetInboxTagsWithHttpInfo(int) IInboxControllerApiSync.GetInboxes(int?, string, DateTime?, bool?, DateTime?, int) IInboxControllerApiSync.GetInboxesWithHttpInfo(int?, string, DateTime?, bool?, DateTime?, int) IInboxControllerApiSync.GetLatestEmailInInbox(Guid, long, int) IInboxControllerApiSync.GetLatestEmailInInboxWithHttpInfo(Guid, long, int) IInboxControllerApiSync.GetOrganizationInboxes(int?, int?, string, string, DateTime?, DateTime?, int) IInboxControllerApiSync.GetOrganizationInboxesWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, int) IInboxControllerApiSync.GetScheduledJob(Guid, int) IInboxControllerApiSync.GetScheduledJobWithHttpInfo(Guid, int) IInboxControllerApiSync.GetScheduledJobsByInboxId(Guid, int?, int?, string, DateTime?, DateTime?, int) IInboxControllerApiSync.GetScheduledJobsByInboxIdWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) IInboxControllerApiSync.ListInboxRulesets(Guid, int?, int?, string, string, DateTime?, DateTime?, int) IInboxControllerApiSync.ListInboxRulesetsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) IInboxControllerApiSync.ListInboxTrackingPixels(Guid, int?, int?, string, string, DateTime?, DateTime?, int) IInboxControllerApiSync.ListInboxTrackingPixelsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) IInboxControllerApiSync.SearchInboxes(SearchInboxesOptions, int) IInboxControllerApiSync.SearchInboxesWithHttpInfo(SearchInboxesOptions, int) IInboxControllerApiSync.SendEmail(Guid, SendEmailOptions, int) IInboxControllerApiSync.SendEmailWithHttpInfo(Guid, SendEmailOptions, int) IInboxControllerApiSync.SendEmailAndConfirm(Guid, SendEmailOptions, int) IInboxControllerApiSync.SendEmailAndConfirmWithHttpInfo(Guid, SendEmailOptions, int) IInboxControllerApiSync.SendEmailWithQueue(Guid, bool, SendEmailOptions, int) IInboxControllerApiSync.SendEmailWithQueueWithHttpInfo(Guid, bool, SendEmailOptions, int) IInboxControllerApiSync.SendSmtpEnvelope(Guid, SendSMTPEnvelopeOptions, int) IInboxControllerApiSync.SendSmtpEnvelopeWithHttpInfo(Guid, SendSMTPEnvelopeOptions, int) IInboxControllerApiSync.SendTestEmail(Guid, int) IInboxControllerApiSync.SendTestEmailWithHttpInfo(Guid, int) IInboxControllerApiSync.SendWithSchedule(Guid, SendEmailOptions, DateTime?, long?, bool?, int) IInboxControllerApiSync.SendWithScheduleWithHttpInfo(Guid, SendEmailOptions, DateTime?, long?, bool?, int) IInboxControllerApiSync.SetInboxFavourited(Guid, SetInboxFavouritedOptions, int) IInboxControllerApiSync.SetInboxFavouritedWithHttpInfo(Guid, SetInboxFavouritedOptions, int) IInboxControllerApiSync.UpdateInbox(Guid, UpdateInboxOptions, int) IInboxControllerApiSync.UpdateInboxWithHttpInfo(Guid, UpdateInboxOptions, int) IInboxControllerApiAsync.CancelScheduledJobAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.CancelScheduledJobWithHttpInfoAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.CreateInboxAsync(string, List<string>, string, string, bool?, bool?, DateTime?, long?, bool?, string, bool?, bool?, Guid?, string, string, int, CancellationToken) IInboxControllerApiAsync.CreateInboxWithHttpInfoAsync(string, List<string>, string, string, bool?, bool?, DateTime?, long?, bool?, string, bool?, bool?, Guid?, string, string, int, CancellationToken) IInboxControllerApiAsync.CreateInboxRulesetAsync(Guid, CreateInboxRulesetOptions, int, CancellationToken) IInboxControllerApiAsync.CreateInboxRulesetWithHttpInfoAsync(Guid, CreateInboxRulesetOptions, int, CancellationToken) IInboxControllerApiAsync.CreateInboxWithDefaultsAsync(int, CancellationToken) IInboxControllerApiAsync.CreateInboxWithDefaultsWithHttpInfoAsync(int, CancellationToken) IInboxControllerApiAsync.CreateInboxWithOptionsAsync(CreateInboxDto, int, CancellationToken) IInboxControllerApiAsync.CreateInboxWithOptionsWithHttpInfoAsync(CreateInboxDto, int, CancellationToken) IInboxControllerApiAsync.DeleteAllInboxEmailsAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.DeleteAllInboxEmailsWithHttpInfoAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.DeleteAllInboxesAsync(int, CancellationToken) IInboxControllerApiAsync.DeleteAllInboxesWithHttpInfoAsync(int, CancellationToken) IInboxControllerApiAsync.DeleteAllInboxesByDescriptionAsync(string, int, CancellationToken) IInboxControllerApiAsync.DeleteAllInboxesByDescriptionWithHttpInfoAsync(string, int, CancellationToken) IInboxControllerApiAsync.DeleteAllInboxesByNameAsync(string, int, CancellationToken) IInboxControllerApiAsync.DeleteAllInboxesByNameWithHttpInfoAsync(string, int, CancellationToken) IInboxControllerApiAsync.DeleteAllInboxesByTagAsync(string, int, CancellationToken) IInboxControllerApiAsync.DeleteAllInboxesByTagWithHttpInfoAsync(string, int, CancellationToken) IInboxControllerApiAsync.DeleteInboxAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.DeleteInboxWithHttpInfoAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.DoesInboxExistAsync(string, bool?, int, CancellationToken) IInboxControllerApiAsync.DoesInboxExistWithHttpInfoAsync(string, bool?, int, CancellationToken) IInboxControllerApiAsync.FlushExpiredAsync(DateTime?, int, CancellationToken) IInboxControllerApiAsync.FlushExpiredWithHttpInfoAsync(DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetAllInboxesAsync(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int, CancellationToken) IInboxControllerApiAsync.GetAllInboxesWithHttpInfoAsync(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int, CancellationToken) IInboxControllerApiAsync.GetAllInboxesOffsetPaginatedAsync(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int, CancellationToken) IInboxControllerApiAsync.GetAllInboxesOffsetPaginatedWithHttpInfoAsync(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int, CancellationToken) IInboxControllerApiAsync.GetAllScheduledJobsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetAllScheduledJobsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetDeliveryStatusesByInboxIdAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetDeliveryStatusesByInboxIdWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetEmailsAsync(Guid, int?, int?, string, long?, long?, long?, bool?, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetEmailsWithHttpInfoAsync(Guid, int?, int?, string, long?, long?, long?, bool?, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetImapSmtpAccessAsync(Guid?, int, CancellationToken) IInboxControllerApiAsync.GetImapSmtpAccessWithHttpInfoAsync(Guid?, int, CancellationToken) IInboxControllerApiAsync.GetInboxAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.GetInboxWithHttpInfoAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.GetInboxByEmailAddressAsync(string, int, CancellationToken) IInboxControllerApiAsync.GetInboxByEmailAddressWithHttpInfoAsync(string, int, CancellationToken) IInboxControllerApiAsync.GetInboxByNameAsync(string, int, CancellationToken) IInboxControllerApiAsync.GetInboxByNameWithHttpInfoAsync(string, int, CancellationToken) IInboxControllerApiAsync.GetInboxCountAsync(int, CancellationToken) IInboxControllerApiAsync.GetInboxCountWithHttpInfoAsync(int, CancellationToken) IInboxControllerApiAsync.GetInboxEmailCountAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.GetInboxEmailCountWithHttpInfoAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.GetInboxEmailsPaginatedAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetInboxEmailsPaginatedWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetInboxIdsAsync(int, CancellationToken) IInboxControllerApiAsync.GetInboxIdsWithHttpInfoAsync(int, CancellationToken) IInboxControllerApiAsync.GetInboxSentEmailsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetInboxSentEmailsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetInboxTagsAsync(int, CancellationToken) IInboxControllerApiAsync.GetInboxTagsWithHttpInfoAsync(int, CancellationToken) IInboxControllerApiAsync.GetInboxesAsync(int?, string, DateTime?, bool?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetInboxesWithHttpInfoAsync(int?, string, DateTime?, bool?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetLatestEmailInInboxAsync(Guid, long, int, CancellationToken) IInboxControllerApiAsync.GetLatestEmailInInboxWithHttpInfoAsync(Guid, long, int, CancellationToken) IInboxControllerApiAsync.GetOrganizationInboxesAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetOrganizationInboxesWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetScheduledJobAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.GetScheduledJobWithHttpInfoAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.GetScheduledJobsByInboxIdAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.GetScheduledJobsByInboxIdWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.ListInboxRulesetsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.ListInboxRulesetsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.ListInboxTrackingPixelsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.ListInboxTrackingPixelsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IInboxControllerApiAsync.SearchInboxesAsync(SearchInboxesOptions, int, CancellationToken) IInboxControllerApiAsync.SearchInboxesWithHttpInfoAsync(SearchInboxesOptions, int, CancellationToken) IInboxControllerApiAsync.SendEmailAsync(Guid, SendEmailOptions, int, CancellationToken) IInboxControllerApiAsync.SendEmailWithHttpInfoAsync(Guid, SendEmailOptions, int, CancellationToken) IInboxControllerApiAsync.SendEmailAndConfirmAsync(Guid, SendEmailOptions, int, CancellationToken) IInboxControllerApiAsync.SendEmailAndConfirmWithHttpInfoAsync(Guid, SendEmailOptions, int, CancellationToken) IInboxControllerApiAsync.SendEmailWithQueueAsync(Guid, bool, SendEmailOptions, int, CancellationToken) IInboxControllerApiAsync.SendEmailWithQueueWithHttpInfoAsync(Guid, bool, SendEmailOptions, int, CancellationToken) IInboxControllerApiAsync.SendSmtpEnvelopeAsync(Guid, SendSMTPEnvelopeOptions, int, CancellationToken) IInboxControllerApiAsync.SendSmtpEnvelopeWithHttpInfoAsync(Guid, SendSMTPEnvelopeOptions, int, CancellationToken) IInboxControllerApiAsync.SendTestEmailAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.SendTestEmailWithHttpInfoAsync(Guid, int, CancellationToken) IInboxControllerApiAsync.SendWithScheduleAsync(Guid, SendEmailOptions, DateTime?, long?, bool?, int, CancellationToken) IInboxControllerApiAsync.SendWithScheduleWithHttpInfoAsync(Guid, SendEmailOptions, DateTime?, long?, bool?, int, CancellationToken) IInboxControllerApiAsync.SetInboxFavouritedAsync(Guid, SetInboxFavouritedOptions, int, CancellationToken) IInboxControllerApiAsync.SetInboxFavouritedWithHttpInfoAsync(Guid, SetInboxFavouritedOptions, int, CancellationToken) IInboxControllerApiAsync.UpdateInboxAsync(Guid, UpdateInboxOptions, int, CancellationToken) IInboxControllerApiAsync.UpdateInboxWithHttpInfoAsync(Guid, UpdateInboxOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IInboxControllerApi : IInboxControllerApiSync, IInboxControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IInboxControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IInboxControllerApiAsync.html",
    "title": "Interface IInboxControllerApiAsync | MailSlurp",
    "keywords": "Interface IInboxControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IInboxControllerApiAsync : IApiAccessor Methods View Source CancelScheduledJobAsync(Guid, int, CancellationToken) Cancel a scheduled email job Declaration Task<ScheduledJobDto> CancelScheduledJobAsync(Guid jobId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ScheduledJobDto> Task of ScheduledJobDto Remarks Get a scheduled email job and cancel it. Will fail if status of job is already cancelled, failed, or complete. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CancelScheduledJobWithHttpInfoAsync(Guid, int, CancellationToken) Cancel a scheduled email job Declaration Task<ApiResponse<ScheduledJobDto>> CancelScheduledJobWithHttpInfoAsync(Guid jobId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ScheduledJobDto>> Task of ApiResponse (ScheduledJobDto) Remarks Get a scheduled email job and cancel it. Will fail if status of job is already cancelled, failed, or complete. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxAsync(string, List<string>, string, string, bool?, bool?, DateTime?, long?, bool?, string, bool?, bool?, Guid?, string, string, int, CancellationToken) Create an inbox email address. An inbox has a real email address and can send and receive emails. Inboxes can be either SMTP or HTTP inboxes. Declaration Task<InboxDto> CreateInboxAsync(string emailAddress = null, List<string> tags = null, string name = null, string description = null, bool? useDomainPool = null, bool? favourite = null, DateTime? expiresAt = null, long? expiresIn = null, bool? allowTeamAccess = null, string inboxType = null, bool? virtualInbox = null, bool? useShortAddress = null, Guid? domainId = null, string domainName = null, string prefix = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress A custom email address to use with the inbox. Defaults to null. When null MailSlurp will assign a random email address to the inbox such as 123@mailslurp.com. If you use the useDomainPool option when the email address is null it will generate an email address with a more varied domain ending such as 123@mailslurp.info or 123@mailslurp.biz. When a custom email address is provided the address is split into a domain and the domain is queried against your user. If you have created the domain in the MailSlurp dashboard and verified it you can use any email address that ends with the domain. Note domain types must match the inbox type - so SMTP inboxes will only work with SMTP type domains. Avoid SMTP inboxes if you need to send emails as they can only receive. Send an email to this address and the inbox will receive and store it for you. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. (optional) List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. (optional) string name Optional name of the inbox. Displayed in the dashboard for easier search and used as the sender name when sending emails. (optional) string description Optional description of the inbox for labelling purposes. Is shown in the dashboard and can be used with (optional) bool? useDomainPool Use the MailSlurp domain name pool with this inbox when creating the email address. Defaults to null. If enabled the inbox will be an email address with a domain randomly chosen from a list of the MailSlurp domains. This is useful when the default @mailslurp.com email addresses used with inboxes are blocked or considered spam by a provider or receiving service. When domain pool is enabled an email address will be generated ending in @mailslurp.{world,info,xyz,...} . This means a TLD is randomly selecting from a list of .biz, .info, .xyz etc to add variance to the generated email addresses. When null or false MailSlurp uses the default behavior of @mailslurp.com or custom email address provided by the emailAddress field. Note this feature is only available for HTTP inbox types. (optional) bool? favourite Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering (optional) DateTime? expiresAt Optional inbox expiration date. If null then this inbox is permanent and the emails in it won't be deleted. If an expiration date is provided or is required by your plan the inbox will be closed when the expiration time is reached. Expired inboxes still contain their emails but can no longer send or receive emails. An ExpiredInboxRecord is created when an inbox and the email address and inbox ID are recorded. The expiresAt property is a timestamp string in ISO DateTime Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX. (optional) long? expiresIn Number of milliseconds that inbox should exist for (optional) bool? allowTeamAccess DEPRECATED (team access is always true). Grant team access to this inbox and the emails that belong to it for team members of your organization. (optional) string inboxType HTTP (default) or SMTP inbox type. HTTP inboxes are default and best solution for most cases. SMTP inboxes are more reliable for public inbound email consumption (but do not support sending emails). When using custom domains the domain type must match the inbox type. HTTP inboxes are processed by AWS SES while SMTP inboxes use a custom mail server running at mx.mailslurp.com. (optional) bool? virtualInbox Virtual inbox prevents any outbound emails from being sent. It creates sent email records but will never send real emails to recipients. Great for testing and faking email sending. (optional) bool? useShortAddress Use a shorter email address under 31 characters (optional) Guid? domainId ID of custom domain to use for email address. (optional) string domainName FQDN domain name for the domain you have verified. Will be appended with a randomly assigned recipient name. Use the emailAddress option instead to specify the full custom inbox. (optional) string prefix Prefix to add before the email address for easier labelling or identification. (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Remarks Create a new inbox and with a randomized email address to send and receive from. Pass emailAddress parameter if you wish to use a specific email address. Creating an inbox is required before sending or receiving emails. If writing tests it is recommended that you create a new inbox during each test method so that it is unique and empty. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxRulesetAsync(Guid, CreateInboxRulesetOptions, int, CancellationToken) Create an inbox ruleset Declaration Task<InboxRulesetDto> CreateInboxRulesetAsync(Guid inboxId, CreateInboxRulesetOptions createInboxRulesetOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId inboxId CreateInboxRulesetOptions createInboxRulesetOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxRulesetDto> Task of InboxRulesetDto Remarks Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxRulesetWithHttpInfoAsync(Guid, CreateInboxRulesetOptions, int, CancellationToken) Create an inbox ruleset Declaration Task<ApiResponse<InboxRulesetDto>> CreateInboxRulesetWithHttpInfoAsync(Guid inboxId, CreateInboxRulesetOptions createInboxRulesetOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId inboxId CreateInboxRulesetOptions createInboxRulesetOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxRulesetDto>> Task of ApiResponse (InboxRulesetDto) Remarks Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithDefaultsAsync(int, CancellationToken) Create an inbox with default options. Uses MailSlurp domain pool address and is private. Declaration Task<InboxDto> CreateInboxWithDefaultsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithDefaultsWithHttpInfoAsync(int, CancellationToken) Create an inbox with default options. Uses MailSlurp domain pool address and is private. Declaration Task<ApiResponse<InboxDto>> CreateInboxWithDefaultsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithHttpInfoAsync(string, List<string>, string, string, bool?, bool?, DateTime?, long?, bool?, string, bool?, bool?, Guid?, string, string, int, CancellationToken) Create an inbox email address. An inbox has a real email address and can send and receive emails. Inboxes can be either SMTP or HTTP inboxes. Declaration Task<ApiResponse<InboxDto>> CreateInboxWithHttpInfoAsync(string emailAddress = null, List<string> tags = null, string name = null, string description = null, bool? useDomainPool = null, bool? favourite = null, DateTime? expiresAt = null, long? expiresIn = null, bool? allowTeamAccess = null, string inboxType = null, bool? virtualInbox = null, bool? useShortAddress = null, Guid? domainId = null, string domainName = null, string prefix = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress A custom email address to use with the inbox. Defaults to null. When null MailSlurp will assign a random email address to the inbox such as 123@mailslurp.com. If you use the useDomainPool option when the email address is null it will generate an email address with a more varied domain ending such as 123@mailslurp.info or 123@mailslurp.biz. When a custom email address is provided the address is split into a domain and the domain is queried against your user. If you have created the domain in the MailSlurp dashboard and verified it you can use any email address that ends with the domain. Note domain types must match the inbox type - so SMTP inboxes will only work with SMTP type domains. Avoid SMTP inboxes if you need to send emails as they can only receive. Send an email to this address and the inbox will receive and store it for you. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. (optional) List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. (optional) string name Optional name of the inbox. Displayed in the dashboard for easier search and used as the sender name when sending emails. (optional) string description Optional description of the inbox for labelling purposes. Is shown in the dashboard and can be used with (optional) bool? useDomainPool Use the MailSlurp domain name pool with this inbox when creating the email address. Defaults to null. If enabled the inbox will be an email address with a domain randomly chosen from a list of the MailSlurp domains. This is useful when the default @mailslurp.com email addresses used with inboxes are blocked or considered spam by a provider or receiving service. When domain pool is enabled an email address will be generated ending in @mailslurp.{world,info,xyz,...} . This means a TLD is randomly selecting from a list of .biz, .info, .xyz etc to add variance to the generated email addresses. When null or false MailSlurp uses the default behavior of @mailslurp.com or custom email address provided by the emailAddress field. Note this feature is only available for HTTP inbox types. (optional) bool? favourite Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering (optional) DateTime? expiresAt Optional inbox expiration date. If null then this inbox is permanent and the emails in it won't be deleted. If an expiration date is provided or is required by your plan the inbox will be closed when the expiration time is reached. Expired inboxes still contain their emails but can no longer send or receive emails. An ExpiredInboxRecord is created when an inbox and the email address and inbox ID are recorded. The expiresAt property is a timestamp string in ISO DateTime Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX. (optional) long? expiresIn Number of milliseconds that inbox should exist for (optional) bool? allowTeamAccess DEPRECATED (team access is always true). Grant team access to this inbox and the emails that belong to it for team members of your organization. (optional) string inboxType HTTP (default) or SMTP inbox type. HTTP inboxes are default and best solution for most cases. SMTP inboxes are more reliable for public inbound email consumption (but do not support sending emails). When using custom domains the domain type must match the inbox type. HTTP inboxes are processed by AWS SES while SMTP inboxes use a custom mail server running at mx.mailslurp.com. (optional) bool? virtualInbox Virtual inbox prevents any outbound emails from being sent. It creates sent email records but will never send real emails to recipients. Great for testing and faking email sending. (optional) bool? useShortAddress Use a shorter email address under 31 characters (optional) Guid? domainId ID of custom domain to use for email address. (optional) string domainName FQDN domain name for the domain you have verified. Will be appended with a randomly assigned recipient name. Use the emailAddress option instead to specify the full custom inbox. (optional) string prefix Prefix to add before the email address for easier labelling or identification. (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Remarks Create a new inbox and with a randomized email address to send and receive from. Pass emailAddress parameter if you wish to use a specific email address. Creating an inbox is required before sending or receiving emails. If writing tests it is recommended that you create a new inbox during each test method so that it is unique and empty. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithOptionsAsync(CreateInboxDto, int, CancellationToken) Create an inbox with options. Extended options for inbox creation. Declaration Task<InboxDto> CreateInboxWithOptionsAsync(CreateInboxDto createInboxDto, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateInboxDto createInboxDto int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Remarks Additional endpoint that allows inbox creation with request body options. Can be more flexible that other methods for some clients. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithOptionsWithHttpInfoAsync(CreateInboxDto, int, CancellationToken) Create an inbox with options. Extended options for inbox creation. Declaration Task<ApiResponse<InboxDto>> CreateInboxWithOptionsWithHttpInfoAsync(CreateInboxDto createInboxDto, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateInboxDto createInboxDto int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Remarks Additional endpoint that allows inbox creation with request body options. Can be more flexible that other methods for some clients. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxEmailsAsync(Guid, int, CancellationToken) Delete all emails in a given inboxes. Declaration Task DeleteAllInboxEmailsAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Deletes all emails in an inbox. Be careful as emails cannot be recovered Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxEmailsWithHttpInfoAsync(Guid, int, CancellationToken) Delete all emails in a given inboxes. Declaration Task<ApiResponse<object>> DeleteAllInboxEmailsWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Deletes all emails in an inbox. Be careful as emails cannot be recovered Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesAsync(int, CancellationToken) Delete all inboxes Declaration Task DeleteAllInboxesAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Permanently delete all inboxes and associated email addresses. This will also delete all emails within the inboxes. Be careful as inboxes cannot be recovered once deleted. Note: deleting inboxes will not impact your usage limits. Monthly inbox creation limits are based on how many inboxes were created in the last 30 days, not how many inboxes you currently have. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByDescriptionAsync(string, int, CancellationToken) Delete inboxes by description Declaration Task DeleteAllInboxesByDescriptionAsync(string description, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Permanently delete all inboxes by description Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByDescriptionWithHttpInfoAsync(string, int, CancellationToken) Delete inboxes by description Declaration Task<ApiResponse<object>> DeleteAllInboxesByDescriptionWithHttpInfoAsync(string description, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Permanently delete all inboxes by description Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByNameAsync(string, int, CancellationToken) Delete inboxes by name Declaration Task DeleteAllInboxesByNameAsync(string name, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string name int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Permanently delete all inboxes by name Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByNameWithHttpInfoAsync(string, int, CancellationToken) Delete inboxes by name Declaration Task<ApiResponse<object>> DeleteAllInboxesByNameWithHttpInfoAsync(string name, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string name int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Permanently delete all inboxes by name Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByTagAsync(string, int, CancellationToken) Delete inboxes by tag Declaration Task DeleteAllInboxesByTagAsync(string tag, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string tag int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Permanently delete all inboxes by tag Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByTagWithHttpInfoAsync(string, int, CancellationToken) Delete inboxes by tag Declaration Task<ApiResponse<object>> DeleteAllInboxesByTagWithHttpInfoAsync(string tag, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string tag int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Permanently delete all inboxes by tag Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesWithHttpInfoAsync(int, CancellationToken) Delete all inboxes Declaration Task<ApiResponse<object>> DeleteAllInboxesWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Permanently delete all inboxes and associated email addresses. This will also delete all emails within the inboxes. Be careful as inboxes cannot be recovered once deleted. Note: deleting inboxes will not impact your usage limits. Monthly inbox creation limits are based on how many inboxes were created in the last 30 days, not how many inboxes you currently have. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxAsync(Guid, int, CancellationToken) Delete inbox Declaration Task DeleteInboxAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Permanently delete an inbox and associated email address as well as all emails within the given inbox. This action cannot be undone. Note: deleting an inbox will not affect your account usage. Monthly inbox usage is based on how many inboxes you create within 30 days, not how many exist at time of request. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxWithHttpInfoAsync(Guid, int, CancellationToken) Delete inbox Declaration Task<ApiResponse<object>> DeleteInboxWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Permanently delete an inbox and associated email address as well as all emails within the given inbox. This action cannot be undone. Note: deleting an inbox will not affect your account usage. Monthly inbox usage is based on how many inboxes you create within 30 days, not how many exist at time of request. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DoesInboxExistAsync(string, bool?, int, CancellationToken) Does inbox exist Declaration Task<InboxExistsDto> DoesInboxExistAsync(string emailAddress, bool? allowCatchAll = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress Email address bool? allowCatchAll (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxExistsDto> Task of InboxExistsDto Remarks Check if inboxes exist by email address. Useful if you are sending emails to mailslurp addresses Exceptions Type Condition ApiException Thrown when fails to make API call View Source DoesInboxExistWithHttpInfoAsync(string, bool?, int, CancellationToken) Does inbox exist Declaration Task<ApiResponse<InboxExistsDto>> DoesInboxExistWithHttpInfoAsync(string emailAddress, bool? allowCatchAll = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress Email address bool? allowCatchAll (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxExistsDto>> Task of ApiResponse (InboxExistsDto) Remarks Check if inboxes exist by email address. Useful if you are sending emails to mailslurp addresses Exceptions Type Condition ApiException Thrown when fails to make API call View Source FlushExpiredAsync(DateTime?, int, CancellationToken) Remove expired inboxes Declaration Task<FlushExpiredInboxesResult> FlushExpiredAsync(DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DateTime? before Optional expired at before flag to flush expired inboxes that have expired before the given time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<FlushExpiredInboxesResult> Task of FlushExpiredInboxesResult Remarks Remove any expired inboxes for your account (instead of waiting for scheduled removal on server) Exceptions Type Condition ApiException Thrown when fails to make API call View Source FlushExpiredWithHttpInfoAsync(DateTime?, int, CancellationToken) Remove expired inboxes Declaration Task<ApiResponse<FlushExpiredInboxesResult>> FlushExpiredWithHttpInfoAsync(DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DateTime? before Optional expired at before flag to flush expired inboxes that have expired before the given time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<FlushExpiredInboxesResult>> Task of ApiResponse (FlushExpiredInboxesResult) Remarks Remove any expired inboxes for your account (instead of waiting for scheduled removal on server) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesAsync(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int, CancellationToken) List All Inboxes Paginated Declaration Task<PageInboxProjection> GetAllInboxesAsync(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxProjection> Task of PageInboxProjection Remarks List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesOffsetPaginatedAsync(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int, CancellationToken) List All Inboxes Offset Paginated Declaration Task<PageInboxProjection> GetAllInboxesOffsetPaginatedAsync(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxProjection> Task of PageInboxProjection Remarks List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesOffsetPaginatedWithHttpInfoAsync(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int, CancellationToken) List All Inboxes Offset Paginated Declaration Task<ApiResponse<PageInboxProjection>> GetAllInboxesOffsetPaginatedWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxProjection>> Task of ApiResponse (PageInboxProjection) Remarks List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesWithHttpInfoAsync(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int, CancellationToken) List All Inboxes Paginated Declaration Task<ApiResponse<PageInboxProjection>> GetAllInboxesWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxProjection>> Task of ApiResponse (PageInboxProjection) Remarks List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllScheduledJobsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all scheduled email sending jobs for account Declaration Task<PageScheduledJobs> GetAllScheduledJobsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageScheduledJobs> Task of PageScheduledJobs Remarks Schedule sending of emails using scheduled jobs. These can be inbox or account level. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllScheduledJobsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all scheduled email sending jobs for account Declaration Task<ApiResponse<PageScheduledJobs>> GetAllScheduledJobsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageScheduledJobs>> Task of ApiResponse (PageScheduledJobs) Remarks Schedule sending of emails using scheduled jobs. These can be inbox or account level. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDeliveryStatusesByInboxIdAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Declaration [Obsolete] Task<PageDeliveryStatus> GetDeliveryStatusesByInboxIdAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageDeliveryStatus> Task of PageDeliveryStatus Remarks Get all email delivery statuses for an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDeliveryStatusesByInboxIdWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Declaration [Obsolete] Task<ApiResponse<PageDeliveryStatus>> GetDeliveryStatusesByInboxIdWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageDeliveryStatus>> Task of ApiResponse (PageDeliveryStatus) Remarks Get all email delivery statuses for an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsAsync(Guid, int?, int?, string, long?, long?, long?, bool?, DateTime?, DateTime?, int, CancellationToken) Get emails in an Inbox. This method is not idempotent as it allows retries and waits if you want certain conditions to be met before returning. For simple listing and sorting of known emails use the email controller instead. Declaration Task<List<EmailPreview>> GetEmailsAsync(Guid inboxId, int? size = null, int? limit = null, string sort = null, long? retryTimeout = null, long? delayTimeout = null, long? minCount = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? size Alias for limit. Assessed first before assessing any passed limit. (optional) int? limit Limit the result set, ordered by received date time sort direction. Maximum 100. For more listing options see the email controller (optional) string sort Sort the results by received date and direction ASC or DESC (optional) long? retryTimeout Maximum milliseconds to spend retrying inbox database until minCount emails are returned (optional) long? delayTimeout (optional) long? minCount Minimum acceptable email count. Will cause request to hang (and retry) until minCount is satisfied or retryTimeout is reached. (optional) bool? unreadOnly (optional) DateTime? before Exclude emails received after this ISO 8601 date time (optional) DateTime? since Exclude emails received before this ISO 8601 date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<EmailPreview>> Task of List<EmailPreview> Remarks List emails that an inbox has received. Only emails that are sent to the inbox's email address will appear in the inbox. It may take several seconds for any email you send to an inbox's email address to appear in the inbox. To make this endpoint wait for a minimum number of emails use the minCount parameter. The server will retry the inbox database until the minCount is satisfied or the retryTimeout is reached Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsWithHttpInfoAsync(Guid, int?, int?, string, long?, long?, long?, bool?, DateTime?, DateTime?, int, CancellationToken) Get emails in an Inbox. This method is not idempotent as it allows retries and waits if you want certain conditions to be met before returning. For simple listing and sorting of known emails use the email controller instead. Declaration Task<ApiResponse<List<EmailPreview>>> GetEmailsWithHttpInfoAsync(Guid inboxId, int? size = null, int? limit = null, string sort = null, long? retryTimeout = null, long? delayTimeout = null, long? minCount = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? size Alias for limit. Assessed first before assessing any passed limit. (optional) int? limit Limit the result set, ordered by received date time sort direction. Maximum 100. For more listing options see the email controller (optional) string sort Sort the results by received date and direction ASC or DESC (optional) long? retryTimeout Maximum milliseconds to spend retrying inbox database until minCount emails are returned (optional) long? delayTimeout (optional) long? minCount Minimum acceptable email count. Will cause request to hang (and retry) until minCount is satisfied or retryTimeout is reached. (optional) bool? unreadOnly (optional) DateTime? before Exclude emails received after this ISO 8601 date time (optional) DateTime? since Exclude emails received before this ISO 8601 date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<EmailPreview>>> Task of ApiResponse (List<EmailPreview>) Remarks List emails that an inbox has received. Only emails that are sent to the inbox's email address will appear in the inbox. It may take several seconds for any email you send to an inbox's email address to appear in the inbox. To make this endpoint wait for a minimum number of emails use the minCount parameter. The server will retry the inbox database until the minCount is satisfied or the retryTimeout is reached Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetImapSmtpAccessAsync(Guid?, int, CancellationToken) Declaration Task<ImapSmtpAccessDetails> GetImapSmtpAccessAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Inbox ID (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ImapSmtpAccessDetails> Task of ImapSmtpAccessDetails Remarks Get IMAP and SMTP access usernames and passwords Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetImapSmtpAccessWithHttpInfoAsync(Guid?, int, CancellationToken) Declaration Task<ApiResponse<ImapSmtpAccessDetails>> GetImapSmtpAccessWithHttpInfoAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Inbox ID (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ImapSmtpAccessDetails>> Task of ApiResponse (ImapSmtpAccessDetails) Remarks Get IMAP and SMTP access usernames and passwords Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxAsync(Guid, int, CancellationToken) Get Inbox. Returns properties of an inbox. Declaration Task<InboxDto> GetInboxAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Remarks Returns an inbox's properties, including its email address and ID. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByEmailAddressAsync(string, int, CancellationToken) Search for an inbox with the provided email address Declaration Task<InboxByEmailAddressResult> GetInboxByEmailAddressAsync(string emailAddress, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxByEmailAddressResult> Task of InboxByEmailAddressResult Remarks Get a inbox result by email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByEmailAddressWithHttpInfoAsync(string, int, CancellationToken) Search for an inbox with the provided email address Declaration Task<ApiResponse<InboxByEmailAddressResult>> GetInboxByEmailAddressWithHttpInfoAsync(string emailAddress, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxByEmailAddressResult>> Task of ApiResponse (InboxByEmailAddressResult) Remarks Get a inbox result by email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByNameAsync(string, int, CancellationToken) Search for an inbox with the given name Declaration Task<InboxByNameResult> GetInboxByNameAsync(string name, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string name int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxByNameResult> Task of InboxByNameResult Remarks Get a inbox result by name Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByNameWithHttpInfoAsync(string, int, CancellationToken) Search for an inbox with the given name Declaration Task<ApiResponse<InboxByNameResult>> GetInboxByNameWithHttpInfoAsync(string name, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string name int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxByNameResult>> Task of ApiResponse (InboxByNameResult) Remarks Get a inbox result by name Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxCountAsync(int, CancellationToken) Get total inbox count Declaration Task<CountDto> GetInboxCountAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CountDto> Task of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxCountWithHttpInfoAsync(int, CancellationToken) Get total inbox count Declaration Task<ApiResponse<CountDto>> GetInboxCountWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CountDto>> Task of ApiResponse (CountDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailCountAsync(Guid, int, CancellationToken) Get email count in inbox Declaration Task<CountDto> GetInboxEmailCountAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CountDto> Task of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailCountWithHttpInfoAsync(Guid, int, CancellationToken) Get email count in inbox Declaration Task<ApiResponse<CountDto>> GetInboxEmailCountWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CountDto>> Task of ApiResponse (CountDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailsPaginatedAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get inbox emails paginated Declaration Task<PageEmailPreview> GetInboxEmailsPaginatedAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? page Optional page index in inbox emails list pagination (optional, default to 0) int? size Optional page size in inbox emails list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by received after given date time (optional) DateTime? before Optional filter by received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailPreview> Task of PageEmailPreview Remarks Get a paginated list of emails in an inbox. Does not hold connections open. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailsPaginatedWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get inbox emails paginated Declaration Task<ApiResponse<PageEmailPreview>> GetInboxEmailsPaginatedWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? page Optional page index in inbox emails list pagination (optional, default to 0) int? size Optional page size in inbox emails list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by received after given date time (optional) DateTime? before Optional filter by received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailPreview>> Task of ApiResponse (PageEmailPreview) Remarks Get a paginated list of emails in an inbox. Does not hold connections open. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxesAsync(int?, string, DateTime?, bool?, DateTime?, int, CancellationToken) List Inboxes and email addresses Declaration [Obsolete] Task<List<InboxDto>> GetInboxesAsync(int? size = null, string sort = null, DateTime? since = null, bool? excludeCatchAllInboxes = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? size Optional result size limit. Note an automatic limit of 100 results is applied. See the paginated getAllEmails for larger queries. (optional, default to 100) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by created after given date time (optional) bool? excludeCatchAllInboxes Optional exclude catch all inboxes (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<InboxDto>> Task of List<InboxDto> Remarks List the inboxes you have created. Note use of the more advanced getAllInboxes is recommended and allows paginated access using a limit and sort parameter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxesWithHttpInfoAsync(int?, string, DateTime?, bool?, DateTime?, int, CancellationToken) List Inboxes and email addresses Declaration [Obsolete] Task<ApiResponse<List<InboxDto>>> GetInboxesWithHttpInfoAsync(int? size = null, string sort = null, DateTime? since = null, bool? excludeCatchAllInboxes = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? size Optional result size limit. Note an automatic limit of 100 results is applied. See the paginated getAllEmails for larger queries. (optional, default to 100) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by created after given date time (optional) bool? excludeCatchAllInboxes Optional exclude catch all inboxes (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<InboxDto>>> Task of ApiResponse (List<InboxDto>) Remarks List the inboxes you have created. Note use of the more advanced getAllInboxes is recommended and allows paginated access using a limit and sort parameter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxIdsAsync(int, CancellationToken) Get all inbox IDs Declaration [Obsolete] Task<InboxIdsResult> GetInboxIdsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxIdsResult> Task of InboxIdsResult Remarks Get list of inbox IDs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxIdsWithHttpInfoAsync(int, CancellationToken) Get all inbox IDs Declaration [Obsolete] Task<ApiResponse<InboxIdsResult>> GetInboxIdsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxIdsResult>> Task of ApiResponse (InboxIdsResult) Remarks Get list of inbox IDs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxSentEmailsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get Inbox Sent Emails Declaration [Obsolete] Task<PageSentEmailProjection> GetInboxSentEmailsAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional sent email search (optional) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageSentEmailProjection> Task of PageSentEmailProjection Remarks Returns an inbox's sent email receipts. Call individual sent email endpoints for more details. Note for privacy reasons the full body of sent emails is never stored. An MD5 hash hex is available for comparison instead. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxSentEmailsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get Inbox Sent Emails Declaration [Obsolete] Task<ApiResponse<PageSentEmailProjection>> GetInboxSentEmailsWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional sent email search (optional) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageSentEmailProjection>> Task of ApiResponse (PageSentEmailProjection) Remarks Returns an inbox's sent email receipts. Call individual sent email endpoints for more details. Note for privacy reasons the full body of sent emails is never stored. An MD5 hash hex is available for comparison instead. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxTagsAsync(int, CancellationToken) Get inbox tags Declaration [Obsolete] Task<List<string>> GetInboxTagsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<string>> Task of List<string> Remarks Get all inbox tags Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxTagsWithHttpInfoAsync(int, CancellationToken) Get inbox tags Declaration [Obsolete] Task<ApiResponse<List<string>>> GetInboxTagsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<string>>> Task of ApiResponse (List<string>) Remarks Get all inbox tags Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxWithHttpInfoAsync(Guid, int, CancellationToken) Get Inbox. Returns properties of an inbox. Declaration Task<ApiResponse<InboxDto>> GetInboxWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Remarks Returns an inbox's properties, including its email address and ID. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInboxAsync(Guid, long, int, CancellationToken) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Declaration Task<Email> GetLatestEmailInInboxAsync(Guid inboxId, long timeoutMillis, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from long timeoutMillis Timeout milliseconds to wait for latest email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Remarks Get the newest email in an inbox or wait for one to arrive Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInboxWithHttpInfoAsync(Guid, long, int, CancellationToken) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Declaration Task<ApiResponse<Email>> GetLatestEmailInInboxWithHttpInfoAsync(Guid inboxId, long timeoutMillis, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from long timeoutMillis Timeout milliseconds to wait for latest email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Remarks Get the newest email in an inbox or wait for one to arrive Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationInboxesAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List Organization Inboxes Paginated Declaration [Obsolete] Task<PageOrganizationInboxProjection> GetOrganizationInboxesAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageOrganizationInboxProjection> Task of PageOrganizationInboxProjection Remarks List organization inboxes in paginated form. These are inboxes created with allowTeamAccess flag enabled. Organization inboxes are readOnly for non-admin users. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationInboxesWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List Organization Inboxes Paginated Declaration [Obsolete] Task<ApiResponse<PageOrganizationInboxProjection>> GetOrganizationInboxesWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageOrganizationInboxProjection>> Task of ApiResponse (PageOrganizationInboxProjection) Remarks List organization inboxes in paginated form. These are inboxes created with allowTeamAccess flag enabled. Organization inboxes are readOnly for non-admin users. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobAsync(Guid, int, CancellationToken) Get a scheduled email job Declaration Task<ScheduledJobDto> GetScheduledJobAsync(Guid jobId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ScheduledJobDto> Task of ScheduledJobDto Remarks Get a scheduled email job details. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobsByInboxIdAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all scheduled email sending jobs for the inbox Declaration Task<PageScheduledJobs> GetScheduledJobsByInboxIdAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageScheduledJobs> Task of PageScheduledJobs Remarks Schedule sending of emails using scheduled jobs. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobsByInboxIdWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all scheduled email sending jobs for the inbox Declaration Task<ApiResponse<PageScheduledJobs>> GetScheduledJobsByInboxIdWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageScheduledJobs>> Task of ApiResponse (PageScheduledJobs) Remarks Schedule sending of emails using scheduled jobs. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobWithHttpInfoAsync(Guid, int, CancellationToken) Get a scheduled email job Declaration Task<ApiResponse<ScheduledJobDto>> GetScheduledJobWithHttpInfoAsync(Guid jobId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ScheduledJobDto>> Task of ApiResponse (ScheduledJobDto) Remarks Get a scheduled email job details. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxRulesetsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox rulesets Declaration Task<PageInboxRulesetDto> ListInboxRulesetsAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxRulesetDto> Task of PageInboxRulesetDto Remarks List all rulesets attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxRulesetsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox rulesets Declaration Task<ApiResponse<PageInboxRulesetDto>> ListInboxRulesetsWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxRulesetDto>> Task of ApiResponse (PageInboxRulesetDto) Remarks List all rulesets attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxTrackingPixelsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox tracking pixels Declaration Task<PageTrackingPixelProjection> ListInboxTrackingPixelsAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox tracking pixel list pagination (optional, default to 0) int? size Optional page size in inbox tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageTrackingPixelProjection> Task of PageTrackingPixelProjection Remarks List all tracking pixels sent from an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxTrackingPixelsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox tracking pixels Declaration Task<ApiResponse<PageTrackingPixelProjection>> ListInboxTrackingPixelsWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox tracking pixel list pagination (optional, default to 0) int? size Optional page size in inbox tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageTrackingPixelProjection>> Task of ApiResponse (PageTrackingPixelProjection) Remarks List all tracking pixels sent from an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchInboxesAsync(SearchInboxesOptions, int, CancellationToken) Search all inboxes and return matching inboxes Declaration Task<PageInboxProjection> SearchInboxesAsync(SearchInboxesOptions searchInboxesOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SearchInboxesOptions searchInboxesOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxProjection> Task of PageInboxProjection Remarks Search inboxes and return in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchInboxesWithHttpInfoAsync(SearchInboxesOptions, int, CancellationToken) Search all inboxes and return matching inboxes Declaration Task<ApiResponse<PageInboxProjection>> SearchInboxesWithHttpInfoAsync(SearchInboxesOptions searchInboxesOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SearchInboxesOptions searchInboxesOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxProjection>> Task of ApiResponse (PageInboxProjection) Remarks Search inboxes and return in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailAndConfirmAsync(Guid, SendEmailOptions, int, CancellationToken) Send email and return sent confirmation Declaration Task<SentEmailDto> SendEmailAndConfirmAsync(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Remarks Sister method for standard sendEmail method with the benefit of returning a SentEmail entity confirming the successful sending of the email with a link to the sent object created for it. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailAndConfirmWithHttpInfoAsync(Guid, SendEmailOptions, int, CancellationToken) Send email and return sent confirmation Declaration Task<ApiResponse<SentEmailDto>> SendEmailAndConfirmWithHttpInfoAsync(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Remarks Sister method for standard sendEmail method with the benefit of returning a SentEmail entity confirming the successful sending of the email with a link to the sent object created for it. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailAsync(Guid, SendEmailOptions, int, CancellationToken) Send Email Declaration Task SendEmailAsync(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Send an email from an inbox's email address. The request body should contain the SendEmailOptions that include recipients, attachments, body etc. See SendEmailOptions for all available properties. Note the inboxId refers to the inbox's id not the inbox's email address. See https://www.mailslurp.com/guides/ for more information on how to send emails. This method does not return a sent email entity due to legacy reasons. To send and get a sent email as returned response use the sister method sendEmailAndConfirm. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailWithHttpInfoAsync(Guid, SendEmailOptions, int, CancellationToken) Send Email Declaration Task<ApiResponse<object>> SendEmailWithHttpInfoAsync(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Send an email from an inbox's email address. The request body should contain the SendEmailOptions that include recipients, attachments, body etc. See SendEmailOptions for all available properties. Note the inboxId refers to the inbox's id not the inbox's email address. See https://www.mailslurp.com/guides/ for more information on how to send emails. This method does not return a sent email entity due to legacy reasons. To send and get a sent email as returned response use the sister method sendEmailAndConfirm. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailWithQueueAsync(Guid, bool, SendEmailOptions, int, CancellationToken) Send email with queue Declaration Task SendEmailWithQueueAsync(Guid inboxId, bool validateBeforeEnqueue, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from bool validateBeforeEnqueue Validate before adding to queue SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Send an email using a queue. Will place the email onto a queue that will then be processed and sent. Use this queue method to enable any failed email sending to be recovered. This will prevent lost emails when sending if your account encounters a block or payment issue. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailWithQueueWithHttpInfoAsync(Guid, bool, SendEmailOptions, int, CancellationToken) Send email with queue Declaration Task<ApiResponse<object>> SendEmailWithQueueWithHttpInfoAsync(Guid inboxId, bool validateBeforeEnqueue, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from bool validateBeforeEnqueue Validate before adding to queue SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Send an email using a queue. Will place the email onto a queue that will then be processed and sent. Use this queue method to enable any failed email sending to be recovered. This will prevent lost emails when sending if your account encounters a block or payment issue. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendSmtpEnvelopeAsync(Guid, SendSMTPEnvelopeOptions, int, CancellationToken) Send email using an SMTP mail envelope and message body and return sent confirmation Declaration Task<SentEmailDto> SendSmtpEnvelopeAsync(Guid inboxId, SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Remarks Send email using an SMTP envelope containing RCPT TO, MAIL FROM, and a SMTP BODY. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendSmtpEnvelopeWithHttpInfoAsync(Guid, SendSMTPEnvelopeOptions, int, CancellationToken) Send email using an SMTP mail envelope and message body and return sent confirmation Declaration Task<ApiResponse<SentEmailDto>> SendSmtpEnvelopeWithHttpInfoAsync(Guid inboxId, SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Remarks Send email using an SMTP envelope containing RCPT TO, MAIL FROM, and a SMTP BODY. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestEmailAsync(Guid, int, CancellationToken) Send a test email to inbox Declaration Task SendTestEmailAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Send an inbox a test email to test email receiving is working Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestEmailWithHttpInfoAsync(Guid, int, CancellationToken) Send a test email to inbox Declaration Task<ApiResponse<object>> SendTestEmailWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Send an inbox a test email to test email receiving is working Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendWithScheduleAsync(Guid, SendEmailOptions, DateTime?, long?, bool?, int, CancellationToken) Send email with with delay or schedule Declaration Task<ScheduledJobDto> SendWithScheduleAsync(Guid inboxId, SendEmailOptions sendEmailOptions, DateTime? sendAtTimestamp = null, long? sendAtNowPlusSeconds = null, bool? validateBeforeEnqueue = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions DateTime? sendAtTimestamp Sending timestamp (optional) long? sendAtNowPlusSeconds Send after n seconds (optional) bool? validateBeforeEnqueue Validate before adding to queue (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ScheduledJobDto> Task of ScheduledJobDto Remarks Send an email using a delay. Will place the email onto a scheduler that will then be processed and sent. Use delays to schedule email sending. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendWithScheduleWithHttpInfoAsync(Guid, SendEmailOptions, DateTime?, long?, bool?, int, CancellationToken) Send email with with delay or schedule Declaration Task<ApiResponse<ScheduledJobDto>> SendWithScheduleWithHttpInfoAsync(Guid inboxId, SendEmailOptions sendEmailOptions, DateTime? sendAtTimestamp = null, long? sendAtNowPlusSeconds = null, bool? validateBeforeEnqueue = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions DateTime? sendAtTimestamp Sending timestamp (optional) long? sendAtNowPlusSeconds Send after n seconds (optional) bool? validateBeforeEnqueue Validate before adding to queue (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ScheduledJobDto>> Task of ApiResponse (ScheduledJobDto) Remarks Send an email using a delay. Will place the email onto a scheduler that will then be processed and sent. Use delays to schedule email sending. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SetInboxFavouritedAsync(Guid, SetInboxFavouritedOptions, int, CancellationToken) Set inbox favourited state Declaration Task<InboxDto> SetInboxFavouritedAsync(Guid inboxId, SetInboxFavouritedOptions setInboxFavouritedOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox to set favourite state SetInboxFavouritedOptions setInboxFavouritedOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Remarks Set and return new favourite state for an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source SetInboxFavouritedWithHttpInfoAsync(Guid, SetInboxFavouritedOptions, int, CancellationToken) Set inbox favourited state Declaration Task<ApiResponse<InboxDto>> SetInboxFavouritedWithHttpInfoAsync(Guid inboxId, SetInboxFavouritedOptions setInboxFavouritedOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox to set favourite state SetInboxFavouritedOptions setInboxFavouritedOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Remarks Set and return new favourite state for an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxAsync(Guid, UpdateInboxOptions, int, CancellationToken) Update Inbox. Change name and description. Email address is not editable. Declaration Task<InboxDto> UpdateInboxAsync(Guid inboxId, UpdateInboxOptions updateInboxOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId UpdateInboxOptions updateInboxOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Remarks Update editable fields on an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxWithHttpInfoAsync(Guid, UpdateInboxOptions, int, CancellationToken) Update Inbox. Change name and description. Email address is not editable. Declaration Task<ApiResponse<InboxDto>> UpdateInboxWithHttpInfoAsync(Guid inboxId, UpdateInboxOptions updateInboxOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId UpdateInboxOptions updateInboxOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Remarks Update editable fields on an inbox Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IInboxControllerApiSync.html": {
    "href": "api/mailslurp.Api.IInboxControllerApiSync.html",
    "title": "Interface IInboxControllerApiSync | MailSlurp",
    "keywords": "Interface IInboxControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IInboxControllerApiSync : IApiAccessor Methods View Source CancelScheduledJob(Guid, int) Cancel a scheduled email job Declaration ScheduledJobDto CancelScheduledJob(Guid jobId, int operationIndex = 0) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. Returns Type Description ScheduledJobDto ScheduledJobDto Remarks Get a scheduled email job and cancel it. Will fail if status of job is already cancelled, failed, or complete. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CancelScheduledJobWithHttpInfo(Guid, int) Cancel a scheduled email job Declaration ApiResponse<ScheduledJobDto> CancelScheduledJobWithHttpInfo(Guid jobId, int operationIndex = 0) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ScheduledJobDto> ApiResponse of ScheduledJobDto Remarks Get a scheduled email job and cancel it. Will fail if status of job is already cancelled, failed, or complete. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInbox(string, List<string>, string, string, bool?, bool?, DateTime?, long?, bool?, string, bool?, bool?, Guid?, string, string, int) Create an inbox email address. An inbox has a real email address and can send and receive emails. Inboxes can be either SMTP or HTTP inboxes. Declaration InboxDto CreateInbox(string emailAddress = null, List<string> tags = null, string name = null, string description = null, bool? useDomainPool = null, bool? favourite = null, DateTime? expiresAt = null, long? expiresIn = null, bool? allowTeamAccess = null, string inboxType = null, bool? virtualInbox = null, bool? useShortAddress = null, Guid? domainId = null, string domainName = null, string prefix = null, int operationIndex = 0) Parameters Type Name Description string emailAddress A custom email address to use with the inbox. Defaults to null. When null MailSlurp will assign a random email address to the inbox such as 123@mailslurp.com. If you use the useDomainPool option when the email address is null it will generate an email address with a more varied domain ending such as 123@mailslurp.info or 123@mailslurp.biz. When a custom email address is provided the address is split into a domain and the domain is queried against your user. If you have created the domain in the MailSlurp dashboard and verified it you can use any email address that ends with the domain. Note domain types must match the inbox type - so SMTP inboxes will only work with SMTP type domains. Avoid SMTP inboxes if you need to send emails as they can only receive. Send an email to this address and the inbox will receive and store it for you. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. (optional) List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. (optional) string name Optional name of the inbox. Displayed in the dashboard for easier search and used as the sender name when sending emails. (optional) string description Optional description of the inbox for labelling purposes. Is shown in the dashboard and can be used with (optional) bool? useDomainPool Use the MailSlurp domain name pool with this inbox when creating the email address. Defaults to null. If enabled the inbox will be an email address with a domain randomly chosen from a list of the MailSlurp domains. This is useful when the default @mailslurp.com email addresses used with inboxes are blocked or considered spam by a provider or receiving service. When domain pool is enabled an email address will be generated ending in @mailslurp.{world,info,xyz,...} . This means a TLD is randomly selecting from a list of .biz, .info, .xyz etc to add variance to the generated email addresses. When null or false MailSlurp uses the default behavior of @mailslurp.com or custom email address provided by the emailAddress field. Note this feature is only available for HTTP inbox types. (optional) bool? favourite Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering (optional) DateTime? expiresAt Optional inbox expiration date. If null then this inbox is permanent and the emails in it won't be deleted. If an expiration date is provided or is required by your plan the inbox will be closed when the expiration time is reached. Expired inboxes still contain their emails but can no longer send or receive emails. An ExpiredInboxRecord is created when an inbox and the email address and inbox ID are recorded. The expiresAt property is a timestamp string in ISO DateTime Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX. (optional) long? expiresIn Number of milliseconds that inbox should exist for (optional) bool? allowTeamAccess DEPRECATED (team access is always true). Grant team access to this inbox and the emails that belong to it for team members of your organization. (optional) string inboxType HTTP (default) or SMTP inbox type. HTTP inboxes are default and best solution for most cases. SMTP inboxes are more reliable for public inbound email consumption (but do not support sending emails). When using custom domains the domain type must match the inbox type. HTTP inboxes are processed by AWS SES while SMTP inboxes use a custom mail server running at mx.mailslurp.com. (optional) bool? virtualInbox Virtual inbox prevents any outbound emails from being sent. It creates sent email records but will never send real emails to recipients. Great for testing and faking email sending. (optional) bool? useShortAddress Use a shorter email address under 31 characters (optional) Guid? domainId ID of custom domain to use for email address. (optional) string domainName FQDN domain name for the domain you have verified. Will be appended with a randomly assigned recipient name. Use the emailAddress option instead to specify the full custom inbox. (optional) string prefix Prefix to add before the email address for easier labelling or identification. (optional) int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Remarks Create a new inbox and with a randomized email address to send and receive from. Pass emailAddress parameter if you wish to use a specific email address. Creating an inbox is required before sending or receiving emails. If writing tests it is recommended that you create a new inbox during each test method so that it is unique and empty. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxRuleset(Guid, CreateInboxRulesetOptions, int) Create an inbox ruleset Declaration InboxRulesetDto CreateInboxRuleset(Guid inboxId, CreateInboxRulesetOptions createInboxRulesetOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId inboxId CreateInboxRulesetOptions createInboxRulesetOptions int operationIndex Index associated with the operation. Returns Type Description InboxRulesetDto InboxRulesetDto Remarks Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxRulesetWithHttpInfo(Guid, CreateInboxRulesetOptions, int) Create an inbox ruleset Declaration ApiResponse<InboxRulesetDto> CreateInboxRulesetWithHttpInfo(Guid inboxId, CreateInboxRulesetOptions createInboxRulesetOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId inboxId CreateInboxRulesetOptions createInboxRulesetOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxRulesetDto> ApiResponse of InboxRulesetDto Remarks Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithDefaults(int) Create an inbox with default options. Uses MailSlurp domain pool address and is private. Declaration InboxDto CreateInboxWithDefaults(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithDefaultsWithHttpInfo(int) Create an inbox with default options. Uses MailSlurp domain pool address and is private. Declaration ApiResponse<InboxDto> CreateInboxWithDefaultsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithHttpInfo(string, List<string>, string, string, bool?, bool?, DateTime?, long?, bool?, string, bool?, bool?, Guid?, string, string, int) Create an inbox email address. An inbox has a real email address and can send and receive emails. Inboxes can be either SMTP or HTTP inboxes. Declaration ApiResponse<InboxDto> CreateInboxWithHttpInfo(string emailAddress = null, List<string> tags = null, string name = null, string description = null, bool? useDomainPool = null, bool? favourite = null, DateTime? expiresAt = null, long? expiresIn = null, bool? allowTeamAccess = null, string inboxType = null, bool? virtualInbox = null, bool? useShortAddress = null, Guid? domainId = null, string domainName = null, string prefix = null, int operationIndex = 0) Parameters Type Name Description string emailAddress A custom email address to use with the inbox. Defaults to null. When null MailSlurp will assign a random email address to the inbox such as 123@mailslurp.com. If you use the useDomainPool option when the email address is null it will generate an email address with a more varied domain ending such as 123@mailslurp.info or 123@mailslurp.biz. When a custom email address is provided the address is split into a domain and the domain is queried against your user. If you have created the domain in the MailSlurp dashboard and verified it you can use any email address that ends with the domain. Note domain types must match the inbox type - so SMTP inboxes will only work with SMTP type domains. Avoid SMTP inboxes if you need to send emails as they can only receive. Send an email to this address and the inbox will receive and store it for you. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. (optional) List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. (optional) string name Optional name of the inbox. Displayed in the dashboard for easier search and used as the sender name when sending emails. (optional) string description Optional description of the inbox for labelling purposes. Is shown in the dashboard and can be used with (optional) bool? useDomainPool Use the MailSlurp domain name pool with this inbox when creating the email address. Defaults to null. If enabled the inbox will be an email address with a domain randomly chosen from a list of the MailSlurp domains. This is useful when the default @mailslurp.com email addresses used with inboxes are blocked or considered spam by a provider or receiving service. When domain pool is enabled an email address will be generated ending in @mailslurp.{world,info,xyz,...} . This means a TLD is randomly selecting from a list of .biz, .info, .xyz etc to add variance to the generated email addresses. When null or false MailSlurp uses the default behavior of @mailslurp.com or custom email address provided by the emailAddress field. Note this feature is only available for HTTP inbox types. (optional) bool? favourite Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering (optional) DateTime? expiresAt Optional inbox expiration date. If null then this inbox is permanent and the emails in it won't be deleted. If an expiration date is provided or is required by your plan the inbox will be closed when the expiration time is reached. Expired inboxes still contain their emails but can no longer send or receive emails. An ExpiredInboxRecord is created when an inbox and the email address and inbox ID are recorded. The expiresAt property is a timestamp string in ISO DateTime Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX. (optional) long? expiresIn Number of milliseconds that inbox should exist for (optional) bool? allowTeamAccess DEPRECATED (team access is always true). Grant team access to this inbox and the emails that belong to it for team members of your organization. (optional) string inboxType HTTP (default) or SMTP inbox type. HTTP inboxes are default and best solution for most cases. SMTP inboxes are more reliable for public inbound email consumption (but do not support sending emails). When using custom domains the domain type must match the inbox type. HTTP inboxes are processed by AWS SES while SMTP inboxes use a custom mail server running at mx.mailslurp.com. (optional) bool? virtualInbox Virtual inbox prevents any outbound emails from being sent. It creates sent email records but will never send real emails to recipients. Great for testing and faking email sending. (optional) bool? useShortAddress Use a shorter email address under 31 characters (optional) Guid? domainId ID of custom domain to use for email address. (optional) string domainName FQDN domain name for the domain you have verified. Will be appended with a randomly assigned recipient name. Use the emailAddress option instead to specify the full custom inbox. (optional) string prefix Prefix to add before the email address for easier labelling or identification. (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Remarks Create a new inbox and with a randomized email address to send and receive from. Pass emailAddress parameter if you wish to use a specific email address. Creating an inbox is required before sending or receiving emails. If writing tests it is recommended that you create a new inbox during each test method so that it is unique and empty. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithOptions(CreateInboxDto, int) Create an inbox with options. Extended options for inbox creation. Declaration InboxDto CreateInboxWithOptions(CreateInboxDto createInboxDto, int operationIndex = 0) Parameters Type Name Description CreateInboxDto createInboxDto int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Remarks Additional endpoint that allows inbox creation with request body options. Can be more flexible that other methods for some clients. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithOptionsWithHttpInfo(CreateInboxDto, int) Create an inbox with options. Extended options for inbox creation. Declaration ApiResponse<InboxDto> CreateInboxWithOptionsWithHttpInfo(CreateInboxDto createInboxDto, int operationIndex = 0) Parameters Type Name Description CreateInboxDto createInboxDto int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Remarks Additional endpoint that allows inbox creation with request body options. Can be more flexible that other methods for some clients. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxEmails(Guid, int) Delete all emails in a given inboxes. Declaration void DeleteAllInboxEmails(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Remarks Deletes all emails in an inbox. Be careful as emails cannot be recovered Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxEmailsWithHttpInfo(Guid, int) Delete all emails in a given inboxes. Declaration ApiResponse<object> DeleteAllInboxEmailsWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Deletes all emails in an inbox. Be careful as emails cannot be recovered Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxes(int) Delete all inboxes Declaration void DeleteAllInboxes(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Remarks Permanently delete all inboxes and associated email addresses. This will also delete all emails within the inboxes. Be careful as inboxes cannot be recovered once deleted. Note: deleting inboxes will not impact your usage limits. Monthly inbox creation limits are based on how many inboxes were created in the last 30 days, not how many inboxes you currently have. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByDescription(string, int) Delete inboxes by description Declaration void DeleteAllInboxesByDescription(string description, int operationIndex = 0) Parameters Type Name Description string description int operationIndex Index associated with the operation. Remarks Permanently delete all inboxes by description Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByDescriptionWithHttpInfo(string, int) Delete inboxes by description Declaration ApiResponse<object> DeleteAllInboxesByDescriptionWithHttpInfo(string description, int operationIndex = 0) Parameters Type Name Description string description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Permanently delete all inboxes by description Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByName(string, int) Delete inboxes by name Declaration void DeleteAllInboxesByName(string name, int operationIndex = 0) Parameters Type Name Description string name int operationIndex Index associated with the operation. Remarks Permanently delete all inboxes by name Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByNameWithHttpInfo(string, int) Delete inboxes by name Declaration ApiResponse<object> DeleteAllInboxesByNameWithHttpInfo(string name, int operationIndex = 0) Parameters Type Name Description string name int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Permanently delete all inboxes by name Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByTag(string, int) Delete inboxes by tag Declaration void DeleteAllInboxesByTag(string tag, int operationIndex = 0) Parameters Type Name Description string tag int operationIndex Index associated with the operation. Remarks Permanently delete all inboxes by tag Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByTagWithHttpInfo(string, int) Delete inboxes by tag Declaration ApiResponse<object> DeleteAllInboxesByTagWithHttpInfo(string tag, int operationIndex = 0) Parameters Type Name Description string tag int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Permanently delete all inboxes by tag Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesWithHttpInfo(int) Delete all inboxes Declaration ApiResponse<object> DeleteAllInboxesWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Permanently delete all inboxes and associated email addresses. This will also delete all emails within the inboxes. Be careful as inboxes cannot be recovered once deleted. Note: deleting inboxes will not impact your usage limits. Monthly inbox creation limits are based on how many inboxes were created in the last 30 days, not how many inboxes you currently have. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInbox(Guid, int) Delete inbox Declaration void DeleteInbox(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Remarks Permanently delete an inbox and associated email address as well as all emails within the given inbox. This action cannot be undone. Note: deleting an inbox will not affect your account usage. Monthly inbox usage is based on how many inboxes you create within 30 days, not how many exist at time of request. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxWithHttpInfo(Guid, int) Delete inbox Declaration ApiResponse<object> DeleteInboxWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Permanently delete an inbox and associated email address as well as all emails within the given inbox. This action cannot be undone. Note: deleting an inbox will not affect your account usage. Monthly inbox usage is based on how many inboxes you create within 30 days, not how many exist at time of request. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DoesInboxExist(string, bool?, int) Does inbox exist Declaration InboxExistsDto DoesInboxExist(string emailAddress, bool? allowCatchAll = null, int operationIndex = 0) Parameters Type Name Description string emailAddress Email address bool? allowCatchAll (optional) int operationIndex Index associated with the operation. Returns Type Description InboxExistsDto InboxExistsDto Remarks Check if inboxes exist by email address. Useful if you are sending emails to mailslurp addresses Exceptions Type Condition ApiException Thrown when fails to make API call View Source DoesInboxExistWithHttpInfo(string, bool?, int) Does inbox exist Declaration ApiResponse<InboxExistsDto> DoesInboxExistWithHttpInfo(string emailAddress, bool? allowCatchAll = null, int operationIndex = 0) Parameters Type Name Description string emailAddress Email address bool? allowCatchAll (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxExistsDto> ApiResponse of InboxExistsDto Remarks Check if inboxes exist by email address. Useful if you are sending emails to mailslurp addresses Exceptions Type Condition ApiException Thrown when fails to make API call View Source FlushExpired(DateTime?, int) Remove expired inboxes Declaration FlushExpiredInboxesResult FlushExpired(DateTime? before = null, int operationIndex = 0) Parameters Type Name Description DateTime? before Optional expired at before flag to flush expired inboxes that have expired before the given time (optional) int operationIndex Index associated with the operation. Returns Type Description FlushExpiredInboxesResult FlushExpiredInboxesResult Remarks Remove any expired inboxes for your account (instead of waiting for scheduled removal on server) Exceptions Type Condition ApiException Thrown when fails to make API call View Source FlushExpiredWithHttpInfo(DateTime?, int) Remove expired inboxes Declaration ApiResponse<FlushExpiredInboxesResult> FlushExpiredWithHttpInfo(DateTime? before = null, int operationIndex = 0) Parameters Type Name Description DateTime? before Optional expired at before flag to flush expired inboxes that have expired before the given time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<FlushExpiredInboxesResult> ApiResponse of FlushExpiredInboxesResult Remarks Remove any expired inboxes for your account (instead of waiting for scheduled removal on server) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxes(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int) List All Inboxes Paginated Declaration PageInboxProjection GetAllInboxes(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description PageInboxProjection PageInboxProjection Remarks List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesOffsetPaginated(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int) List All Inboxes Offset Paginated Declaration PageInboxProjection GetAllInboxesOffsetPaginated(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description PageInboxProjection PageInboxProjection Remarks List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesOffsetPaginatedWithHttpInfo(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int) List All Inboxes Offset Paginated Declaration ApiResponse<PageInboxProjection> GetAllInboxesOffsetPaginatedWithHttpInfo(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxProjection> ApiResponse of PageInboxProjection Remarks List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesWithHttpInfo(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int) List All Inboxes Paginated Declaration ApiResponse<PageInboxProjection> GetAllInboxesWithHttpInfo(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxProjection> ApiResponse of PageInboxProjection Remarks List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllScheduledJobs(int?, int?, string, DateTime?, DateTime?, int) Get all scheduled email sending jobs for account Declaration PageScheduledJobs GetAllScheduledJobs(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageScheduledJobs PageScheduledJobs Remarks Schedule sending of emails using scheduled jobs. These can be inbox or account level. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllScheduledJobsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get all scheduled email sending jobs for account Declaration ApiResponse<PageScheduledJobs> GetAllScheduledJobsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageScheduledJobs> ApiResponse of PageScheduledJobs Remarks Schedule sending of emails using scheduled jobs. These can be inbox or account level. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDeliveryStatusesByInboxId(Guid, int?, int?, string, DateTime?, DateTime?, int) Declaration [Obsolete] PageDeliveryStatus GetDeliveryStatusesByInboxId(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageDeliveryStatus PageDeliveryStatus Remarks Get all email delivery statuses for an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDeliveryStatusesByInboxIdWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Declaration [Obsolete] ApiResponse<PageDeliveryStatus> GetDeliveryStatusesByInboxIdWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageDeliveryStatus> ApiResponse of PageDeliveryStatus Remarks Get all email delivery statuses for an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmails(Guid, int?, int?, string, long?, long?, long?, bool?, DateTime?, DateTime?, int) Get emails in an Inbox. This method is not idempotent as it allows retries and waits if you want certain conditions to be met before returning. For simple listing and sorting of known emails use the email controller instead. Declaration List<EmailPreview> GetEmails(Guid inboxId, int? size = null, int? limit = null, string sort = null, long? retryTimeout = null, long? delayTimeout = null, long? minCount = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? size Alias for limit. Assessed first before assessing any passed limit. (optional) int? limit Limit the result set, ordered by received date time sort direction. Maximum 100. For more listing options see the email controller (optional) string sort Sort the results by received date and direction ASC or DESC (optional) long? retryTimeout Maximum milliseconds to spend retrying inbox database until minCount emails are returned (optional) long? delayTimeout (optional) long? minCount Minimum acceptable email count. Will cause request to hang (and retry) until minCount is satisfied or retryTimeout is reached. (optional) bool? unreadOnly (optional) DateTime? before Exclude emails received after this ISO 8601 date time (optional) DateTime? since Exclude emails received before this ISO 8601 date time (optional) int operationIndex Index associated with the operation. Returns Type Description List<EmailPreview> List<EmailPreview> Remarks List emails that an inbox has received. Only emails that are sent to the inbox's email address will appear in the inbox. It may take several seconds for any email you send to an inbox's email address to appear in the inbox. To make this endpoint wait for a minimum number of emails use the minCount parameter. The server will retry the inbox database until the minCount is satisfied or the retryTimeout is reached Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsWithHttpInfo(Guid, int?, int?, string, long?, long?, long?, bool?, DateTime?, DateTime?, int) Get emails in an Inbox. This method is not idempotent as it allows retries and waits if you want certain conditions to be met before returning. For simple listing and sorting of known emails use the email controller instead. Declaration ApiResponse<List<EmailPreview>> GetEmailsWithHttpInfo(Guid inboxId, int? size = null, int? limit = null, string sort = null, long? retryTimeout = null, long? delayTimeout = null, long? minCount = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? size Alias for limit. Assessed first before assessing any passed limit. (optional) int? limit Limit the result set, ordered by received date time sort direction. Maximum 100. For more listing options see the email controller (optional) string sort Sort the results by received date and direction ASC or DESC (optional) long? retryTimeout Maximum milliseconds to spend retrying inbox database until minCount emails are returned (optional) long? delayTimeout (optional) long? minCount Minimum acceptable email count. Will cause request to hang (and retry) until minCount is satisfied or retryTimeout is reached. (optional) bool? unreadOnly (optional) DateTime? before Exclude emails received after this ISO 8601 date time (optional) DateTime? since Exclude emails received before this ISO 8601 date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<EmailPreview>> ApiResponse of List<EmailPreview> Remarks List emails that an inbox has received. Only emails that are sent to the inbox's email address will appear in the inbox. It may take several seconds for any email you send to an inbox's email address to appear in the inbox. To make this endpoint wait for a minimum number of emails use the minCount parameter. The server will retry the inbox database until the minCount is satisfied or the retryTimeout is reached Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetImapSmtpAccess(Guid?, int) Declaration ImapSmtpAccessDetails GetImapSmtpAccess(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Inbox ID (optional) int operationIndex Index associated with the operation. Returns Type Description ImapSmtpAccessDetails ImapSmtpAccessDetails Remarks Get IMAP and SMTP access usernames and passwords Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetImapSmtpAccessWithHttpInfo(Guid?, int) Declaration ApiResponse<ImapSmtpAccessDetails> GetImapSmtpAccessWithHttpInfo(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Inbox ID (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ImapSmtpAccessDetails> ApiResponse of ImapSmtpAccessDetails Remarks Get IMAP and SMTP access usernames and passwords Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInbox(Guid, int) Get Inbox. Returns properties of an inbox. Declaration InboxDto GetInbox(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Remarks Returns an inbox's properties, including its email address and ID. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByEmailAddress(string, int) Search for an inbox with the provided email address Declaration InboxByEmailAddressResult GetInboxByEmailAddress(string emailAddress, int operationIndex = 0) Parameters Type Name Description string emailAddress int operationIndex Index associated with the operation. Returns Type Description InboxByEmailAddressResult InboxByEmailAddressResult Remarks Get a inbox result by email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByEmailAddressWithHttpInfo(string, int) Search for an inbox with the provided email address Declaration ApiResponse<InboxByEmailAddressResult> GetInboxByEmailAddressWithHttpInfo(string emailAddress, int operationIndex = 0) Parameters Type Name Description string emailAddress int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxByEmailAddressResult> ApiResponse of InboxByEmailAddressResult Remarks Get a inbox result by email address Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByName(string, int) Search for an inbox with the given name Declaration InboxByNameResult GetInboxByName(string name, int operationIndex = 0) Parameters Type Name Description string name int operationIndex Index associated with the operation. Returns Type Description InboxByNameResult InboxByNameResult Remarks Get a inbox result by name Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByNameWithHttpInfo(string, int) Search for an inbox with the given name Declaration ApiResponse<InboxByNameResult> GetInboxByNameWithHttpInfo(string name, int operationIndex = 0) Parameters Type Name Description string name int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxByNameResult> ApiResponse of InboxByNameResult Remarks Get a inbox result by name Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxCount(int) Get total inbox count Declaration CountDto GetInboxCount(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description CountDto CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxCountWithHttpInfo(int) Get total inbox count Declaration ApiResponse<CountDto> GetInboxCountWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CountDto> ApiResponse of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailCount(Guid, int) Get email count in inbox Declaration CountDto GetInboxEmailCount(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int operationIndex Index associated with the operation. Returns Type Description CountDto CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailCountWithHttpInfo(Guid, int) Get email count in inbox Declaration ApiResponse<CountDto> GetInboxEmailCountWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CountDto> ApiResponse of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailsPaginated(Guid, int?, int?, string, DateTime?, DateTime?, int) Get inbox emails paginated Declaration PageEmailPreview GetInboxEmailsPaginated(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? page Optional page index in inbox emails list pagination (optional, default to 0) int? size Optional page size in inbox emails list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by received after given date time (optional) DateTime? before Optional filter by received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageEmailPreview PageEmailPreview Remarks Get a paginated list of emails in an inbox. Does not hold connections open. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailsPaginatedWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get inbox emails paginated Declaration ApiResponse<PageEmailPreview> GetInboxEmailsPaginatedWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? page Optional page index in inbox emails list pagination (optional, default to 0) int? size Optional page size in inbox emails list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by received after given date time (optional) DateTime? before Optional filter by received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailPreview> ApiResponse of PageEmailPreview Remarks Get a paginated list of emails in an inbox. Does not hold connections open. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxes(int?, string, DateTime?, bool?, DateTime?, int) List Inboxes and email addresses Declaration [Obsolete] List<InboxDto> GetInboxes(int? size = null, string sort = null, DateTime? since = null, bool? excludeCatchAllInboxes = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? size Optional result size limit. Note an automatic limit of 100 results is applied. See the paginated getAllEmails for larger queries. (optional, default to 100) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by created after given date time (optional) bool? excludeCatchAllInboxes Optional exclude catch all inboxes (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description List<InboxDto> List<InboxDto> Remarks List the inboxes you have created. Note use of the more advanced getAllInboxes is recommended and allows paginated access using a limit and sort parameter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxesWithHttpInfo(int?, string, DateTime?, bool?, DateTime?, int) List Inboxes and email addresses Declaration [Obsolete] ApiResponse<List<InboxDto>> GetInboxesWithHttpInfo(int? size = null, string sort = null, DateTime? since = null, bool? excludeCatchAllInboxes = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? size Optional result size limit. Note an automatic limit of 100 results is applied. See the paginated getAllEmails for larger queries. (optional, default to 100) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by created after given date time (optional) bool? excludeCatchAllInboxes Optional exclude catch all inboxes (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<InboxDto>> ApiResponse of List<InboxDto> Remarks List the inboxes you have created. Note use of the more advanced getAllInboxes is recommended and allows paginated access using a limit and sort parameter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxIds(int) Get all inbox IDs Declaration [Obsolete] InboxIdsResult GetInboxIds(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description InboxIdsResult InboxIdsResult Remarks Get list of inbox IDs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxIdsWithHttpInfo(int) Get all inbox IDs Declaration [Obsolete] ApiResponse<InboxIdsResult> GetInboxIdsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxIdsResult> ApiResponse of InboxIdsResult Remarks Get list of inbox IDs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxSentEmails(Guid, int?, int?, string, string, DateTime?, DateTime?, int) Get Inbox Sent Emails Declaration [Obsolete] PageSentEmailProjection GetInboxSentEmails(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional sent email search (optional) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageSentEmailProjection PageSentEmailProjection Remarks Returns an inbox's sent email receipts. Call individual sent email endpoints for more details. Note for privacy reasons the full body of sent emails is never stored. An MD5 hash hex is available for comparison instead. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxSentEmailsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) Get Inbox Sent Emails Declaration [Obsolete] ApiResponse<PageSentEmailProjection> GetInboxSentEmailsWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional sent email search (optional) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageSentEmailProjection> ApiResponse of PageSentEmailProjection Remarks Returns an inbox's sent email receipts. Call individual sent email endpoints for more details. Note for privacy reasons the full body of sent emails is never stored. An MD5 hash hex is available for comparison instead. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxTags(int) Get inbox tags Declaration [Obsolete] List<string> GetInboxTags(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<string> List<string> Remarks Get all inbox tags Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxTagsWithHttpInfo(int) Get inbox tags Declaration [Obsolete] ApiResponse<List<string>> GetInboxTagsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<string>> ApiResponse of List<string> Remarks Get all inbox tags Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxWithHttpInfo(Guid, int) Get Inbox. Returns properties of an inbox. Declaration ApiResponse<InboxDto> GetInboxWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Remarks Returns an inbox's properties, including its email address and ID. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInbox(Guid, long, int) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Declaration Email GetLatestEmailInInbox(Guid inboxId, long timeoutMillis, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from long timeoutMillis Timeout milliseconds to wait for latest email int operationIndex Index associated with the operation. Returns Type Description Email Email Remarks Get the newest email in an inbox or wait for one to arrive Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInboxWithHttpInfo(Guid, long, int) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Declaration ApiResponse<Email> GetLatestEmailInInboxWithHttpInfo(Guid inboxId, long timeoutMillis, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from long timeoutMillis Timeout milliseconds to wait for latest email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Remarks Get the newest email in an inbox or wait for one to arrive Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationInboxes(int?, int?, string, string, DateTime?, DateTime?, int) List Organization Inboxes Paginated Declaration [Obsolete] PageOrganizationInboxProjection GetOrganizationInboxes(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageOrganizationInboxProjection PageOrganizationInboxProjection Remarks List organization inboxes in paginated form. These are inboxes created with allowTeamAccess flag enabled. Organization inboxes are readOnly for non-admin users. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationInboxesWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, int) List Organization Inboxes Paginated Declaration [Obsolete] ApiResponse<PageOrganizationInboxProjection> GetOrganizationInboxesWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageOrganizationInboxProjection> ApiResponse of PageOrganizationInboxProjection Remarks List organization inboxes in paginated form. These are inboxes created with allowTeamAccess flag enabled. Organization inboxes are readOnly for non-admin users. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJob(Guid, int) Get a scheduled email job Declaration ScheduledJobDto GetScheduledJob(Guid jobId, int operationIndex = 0) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. Returns Type Description ScheduledJobDto ScheduledJobDto Remarks Get a scheduled email job details. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobsByInboxId(Guid, int?, int?, string, DateTime?, DateTime?, int) Get all scheduled email sending jobs for the inbox Declaration PageScheduledJobs GetScheduledJobsByInboxId(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageScheduledJobs PageScheduledJobs Remarks Schedule sending of emails using scheduled jobs. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobsByInboxIdWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get all scheduled email sending jobs for the inbox Declaration ApiResponse<PageScheduledJobs> GetScheduledJobsByInboxIdWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageScheduledJobs> ApiResponse of PageScheduledJobs Remarks Schedule sending of emails using scheduled jobs. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobWithHttpInfo(Guid, int) Get a scheduled email job Declaration ApiResponse<ScheduledJobDto> GetScheduledJobWithHttpInfo(Guid jobId, int operationIndex = 0) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ScheduledJobDto> ApiResponse of ScheduledJobDto Remarks Get a scheduled email job details. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxRulesets(Guid, int?, int?, string, string, DateTime?, DateTime?, int) List inbox rulesets Declaration PageInboxRulesetDto ListInboxRulesets(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageInboxRulesetDto PageInboxRulesetDto Remarks List all rulesets attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxRulesetsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) List inbox rulesets Declaration ApiResponse<PageInboxRulesetDto> ListInboxRulesetsWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxRulesetDto> ApiResponse of PageInboxRulesetDto Remarks List all rulesets attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxTrackingPixels(Guid, int?, int?, string, string, DateTime?, DateTime?, int) List inbox tracking pixels Declaration PageTrackingPixelProjection ListInboxTrackingPixels(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox tracking pixel list pagination (optional, default to 0) int? size Optional page size in inbox tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageTrackingPixelProjection PageTrackingPixelProjection Remarks List all tracking pixels sent from an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxTrackingPixelsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) List inbox tracking pixels Declaration ApiResponse<PageTrackingPixelProjection> ListInboxTrackingPixelsWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox tracking pixel list pagination (optional, default to 0) int? size Optional page size in inbox tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageTrackingPixelProjection> ApiResponse of PageTrackingPixelProjection Remarks List all tracking pixels sent from an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchInboxes(SearchInboxesOptions, int) Search all inboxes and return matching inboxes Declaration PageInboxProjection SearchInboxes(SearchInboxesOptions searchInboxesOptions, int operationIndex = 0) Parameters Type Name Description SearchInboxesOptions searchInboxesOptions int operationIndex Index associated with the operation. Returns Type Description PageInboxProjection PageInboxProjection Remarks Search inboxes and return in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchInboxesWithHttpInfo(SearchInboxesOptions, int) Search all inboxes and return matching inboxes Declaration ApiResponse<PageInboxProjection> SearchInboxesWithHttpInfo(SearchInboxesOptions searchInboxesOptions, int operationIndex = 0) Parameters Type Name Description SearchInboxesOptions searchInboxesOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxProjection> ApiResponse of PageInboxProjection Remarks Search inboxes and return in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmail(Guid, SendEmailOptions, int) Send Email Declaration void SendEmail(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Remarks Send an email from an inbox's email address. The request body should contain the SendEmailOptions that include recipients, attachments, body etc. See SendEmailOptions for all available properties. Note the inboxId refers to the inbox's id not the inbox's email address. See https://www.mailslurp.com/guides/ for more information on how to send emails. This method does not return a sent email entity due to legacy reasons. To send and get a sent email as returned response use the sister method sendEmailAndConfirm. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailAndConfirm(Guid, SendEmailOptions, int) Send email and return sent confirmation Declaration SentEmailDto SendEmailAndConfirm(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Remarks Sister method for standard sendEmail method with the benefit of returning a SentEmail entity confirming the successful sending of the email with a link to the sent object created for it. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailAndConfirmWithHttpInfo(Guid, SendEmailOptions, int) Send email and return sent confirmation Declaration ApiResponse<SentEmailDto> SendEmailAndConfirmWithHttpInfo(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Remarks Sister method for standard sendEmail method with the benefit of returning a SentEmail entity confirming the successful sending of the email with a link to the sent object created for it. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailWithHttpInfo(Guid, SendEmailOptions, int) Send Email Declaration ApiResponse<object> SendEmailWithHttpInfo(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Send an email from an inbox's email address. The request body should contain the SendEmailOptions that include recipients, attachments, body etc. See SendEmailOptions for all available properties. Note the inboxId refers to the inbox's id not the inbox's email address. See https://www.mailslurp.com/guides/ for more information on how to send emails. This method does not return a sent email entity due to legacy reasons. To send and get a sent email as returned response use the sister method sendEmailAndConfirm. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailWithQueue(Guid, bool, SendEmailOptions, int) Send email with queue Declaration void SendEmailWithQueue(Guid inboxId, bool validateBeforeEnqueue, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from bool validateBeforeEnqueue Validate before adding to queue SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Remarks Send an email using a queue. Will place the email onto a queue that will then be processed and sent. Use this queue method to enable any failed email sending to be recovered. This will prevent lost emails when sending if your account encounters a block or payment issue. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailWithQueueWithHttpInfo(Guid, bool, SendEmailOptions, int) Send email with queue Declaration ApiResponse<object> SendEmailWithQueueWithHttpInfo(Guid inboxId, bool validateBeforeEnqueue, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from bool validateBeforeEnqueue Validate before adding to queue SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Send an email using a queue. Will place the email onto a queue that will then be processed and sent. Use this queue method to enable any failed email sending to be recovered. This will prevent lost emails when sending if your account encounters a block or payment issue. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendSmtpEnvelope(Guid, SendSMTPEnvelopeOptions, int) Send email using an SMTP mail envelope and message body and return sent confirmation Declaration SentEmailDto SendSmtpEnvelope(Guid inboxId, SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Remarks Send email using an SMTP envelope containing RCPT TO, MAIL FROM, and a SMTP BODY. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendSmtpEnvelopeWithHttpInfo(Guid, SendSMTPEnvelopeOptions, int) Send email using an SMTP mail envelope and message body and return sent confirmation Declaration ApiResponse<SentEmailDto> SendSmtpEnvelopeWithHttpInfo(Guid inboxId, SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Remarks Send email using an SMTP envelope containing RCPT TO, MAIL FROM, and a SMTP BODY. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestEmail(Guid, int) Send a test email to inbox Declaration void SendTestEmail(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Remarks Send an inbox a test email to test email receiving is working Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestEmailWithHttpInfo(Guid, int) Send a test email to inbox Declaration ApiResponse<object> SendTestEmailWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Send an inbox a test email to test email receiving is working Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendWithSchedule(Guid, SendEmailOptions, DateTime?, long?, bool?, int) Send email with with delay or schedule Declaration ScheduledJobDto SendWithSchedule(Guid inboxId, SendEmailOptions sendEmailOptions, DateTime? sendAtTimestamp = null, long? sendAtNowPlusSeconds = null, bool? validateBeforeEnqueue = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions DateTime? sendAtTimestamp Sending timestamp (optional) long? sendAtNowPlusSeconds Send after n seconds (optional) bool? validateBeforeEnqueue Validate before adding to queue (optional) int operationIndex Index associated with the operation. Returns Type Description ScheduledJobDto ScheduledJobDto Remarks Send an email using a delay. Will place the email onto a scheduler that will then be processed and sent. Use delays to schedule email sending. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendWithScheduleWithHttpInfo(Guid, SendEmailOptions, DateTime?, long?, bool?, int) Send email with with delay or schedule Declaration ApiResponse<ScheduledJobDto> SendWithScheduleWithHttpInfo(Guid inboxId, SendEmailOptions sendEmailOptions, DateTime? sendAtTimestamp = null, long? sendAtNowPlusSeconds = null, bool? validateBeforeEnqueue = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions DateTime? sendAtTimestamp Sending timestamp (optional) long? sendAtNowPlusSeconds Send after n seconds (optional) bool? validateBeforeEnqueue Validate before adding to queue (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ScheduledJobDto> ApiResponse of ScheduledJobDto Remarks Send an email using a delay. Will place the email onto a scheduler that will then be processed and sent. Use delays to schedule email sending. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SetInboxFavourited(Guid, SetInboxFavouritedOptions, int) Set inbox favourited state Declaration InboxDto SetInboxFavourited(Guid inboxId, SetInboxFavouritedOptions setInboxFavouritedOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox to set favourite state SetInboxFavouritedOptions setInboxFavouritedOptions int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Remarks Set and return new favourite state for an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source SetInboxFavouritedWithHttpInfo(Guid, SetInboxFavouritedOptions, int) Set inbox favourited state Declaration ApiResponse<InboxDto> SetInboxFavouritedWithHttpInfo(Guid inboxId, SetInboxFavouritedOptions setInboxFavouritedOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox to set favourite state SetInboxFavouritedOptions setInboxFavouritedOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Remarks Set and return new favourite state for an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInbox(Guid, UpdateInboxOptions, int) Update Inbox. Change name and description. Email address is not editable. Declaration InboxDto UpdateInbox(Guid inboxId, UpdateInboxOptions updateInboxOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId UpdateInboxOptions updateInboxOptions int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Remarks Update editable fields on an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxWithHttpInfo(Guid, UpdateInboxOptions, int) Update Inbox. Change name and description. Email address is not editable. Declaration ApiResponse<InboxDto> UpdateInboxWithHttpInfo(Guid inboxId, UpdateInboxOptions updateInboxOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId UpdateInboxOptions updateInboxOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Remarks Update editable fields on an inbox Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IInboxForwarderControllerApi.html": {
    "href": "api/mailslurp.Api.IInboxForwarderControllerApi.html",
    "title": "Interface IInboxForwarderControllerApi | MailSlurp",
    "keywords": "Interface IInboxForwarderControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IInboxForwarderControllerApiSync.CreateNewInboxForwarder(Guid, CreateInboxForwarderOptions, int) IInboxForwarderControllerApiSync.CreateNewInboxForwarderWithHttpInfo(Guid, CreateInboxForwarderOptions, int) IInboxForwarderControllerApiSync.DeleteInboxForwarder(Guid, int) IInboxForwarderControllerApiSync.DeleteInboxForwarderWithHttpInfo(Guid, int) IInboxForwarderControllerApiSync.DeleteInboxForwarders(Guid?, int) IInboxForwarderControllerApiSync.DeleteInboxForwardersWithHttpInfo(Guid?, int) IInboxForwarderControllerApiSync.GetAllInboxForwarderEvents(int?, int?, string, int) IInboxForwarderControllerApiSync.GetAllInboxForwarderEventsWithHttpInfo(int?, int?, string, int) IInboxForwarderControllerApiSync.GetForwarderEvent(Guid, int) IInboxForwarderControllerApiSync.GetForwarderEventWithHttpInfo(Guid, int) IInboxForwarderControllerApiSync.GetInboxForwarder(Guid, int) IInboxForwarderControllerApiSync.GetInboxForwarderWithHttpInfo(Guid, int) IInboxForwarderControllerApiSync.GetInboxForwarderEvent(Guid, Guid, int) IInboxForwarderControllerApiSync.GetInboxForwarderEventWithHttpInfo(Guid, Guid, int) IInboxForwarderControllerApiSync.GetInboxForwarderEvents(Guid, int?, int?, string, int) IInboxForwarderControllerApiSync.GetInboxForwarderEventsWithHttpInfo(Guid, int?, int?, string, int) IInboxForwarderControllerApiSync.GetInboxForwarders(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) IInboxForwarderControllerApiSync.GetInboxForwardersWithHttpInfo(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) IInboxForwarderControllerApiSync.TestInboxForwarder(Guid, InboxForwarderTestOptions, int) IInboxForwarderControllerApiSync.TestInboxForwarderWithHttpInfo(Guid, InboxForwarderTestOptions, int) IInboxForwarderControllerApiSync.TestInboxForwardersForInbox(Guid, InboxForwarderTestOptions, int) IInboxForwarderControllerApiSync.TestInboxForwardersForInboxWithHttpInfo(Guid, InboxForwarderTestOptions, int) IInboxForwarderControllerApiSync.TestNewInboxForwarder(TestNewInboxForwarderOptions, int) IInboxForwarderControllerApiSync.TestNewInboxForwarderWithHttpInfo(TestNewInboxForwarderOptions, int) IInboxForwarderControllerApiSync.UpdateInboxForwarder(Guid, CreateInboxForwarderOptions, int) IInboxForwarderControllerApiSync.UpdateInboxForwarderWithHttpInfo(Guid, CreateInboxForwarderOptions, int) IInboxForwarderControllerApiAsync.CreateNewInboxForwarderAsync(Guid, CreateInboxForwarderOptions, int, CancellationToken) IInboxForwarderControllerApiAsync.CreateNewInboxForwarderWithHttpInfoAsync(Guid, CreateInboxForwarderOptions, int, CancellationToken) IInboxForwarderControllerApiAsync.DeleteInboxForwarderAsync(Guid, int, CancellationToken) IInboxForwarderControllerApiAsync.DeleteInboxForwarderWithHttpInfoAsync(Guid, int, CancellationToken) IInboxForwarderControllerApiAsync.DeleteInboxForwardersAsync(Guid?, int, CancellationToken) IInboxForwarderControllerApiAsync.DeleteInboxForwardersWithHttpInfoAsync(Guid?, int, CancellationToken) IInboxForwarderControllerApiAsync.GetAllInboxForwarderEventsAsync(int?, int?, string, int, CancellationToken) IInboxForwarderControllerApiAsync.GetAllInboxForwarderEventsWithHttpInfoAsync(int?, int?, string, int, CancellationToken) IInboxForwarderControllerApiAsync.GetForwarderEventAsync(Guid, int, CancellationToken) IInboxForwarderControllerApiAsync.GetForwarderEventWithHttpInfoAsync(Guid, int, CancellationToken) IInboxForwarderControllerApiAsync.GetInboxForwarderAsync(Guid, int, CancellationToken) IInboxForwarderControllerApiAsync.GetInboxForwarderWithHttpInfoAsync(Guid, int, CancellationToken) IInboxForwarderControllerApiAsync.GetInboxForwarderEventAsync(Guid, Guid, int, CancellationToken) IInboxForwarderControllerApiAsync.GetInboxForwarderEventWithHttpInfoAsync(Guid, Guid, int, CancellationToken) IInboxForwarderControllerApiAsync.GetInboxForwarderEventsAsync(Guid, int?, int?, string, int, CancellationToken) IInboxForwarderControllerApiAsync.GetInboxForwarderEventsWithHttpInfoAsync(Guid, int?, int?, string, int, CancellationToken) IInboxForwarderControllerApiAsync.GetInboxForwardersAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IInboxForwarderControllerApiAsync.GetInboxForwardersWithHttpInfoAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IInboxForwarderControllerApiAsync.TestInboxForwarderAsync(Guid, InboxForwarderTestOptions, int, CancellationToken) IInboxForwarderControllerApiAsync.TestInboxForwarderWithHttpInfoAsync(Guid, InboxForwarderTestOptions, int, CancellationToken) IInboxForwarderControllerApiAsync.TestInboxForwardersForInboxAsync(Guid, InboxForwarderTestOptions, int, CancellationToken) IInboxForwarderControllerApiAsync.TestInboxForwardersForInboxWithHttpInfoAsync(Guid, InboxForwarderTestOptions, int, CancellationToken) IInboxForwarderControllerApiAsync.TestNewInboxForwarderAsync(TestNewInboxForwarderOptions, int, CancellationToken) IInboxForwarderControllerApiAsync.TestNewInboxForwarderWithHttpInfoAsync(TestNewInboxForwarderOptions, int, CancellationToken) IInboxForwarderControllerApiAsync.UpdateInboxForwarderAsync(Guid, CreateInboxForwarderOptions, int, CancellationToken) IInboxForwarderControllerApiAsync.UpdateInboxForwarderWithHttpInfoAsync(Guid, CreateInboxForwarderOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IInboxForwarderControllerApi : IInboxForwarderControllerApiSync, IInboxForwarderControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IInboxForwarderControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IInboxForwarderControllerApiAsync.html",
    "title": "Interface IInboxForwarderControllerApiAsync | MailSlurp",
    "keywords": "Interface IInboxForwarderControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IInboxForwarderControllerApiAsync : IApiAccessor Methods View Source CreateNewInboxForwarderAsync(Guid, CreateInboxForwarderOptions, int, CancellationToken) Create an inbox forwarder Declaration Task<InboxForwarderDto> CreateNewInboxForwarderAsync(Guid inboxId, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Inbox id to attach forwarder to CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderDto> Task of InboxForwarderDto Remarks Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxForwarderWithHttpInfoAsync(Guid, CreateInboxForwarderOptions, int, CancellationToken) Create an inbox forwarder Declaration Task<ApiResponse<InboxForwarderDto>> CreateNewInboxForwarderWithHttpInfoAsync(Guid inboxId, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Inbox id to attach forwarder to CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderDto>> Task of ApiResponse (InboxForwarderDto) Remarks Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwarderAsync(Guid, int, CancellationToken) Delete an inbox forwarder Declaration Task DeleteInboxForwarderAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Delete inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwardersAsync(Guid?, int, CancellationToken) Delete inbox forwarders Declaration Task DeleteInboxForwardersAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to attach forwarder to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Delete inbox forwarders. Accepts optional inboxId filter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwardersWithHttpInfoAsync(Guid?, int, CancellationToken) Delete inbox forwarders Declaration Task<ApiResponse<object>> DeleteInboxForwardersWithHttpInfoAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to attach forwarder to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Delete inbox forwarders. Accepts optional inboxId filter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwarderWithHttpInfoAsync(Guid, int, CancellationToken) Delete an inbox forwarder Declaration Task<ApiResponse<object>> DeleteInboxForwarderWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Delete inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxForwarderEventsAsync(int?, int?, string, int, CancellationToken) Get all inbox forwarder events Declaration Task<PageInboxForwarderEvents> GetAllInboxForwarderEventsAsync(int? page = null, int? size = null, string sort = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxForwarderEvents> Task of PageInboxForwarderEvents Remarks Get all inbox forwarder events Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxForwarderEventsWithHttpInfoAsync(int?, int?, string, int, CancellationToken) Get all inbox forwarder events Declaration Task<ApiResponse<PageInboxForwarderEvents>> GetAllInboxForwarderEventsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxForwarderEvents>> Task of ApiResponse (PageInboxForwarderEvents) Remarks Get all inbox forwarder events Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetForwarderEventAsync(Guid, int, CancellationToken) Get a forwarder event Declaration Task<InboxForwarderEventDto> GetForwarderEventAsync(Guid eventId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderEventDto> Task of InboxForwarderEventDto Remarks Get forwarder event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetForwarderEventWithHttpInfoAsync(Guid, int, CancellationToken) Get a forwarder event Declaration Task<ApiResponse<InboxForwarderEventDto>> GetForwarderEventWithHttpInfoAsync(Guid eventId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderEventDto>> Task of ApiResponse (InboxForwarderEventDto) Remarks Get forwarder event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderAsync(Guid, int, CancellationToken) Get an inbox forwarder Declaration Task<InboxForwarderDto> GetInboxForwarderAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderDto> Task of InboxForwarderDto Remarks Get inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEventAsync(Guid, Guid, int, CancellationToken) Get an inbox forwarder event Declaration Task<InboxForwarderEventDto> GetInboxForwarderEventAsync(Guid id, Guid eventId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderEventDto> Task of InboxForwarderEventDto Remarks Get inbox forwarder event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEventsAsync(Guid, int?, int?, string, int, CancellationToken) Get an inbox forwarder event list Declaration Task<PageInboxForwarderEvents> GetInboxForwarderEventsAsync(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxForwarderEvents> Task of PageInboxForwarderEvents Remarks Get inbox forwarder events Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEventsWithHttpInfoAsync(Guid, int?, int?, string, int, CancellationToken) Get an inbox forwarder event list Declaration Task<ApiResponse<PageInboxForwarderEvents>> GetInboxForwarderEventsWithHttpInfoAsync(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxForwarderEvents>> Task of ApiResponse (PageInboxForwarderEvents) Remarks Get inbox forwarder events Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEventWithHttpInfoAsync(Guid, Guid, int, CancellationToken) Get an inbox forwarder event Declaration Task<ApiResponse<InboxForwarderEventDto>> GetInboxForwarderEventWithHttpInfoAsync(Guid id, Guid eventId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderEventDto>> Task of ApiResponse (InboxForwarderEventDto) Remarks Get inbox forwarder event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwardersAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox forwarders Declaration Task<PageInboxForwarderDto> GetInboxForwardersAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to get forwarders from (optional) int? page Optional page index in inbox forwarder list pagination (optional, default to 0) int? size Optional page size in inbox forwarder list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxForwarderDto> Task of PageInboxForwarderDto Remarks List all forwarders attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwardersWithHttpInfoAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox forwarders Declaration Task<ApiResponse<PageInboxForwarderDto>> GetInboxForwardersWithHttpInfoAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to get forwarders from (optional) int? page Optional page index in inbox forwarder list pagination (optional, default to 0) int? size Optional page size in inbox forwarder list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxForwarderDto>> Task of ApiResponse (PageInboxForwarderDto) Remarks List all forwarders attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderWithHttpInfoAsync(Guid, int, CancellationToken) Get an inbox forwarder Declaration Task<ApiResponse<InboxForwarderDto>> GetInboxForwarderWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderDto>> Task of ApiResponse (InboxForwarderDto) Remarks Get inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwarderAsync(Guid, InboxForwarderTestOptions, int, CancellationToken) Test an inbox forwarder Declaration Task<InboxForwarderTestResult> TestInboxForwarderAsync(Guid id, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderTestResult> Task of InboxForwarderTestResult Remarks Test an inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwardersForInboxAsync(Guid, InboxForwarderTestOptions, int, CancellationToken) Test inbox forwarders for inbox Declaration Task<InboxForwarderTestResult> TestInboxForwardersForInboxAsync(Guid inboxId, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderTestResult> Task of InboxForwarderTestResult Remarks Test inbox forwarders for inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwardersForInboxWithHttpInfoAsync(Guid, InboxForwarderTestOptions, int, CancellationToken) Test inbox forwarders for inbox Declaration Task<ApiResponse<InboxForwarderTestResult>> TestInboxForwardersForInboxWithHttpInfoAsync(Guid inboxId, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderTestResult>> Task of ApiResponse (InboxForwarderTestResult) Remarks Test inbox forwarders for inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwarderWithHttpInfoAsync(Guid, InboxForwarderTestOptions, int, CancellationToken) Test an inbox forwarder Declaration Task<ApiResponse<InboxForwarderTestResult>> TestInboxForwarderWithHttpInfoAsync(Guid id, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderTestResult>> Task of ApiResponse (InboxForwarderTestResult) Remarks Test an inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxForwarderAsync(TestNewInboxForwarderOptions, int, CancellationToken) Test new inbox forwarder Declaration Task<InboxForwarderTestResult> TestNewInboxForwarderAsync(TestNewInboxForwarderOptions testNewInboxForwarderOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestNewInboxForwarderOptions testNewInboxForwarderOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderTestResult> Task of InboxForwarderTestResult Remarks Test new inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxForwarderWithHttpInfoAsync(TestNewInboxForwarderOptions, int, CancellationToken) Test new inbox forwarder Declaration Task<ApiResponse<InboxForwarderTestResult>> TestNewInboxForwarderWithHttpInfoAsync(TestNewInboxForwarderOptions testNewInboxForwarderOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestNewInboxForwarderOptions testNewInboxForwarderOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderTestResult>> Task of ApiResponse (InboxForwarderTestResult) Remarks Test new inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxForwarderAsync(Guid, CreateInboxForwarderOptions, int, CancellationToken) Update an inbox forwarder Declaration Task<InboxForwarderDto> UpdateInboxForwarderAsync(Guid id, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderDto> Task of InboxForwarderDto Remarks Update inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxForwarderWithHttpInfoAsync(Guid, CreateInboxForwarderOptions, int, CancellationToken) Update an inbox forwarder Declaration Task<ApiResponse<InboxForwarderDto>> UpdateInboxForwarderWithHttpInfoAsync(Guid id, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderDto>> Task of ApiResponse (InboxForwarderDto) Remarks Update inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IInboxForwarderControllerApiSync.html": {
    "href": "api/mailslurp.Api.IInboxForwarderControllerApiSync.html",
    "title": "Interface IInboxForwarderControllerApiSync | MailSlurp",
    "keywords": "Interface IInboxForwarderControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IInboxForwarderControllerApiSync : IApiAccessor Methods View Source CreateNewInboxForwarder(Guid, CreateInboxForwarderOptions, int) Create an inbox forwarder Declaration InboxForwarderDto CreateNewInboxForwarder(Guid inboxId, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId Inbox id to attach forwarder to CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. Returns Type Description InboxForwarderDto InboxForwarderDto Remarks Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxForwarderWithHttpInfo(Guid, CreateInboxForwarderOptions, int) Create an inbox forwarder Declaration ApiResponse<InboxForwarderDto> CreateNewInboxForwarderWithHttpInfo(Guid inboxId, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId Inbox id to attach forwarder to CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderDto> ApiResponse of InboxForwarderDto Remarks Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwarder(Guid, int) Delete an inbox forwarder Declaration void DeleteInboxForwarder(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. Remarks Delete inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwarders(Guid?, int) Delete inbox forwarders Declaration void DeleteInboxForwarders(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to attach forwarder to (optional) int operationIndex Index associated with the operation. Remarks Delete inbox forwarders. Accepts optional inboxId filter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwardersWithHttpInfo(Guid?, int) Delete inbox forwarders Declaration ApiResponse<object> DeleteInboxForwardersWithHttpInfo(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to attach forwarder to (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Delete inbox forwarders. Accepts optional inboxId filter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwarderWithHttpInfo(Guid, int) Delete an inbox forwarder Declaration ApiResponse<object> DeleteInboxForwarderWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Delete inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxForwarderEvents(int?, int?, string, int) Get all inbox forwarder events Declaration PageInboxForwarderEvents GetAllInboxForwarderEvents(int? page = null, int? size = null, string sort = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. Returns Type Description PageInboxForwarderEvents PageInboxForwarderEvents Remarks Get all inbox forwarder events Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxForwarderEventsWithHttpInfo(int?, int?, string, int) Get all inbox forwarder events Declaration ApiResponse<PageInboxForwarderEvents> GetAllInboxForwarderEventsWithHttpInfo(int? page = null, int? size = null, string sort = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxForwarderEvents> ApiResponse of PageInboxForwarderEvents Remarks Get all inbox forwarder events Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetForwarderEvent(Guid, int) Get a forwarder event Declaration InboxForwarderEventDto GetForwarderEvent(Guid eventId, int operationIndex = 0) Parameters Type Name Description Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. Returns Type Description InboxForwarderEventDto InboxForwarderEventDto Remarks Get forwarder event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetForwarderEventWithHttpInfo(Guid, int) Get a forwarder event Declaration ApiResponse<InboxForwarderEventDto> GetForwarderEventWithHttpInfo(Guid eventId, int operationIndex = 0) Parameters Type Name Description Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderEventDto> ApiResponse of InboxForwarderEventDto Remarks Get forwarder event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarder(Guid, int) Get an inbox forwarder Declaration InboxForwarderDto GetInboxForwarder(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. Returns Type Description InboxForwarderDto InboxForwarderDto Remarks Get inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEvent(Guid, Guid, int) Get an inbox forwarder event Declaration InboxForwarderEventDto GetInboxForwarderEvent(Guid id, Guid eventId, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. Returns Type Description InboxForwarderEventDto InboxForwarderEventDto Remarks Get inbox forwarder event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEvents(Guid, int?, int?, string, int) Get an inbox forwarder event list Declaration PageInboxForwarderEvents GetInboxForwarderEvents(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. Returns Type Description PageInboxForwarderEvents PageInboxForwarderEvents Remarks Get inbox forwarder events Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEventsWithHttpInfo(Guid, int?, int?, string, int) Get an inbox forwarder event list Declaration ApiResponse<PageInboxForwarderEvents> GetInboxForwarderEventsWithHttpInfo(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxForwarderEvents> ApiResponse of PageInboxForwarderEvents Remarks Get inbox forwarder events Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEventWithHttpInfo(Guid, Guid, int) Get an inbox forwarder event Declaration ApiResponse<InboxForwarderEventDto> GetInboxForwarderEventWithHttpInfo(Guid id, Guid eventId, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderEventDto> ApiResponse of InboxForwarderEventDto Remarks Get inbox forwarder event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarders(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) List inbox forwarders Declaration PageInboxForwarderDto GetInboxForwarders(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to get forwarders from (optional) int? page Optional page index in inbox forwarder list pagination (optional, default to 0) int? size Optional page size in inbox forwarder list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageInboxForwarderDto PageInboxForwarderDto Remarks List all forwarders attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwardersWithHttpInfo(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) List inbox forwarders Declaration ApiResponse<PageInboxForwarderDto> GetInboxForwardersWithHttpInfo(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to get forwarders from (optional) int? page Optional page index in inbox forwarder list pagination (optional, default to 0) int? size Optional page size in inbox forwarder list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxForwarderDto> ApiResponse of PageInboxForwarderDto Remarks List all forwarders attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderWithHttpInfo(Guid, int) Get an inbox forwarder Declaration ApiResponse<InboxForwarderDto> GetInboxForwarderWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderDto> ApiResponse of InboxForwarderDto Remarks Get inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwarder(Guid, InboxForwarderTestOptions, int) Test an inbox forwarder Declaration InboxForwarderTestResult TestInboxForwarder(Guid id, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. Returns Type Description InboxForwarderTestResult InboxForwarderTestResult Remarks Test an inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwardersForInbox(Guid, InboxForwarderTestOptions, int) Test inbox forwarders for inbox Declaration InboxForwarderTestResult TestInboxForwardersForInbox(Guid inboxId, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. Returns Type Description InboxForwarderTestResult InboxForwarderTestResult Remarks Test inbox forwarders for inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwardersForInboxWithHttpInfo(Guid, InboxForwarderTestOptions, int) Test inbox forwarders for inbox Declaration ApiResponse<InboxForwarderTestResult> TestInboxForwardersForInboxWithHttpInfo(Guid inboxId, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderTestResult> ApiResponse of InboxForwarderTestResult Remarks Test inbox forwarders for inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwarderWithHttpInfo(Guid, InboxForwarderTestOptions, int) Test an inbox forwarder Declaration ApiResponse<InboxForwarderTestResult> TestInboxForwarderWithHttpInfo(Guid id, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderTestResult> ApiResponse of InboxForwarderTestResult Remarks Test an inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxForwarder(TestNewInboxForwarderOptions, int) Test new inbox forwarder Declaration InboxForwarderTestResult TestNewInboxForwarder(TestNewInboxForwarderOptions testNewInboxForwarderOptions, int operationIndex = 0) Parameters Type Name Description TestNewInboxForwarderOptions testNewInboxForwarderOptions int operationIndex Index associated with the operation. Returns Type Description InboxForwarderTestResult InboxForwarderTestResult Remarks Test new inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxForwarderWithHttpInfo(TestNewInboxForwarderOptions, int) Test new inbox forwarder Declaration ApiResponse<InboxForwarderTestResult> TestNewInboxForwarderWithHttpInfo(TestNewInboxForwarderOptions testNewInboxForwarderOptions, int operationIndex = 0) Parameters Type Name Description TestNewInboxForwarderOptions testNewInboxForwarderOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderTestResult> ApiResponse of InboxForwarderTestResult Remarks Test new inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxForwarder(Guid, CreateInboxForwarderOptions, int) Update an inbox forwarder Declaration InboxForwarderDto UpdateInboxForwarder(Guid id, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. Returns Type Description InboxForwarderDto InboxForwarderDto Remarks Update inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxForwarderWithHttpInfo(Guid, CreateInboxForwarderOptions, int) Update an inbox forwarder Declaration ApiResponse<InboxForwarderDto> UpdateInboxForwarderWithHttpInfo(Guid id, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderDto> ApiResponse of InboxForwarderDto Remarks Update inbox forwarder Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IInboxReplierControllerApi.html": {
    "href": "api/mailslurp.Api.IInboxReplierControllerApi.html",
    "title": "Interface IInboxReplierControllerApi | MailSlurp",
    "keywords": "Interface IInboxReplierControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IInboxReplierControllerApiSync.CreateNewInboxReplier(CreateInboxReplierOptions, int) IInboxReplierControllerApiSync.CreateNewInboxReplierWithHttpInfo(CreateInboxReplierOptions, int) IInboxReplierControllerApiSync.DeleteInboxReplier(Guid, int) IInboxReplierControllerApiSync.DeleteInboxReplierWithHttpInfo(Guid, int) IInboxReplierControllerApiSync.DeleteInboxRepliers(Guid?, int) IInboxReplierControllerApiSync.DeleteInboxRepliersWithHttpInfo(Guid?, int) IInboxReplierControllerApiSync.GetInboxReplier(Guid, int) IInboxReplierControllerApiSync.GetInboxReplierWithHttpInfo(Guid, int) IInboxReplierControllerApiSync.GetInboxReplierEvents(Guid, int?, int?, string, int) IInboxReplierControllerApiSync.GetInboxReplierEventsWithHttpInfo(Guid, int?, int?, string, int) IInboxReplierControllerApiSync.GetInboxRepliers(Guid?, int?, int?, string, DateTime?, DateTime?, int) IInboxReplierControllerApiSync.GetInboxRepliersWithHttpInfo(Guid?, int?, int?, string, DateTime?, DateTime?, int) IInboxReplierControllerApiSync.UpdateInboxReplier(Guid, UpdateInboxReplierOptions, int) IInboxReplierControllerApiSync.UpdateInboxReplierWithHttpInfo(Guid, UpdateInboxReplierOptions, int) IInboxReplierControllerApiAsync.CreateNewInboxReplierAsync(CreateInboxReplierOptions, int, CancellationToken) IInboxReplierControllerApiAsync.CreateNewInboxReplierWithHttpInfoAsync(CreateInboxReplierOptions, int, CancellationToken) IInboxReplierControllerApiAsync.DeleteInboxReplierAsync(Guid, int, CancellationToken) IInboxReplierControllerApiAsync.DeleteInboxReplierWithHttpInfoAsync(Guid, int, CancellationToken) IInboxReplierControllerApiAsync.DeleteInboxRepliersAsync(Guid?, int, CancellationToken) IInboxReplierControllerApiAsync.DeleteInboxRepliersWithHttpInfoAsync(Guid?, int, CancellationToken) IInboxReplierControllerApiAsync.GetInboxReplierAsync(Guid, int, CancellationToken) IInboxReplierControllerApiAsync.GetInboxReplierWithHttpInfoAsync(Guid, int, CancellationToken) IInboxReplierControllerApiAsync.GetInboxReplierEventsAsync(Guid, int?, int?, string, int, CancellationToken) IInboxReplierControllerApiAsync.GetInboxReplierEventsWithHttpInfoAsync(Guid, int?, int?, string, int, CancellationToken) IInboxReplierControllerApiAsync.GetInboxRepliersAsync(Guid?, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IInboxReplierControllerApiAsync.GetInboxRepliersWithHttpInfoAsync(Guid?, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IInboxReplierControllerApiAsync.UpdateInboxReplierAsync(Guid, UpdateInboxReplierOptions, int, CancellationToken) IInboxReplierControllerApiAsync.UpdateInboxReplierWithHttpInfoAsync(Guid, UpdateInboxReplierOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IInboxReplierControllerApi : IInboxReplierControllerApiSync, IInboxReplierControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IInboxReplierControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IInboxReplierControllerApiAsync.html",
    "title": "Interface IInboxReplierControllerApiAsync | MailSlurp",
    "keywords": "Interface IInboxReplierControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IInboxReplierControllerApiAsync : IApiAccessor Methods View Source CreateNewInboxReplierAsync(CreateInboxReplierOptions, int, CancellationToken) Create an inbox replier Declaration Task<InboxReplierDto> CreateNewInboxReplierAsync(CreateInboxReplierOptions createInboxReplierOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateInboxReplierOptions createInboxReplierOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxReplierDto> Task of InboxReplierDto Remarks Create a new inbox rule for reply toing, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxReplierWithHttpInfoAsync(CreateInboxReplierOptions, int, CancellationToken) Create an inbox replier Declaration Task<ApiResponse<InboxReplierDto>> CreateNewInboxReplierWithHttpInfoAsync(CreateInboxReplierOptions createInboxReplierOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateInboxReplierOptions createInboxReplierOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxReplierDto>> Task of ApiResponse (InboxReplierDto) Remarks Create a new inbox rule for reply toing, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxReplierAsync(Guid, int, CancellationToken) Delete an inbox replier Declaration Task DeleteInboxReplierAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Delete inbox replier Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRepliersAsync(Guid?, int, CancellationToken) Delete inbox repliers Declaration Task DeleteInboxRepliersAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to attach replier to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Delete inbox repliers. Accepts optional inboxId filter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRepliersWithHttpInfoAsync(Guid?, int, CancellationToken) Delete inbox repliers Declaration Task<ApiResponse<object>> DeleteInboxRepliersWithHttpInfoAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to attach replier to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Delete inbox repliers. Accepts optional inboxId filter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxReplierWithHttpInfoAsync(Guid, int, CancellationToken) Delete an inbox replier Declaration Task<ApiResponse<object>> DeleteInboxReplierWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Delete inbox replier Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierAsync(Guid, int, CancellationToken) Get an inbox replier Declaration Task<InboxReplierDto> GetInboxReplierAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxReplierDto> Task of InboxReplierDto Remarks Get inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierEventsAsync(Guid, int?, int?, string, int, CancellationToken) Get an inbox replier event list Declaration Task<PageInboxReplierEvents> GetInboxReplierEventsAsync(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier int? page Optional page index in inbox replier event list pagination (optional, default to 0) int? size Optional page size in inbox replier event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxReplierEvents> Task of PageInboxReplierEvents Remarks Get inbox ruleset events Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierEventsWithHttpInfoAsync(Guid, int?, int?, string, int, CancellationToken) Get an inbox replier event list Declaration Task<ApiResponse<PageInboxReplierEvents>> GetInboxReplierEventsWithHttpInfoAsync(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier int? page Optional page index in inbox replier event list pagination (optional, default to 0) int? size Optional page size in inbox replier event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxReplierEvents>> Task of ApiResponse (PageInboxReplierEvents) Remarks Get inbox ruleset events Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRepliersAsync(Guid?, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) List inbox repliers Declaration Task<PageInboxReplierDto> GetInboxRepliersAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to get repliers from (optional) int? page Optional page index in inbox replier list pagination (optional, default to 0) int? size Optional page size in inbox replier list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxReplierDto> Task of PageInboxReplierDto Remarks List all repliers attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRepliersWithHttpInfoAsync(Guid?, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) List inbox repliers Declaration Task<ApiResponse<PageInboxReplierDto>> GetInboxRepliersWithHttpInfoAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to get repliers from (optional) int? page Optional page index in inbox replier list pagination (optional, default to 0) int? size Optional page size in inbox replier list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxReplierDto>> Task of ApiResponse (PageInboxReplierDto) Remarks List all repliers attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierWithHttpInfoAsync(Guid, int, CancellationToken) Get an inbox replier Declaration Task<ApiResponse<InboxReplierDto>> GetInboxReplierWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxReplierDto>> Task of ApiResponse (InboxReplierDto) Remarks Get inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxReplierAsync(Guid, UpdateInboxReplierOptions, int, CancellationToken) Update an inbox replier Declaration Task<InboxReplierDto> UpdateInboxReplierAsync(Guid id, UpdateInboxReplierOptions updateInboxReplierOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier UpdateInboxReplierOptions updateInboxReplierOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxReplierDto> Task of InboxReplierDto Remarks Update inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxReplierWithHttpInfoAsync(Guid, UpdateInboxReplierOptions, int, CancellationToken) Update an inbox replier Declaration Task<ApiResponse<InboxReplierDto>> UpdateInboxReplierWithHttpInfoAsync(Guid id, UpdateInboxReplierOptions updateInboxReplierOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier UpdateInboxReplierOptions updateInboxReplierOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxReplierDto>> Task of ApiResponse (InboxReplierDto) Remarks Update inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IInboxReplierControllerApiSync.html": {
    "href": "api/mailslurp.Api.IInboxReplierControllerApiSync.html",
    "title": "Interface IInboxReplierControllerApiSync | MailSlurp",
    "keywords": "Interface IInboxReplierControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IInboxReplierControllerApiSync : IApiAccessor Methods View Source CreateNewInboxReplier(CreateInboxReplierOptions, int) Create an inbox replier Declaration InboxReplierDto CreateNewInboxReplier(CreateInboxReplierOptions createInboxReplierOptions, int operationIndex = 0) Parameters Type Name Description CreateInboxReplierOptions createInboxReplierOptions int operationIndex Index associated with the operation. Returns Type Description InboxReplierDto InboxReplierDto Remarks Create a new inbox rule for reply toing, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxReplierWithHttpInfo(CreateInboxReplierOptions, int) Create an inbox replier Declaration ApiResponse<InboxReplierDto> CreateNewInboxReplierWithHttpInfo(CreateInboxReplierOptions createInboxReplierOptions, int operationIndex = 0) Parameters Type Name Description CreateInboxReplierOptions createInboxReplierOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxReplierDto> ApiResponse of InboxReplierDto Remarks Create a new inbox rule for reply toing, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxReplier(Guid, int) Delete an inbox replier Declaration void DeleteInboxReplier(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. Remarks Delete inbox replier Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRepliers(Guid?, int) Delete inbox repliers Declaration void DeleteInboxRepliers(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to attach replier to (optional) int operationIndex Index associated with the operation. Remarks Delete inbox repliers. Accepts optional inboxId filter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRepliersWithHttpInfo(Guid?, int) Delete inbox repliers Declaration ApiResponse<object> DeleteInboxRepliersWithHttpInfo(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to attach replier to (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Delete inbox repliers. Accepts optional inboxId filter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxReplierWithHttpInfo(Guid, int) Delete an inbox replier Declaration ApiResponse<object> DeleteInboxReplierWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Delete inbox replier Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplier(Guid, int) Get an inbox replier Declaration InboxReplierDto GetInboxReplier(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. Returns Type Description InboxReplierDto InboxReplierDto Remarks Get inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierEvents(Guid, int?, int?, string, int) Get an inbox replier event list Declaration PageInboxReplierEvents GetInboxReplierEvents(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier int? page Optional page index in inbox replier event list pagination (optional, default to 0) int? size Optional page size in inbox replier event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. Returns Type Description PageInboxReplierEvents PageInboxReplierEvents Remarks Get inbox ruleset events Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierEventsWithHttpInfo(Guid, int?, int?, string, int) Get an inbox replier event list Declaration ApiResponse<PageInboxReplierEvents> GetInboxReplierEventsWithHttpInfo(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier int? page Optional page index in inbox replier event list pagination (optional, default to 0) int? size Optional page size in inbox replier event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxReplierEvents> ApiResponse of PageInboxReplierEvents Remarks Get inbox ruleset events Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRepliers(Guid?, int?, int?, string, DateTime?, DateTime?, int) List inbox repliers Declaration PageInboxReplierDto GetInboxRepliers(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to get repliers from (optional) int? page Optional page index in inbox replier list pagination (optional, default to 0) int? size Optional page size in inbox replier list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageInboxReplierDto PageInboxReplierDto Remarks List all repliers attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRepliersWithHttpInfo(Guid?, int?, int?, string, DateTime?, DateTime?, int) List inbox repliers Declaration ApiResponse<PageInboxReplierDto> GetInboxRepliersWithHttpInfo(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to get repliers from (optional) int? page Optional page index in inbox replier list pagination (optional, default to 0) int? size Optional page size in inbox replier list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxReplierDto> ApiResponse of PageInboxReplierDto Remarks List all repliers attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierWithHttpInfo(Guid, int) Get an inbox replier Declaration ApiResponse<InboxReplierDto> GetInboxReplierWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxReplierDto> ApiResponse of InboxReplierDto Remarks Get inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxReplier(Guid, UpdateInboxReplierOptions, int) Update an inbox replier Declaration InboxReplierDto UpdateInboxReplier(Guid id, UpdateInboxReplierOptions updateInboxReplierOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier UpdateInboxReplierOptions updateInboxReplierOptions int operationIndex Index associated with the operation. Returns Type Description InboxReplierDto InboxReplierDto Remarks Update inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxReplierWithHttpInfo(Guid, UpdateInboxReplierOptions, int) Update an inbox replier Declaration ApiResponse<InboxReplierDto> UpdateInboxReplierWithHttpInfo(Guid id, UpdateInboxReplierOptions updateInboxReplierOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier UpdateInboxReplierOptions updateInboxReplierOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxReplierDto> ApiResponse of InboxReplierDto Remarks Update inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IInboxRulesetControllerApi.html": {
    "href": "api/mailslurp.Api.IInboxRulesetControllerApi.html",
    "title": "Interface IInboxRulesetControllerApi | MailSlurp",
    "keywords": "Interface IInboxRulesetControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IInboxRulesetControllerApiSync.CreateNewInboxRuleset(CreateInboxRulesetOptions, Guid?, int) IInboxRulesetControllerApiSync.CreateNewInboxRulesetWithHttpInfo(CreateInboxRulesetOptions, Guid?, int) IInboxRulesetControllerApiSync.DeleteInboxRuleset(Guid, int) IInboxRulesetControllerApiSync.DeleteInboxRulesetWithHttpInfo(Guid, int) IInboxRulesetControllerApiSync.DeleteInboxRulesets(Guid?, int) IInboxRulesetControllerApiSync.DeleteInboxRulesetsWithHttpInfo(Guid?, int) IInboxRulesetControllerApiSync.GetInboxRuleset(Guid, int) IInboxRulesetControllerApiSync.GetInboxRulesetWithHttpInfo(Guid, int) IInboxRulesetControllerApiSync.GetInboxRulesets(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) IInboxRulesetControllerApiSync.GetInboxRulesetsWithHttpInfo(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) IInboxRulesetControllerApiSync.TestInboxRuleset(Guid, InboxRulesetTestOptions, int) IInboxRulesetControllerApiSync.TestInboxRulesetWithHttpInfo(Guid, InboxRulesetTestOptions, int) IInboxRulesetControllerApiSync.TestInboxRulesetReceiving(TestInboxRulesetReceivingOptions, int) IInboxRulesetControllerApiSync.TestInboxRulesetReceivingWithHttpInfo(TestInboxRulesetReceivingOptions, int) IInboxRulesetControllerApiSync.TestInboxRulesetSending(TestInboxRulesetSendingOptions, int) IInboxRulesetControllerApiSync.TestInboxRulesetSendingWithHttpInfo(TestInboxRulesetSendingOptions, int) IInboxRulesetControllerApiSync.TestInboxRulesetsForInbox(Guid, InboxRulesetTestOptions, int) IInboxRulesetControllerApiSync.TestInboxRulesetsForInboxWithHttpInfo(Guid, InboxRulesetTestOptions, int) IInboxRulesetControllerApiSync.TestNewInboxRuleset(TestNewInboxRulesetOptions, int) IInboxRulesetControllerApiSync.TestNewInboxRulesetWithHttpInfo(TestNewInboxRulesetOptions, int) IInboxRulesetControllerApiAsync.CreateNewInboxRulesetAsync(CreateInboxRulesetOptions, Guid?, int, CancellationToken) IInboxRulesetControllerApiAsync.CreateNewInboxRulesetWithHttpInfoAsync(CreateInboxRulesetOptions, Guid?, int, CancellationToken) IInboxRulesetControllerApiAsync.DeleteInboxRulesetAsync(Guid, int, CancellationToken) IInboxRulesetControllerApiAsync.DeleteInboxRulesetWithHttpInfoAsync(Guid, int, CancellationToken) IInboxRulesetControllerApiAsync.DeleteInboxRulesetsAsync(Guid?, int, CancellationToken) IInboxRulesetControllerApiAsync.DeleteInboxRulesetsWithHttpInfoAsync(Guid?, int, CancellationToken) IInboxRulesetControllerApiAsync.GetInboxRulesetAsync(Guid, int, CancellationToken) IInboxRulesetControllerApiAsync.GetInboxRulesetWithHttpInfoAsync(Guid, int, CancellationToken) IInboxRulesetControllerApiAsync.GetInboxRulesetsAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IInboxRulesetControllerApiAsync.GetInboxRulesetsWithHttpInfoAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IInboxRulesetControllerApiAsync.TestInboxRulesetAsync(Guid, InboxRulesetTestOptions, int, CancellationToken) IInboxRulesetControllerApiAsync.TestInboxRulesetWithHttpInfoAsync(Guid, InboxRulesetTestOptions, int, CancellationToken) IInboxRulesetControllerApiAsync.TestInboxRulesetReceivingAsync(TestInboxRulesetReceivingOptions, int, CancellationToken) IInboxRulesetControllerApiAsync.TestInboxRulesetReceivingWithHttpInfoAsync(TestInboxRulesetReceivingOptions, int, CancellationToken) IInboxRulesetControllerApiAsync.TestInboxRulesetSendingAsync(TestInboxRulesetSendingOptions, int, CancellationToken) IInboxRulesetControllerApiAsync.TestInboxRulesetSendingWithHttpInfoAsync(TestInboxRulesetSendingOptions, int, CancellationToken) IInboxRulesetControllerApiAsync.TestInboxRulesetsForInboxAsync(Guid, InboxRulesetTestOptions, int, CancellationToken) IInboxRulesetControllerApiAsync.TestInboxRulesetsForInboxWithHttpInfoAsync(Guid, InboxRulesetTestOptions, int, CancellationToken) IInboxRulesetControllerApiAsync.TestNewInboxRulesetAsync(TestNewInboxRulesetOptions, int, CancellationToken) IInboxRulesetControllerApiAsync.TestNewInboxRulesetWithHttpInfoAsync(TestNewInboxRulesetOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IInboxRulesetControllerApi : IInboxRulesetControllerApiSync, IInboxRulesetControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IInboxRulesetControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IInboxRulesetControllerApiAsync.html",
    "title": "Interface IInboxRulesetControllerApiAsync | MailSlurp",
    "keywords": "Interface IInboxRulesetControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IInboxRulesetControllerApiAsync : IApiAccessor Methods View Source CreateNewInboxRulesetAsync(CreateInboxRulesetOptions, Guid?, int, CancellationToken) Create an inbox ruleset Declaration Task<InboxRulesetDto> CreateNewInboxRulesetAsync(CreateInboxRulesetOptions createInboxRulesetOptions, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateInboxRulesetOptions createInboxRulesetOptions Guid? inboxId Inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxRulesetDto> Task of InboxRulesetDto Remarks Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxRulesetWithHttpInfoAsync(CreateInboxRulesetOptions, Guid?, int, CancellationToken) Create an inbox ruleset Declaration Task<ApiResponse<InboxRulesetDto>> CreateNewInboxRulesetWithHttpInfoAsync(CreateInboxRulesetOptions createInboxRulesetOptions, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateInboxRulesetOptions createInboxRulesetOptions Guid? inboxId Inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxRulesetDto>> Task of ApiResponse (InboxRulesetDto) Remarks Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesetAsync(Guid, int, CancellationToken) Delete an inbox ruleset Declaration Task DeleteInboxRulesetAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Delete inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesetsAsync(Guid?, int, CancellationToken) Delete inbox rulesets Declaration Task DeleteInboxRulesetsAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Delete inbox rulesets. Accepts optional inboxId filter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesetsWithHttpInfoAsync(Guid?, int, CancellationToken) Delete inbox rulesets Declaration Task<ApiResponse<object>> DeleteInboxRulesetsWithHttpInfoAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Delete inbox rulesets. Accepts optional inboxId filter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesetWithHttpInfoAsync(Guid, int, CancellationToken) Delete an inbox ruleset Declaration Task<ApiResponse<object>> DeleteInboxRulesetWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Delete inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesetAsync(Guid, int, CancellationToken) Get an inbox ruleset Declaration Task<InboxRulesetDto> GetInboxRulesetAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxRulesetDto> Task of InboxRulesetDto Remarks Get inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesetsAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox rulesets Declaration Task<PageInboxRulesetDto> GetInboxRulesetsAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to get rulesets from (optional) int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxRulesetDto> Task of PageInboxRulesetDto Remarks List all rulesets attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesetsWithHttpInfoAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox rulesets Declaration Task<ApiResponse<PageInboxRulesetDto>> GetInboxRulesetsWithHttpInfoAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to get rulesets from (optional) int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxRulesetDto>> Task of ApiResponse (PageInboxRulesetDto) Remarks List all rulesets attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesetWithHttpInfoAsync(Guid, int, CancellationToken) Get an inbox ruleset Declaration Task<ApiResponse<InboxRulesetDto>> GetInboxRulesetWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxRulesetDto>> Task of ApiResponse (InboxRulesetDto) Remarks Get inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetAsync(Guid, InboxRulesetTestOptions, int, CancellationToken) Test an inbox ruleset Declaration Task<InboxRulesetTestResult> TestInboxRulesetAsync(Guid id, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox ruleset InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxRulesetTestResult> Task of InboxRulesetTestResult Remarks Test an inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetReceivingAsync(TestInboxRulesetReceivingOptions, int, CancellationToken) Test receiving with inbox rulesets Declaration Task<TestInboxRulesetReceivingResult> TestInboxRulesetReceivingAsync(TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TestInboxRulesetReceivingResult> Task of TestInboxRulesetReceivingResult Remarks Test whether inbound emails from an email address would be blocked or allowed by inbox rulesets Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetReceivingWithHttpInfoAsync(TestInboxRulesetReceivingOptions, int, CancellationToken) Test receiving with inbox rulesets Declaration Task<ApiResponse<TestInboxRulesetReceivingResult>> TestInboxRulesetReceivingWithHttpInfoAsync(TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TestInboxRulesetReceivingResult>> Task of ApiResponse (TestInboxRulesetReceivingResult) Remarks Test whether inbound emails from an email address would be blocked or allowed by inbox rulesets Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetSendingAsync(TestInboxRulesetSendingOptions, int, CancellationToken) Test sending with inbox rulesets Declaration Task<TestInboxRulesetSendingResult> TestInboxRulesetSendingAsync(TestInboxRulesetSendingOptions testInboxRulesetSendingOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestInboxRulesetSendingOptions testInboxRulesetSendingOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TestInboxRulesetSendingResult> Task of TestInboxRulesetSendingResult Remarks Test whether outbound emails to an email address would be blocked or allowed by inbox rulesets Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetSendingWithHttpInfoAsync(TestInboxRulesetSendingOptions, int, CancellationToken) Test sending with inbox rulesets Declaration Task<ApiResponse<TestInboxRulesetSendingResult>> TestInboxRulesetSendingWithHttpInfoAsync(TestInboxRulesetSendingOptions testInboxRulesetSendingOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestInboxRulesetSendingOptions testInboxRulesetSendingOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TestInboxRulesetSendingResult>> Task of ApiResponse (TestInboxRulesetSendingResult) Remarks Test whether outbound emails to an email address would be blocked or allowed by inbox rulesets Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetsForInboxAsync(Guid, InboxRulesetTestOptions, int, CancellationToken) Test inbox rulesets for inbox Declaration Task<InboxRulesetTestResult> TestInboxRulesetsForInboxAsync(Guid inboxId, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxRulesetTestResult> Task of InboxRulesetTestResult Remarks Test inbox rulesets for inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetsForInboxWithHttpInfoAsync(Guid, InboxRulesetTestOptions, int, CancellationToken) Test inbox rulesets for inbox Declaration Task<ApiResponse<InboxRulesetTestResult>> TestInboxRulesetsForInboxWithHttpInfoAsync(Guid inboxId, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxRulesetTestResult>> Task of ApiResponse (InboxRulesetTestResult) Remarks Test inbox rulesets for inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetWithHttpInfoAsync(Guid, InboxRulesetTestOptions, int, CancellationToken) Test an inbox ruleset Declaration Task<ApiResponse<InboxRulesetTestResult>> TestInboxRulesetWithHttpInfoAsync(Guid id, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox ruleset InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxRulesetTestResult>> Task of ApiResponse (InboxRulesetTestResult) Remarks Test an inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxRulesetAsync(TestNewInboxRulesetOptions, int, CancellationToken) Test new inbox ruleset Declaration Task<InboxRulesetTestResult> TestNewInboxRulesetAsync(TestNewInboxRulesetOptions testNewInboxRulesetOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestNewInboxRulesetOptions testNewInboxRulesetOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxRulesetTestResult> Task of InboxRulesetTestResult Remarks Test new inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxRulesetWithHttpInfoAsync(TestNewInboxRulesetOptions, int, CancellationToken) Test new inbox ruleset Declaration Task<ApiResponse<InboxRulesetTestResult>> TestNewInboxRulesetWithHttpInfoAsync(TestNewInboxRulesetOptions testNewInboxRulesetOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestNewInboxRulesetOptions testNewInboxRulesetOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxRulesetTestResult>> Task of ApiResponse (InboxRulesetTestResult) Remarks Test new inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IInboxRulesetControllerApiSync.html": {
    "href": "api/mailslurp.Api.IInboxRulesetControllerApiSync.html",
    "title": "Interface IInboxRulesetControllerApiSync | MailSlurp",
    "keywords": "Interface IInboxRulesetControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IInboxRulesetControllerApiSync : IApiAccessor Methods View Source CreateNewInboxRuleset(CreateInboxRulesetOptions, Guid?, int) Create an inbox ruleset Declaration InboxRulesetDto CreateNewInboxRuleset(CreateInboxRulesetOptions createInboxRulesetOptions, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description CreateInboxRulesetOptions createInboxRulesetOptions Guid? inboxId Inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. Returns Type Description InboxRulesetDto InboxRulesetDto Remarks Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxRulesetWithHttpInfo(CreateInboxRulesetOptions, Guid?, int) Create an inbox ruleset Declaration ApiResponse<InboxRulesetDto> CreateNewInboxRulesetWithHttpInfo(CreateInboxRulesetOptions createInboxRulesetOptions, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description CreateInboxRulesetOptions createInboxRulesetOptions Guid? inboxId Inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxRulesetDto> ApiResponse of InboxRulesetDto Remarks Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRuleset(Guid, int) Delete an inbox ruleset Declaration void DeleteInboxRuleset(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. Remarks Delete inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesets(Guid?, int) Delete inbox rulesets Declaration void DeleteInboxRulesets(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. Remarks Delete inbox rulesets. Accepts optional inboxId filter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesetsWithHttpInfo(Guid?, int) Delete inbox rulesets Declaration ApiResponse<object> DeleteInboxRulesetsWithHttpInfo(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Delete inbox rulesets. Accepts optional inboxId filter. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesetWithHttpInfo(Guid, int) Delete an inbox ruleset Declaration ApiResponse<object> DeleteInboxRulesetWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Delete inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRuleset(Guid, int) Get an inbox ruleset Declaration InboxRulesetDto GetInboxRuleset(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. Returns Type Description InboxRulesetDto InboxRulesetDto Remarks Get inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesets(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) List inbox rulesets Declaration PageInboxRulesetDto GetInboxRulesets(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to get rulesets from (optional) int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageInboxRulesetDto PageInboxRulesetDto Remarks List all rulesets attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesetsWithHttpInfo(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) List inbox rulesets Declaration ApiResponse<PageInboxRulesetDto> GetInboxRulesetsWithHttpInfo(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to get rulesets from (optional) int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxRulesetDto> ApiResponse of PageInboxRulesetDto Remarks List all rulesets attached to an inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesetWithHttpInfo(Guid, int) Get an inbox ruleset Declaration ApiResponse<InboxRulesetDto> GetInboxRulesetWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxRulesetDto> ApiResponse of InboxRulesetDto Remarks Get inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRuleset(Guid, InboxRulesetTestOptions, int) Test an inbox ruleset Declaration InboxRulesetTestResult TestInboxRuleset(Guid id, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox ruleset InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. Returns Type Description InboxRulesetTestResult InboxRulesetTestResult Remarks Test an inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetReceiving(TestInboxRulesetReceivingOptions, int) Test receiving with inbox rulesets Declaration TestInboxRulesetReceivingResult TestInboxRulesetReceiving(TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions, int operationIndex = 0) Parameters Type Name Description TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions int operationIndex Index associated with the operation. Returns Type Description TestInboxRulesetReceivingResult TestInboxRulesetReceivingResult Remarks Test whether inbound emails from an email address would be blocked or allowed by inbox rulesets Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetReceivingWithHttpInfo(TestInboxRulesetReceivingOptions, int) Test receiving with inbox rulesets Declaration ApiResponse<TestInboxRulesetReceivingResult> TestInboxRulesetReceivingWithHttpInfo(TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions, int operationIndex = 0) Parameters Type Name Description TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TestInboxRulesetReceivingResult> ApiResponse of TestInboxRulesetReceivingResult Remarks Test whether inbound emails from an email address would be blocked or allowed by inbox rulesets Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetSending(TestInboxRulesetSendingOptions, int) Test sending with inbox rulesets Declaration TestInboxRulesetSendingResult TestInboxRulesetSending(TestInboxRulesetSendingOptions testInboxRulesetSendingOptions, int operationIndex = 0) Parameters Type Name Description TestInboxRulesetSendingOptions testInboxRulesetSendingOptions int operationIndex Index associated with the operation. Returns Type Description TestInboxRulesetSendingResult TestInboxRulesetSendingResult Remarks Test whether outbound emails to an email address would be blocked or allowed by inbox rulesets Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetSendingWithHttpInfo(TestInboxRulesetSendingOptions, int) Test sending with inbox rulesets Declaration ApiResponse<TestInboxRulesetSendingResult> TestInboxRulesetSendingWithHttpInfo(TestInboxRulesetSendingOptions testInboxRulesetSendingOptions, int operationIndex = 0) Parameters Type Name Description TestInboxRulesetSendingOptions testInboxRulesetSendingOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TestInboxRulesetSendingResult> ApiResponse of TestInboxRulesetSendingResult Remarks Test whether outbound emails to an email address would be blocked or allowed by inbox rulesets Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetsForInbox(Guid, InboxRulesetTestOptions, int) Test inbox rulesets for inbox Declaration InboxRulesetTestResult TestInboxRulesetsForInbox(Guid inboxId, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. Returns Type Description InboxRulesetTestResult InboxRulesetTestResult Remarks Test inbox rulesets for inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetsForInboxWithHttpInfo(Guid, InboxRulesetTestOptions, int) Test inbox rulesets for inbox Declaration ApiResponse<InboxRulesetTestResult> TestInboxRulesetsForInboxWithHttpInfo(Guid inboxId, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxRulesetTestResult> ApiResponse of InboxRulesetTestResult Remarks Test inbox rulesets for inbox Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetWithHttpInfo(Guid, InboxRulesetTestOptions, int) Test an inbox ruleset Declaration ApiResponse<InboxRulesetTestResult> TestInboxRulesetWithHttpInfo(Guid id, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox ruleset InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxRulesetTestResult> ApiResponse of InboxRulesetTestResult Remarks Test an inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxRuleset(TestNewInboxRulesetOptions, int) Test new inbox ruleset Declaration InboxRulesetTestResult TestNewInboxRuleset(TestNewInboxRulesetOptions testNewInboxRulesetOptions, int operationIndex = 0) Parameters Type Name Description TestNewInboxRulesetOptions testNewInboxRulesetOptions int operationIndex Index associated with the operation. Returns Type Description InboxRulesetTestResult InboxRulesetTestResult Remarks Test new inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxRulesetWithHttpInfo(TestNewInboxRulesetOptions, int) Test new inbox ruleset Declaration ApiResponse<InboxRulesetTestResult> TestNewInboxRulesetWithHttpInfo(TestNewInboxRulesetOptions testNewInboxRulesetOptions, int operationIndex = 0) Parameters Type Name Description TestNewInboxRulesetOptions testNewInboxRulesetOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxRulesetTestResult> ApiResponse of InboxRulesetTestResult Remarks Test new inbox ruleset Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IMailServerControllerApi.html": {
    "href": "api/mailslurp.Api.IMailServerControllerApi.html",
    "title": "Interface IMailServerControllerApi | MailSlurp",
    "keywords": "Interface IMailServerControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IMailServerControllerApiSync.DescribeMailServerDomain(DescribeDomainOptions, int) IMailServerControllerApiSync.DescribeMailServerDomainWithHttpInfo(DescribeDomainOptions, int) IMailServerControllerApiSync.GetDnsLookup(DNSLookupOptions, int) IMailServerControllerApiSync.GetDnsLookupWithHttpInfo(DNSLookupOptions, int) IMailServerControllerApiSync.GetIpAddress(string, int) IMailServerControllerApiSync.GetIpAddressWithHttpInfo(string, int) IMailServerControllerApiSync.VerifyEmailAddress(VerifyEmailAddressOptions, int) IMailServerControllerApiSync.VerifyEmailAddressWithHttpInfo(VerifyEmailAddressOptions, int) IMailServerControllerApiAsync.DescribeMailServerDomainAsync(DescribeDomainOptions, int, CancellationToken) IMailServerControllerApiAsync.DescribeMailServerDomainWithHttpInfoAsync(DescribeDomainOptions, int, CancellationToken) IMailServerControllerApiAsync.GetDnsLookupAsync(DNSLookupOptions, int, CancellationToken) IMailServerControllerApiAsync.GetDnsLookupWithHttpInfoAsync(DNSLookupOptions, int, CancellationToken) IMailServerControllerApiAsync.GetIpAddressAsync(string, int, CancellationToken) IMailServerControllerApiAsync.GetIpAddressWithHttpInfoAsync(string, int, CancellationToken) IMailServerControllerApiAsync.VerifyEmailAddressAsync(VerifyEmailAddressOptions, int, CancellationToken) IMailServerControllerApiAsync.VerifyEmailAddressWithHttpInfoAsync(VerifyEmailAddressOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IMailServerControllerApi : IMailServerControllerApiSync, IMailServerControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IMailServerControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IMailServerControllerApiAsync.html",
    "title": "Interface IMailServerControllerApiAsync | MailSlurp",
    "keywords": "Interface IMailServerControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IMailServerControllerApiAsync : IApiAccessor Methods View Source DescribeMailServerDomainAsync(DescribeDomainOptions, int, CancellationToken) Get DNS Mail Server records for a domain Declaration Task<DescribeMailServerDomainResult> DescribeMailServerDomainAsync(DescribeDomainOptions describeDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DescribeDomainOptions describeDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DescribeMailServerDomainResult> Task of DescribeMailServerDomainResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source DescribeMailServerDomainWithHttpInfoAsync(DescribeDomainOptions, int, CancellationToken) Get DNS Mail Server records for a domain Declaration Task<ApiResponse<DescribeMailServerDomainResult>> DescribeMailServerDomainWithHttpInfoAsync(DescribeDomainOptions describeDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DescribeDomainOptions describeDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DescribeMailServerDomainResult>> Task of ApiResponse (DescribeMailServerDomainResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDnsLookupAsync(DNSLookupOptions, int, CancellationToken) Lookup DNS records for a domain Declaration Task<DNSLookupResults> GetDnsLookupAsync(DNSLookupOptions dNSLookupOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DNSLookupOptions dNSLookupOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DNSLookupResults> Task of DNSLookupResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDnsLookupWithHttpInfoAsync(DNSLookupOptions, int, CancellationToken) Lookup DNS records for a domain Declaration Task<ApiResponse<DNSLookupResults>> GetDnsLookupWithHttpInfoAsync(DNSLookupOptions dNSLookupOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DNSLookupOptions dNSLookupOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DNSLookupResults>> Task of ApiResponse (DNSLookupResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetIpAddressAsync(string, int, CancellationToken) Get IP address for a domain Declaration Task<IPAddressResult> GetIpAddressAsync(string name, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string name int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<IPAddressResult> Task of IPAddressResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetIpAddressWithHttpInfoAsync(string, int, CancellationToken) Get IP address for a domain Declaration Task<ApiResponse<IPAddressResult>> GetIpAddressWithHttpInfoAsync(string name, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string name int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<IPAddressResult>> Task of ApiResponse (IPAddressResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyEmailAddressAsync(VerifyEmailAddressOptions, int, CancellationToken) Deprecated. Use the EmailVerificationController methods for more accurate and reliable functionality. Verify the existence of an email address at a given mail server. Declaration [Obsolete] Task<EmailVerificationResult> VerifyEmailAddressAsync(VerifyEmailAddressOptions verifyEmailAddressOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description VerifyEmailAddressOptions verifyEmailAddressOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailVerificationResult> Task of EmailVerificationResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyEmailAddressWithHttpInfoAsync(VerifyEmailAddressOptions, int, CancellationToken) Deprecated. Use the EmailVerificationController methods for more accurate and reliable functionality. Verify the existence of an email address at a given mail server. Declaration [Obsolete] Task<ApiResponse<EmailVerificationResult>> VerifyEmailAddressWithHttpInfoAsync(VerifyEmailAddressOptions verifyEmailAddressOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description VerifyEmailAddressOptions verifyEmailAddressOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailVerificationResult>> Task of ApiResponse (EmailVerificationResult) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IMailServerControllerApiSync.html": {
    "href": "api/mailslurp.Api.IMailServerControllerApiSync.html",
    "title": "Interface IMailServerControllerApiSync | MailSlurp",
    "keywords": "Interface IMailServerControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IMailServerControllerApiSync : IApiAccessor Methods View Source DescribeMailServerDomain(DescribeDomainOptions, int) Get DNS Mail Server records for a domain Declaration DescribeMailServerDomainResult DescribeMailServerDomain(DescribeDomainOptions describeDomainOptions, int operationIndex = 0) Parameters Type Name Description DescribeDomainOptions describeDomainOptions int operationIndex Index associated with the operation. Returns Type Description DescribeMailServerDomainResult DescribeMailServerDomainResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source DescribeMailServerDomainWithHttpInfo(DescribeDomainOptions, int) Get DNS Mail Server records for a domain Declaration ApiResponse<DescribeMailServerDomainResult> DescribeMailServerDomainWithHttpInfo(DescribeDomainOptions describeDomainOptions, int operationIndex = 0) Parameters Type Name Description DescribeDomainOptions describeDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DescribeMailServerDomainResult> ApiResponse of DescribeMailServerDomainResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDnsLookup(DNSLookupOptions, int) Lookup DNS records for a domain Declaration DNSLookupResults GetDnsLookup(DNSLookupOptions dNSLookupOptions, int operationIndex = 0) Parameters Type Name Description DNSLookupOptions dNSLookupOptions int operationIndex Index associated with the operation. Returns Type Description DNSLookupResults DNSLookupResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDnsLookupWithHttpInfo(DNSLookupOptions, int) Lookup DNS records for a domain Declaration ApiResponse<DNSLookupResults> GetDnsLookupWithHttpInfo(DNSLookupOptions dNSLookupOptions, int operationIndex = 0) Parameters Type Name Description DNSLookupOptions dNSLookupOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DNSLookupResults> ApiResponse of DNSLookupResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetIpAddress(string, int) Get IP address for a domain Declaration IPAddressResult GetIpAddress(string name, int operationIndex = 0) Parameters Type Name Description string name int operationIndex Index associated with the operation. Returns Type Description IPAddressResult IPAddressResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetIpAddressWithHttpInfo(string, int) Get IP address for a domain Declaration ApiResponse<IPAddressResult> GetIpAddressWithHttpInfo(string name, int operationIndex = 0) Parameters Type Name Description string name int operationIndex Index associated with the operation. Returns Type Description ApiResponse<IPAddressResult> ApiResponse of IPAddressResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyEmailAddress(VerifyEmailAddressOptions, int) Deprecated. Use the EmailVerificationController methods for more accurate and reliable functionality. Verify the existence of an email address at a given mail server. Declaration [Obsolete] EmailVerificationResult VerifyEmailAddress(VerifyEmailAddressOptions verifyEmailAddressOptions, int operationIndex = 0) Parameters Type Name Description VerifyEmailAddressOptions verifyEmailAddressOptions int operationIndex Index associated with the operation. Returns Type Description EmailVerificationResult EmailVerificationResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyEmailAddressWithHttpInfo(VerifyEmailAddressOptions, int) Deprecated. Use the EmailVerificationController methods for more accurate and reliable functionality. Verify the existence of an email address at a given mail server. Declaration [Obsolete] ApiResponse<EmailVerificationResult> VerifyEmailAddressWithHttpInfo(VerifyEmailAddressOptions verifyEmailAddressOptions, int operationIndex = 0) Parameters Type Name Description VerifyEmailAddressOptions verifyEmailAddressOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailVerificationResult> ApiResponse of EmailVerificationResult Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IMissedEmailControllerApi.html": {
    "href": "api/mailslurp.Api.IMissedEmailControllerApi.html",
    "title": "Interface IMissedEmailControllerApi | MailSlurp",
    "keywords": "Interface IMissedEmailControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IMissedEmailControllerApiSync.GetAllMissedEmails(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) IMissedEmailControllerApiSync.GetAllMissedEmailsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) IMissedEmailControllerApiSync.GetAllUnknownMissedEmails(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) IMissedEmailControllerApiSync.GetAllUnknownMissedEmailsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) IMissedEmailControllerApiSync.GetMissedEmail(Guid, int) IMissedEmailControllerApiSync.GetMissedEmailWithHttpInfo(Guid, int) IMissedEmailControllerApiSync.RestoreMissedEmails(int) IMissedEmailControllerApiSync.RestoreMissedEmailsWithHttpInfo(int) IMissedEmailControllerApiSync.WaitForNthMissedEmail(int, Guid?, long?, DateTime?, DateTime?, int) IMissedEmailControllerApiSync.WaitForNthMissedEmailWithHttpInfo(int, Guid?, long?, DateTime?, DateTime?, int) IMissedEmailControllerApiAsync.GetAllMissedEmailsAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) IMissedEmailControllerApiAsync.GetAllMissedEmailsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) IMissedEmailControllerApiAsync.GetAllUnknownMissedEmailsAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) IMissedEmailControllerApiAsync.GetAllUnknownMissedEmailsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) IMissedEmailControllerApiAsync.GetMissedEmailAsync(Guid, int, CancellationToken) IMissedEmailControllerApiAsync.GetMissedEmailWithHttpInfoAsync(Guid, int, CancellationToken) IMissedEmailControllerApiAsync.RestoreMissedEmailsAsync(int, CancellationToken) IMissedEmailControllerApiAsync.RestoreMissedEmailsWithHttpInfoAsync(int, CancellationToken) IMissedEmailControllerApiAsync.WaitForNthMissedEmailAsync(int, Guid?, long?, DateTime?, DateTime?, int, CancellationToken) IMissedEmailControllerApiAsync.WaitForNthMissedEmailWithHttpInfoAsync(int, Guid?, long?, DateTime?, DateTime?, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IMissedEmailControllerApi : IMissedEmailControllerApiSync, IMissedEmailControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IMissedEmailControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IMissedEmailControllerApiAsync.html",
    "title": "Interface IMissedEmailControllerApiAsync | MailSlurp",
    "keywords": "Interface IMissedEmailControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IMissedEmailControllerApiAsync : IApiAccessor Methods View Source GetAllMissedEmailsAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) Get all MissedEmails in paginated format Declaration Task<PageMissedEmailProjection> GetAllMissedEmailsAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageMissedEmailProjection> Task of PageMissedEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllMissedEmailsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) Get all MissedEmails in paginated format Declaration Task<ApiResponse<PageMissedEmailProjection>> GetAllMissedEmailsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageMissedEmailProjection>> Task of ApiResponse (PageMissedEmailProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllUnknownMissedEmailsAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) Get all unknown missed emails in paginated format Declaration Task<PageUnknownMissedEmailProjection> GetAllUnknownMissedEmailsAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageUnknownMissedEmailProjection> Task of PageUnknownMissedEmailProjection Remarks Unknown missed emails are emails that were sent to MailSlurp but could not be assigned to an existing inbox. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllUnknownMissedEmailsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) Get all unknown missed emails in paginated format Declaration Task<ApiResponse<PageUnknownMissedEmailProjection>> GetAllUnknownMissedEmailsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageUnknownMissedEmailProjection>> Task of ApiResponse (PageUnknownMissedEmailProjection) Remarks Unknown missed emails are emails that were sent to MailSlurp but could not be assigned to an existing inbox. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetMissedEmailAsync(Guid, int, CancellationToken) Get MissedEmail Declaration Task<MissedEmailDto> GetMissedEmailAsync(Guid missedEmailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid missedEmailId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<MissedEmailDto> Task of MissedEmailDto Remarks List emails that were missed due to plan limits. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetMissedEmailWithHttpInfoAsync(Guid, int, CancellationToken) Get MissedEmail Declaration Task<ApiResponse<MissedEmailDto>> GetMissedEmailWithHttpInfoAsync(Guid missedEmailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid missedEmailId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<MissedEmailDto>> Task of ApiResponse (MissedEmailDto) Remarks List emails that were missed due to plan limits. Exceptions Type Condition ApiException Thrown when fails to make API call View Source RestoreMissedEmailsAsync(int, CancellationToken) Restore missed emails Declaration Task RestoreMissedEmailsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks If emails were missed due to a plan limit they are saved as missed emails. If support team enables the canRestore flag these emails can be reload into your account using this method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source RestoreMissedEmailsWithHttpInfoAsync(int, CancellationToken) Restore missed emails Declaration Task<ApiResponse<object>> RestoreMissedEmailsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks If emails were missed due to a plan limit they are saved as missed emails. If support team enables the canRestore flag these emails can be reload into your account using this method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthMissedEmailAsync(int, Guid?, long?, DateTime?, DateTime?, int, CancellationToken) Wait for Nth missed email Declaration Task<MissedEmailDto> WaitForNthMissedEmailAsync(int index, Guid? inboxId = null, long? timeout = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int index Zero based index of the email to wait for. If 1 missed email already and you want to wait for the 2nd email pass index=1 Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<MissedEmailDto> Task of MissedEmailDto Remarks Wait for 0 based index missed email Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthMissedEmailWithHttpInfoAsync(int, Guid?, long?, DateTime?, DateTime?, int, CancellationToken) Wait for Nth missed email Declaration Task<ApiResponse<MissedEmailDto>> WaitForNthMissedEmailWithHttpInfoAsync(int index, Guid? inboxId = null, long? timeout = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int index Zero based index of the email to wait for. If 1 missed email already and you want to wait for the 2nd email pass index=1 Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<MissedEmailDto>> Task of ApiResponse (MissedEmailDto) Remarks Wait for 0 based index missed email Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IMissedEmailControllerApiSync.html": {
    "href": "api/mailslurp.Api.IMissedEmailControllerApiSync.html",
    "title": "Interface IMissedEmailControllerApiSync | MailSlurp",
    "keywords": "Interface IMissedEmailControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IMissedEmailControllerApiSync : IApiAccessor Methods View Source GetAllMissedEmails(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) Get all MissedEmails in paginated format Declaration PageMissedEmailProjection GetAllMissedEmails(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description PageMissedEmailProjection PageMissedEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllMissedEmailsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) Get all MissedEmails in paginated format Declaration ApiResponse<PageMissedEmailProjection> GetAllMissedEmailsWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageMissedEmailProjection> ApiResponse of PageMissedEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllUnknownMissedEmails(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) Get all unknown missed emails in paginated format Declaration PageUnknownMissedEmailProjection GetAllUnknownMissedEmails(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description PageUnknownMissedEmailProjection PageUnknownMissedEmailProjection Remarks Unknown missed emails are emails that were sent to MailSlurp but could not be assigned to an existing inbox. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllUnknownMissedEmailsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) Get all unknown missed emails in paginated format Declaration ApiResponse<PageUnknownMissedEmailProjection> GetAllUnknownMissedEmailsWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageUnknownMissedEmailProjection> ApiResponse of PageUnknownMissedEmailProjection Remarks Unknown missed emails are emails that were sent to MailSlurp but could not be assigned to an existing inbox. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetMissedEmail(Guid, int) Get MissedEmail Declaration MissedEmailDto GetMissedEmail(Guid missedEmailId, int operationIndex = 0) Parameters Type Name Description Guid missedEmailId int operationIndex Index associated with the operation. Returns Type Description MissedEmailDto MissedEmailDto Remarks List emails that were missed due to plan limits. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetMissedEmailWithHttpInfo(Guid, int) Get MissedEmail Declaration ApiResponse<MissedEmailDto> GetMissedEmailWithHttpInfo(Guid missedEmailId, int operationIndex = 0) Parameters Type Name Description Guid missedEmailId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<MissedEmailDto> ApiResponse of MissedEmailDto Remarks List emails that were missed due to plan limits. Exceptions Type Condition ApiException Thrown when fails to make API call View Source RestoreMissedEmails(int) Restore missed emails Declaration void RestoreMissedEmails(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Remarks If emails were missed due to a plan limit they are saved as missed emails. If support team enables the canRestore flag these emails can be reload into your account using this method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source RestoreMissedEmailsWithHttpInfo(int) Restore missed emails Declaration ApiResponse<object> RestoreMissedEmailsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks If emails were missed due to a plan limit they are saved as missed emails. If support team enables the canRestore flag these emails can be reload into your account using this method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthMissedEmail(int, Guid?, long?, DateTime?, DateTime?, int) Wait for Nth missed email Declaration MissedEmailDto WaitForNthMissedEmail(int index, Guid? inboxId = null, long? timeout = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int index Zero based index of the email to wait for. If 1 missed email already and you want to wait for the 2nd email pass index=1 Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description MissedEmailDto MissedEmailDto Remarks Wait for 0 based index missed email Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthMissedEmailWithHttpInfo(int, Guid?, long?, DateTime?, DateTime?, int) Wait for Nth missed email Declaration ApiResponse<MissedEmailDto> WaitForNthMissedEmailWithHttpInfo(int index, Guid? inboxId = null, long? timeout = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int index Zero based index of the email to wait for. If 1 missed email already and you want to wait for the 2nd email pass index=1 Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<MissedEmailDto> ApiResponse of MissedEmailDto Remarks Wait for 0 based index missed email Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.InboxControllerApi.html": {
    "href": "api/mailslurp.Api.InboxControllerApi.html",
    "title": "Class InboxControllerApi | MailSlurp",
    "keywords": "Class InboxControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object InboxControllerApi Implements IInboxControllerApi IInboxControllerApiSync IInboxControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class InboxControllerApi : IInboxControllerApi, IInboxControllerApiSync, IInboxControllerApiAsync, IApiAccessor Constructors View Source InboxControllerApi() Initializes a new instance of the InboxControllerApi class. Declaration public InboxControllerApi() View Source InboxControllerApi(Configuration) Initializes a new instance of the InboxControllerApi class using Configuration object Declaration public InboxControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source InboxControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the InboxControllerApi class using a Configuration object and client instance. Declaration public InboxControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source InboxControllerApi(string) Initializes a new instance of the InboxControllerApi class. Declaration public InboxControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CancelScheduledJob(Guid, int) Cancel a scheduled email job Get a scheduled email job and cancel it. Will fail if status of job is already cancelled, failed, or complete. Declaration public ScheduledJobDto CancelScheduledJob(Guid jobId, int operationIndex = 0) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. Returns Type Description ScheduledJobDto ScheduledJobDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CancelScheduledJobAsync(Guid, int, CancellationToken) Cancel a scheduled email job Get a scheduled email job and cancel it. Will fail if status of job is already cancelled, failed, or complete. Declaration public Task<ScheduledJobDto> CancelScheduledJobAsync(Guid jobId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ScheduledJobDto> Task of ScheduledJobDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CancelScheduledJobWithHttpInfo(Guid, int) Cancel a scheduled email job Get a scheduled email job and cancel it. Will fail if status of job is already cancelled, failed, or complete. Declaration public ApiResponse<ScheduledJobDto> CancelScheduledJobWithHttpInfo(Guid jobId, int operationIndex = 0) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ScheduledJobDto> ApiResponse of ScheduledJobDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CancelScheduledJobWithHttpInfoAsync(Guid, int, CancellationToken) Cancel a scheduled email job Get a scheduled email job and cancel it. Will fail if status of job is already cancelled, failed, or complete. Declaration public Task<ApiResponse<ScheduledJobDto>> CancelScheduledJobWithHttpInfoAsync(Guid jobId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ScheduledJobDto>> Task of ApiResponse (ScheduledJobDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInbox(string, List<string>, string, string, bool?, bool?, DateTime?, long?, bool?, string, bool?, bool?, Guid?, string, string, int) Create an inbox email address. An inbox has a real email address and can send and receive emails. Inboxes can be either SMTP or HTTP inboxes. Create a new inbox and with a randomized email address to send and receive from. Pass emailAddress parameter if you wish to use a specific email address. Creating an inbox is required before sending or receiving emails. If writing tests it is recommended that you create a new inbox during each test method so that it is unique and empty. Declaration public InboxDto CreateInbox(string emailAddress = null, List<string> tags = null, string name = null, string description = null, bool? useDomainPool = null, bool? favourite = null, DateTime? expiresAt = null, long? expiresIn = null, bool? allowTeamAccess = null, string inboxType = null, bool? virtualInbox = null, bool? useShortAddress = null, Guid? domainId = null, string domainName = null, string prefix = null, int operationIndex = 0) Parameters Type Name Description string emailAddress A custom email address to use with the inbox. Defaults to null. When null MailSlurp will assign a random email address to the inbox such as 123@mailslurp.com. If you use the useDomainPool option when the email address is null it will generate an email address with a more varied domain ending such as 123@mailslurp.info or 123@mailslurp.biz. When a custom email address is provided the address is split into a domain and the domain is queried against your user. If you have created the domain in the MailSlurp dashboard and verified it you can use any email address that ends with the domain. Note domain types must match the inbox type - so SMTP inboxes will only work with SMTP type domains. Avoid SMTP inboxes if you need to send emails as they can only receive. Send an email to this address and the inbox will receive and store it for you. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. (optional) List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. (optional) string name Optional name of the inbox. Displayed in the dashboard for easier search and used as the sender name when sending emails. (optional) string description Optional description of the inbox for labelling purposes. Is shown in the dashboard and can be used with (optional) bool? useDomainPool Use the MailSlurp domain name pool with this inbox when creating the email address. Defaults to null. If enabled the inbox will be an email address with a domain randomly chosen from a list of the MailSlurp domains. This is useful when the default @mailslurp.com email addresses used with inboxes are blocked or considered spam by a provider or receiving service. When domain pool is enabled an email address will be generated ending in @mailslurp.{world,info,xyz,...} . This means a TLD is randomly selecting from a list of .biz, .info, .xyz etc to add variance to the generated email addresses. When null or false MailSlurp uses the default behavior of @mailslurp.com or custom email address provided by the emailAddress field. Note this feature is only available for HTTP inbox types. (optional) bool? favourite Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering (optional) DateTime? expiresAt Optional inbox expiration date. If null then this inbox is permanent and the emails in it won't be deleted. If an expiration date is provided or is required by your plan the inbox will be closed when the expiration time is reached. Expired inboxes still contain their emails but can no longer send or receive emails. An ExpiredInboxRecord is created when an inbox and the email address and inbox ID are recorded. The expiresAt property is a timestamp string in ISO DateTime Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX. (optional) long? expiresIn Number of milliseconds that inbox should exist for (optional) bool? allowTeamAccess DEPRECATED (team access is always true). Grant team access to this inbox and the emails that belong to it for team members of your organization. (optional) string inboxType HTTP (default) or SMTP inbox type. HTTP inboxes are default and best solution for most cases. SMTP inboxes are more reliable for public inbound email consumption (but do not support sending emails). When using custom domains the domain type must match the inbox type. HTTP inboxes are processed by AWS SES while SMTP inboxes use a custom mail server running at mx.mailslurp.com. (optional) bool? virtualInbox Virtual inbox prevents any outbound emails from being sent. It creates sent email records but will never send real emails to recipients. Great for testing and faking email sending. (optional) bool? useShortAddress Use a shorter email address under 31 characters (optional) Guid? domainId ID of custom domain to use for email address. (optional) string domainName FQDN domain name for the domain you have verified. Will be appended with a randomly assigned recipient name. Use the emailAddress option instead to specify the full custom inbox. (optional) string prefix Prefix to add before the email address for easier labelling or identification. (optional) int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxAsync(string, List<string>, string, string, bool?, bool?, DateTime?, long?, bool?, string, bool?, bool?, Guid?, string, string, int, CancellationToken) Create an inbox email address. An inbox has a real email address and can send and receive emails. Inboxes can be either SMTP or HTTP inboxes. Create a new inbox and with a randomized email address to send and receive from. Pass emailAddress parameter if you wish to use a specific email address. Creating an inbox is required before sending or receiving emails. If writing tests it is recommended that you create a new inbox during each test method so that it is unique and empty. Declaration public Task<InboxDto> CreateInboxAsync(string emailAddress = null, List<string> tags = null, string name = null, string description = null, bool? useDomainPool = null, bool? favourite = null, DateTime? expiresAt = null, long? expiresIn = null, bool? allowTeamAccess = null, string inboxType = null, bool? virtualInbox = null, bool? useShortAddress = null, Guid? domainId = null, string domainName = null, string prefix = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress A custom email address to use with the inbox. Defaults to null. When null MailSlurp will assign a random email address to the inbox such as 123@mailslurp.com. If you use the useDomainPool option when the email address is null it will generate an email address with a more varied domain ending such as 123@mailslurp.info or 123@mailslurp.biz. When a custom email address is provided the address is split into a domain and the domain is queried against your user. If you have created the domain in the MailSlurp dashboard and verified it you can use any email address that ends with the domain. Note domain types must match the inbox type - so SMTP inboxes will only work with SMTP type domains. Avoid SMTP inboxes if you need to send emails as they can only receive. Send an email to this address and the inbox will receive and store it for you. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. (optional) List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. (optional) string name Optional name of the inbox. Displayed in the dashboard for easier search and used as the sender name when sending emails. (optional) string description Optional description of the inbox for labelling purposes. Is shown in the dashboard and can be used with (optional) bool? useDomainPool Use the MailSlurp domain name pool with this inbox when creating the email address. Defaults to null. If enabled the inbox will be an email address with a domain randomly chosen from a list of the MailSlurp domains. This is useful when the default @mailslurp.com email addresses used with inboxes are blocked or considered spam by a provider or receiving service. When domain pool is enabled an email address will be generated ending in @mailslurp.{world,info,xyz,...} . This means a TLD is randomly selecting from a list of .biz, .info, .xyz etc to add variance to the generated email addresses. When null or false MailSlurp uses the default behavior of @mailslurp.com or custom email address provided by the emailAddress field. Note this feature is only available for HTTP inbox types. (optional) bool? favourite Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering (optional) DateTime? expiresAt Optional inbox expiration date. If null then this inbox is permanent and the emails in it won't be deleted. If an expiration date is provided or is required by your plan the inbox will be closed when the expiration time is reached. Expired inboxes still contain their emails but can no longer send or receive emails. An ExpiredInboxRecord is created when an inbox and the email address and inbox ID are recorded. The expiresAt property is a timestamp string in ISO DateTime Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX. (optional) long? expiresIn Number of milliseconds that inbox should exist for (optional) bool? allowTeamAccess DEPRECATED (team access is always true). Grant team access to this inbox and the emails that belong to it for team members of your organization. (optional) string inboxType HTTP (default) or SMTP inbox type. HTTP inboxes are default and best solution for most cases. SMTP inboxes are more reliable for public inbound email consumption (but do not support sending emails). When using custom domains the domain type must match the inbox type. HTTP inboxes are processed by AWS SES while SMTP inboxes use a custom mail server running at mx.mailslurp.com. (optional) bool? virtualInbox Virtual inbox prevents any outbound emails from being sent. It creates sent email records but will never send real emails to recipients. Great for testing and faking email sending. (optional) bool? useShortAddress Use a shorter email address under 31 characters (optional) Guid? domainId ID of custom domain to use for email address. (optional) string domainName FQDN domain name for the domain you have verified. Will be appended with a randomly assigned recipient name. Use the emailAddress option instead to specify the full custom inbox. (optional) string prefix Prefix to add before the email address for easier labelling or identification. (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxRuleset(Guid, CreateInboxRulesetOptions, int) Create an inbox ruleset Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Declaration public InboxRulesetDto CreateInboxRuleset(Guid inboxId, CreateInboxRulesetOptions createInboxRulesetOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId inboxId CreateInboxRulesetOptions createInboxRulesetOptions int operationIndex Index associated with the operation. Returns Type Description InboxRulesetDto InboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxRulesetAsync(Guid, CreateInboxRulesetOptions, int, CancellationToken) Create an inbox ruleset Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Declaration public Task<InboxRulesetDto> CreateInboxRulesetAsync(Guid inboxId, CreateInboxRulesetOptions createInboxRulesetOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId inboxId CreateInboxRulesetOptions createInboxRulesetOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxRulesetDto> Task of InboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxRulesetWithHttpInfo(Guid, CreateInboxRulesetOptions, int) Create an inbox ruleset Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Declaration public ApiResponse<InboxRulesetDto> CreateInboxRulesetWithHttpInfo(Guid inboxId, CreateInboxRulesetOptions createInboxRulesetOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId inboxId CreateInboxRulesetOptions createInboxRulesetOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxRulesetDto> ApiResponse of InboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxRulesetWithHttpInfoAsync(Guid, CreateInboxRulesetOptions, int, CancellationToken) Create an inbox ruleset Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Declaration public Task<ApiResponse<InboxRulesetDto>> CreateInboxRulesetWithHttpInfoAsync(Guid inboxId, CreateInboxRulesetOptions createInboxRulesetOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId inboxId CreateInboxRulesetOptions createInboxRulesetOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxRulesetDto>> Task of ApiResponse (InboxRulesetDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithDefaults(int) Create an inbox with default options. Uses MailSlurp domain pool address and is private. Declaration public InboxDto CreateInboxWithDefaults(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithDefaultsAsync(int, CancellationToken) Create an inbox with default options. Uses MailSlurp domain pool address and is private. Declaration public Task<InboxDto> CreateInboxWithDefaultsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithDefaultsWithHttpInfo(int) Create an inbox with default options. Uses MailSlurp domain pool address and is private. Declaration public ApiResponse<InboxDto> CreateInboxWithDefaultsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithDefaultsWithHttpInfoAsync(int, CancellationToken) Create an inbox with default options. Uses MailSlurp domain pool address and is private. Declaration public Task<ApiResponse<InboxDto>> CreateInboxWithDefaultsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithHttpInfo(string, List<string>, string, string, bool?, bool?, DateTime?, long?, bool?, string, bool?, bool?, Guid?, string, string, int) Create an inbox email address. An inbox has a real email address and can send and receive emails. Inboxes can be either SMTP or HTTP inboxes. Create a new inbox and with a randomized email address to send and receive from. Pass emailAddress parameter if you wish to use a specific email address. Creating an inbox is required before sending or receiving emails. If writing tests it is recommended that you create a new inbox during each test method so that it is unique and empty. Declaration public ApiResponse<InboxDto> CreateInboxWithHttpInfo(string emailAddress = null, List<string> tags = null, string name = null, string description = null, bool? useDomainPool = null, bool? favourite = null, DateTime? expiresAt = null, long? expiresIn = null, bool? allowTeamAccess = null, string inboxType = null, bool? virtualInbox = null, bool? useShortAddress = null, Guid? domainId = null, string domainName = null, string prefix = null, int operationIndex = 0) Parameters Type Name Description string emailAddress A custom email address to use with the inbox. Defaults to null. When null MailSlurp will assign a random email address to the inbox such as 123@mailslurp.com. If you use the useDomainPool option when the email address is null it will generate an email address with a more varied domain ending such as 123@mailslurp.info or 123@mailslurp.biz. When a custom email address is provided the address is split into a domain and the domain is queried against your user. If you have created the domain in the MailSlurp dashboard and verified it you can use any email address that ends with the domain. Note domain types must match the inbox type - so SMTP inboxes will only work with SMTP type domains. Avoid SMTP inboxes if you need to send emails as they can only receive. Send an email to this address and the inbox will receive and store it for you. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. (optional) List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. (optional) string name Optional name of the inbox. Displayed in the dashboard for easier search and used as the sender name when sending emails. (optional) string description Optional description of the inbox for labelling purposes. Is shown in the dashboard and can be used with (optional) bool? useDomainPool Use the MailSlurp domain name pool with this inbox when creating the email address. Defaults to null. If enabled the inbox will be an email address with a domain randomly chosen from a list of the MailSlurp domains. This is useful when the default @mailslurp.com email addresses used with inboxes are blocked or considered spam by a provider or receiving service. When domain pool is enabled an email address will be generated ending in @mailslurp.{world,info,xyz,...} . This means a TLD is randomly selecting from a list of .biz, .info, .xyz etc to add variance to the generated email addresses. When null or false MailSlurp uses the default behavior of @mailslurp.com or custom email address provided by the emailAddress field. Note this feature is only available for HTTP inbox types. (optional) bool? favourite Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering (optional) DateTime? expiresAt Optional inbox expiration date. If null then this inbox is permanent and the emails in it won't be deleted. If an expiration date is provided or is required by your plan the inbox will be closed when the expiration time is reached. Expired inboxes still contain their emails but can no longer send or receive emails. An ExpiredInboxRecord is created when an inbox and the email address and inbox ID are recorded. The expiresAt property is a timestamp string in ISO DateTime Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX. (optional) long? expiresIn Number of milliseconds that inbox should exist for (optional) bool? allowTeamAccess DEPRECATED (team access is always true). Grant team access to this inbox and the emails that belong to it for team members of your organization. (optional) string inboxType HTTP (default) or SMTP inbox type. HTTP inboxes are default and best solution for most cases. SMTP inboxes are more reliable for public inbound email consumption (but do not support sending emails). When using custom domains the domain type must match the inbox type. HTTP inboxes are processed by AWS SES while SMTP inboxes use a custom mail server running at mx.mailslurp.com. (optional) bool? virtualInbox Virtual inbox prevents any outbound emails from being sent. It creates sent email records but will never send real emails to recipients. Great for testing and faking email sending. (optional) bool? useShortAddress Use a shorter email address under 31 characters (optional) Guid? domainId ID of custom domain to use for email address. (optional) string domainName FQDN domain name for the domain you have verified. Will be appended with a randomly assigned recipient name. Use the emailAddress option instead to specify the full custom inbox. (optional) string prefix Prefix to add before the email address for easier labelling or identification. (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithHttpInfoAsync(string, List<string>, string, string, bool?, bool?, DateTime?, long?, bool?, string, bool?, bool?, Guid?, string, string, int, CancellationToken) Create an inbox email address. An inbox has a real email address and can send and receive emails. Inboxes can be either SMTP or HTTP inboxes. Create a new inbox and with a randomized email address to send and receive from. Pass emailAddress parameter if you wish to use a specific email address. Creating an inbox is required before sending or receiving emails. If writing tests it is recommended that you create a new inbox during each test method so that it is unique and empty. Declaration public Task<ApiResponse<InboxDto>> CreateInboxWithHttpInfoAsync(string emailAddress = null, List<string> tags = null, string name = null, string description = null, bool? useDomainPool = null, bool? favourite = null, DateTime? expiresAt = null, long? expiresIn = null, bool? allowTeamAccess = null, string inboxType = null, bool? virtualInbox = null, bool? useShortAddress = null, Guid? domainId = null, string domainName = null, string prefix = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress A custom email address to use with the inbox. Defaults to null. When null MailSlurp will assign a random email address to the inbox such as 123@mailslurp.com. If you use the useDomainPool option when the email address is null it will generate an email address with a more varied domain ending such as 123@mailslurp.info or 123@mailslurp.biz. When a custom email address is provided the address is split into a domain and the domain is queried against your user. If you have created the domain in the MailSlurp dashboard and verified it you can use any email address that ends with the domain. Note domain types must match the inbox type - so SMTP inboxes will only work with SMTP type domains. Avoid SMTP inboxes if you need to send emails as they can only receive. Send an email to this address and the inbox will receive and store it for you. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. (optional) List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. (optional) string name Optional name of the inbox. Displayed in the dashboard for easier search and used as the sender name when sending emails. (optional) string description Optional description of the inbox for labelling purposes. Is shown in the dashboard and can be used with (optional) bool? useDomainPool Use the MailSlurp domain name pool with this inbox when creating the email address. Defaults to null. If enabled the inbox will be an email address with a domain randomly chosen from a list of the MailSlurp domains. This is useful when the default @mailslurp.com email addresses used with inboxes are blocked or considered spam by a provider or receiving service. When domain pool is enabled an email address will be generated ending in @mailslurp.{world,info,xyz,...} . This means a TLD is randomly selecting from a list of .biz, .info, .xyz etc to add variance to the generated email addresses. When null or false MailSlurp uses the default behavior of @mailslurp.com or custom email address provided by the emailAddress field. Note this feature is only available for HTTP inbox types. (optional) bool? favourite Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering (optional) DateTime? expiresAt Optional inbox expiration date. If null then this inbox is permanent and the emails in it won't be deleted. If an expiration date is provided or is required by your plan the inbox will be closed when the expiration time is reached. Expired inboxes still contain their emails but can no longer send or receive emails. An ExpiredInboxRecord is created when an inbox and the email address and inbox ID are recorded. The expiresAt property is a timestamp string in ISO DateTime Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX. (optional) long? expiresIn Number of milliseconds that inbox should exist for (optional) bool? allowTeamAccess DEPRECATED (team access is always true). Grant team access to this inbox and the emails that belong to it for team members of your organization. (optional) string inboxType HTTP (default) or SMTP inbox type. HTTP inboxes are default and best solution for most cases. SMTP inboxes are more reliable for public inbound email consumption (but do not support sending emails). When using custom domains the domain type must match the inbox type. HTTP inboxes are processed by AWS SES while SMTP inboxes use a custom mail server running at mx.mailslurp.com. (optional) bool? virtualInbox Virtual inbox prevents any outbound emails from being sent. It creates sent email records but will never send real emails to recipients. Great for testing and faking email sending. (optional) bool? useShortAddress Use a shorter email address under 31 characters (optional) Guid? domainId ID of custom domain to use for email address. (optional) string domainName FQDN domain name for the domain you have verified. Will be appended with a randomly assigned recipient name. Use the emailAddress option instead to specify the full custom inbox. (optional) string prefix Prefix to add before the email address for easier labelling or identification. (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithOptions(CreateInboxDto, int) Create an inbox with options. Extended options for inbox creation. Additional endpoint that allows inbox creation with request body options. Can be more flexible that other methods for some clients. Declaration public InboxDto CreateInboxWithOptions(CreateInboxDto createInboxDto, int operationIndex = 0) Parameters Type Name Description CreateInboxDto createInboxDto int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithOptionsAsync(CreateInboxDto, int, CancellationToken) Create an inbox with options. Extended options for inbox creation. Additional endpoint that allows inbox creation with request body options. Can be more flexible that other methods for some clients. Declaration public Task<InboxDto> CreateInboxWithOptionsAsync(CreateInboxDto createInboxDto, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateInboxDto createInboxDto int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithOptionsWithHttpInfo(CreateInboxDto, int) Create an inbox with options. Extended options for inbox creation. Additional endpoint that allows inbox creation with request body options. Can be more flexible that other methods for some clients. Declaration public ApiResponse<InboxDto> CreateInboxWithOptionsWithHttpInfo(CreateInboxDto createInboxDto, int operationIndex = 0) Parameters Type Name Description CreateInboxDto createInboxDto int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateInboxWithOptionsWithHttpInfoAsync(CreateInboxDto, int, CancellationToken) Create an inbox with options. Extended options for inbox creation. Additional endpoint that allows inbox creation with request body options. Can be more flexible that other methods for some clients. Declaration public Task<ApiResponse<InboxDto>> CreateInboxWithOptionsWithHttpInfoAsync(CreateInboxDto createInboxDto, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateInboxDto createInboxDto int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxEmails(Guid, int) Delete all emails in a given inboxes. Deletes all emails in an inbox. Be careful as emails cannot be recovered Declaration public void DeleteAllInboxEmails(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxEmailsAsync(Guid, int, CancellationToken) Delete all emails in a given inboxes. Deletes all emails in an inbox. Be careful as emails cannot be recovered Declaration public Task DeleteAllInboxEmailsAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxEmailsWithHttpInfo(Guid, int) Delete all emails in a given inboxes. Deletes all emails in an inbox. Be careful as emails cannot be recovered Declaration public ApiResponse<object> DeleteAllInboxEmailsWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxEmailsWithHttpInfoAsync(Guid, int, CancellationToken) Delete all emails in a given inboxes. Deletes all emails in an inbox. Be careful as emails cannot be recovered Declaration public Task<ApiResponse<object>> DeleteAllInboxEmailsWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxes(int) Delete all inboxes Permanently delete all inboxes and associated email addresses. This will also delete all emails within the inboxes. Be careful as inboxes cannot be recovered once deleted. Note: deleting inboxes will not impact your usage limits. Monthly inbox creation limits are based on how many inboxes were created in the last 30 days, not how many inboxes you currently have. Declaration public void DeleteAllInboxes(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesAsync(int, CancellationToken) Delete all inboxes Permanently delete all inboxes and associated email addresses. This will also delete all emails within the inboxes. Be careful as inboxes cannot be recovered once deleted. Note: deleting inboxes will not impact your usage limits. Monthly inbox creation limits are based on how many inboxes were created in the last 30 days, not how many inboxes you currently have. Declaration public Task DeleteAllInboxesAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByDescription(string, int) Delete inboxes by description Permanently delete all inboxes by description Declaration public void DeleteAllInboxesByDescription(string description, int operationIndex = 0) Parameters Type Name Description string description int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByDescriptionAsync(string, int, CancellationToken) Delete inboxes by description Permanently delete all inboxes by description Declaration public Task DeleteAllInboxesByDescriptionAsync(string description, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByDescriptionWithHttpInfo(string, int) Delete inboxes by description Permanently delete all inboxes by description Declaration public ApiResponse<object> DeleteAllInboxesByDescriptionWithHttpInfo(string description, int operationIndex = 0) Parameters Type Name Description string description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByDescriptionWithHttpInfoAsync(string, int, CancellationToken) Delete inboxes by description Permanently delete all inboxes by description Declaration public Task<ApiResponse<object>> DeleteAllInboxesByDescriptionWithHttpInfoAsync(string description, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByName(string, int) Delete inboxes by name Permanently delete all inboxes by name Declaration public void DeleteAllInboxesByName(string name, int operationIndex = 0) Parameters Type Name Description string name int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByNameAsync(string, int, CancellationToken) Delete inboxes by name Permanently delete all inboxes by name Declaration public Task DeleteAllInboxesByNameAsync(string name, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string name int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByNameWithHttpInfo(string, int) Delete inboxes by name Permanently delete all inboxes by name Declaration public ApiResponse<object> DeleteAllInboxesByNameWithHttpInfo(string name, int operationIndex = 0) Parameters Type Name Description string name int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByNameWithHttpInfoAsync(string, int, CancellationToken) Delete inboxes by name Permanently delete all inboxes by name Declaration public Task<ApiResponse<object>> DeleteAllInboxesByNameWithHttpInfoAsync(string name, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string name int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByTag(string, int) Delete inboxes by tag Permanently delete all inboxes by tag Declaration public void DeleteAllInboxesByTag(string tag, int operationIndex = 0) Parameters Type Name Description string tag int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByTagAsync(string, int, CancellationToken) Delete inboxes by tag Permanently delete all inboxes by tag Declaration public Task DeleteAllInboxesByTagAsync(string tag, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string tag int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByTagWithHttpInfo(string, int) Delete inboxes by tag Permanently delete all inboxes by tag Declaration public ApiResponse<object> DeleteAllInboxesByTagWithHttpInfo(string tag, int operationIndex = 0) Parameters Type Name Description string tag int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesByTagWithHttpInfoAsync(string, int, CancellationToken) Delete inboxes by tag Permanently delete all inboxes by tag Declaration public Task<ApiResponse<object>> DeleteAllInboxesByTagWithHttpInfoAsync(string tag, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string tag int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesWithHttpInfo(int) Delete all inboxes Permanently delete all inboxes and associated email addresses. This will also delete all emails within the inboxes. Be careful as inboxes cannot be recovered once deleted. Note: deleting inboxes will not impact your usage limits. Monthly inbox creation limits are based on how many inboxes were created in the last 30 days, not how many inboxes you currently have. Declaration public ApiResponse<object> DeleteAllInboxesWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllInboxesWithHttpInfoAsync(int, CancellationToken) Delete all inboxes Permanently delete all inboxes and associated email addresses. This will also delete all emails within the inboxes. Be careful as inboxes cannot be recovered once deleted. Note: deleting inboxes will not impact your usage limits. Monthly inbox creation limits are based on how many inboxes were created in the last 30 days, not how many inboxes you currently have. Declaration public Task<ApiResponse<object>> DeleteAllInboxesWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInbox(Guid, int) Delete inbox Permanently delete an inbox and associated email address as well as all emails within the given inbox. This action cannot be undone. Note: deleting an inbox will not affect your account usage. Monthly inbox usage is based on how many inboxes you create within 30 days, not how many exist at time of request. Declaration public void DeleteInbox(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxAsync(Guid, int, CancellationToken) Delete inbox Permanently delete an inbox and associated email address as well as all emails within the given inbox. This action cannot be undone. Note: deleting an inbox will not affect your account usage. Monthly inbox usage is based on how many inboxes you create within 30 days, not how many exist at time of request. Declaration public Task DeleteInboxAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxWithHttpInfo(Guid, int) Delete inbox Permanently delete an inbox and associated email address as well as all emails within the given inbox. This action cannot be undone. Note: deleting an inbox will not affect your account usage. Monthly inbox usage is based on how many inboxes you create within 30 days, not how many exist at time of request. Declaration public ApiResponse<object> DeleteInboxWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxWithHttpInfoAsync(Guid, int, CancellationToken) Delete inbox Permanently delete an inbox and associated email address as well as all emails within the given inbox. This action cannot be undone. Note: deleting an inbox will not affect your account usage. Monthly inbox usage is based on how many inboxes you create within 30 days, not how many exist at time of request. Declaration public Task<ApiResponse<object>> DeleteInboxWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DoesInboxExist(string, bool?, int) Does inbox exist Check if inboxes exist by email address. Useful if you are sending emails to mailslurp addresses Declaration public InboxExistsDto DoesInboxExist(string emailAddress, bool? allowCatchAll = null, int operationIndex = 0) Parameters Type Name Description string emailAddress Email address bool? allowCatchAll (optional) int operationIndex Index associated with the operation. Returns Type Description InboxExistsDto InboxExistsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DoesInboxExistAsync(string, bool?, int, CancellationToken) Does inbox exist Check if inboxes exist by email address. Useful if you are sending emails to mailslurp addresses Declaration public Task<InboxExistsDto> DoesInboxExistAsync(string emailAddress, bool? allowCatchAll = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress Email address bool? allowCatchAll (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxExistsDto> Task of InboxExistsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DoesInboxExistWithHttpInfo(string, bool?, int) Does inbox exist Check if inboxes exist by email address. Useful if you are sending emails to mailslurp addresses Declaration public ApiResponse<InboxExistsDto> DoesInboxExistWithHttpInfo(string emailAddress, bool? allowCatchAll = null, int operationIndex = 0) Parameters Type Name Description string emailAddress Email address bool? allowCatchAll (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxExistsDto> ApiResponse of InboxExistsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DoesInboxExistWithHttpInfoAsync(string, bool?, int, CancellationToken) Does inbox exist Check if inboxes exist by email address. Useful if you are sending emails to mailslurp addresses Declaration public Task<ApiResponse<InboxExistsDto>> DoesInboxExistWithHttpInfoAsync(string emailAddress, bool? allowCatchAll = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress Email address bool? allowCatchAll (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxExistsDto>> Task of ApiResponse (InboxExistsDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source FlushExpired(DateTime?, int) Remove expired inboxes Remove any expired inboxes for your account (instead of waiting for scheduled removal on server) Declaration public FlushExpiredInboxesResult FlushExpired(DateTime? before = null, int operationIndex = 0) Parameters Type Name Description DateTime? before Optional expired at before flag to flush expired inboxes that have expired before the given time (optional) int operationIndex Index associated with the operation. Returns Type Description FlushExpiredInboxesResult FlushExpiredInboxesResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source FlushExpiredAsync(DateTime?, int, CancellationToken) Remove expired inboxes Remove any expired inboxes for your account (instead of waiting for scheduled removal on server) Declaration public Task<FlushExpiredInboxesResult> FlushExpiredAsync(DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DateTime? before Optional expired at before flag to flush expired inboxes that have expired before the given time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<FlushExpiredInboxesResult> Task of FlushExpiredInboxesResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source FlushExpiredWithHttpInfo(DateTime?, int) Remove expired inboxes Remove any expired inboxes for your account (instead of waiting for scheduled removal on server) Declaration public ApiResponse<FlushExpiredInboxesResult> FlushExpiredWithHttpInfo(DateTime? before = null, int operationIndex = 0) Parameters Type Name Description DateTime? before Optional expired at before flag to flush expired inboxes that have expired before the given time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<FlushExpiredInboxesResult> ApiResponse of FlushExpiredInboxesResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source FlushExpiredWithHttpInfoAsync(DateTime?, int, CancellationToken) Remove expired inboxes Remove any expired inboxes for your account (instead of waiting for scheduled removal on server) Declaration public Task<ApiResponse<FlushExpiredInboxesResult>> FlushExpiredWithHttpInfoAsync(DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DateTime? before Optional expired at before flag to flush expired inboxes that have expired before the given time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<FlushExpiredInboxesResult>> Task of ApiResponse (FlushExpiredInboxesResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxes(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int) List All Inboxes Paginated List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Declaration public PageInboxProjection GetAllInboxes(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description PageInboxProjection PageInboxProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesAsync(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int, CancellationToken) List All Inboxes Paginated List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Declaration public Task<PageInboxProjection> GetAllInboxesAsync(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxProjection> Task of PageInboxProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesOffsetPaginated(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int) List All Inboxes Offset Paginated List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Declaration public PageInboxProjection GetAllInboxesOffsetPaginated(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description PageInboxProjection PageInboxProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesOffsetPaginatedAsync(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int, CancellationToken) List All Inboxes Offset Paginated List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Declaration public Task<PageInboxProjection> GetAllInboxesOffsetPaginatedAsync(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxProjection> Task of PageInboxProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesOffsetPaginatedWithHttpInfo(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int) List All Inboxes Offset Paginated List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Declaration public ApiResponse<PageInboxProjection> GetAllInboxesOffsetPaginatedWithHttpInfo(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxProjection> ApiResponse of PageInboxProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesOffsetPaginatedWithHttpInfoAsync(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int, CancellationToken) List All Inboxes Offset Paginated List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Declaration public Task<ApiResponse<PageInboxProjection>> GetAllInboxesOffsetPaginatedWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxProjection>> Task of ApiResponse (PageInboxProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesWithHttpInfo(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int) List All Inboxes Paginated List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Declaration public ApiResponse<PageInboxProjection> GetAllInboxesWithHttpInfo(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxProjection> ApiResponse of PageInboxProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxesWithHttpInfoAsync(int?, int?, string, bool?, string, string, bool?, DateTime?, DateTime?, string, string, Guid?, int, CancellationToken) List All Inboxes Paginated List inboxes in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Declaration public Task<ApiResponse<PageInboxProjection>> GetAllInboxesWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, bool? favourite = null, string search = null, string tag = null, bool? teamAccess = null, DateTime? since = null, DateTime? before = null, string inboxType = null, string inboxFunction = null, Guid? domainId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? favourite Optionally filter results for favourites only (optional, default to false) string search Optionally filter by search words partial matching ID, tags, name, and email address (optional) string tag Optionally filter by tags. Will return inboxes that include given tags (optional) bool? teamAccess DEPRECATED. Optionally filter by team access. (optional) (deprecated) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) string inboxType Optional filter by inbox type (optional) string inboxFunction Optional filter by inbox function (optional) Guid? domainId Optional domain ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxProjection>> Task of ApiResponse (PageInboxProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllScheduledJobs(int?, int?, string, DateTime?, DateTime?, int) Get all scheduled email sending jobs for account Schedule sending of emails using scheduled jobs. These can be inbox or account level. Declaration public PageScheduledJobs GetAllScheduledJobs(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageScheduledJobs PageScheduledJobs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllScheduledJobsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all scheduled email sending jobs for account Schedule sending of emails using scheduled jobs. These can be inbox or account level. Declaration public Task<PageScheduledJobs> GetAllScheduledJobsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageScheduledJobs> Task of PageScheduledJobs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllScheduledJobsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get all scheduled email sending jobs for account Schedule sending of emails using scheduled jobs. These can be inbox or account level. Declaration public ApiResponse<PageScheduledJobs> GetAllScheduledJobsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageScheduledJobs> ApiResponse of PageScheduledJobs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllScheduledJobsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all scheduled email sending jobs for account Schedule sending of emails using scheduled jobs. These can be inbox or account level. Declaration public Task<ApiResponse<PageScheduledJobs>> GetAllScheduledJobsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageScheduledJobs>> Task of ApiResponse (PageScheduledJobs) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetDeliveryStatusesByInboxId(Guid, int?, int?, string, DateTime?, DateTime?, int) Get all email delivery statuses for an inbox Declaration [Obsolete] public PageDeliveryStatus GetDeliveryStatusesByInboxId(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageDeliveryStatus PageDeliveryStatus Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDeliveryStatusesByInboxIdAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all email delivery statuses for an inbox Declaration [Obsolete] public Task<PageDeliveryStatus> GetDeliveryStatusesByInboxIdAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageDeliveryStatus> Task of PageDeliveryStatus Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDeliveryStatusesByInboxIdWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get all email delivery statuses for an inbox Declaration [Obsolete] public ApiResponse<PageDeliveryStatus> GetDeliveryStatusesByInboxIdWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageDeliveryStatus> ApiResponse of PageDeliveryStatus Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDeliveryStatusesByInboxIdWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all email delivery statuses for an inbox Declaration [Obsolete] public Task<ApiResponse<PageDeliveryStatus>> GetDeliveryStatusesByInboxIdWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageDeliveryStatus>> Task of ApiResponse (PageDeliveryStatus) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmails(Guid, int?, int?, string, long?, long?, long?, bool?, DateTime?, DateTime?, int) Get emails in an Inbox. This method is not idempotent as it allows retries and waits if you want certain conditions to be met before returning. For simple listing and sorting of known emails use the email controller instead. List emails that an inbox has received. Only emails that are sent to the inbox's email address will appear in the inbox. It may take several seconds for any email you send to an inbox's email address to appear in the inbox. To make this endpoint wait for a minimum number of emails use the minCount parameter. The server will retry the inbox database until the minCount is satisfied or the retryTimeout is reached Declaration public List<EmailPreview> GetEmails(Guid inboxId, int? size = null, int? limit = null, string sort = null, long? retryTimeout = null, long? delayTimeout = null, long? minCount = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? size Alias for limit. Assessed first before assessing any passed limit. (optional) int? limit Limit the result set, ordered by received date time sort direction. Maximum 100. For more listing options see the email controller (optional) string sort Sort the results by received date and direction ASC or DESC (optional) long? retryTimeout Maximum milliseconds to spend retrying inbox database until minCount emails are returned (optional) long? delayTimeout (optional) long? minCount Minimum acceptable email count. Will cause request to hang (and retry) until minCount is satisfied or retryTimeout is reached. (optional) bool? unreadOnly (optional) DateTime? before Exclude emails received after this ISO 8601 date time (optional) DateTime? since Exclude emails received before this ISO 8601 date time (optional) int operationIndex Index associated with the operation. Returns Type Description List<EmailPreview> List<EmailPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsAsync(Guid, int?, int?, string, long?, long?, long?, bool?, DateTime?, DateTime?, int, CancellationToken) Get emails in an Inbox. This method is not idempotent as it allows retries and waits if you want certain conditions to be met before returning. For simple listing and sorting of known emails use the email controller instead. List emails that an inbox has received. Only emails that are sent to the inbox's email address will appear in the inbox. It may take several seconds for any email you send to an inbox's email address to appear in the inbox. To make this endpoint wait for a minimum number of emails use the minCount parameter. The server will retry the inbox database until the minCount is satisfied or the retryTimeout is reached Declaration public Task<List<EmailPreview>> GetEmailsAsync(Guid inboxId, int? size = null, int? limit = null, string sort = null, long? retryTimeout = null, long? delayTimeout = null, long? minCount = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? size Alias for limit. Assessed first before assessing any passed limit. (optional) int? limit Limit the result set, ordered by received date time sort direction. Maximum 100. For more listing options see the email controller (optional) string sort Sort the results by received date and direction ASC or DESC (optional) long? retryTimeout Maximum milliseconds to spend retrying inbox database until minCount emails are returned (optional) long? delayTimeout (optional) long? minCount Minimum acceptable email count. Will cause request to hang (and retry) until minCount is satisfied or retryTimeout is reached. (optional) bool? unreadOnly (optional) DateTime? before Exclude emails received after this ISO 8601 date time (optional) DateTime? since Exclude emails received before this ISO 8601 date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<EmailPreview>> Task of List<EmailPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsWithHttpInfo(Guid, int?, int?, string, long?, long?, long?, bool?, DateTime?, DateTime?, int) Get emails in an Inbox. This method is not idempotent as it allows retries and waits if you want certain conditions to be met before returning. For simple listing and sorting of known emails use the email controller instead. List emails that an inbox has received. Only emails that are sent to the inbox's email address will appear in the inbox. It may take several seconds for any email you send to an inbox's email address to appear in the inbox. To make this endpoint wait for a minimum number of emails use the minCount parameter. The server will retry the inbox database until the minCount is satisfied or the retryTimeout is reached Declaration public ApiResponse<List<EmailPreview>> GetEmailsWithHttpInfo(Guid inboxId, int? size = null, int? limit = null, string sort = null, long? retryTimeout = null, long? delayTimeout = null, long? minCount = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? size Alias for limit. Assessed first before assessing any passed limit. (optional) int? limit Limit the result set, ordered by received date time sort direction. Maximum 100. For more listing options see the email controller (optional) string sort Sort the results by received date and direction ASC or DESC (optional) long? retryTimeout Maximum milliseconds to spend retrying inbox database until minCount emails are returned (optional) long? delayTimeout (optional) long? minCount Minimum acceptable email count. Will cause request to hang (and retry) until minCount is satisfied or retryTimeout is reached. (optional) bool? unreadOnly (optional) DateTime? before Exclude emails received after this ISO 8601 date time (optional) DateTime? since Exclude emails received before this ISO 8601 date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<EmailPreview>> ApiResponse of List<EmailPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmailsWithHttpInfoAsync(Guid, int?, int?, string, long?, long?, long?, bool?, DateTime?, DateTime?, int, CancellationToken) Get emails in an Inbox. This method is not idempotent as it allows retries and waits if you want certain conditions to be met before returning. For simple listing and sorting of known emails use the email controller instead. List emails that an inbox has received. Only emails that are sent to the inbox's email address will appear in the inbox. It may take several seconds for any email you send to an inbox's email address to appear in the inbox. To make this endpoint wait for a minimum number of emails use the minCount parameter. The server will retry the inbox database until the minCount is satisfied or the retryTimeout is reached Declaration public Task<ApiResponse<List<EmailPreview>>> GetEmailsWithHttpInfoAsync(Guid inboxId, int? size = null, int? limit = null, string sort = null, long? retryTimeout = null, long? delayTimeout = null, long? minCount = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? size Alias for limit. Assessed first before assessing any passed limit. (optional) int? limit Limit the result set, ordered by received date time sort direction. Maximum 100. For more listing options see the email controller (optional) string sort Sort the results by received date and direction ASC or DESC (optional) long? retryTimeout Maximum milliseconds to spend retrying inbox database until minCount emails are returned (optional) long? delayTimeout (optional) long? minCount Minimum acceptable email count. Will cause request to hang (and retry) until minCount is satisfied or retryTimeout is reached. (optional) bool? unreadOnly (optional) DateTime? before Exclude emails received after this ISO 8601 date time (optional) DateTime? since Exclude emails received before this ISO 8601 date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<EmailPreview>>> Task of ApiResponse (List<EmailPreview>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetImapSmtpAccess(Guid?, int) Get IMAP and SMTP access usernames and passwords Declaration public ImapSmtpAccessDetails GetImapSmtpAccess(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Inbox ID (optional) int operationIndex Index associated with the operation. Returns Type Description ImapSmtpAccessDetails ImapSmtpAccessDetails Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetImapSmtpAccessAsync(Guid?, int, CancellationToken) Get IMAP and SMTP access usernames and passwords Declaration public Task<ImapSmtpAccessDetails> GetImapSmtpAccessAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Inbox ID (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ImapSmtpAccessDetails> Task of ImapSmtpAccessDetails Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetImapSmtpAccessWithHttpInfo(Guid?, int) Get IMAP and SMTP access usernames and passwords Declaration public ApiResponse<ImapSmtpAccessDetails> GetImapSmtpAccessWithHttpInfo(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Inbox ID (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ImapSmtpAccessDetails> ApiResponse of ImapSmtpAccessDetails Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetImapSmtpAccessWithHttpInfoAsync(Guid?, int, CancellationToken) Get IMAP and SMTP access usernames and passwords Declaration public Task<ApiResponse<ImapSmtpAccessDetails>> GetImapSmtpAccessWithHttpInfoAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Inbox ID (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ImapSmtpAccessDetails>> Task of ApiResponse (ImapSmtpAccessDetails) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInbox(Guid, int) Get Inbox. Returns properties of an inbox. Returns an inbox's properties, including its email address and ID. Declaration public InboxDto GetInbox(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxAsync(Guid, int, CancellationToken) Get Inbox. Returns properties of an inbox. Returns an inbox's properties, including its email address and ID. Declaration public Task<InboxDto> GetInboxAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByEmailAddress(string, int) Search for an inbox with the provided email address Get a inbox result by email address Declaration public InboxByEmailAddressResult GetInboxByEmailAddress(string emailAddress, int operationIndex = 0) Parameters Type Name Description string emailAddress int operationIndex Index associated with the operation. Returns Type Description InboxByEmailAddressResult InboxByEmailAddressResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByEmailAddressAsync(string, int, CancellationToken) Search for an inbox with the provided email address Get a inbox result by email address Declaration public Task<InboxByEmailAddressResult> GetInboxByEmailAddressAsync(string emailAddress, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxByEmailAddressResult> Task of InboxByEmailAddressResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByEmailAddressWithHttpInfo(string, int) Search for an inbox with the provided email address Get a inbox result by email address Declaration public ApiResponse<InboxByEmailAddressResult> GetInboxByEmailAddressWithHttpInfo(string emailAddress, int operationIndex = 0) Parameters Type Name Description string emailAddress int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxByEmailAddressResult> ApiResponse of InboxByEmailAddressResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByEmailAddressWithHttpInfoAsync(string, int, CancellationToken) Search for an inbox with the provided email address Get a inbox result by email address Declaration public Task<ApiResponse<InboxByEmailAddressResult>> GetInboxByEmailAddressWithHttpInfoAsync(string emailAddress, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string emailAddress int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxByEmailAddressResult>> Task of ApiResponse (InboxByEmailAddressResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByName(string, int) Search for an inbox with the given name Get a inbox result by name Declaration public InboxByNameResult GetInboxByName(string name, int operationIndex = 0) Parameters Type Name Description string name int operationIndex Index associated with the operation. Returns Type Description InboxByNameResult InboxByNameResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByNameAsync(string, int, CancellationToken) Search for an inbox with the given name Get a inbox result by name Declaration public Task<InboxByNameResult> GetInboxByNameAsync(string name, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string name int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxByNameResult> Task of InboxByNameResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByNameWithHttpInfo(string, int) Search for an inbox with the given name Get a inbox result by name Declaration public ApiResponse<InboxByNameResult> GetInboxByNameWithHttpInfo(string name, int operationIndex = 0) Parameters Type Name Description string name int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxByNameResult> ApiResponse of InboxByNameResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxByNameWithHttpInfoAsync(string, int, CancellationToken) Search for an inbox with the given name Get a inbox result by name Declaration public Task<ApiResponse<InboxByNameResult>> GetInboxByNameWithHttpInfoAsync(string name, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string name int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxByNameResult>> Task of ApiResponse (InboxByNameResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxCount(int) Get total inbox count Declaration public CountDto GetInboxCount(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description CountDto CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxCountAsync(int, CancellationToken) Get total inbox count Declaration public Task<CountDto> GetInboxCountAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CountDto> Task of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxCountWithHttpInfo(int) Get total inbox count Declaration public ApiResponse<CountDto> GetInboxCountWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CountDto> ApiResponse of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxCountWithHttpInfoAsync(int, CancellationToken) Get total inbox count Declaration public Task<ApiResponse<CountDto>> GetInboxCountWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CountDto>> Task of ApiResponse (CountDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailCount(Guid, int) Get email count in inbox Declaration public CountDto GetInboxEmailCount(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int operationIndex Index associated with the operation. Returns Type Description CountDto CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailCountAsync(Guid, int, CancellationToken) Get email count in inbox Declaration public Task<CountDto> GetInboxEmailCountAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CountDto> Task of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailCountWithHttpInfo(Guid, int) Get email count in inbox Declaration public ApiResponse<CountDto> GetInboxEmailCountWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CountDto> ApiResponse of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailCountWithHttpInfoAsync(Guid, int, CancellationToken) Get email count in inbox Declaration public Task<ApiResponse<CountDto>> GetInboxEmailCountWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CountDto>> Task of ApiResponse (CountDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailsPaginated(Guid, int?, int?, string, DateTime?, DateTime?, int) Get inbox emails paginated Get a paginated list of emails in an inbox. Does not hold connections open. Declaration public PageEmailPreview GetInboxEmailsPaginated(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? page Optional page index in inbox emails list pagination (optional, default to 0) int? size Optional page size in inbox emails list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by received after given date time (optional) DateTime? before Optional filter by received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageEmailPreview PageEmailPreview Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailsPaginatedAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get inbox emails paginated Get a paginated list of emails in an inbox. Does not hold connections open. Declaration public Task<PageEmailPreview> GetInboxEmailsPaginatedAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? page Optional page index in inbox emails list pagination (optional, default to 0) int? size Optional page size in inbox emails list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by received after given date time (optional) DateTime? before Optional filter by received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageEmailPreview> Task of PageEmailPreview Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailsPaginatedWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get inbox emails paginated Get a paginated list of emails in an inbox. Does not hold connections open. Declaration public ApiResponse<PageEmailPreview> GetInboxEmailsPaginatedWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? page Optional page index in inbox emails list pagination (optional, default to 0) int? size Optional page size in inbox emails list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by received after given date time (optional) DateTime? before Optional filter by received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageEmailPreview> ApiResponse of PageEmailPreview Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxEmailsPaginatedWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get inbox emails paginated Get a paginated list of emails in an inbox. Does not hold connections open. Declaration public Task<ApiResponse<PageEmailPreview>> GetInboxEmailsPaginatedWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of inbox that emails belongs to int? page Optional page index in inbox emails list pagination (optional, default to 0) int? size Optional page size in inbox emails list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by received after given date time (optional) DateTime? before Optional filter by received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageEmailPreview>> Task of ApiResponse (PageEmailPreview) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxes(int?, string, DateTime?, bool?, DateTime?, int) List Inboxes and email addresses List the inboxes you have created. Note use of the more advanced getAllInboxes is recommended and allows paginated access using a limit and sort parameter. Declaration [Obsolete] public List<InboxDto> GetInboxes(int? size = null, string sort = null, DateTime? since = null, bool? excludeCatchAllInboxes = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? size Optional result size limit. Note an automatic limit of 100 results is applied. See the paginated getAllEmails for larger queries. (optional, default to 100) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by created after given date time (optional) bool? excludeCatchAllInboxes Optional exclude catch all inboxes (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description List<InboxDto> List<InboxDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxesAsync(int?, string, DateTime?, bool?, DateTime?, int, CancellationToken) List Inboxes and email addresses List the inboxes you have created. Note use of the more advanced getAllInboxes is recommended and allows paginated access using a limit and sort parameter. Declaration [Obsolete] public Task<List<InboxDto>> GetInboxesAsync(int? size = null, string sort = null, DateTime? since = null, bool? excludeCatchAllInboxes = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? size Optional result size limit. Note an automatic limit of 100 results is applied. See the paginated getAllEmails for larger queries. (optional, default to 100) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by created after given date time (optional) bool? excludeCatchAllInboxes Optional exclude catch all inboxes (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<InboxDto>> Task of List<InboxDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxesWithHttpInfo(int?, string, DateTime?, bool?, DateTime?, int) List Inboxes and email addresses List the inboxes you have created. Note use of the more advanced getAllInboxes is recommended and allows paginated access using a limit and sort parameter. Declaration [Obsolete] public ApiResponse<List<InboxDto>> GetInboxesWithHttpInfo(int? size = null, string sort = null, DateTime? since = null, bool? excludeCatchAllInboxes = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? size Optional result size limit. Note an automatic limit of 100 results is applied. See the paginated getAllEmails for larger queries. (optional, default to 100) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by created after given date time (optional) bool? excludeCatchAllInboxes Optional exclude catch all inboxes (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<InboxDto>> ApiResponse of List<InboxDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxesWithHttpInfoAsync(int?, string, DateTime?, bool?, DateTime?, int, CancellationToken) List Inboxes and email addresses List the inboxes you have created. Note use of the more advanced getAllInboxes is recommended and allows paginated access using a limit and sort parameter. Declaration [Obsolete] public Task<ApiResponse<List<InboxDto>>> GetInboxesWithHttpInfoAsync(int? size = null, string sort = null, DateTime? since = null, bool? excludeCatchAllInboxes = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? size Optional result size limit. Note an automatic limit of 100 results is applied. See the paginated getAllEmails for larger queries. (optional, default to 100) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Optional filter by created after given date time (optional) bool? excludeCatchAllInboxes Optional exclude catch all inboxes (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<InboxDto>>> Task of ApiResponse (List<InboxDto>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxIds(int) Get all inbox IDs Get list of inbox IDs Declaration [Obsolete] public InboxIdsResult GetInboxIds(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description InboxIdsResult InboxIdsResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxIdsAsync(int, CancellationToken) Get all inbox IDs Get list of inbox IDs Declaration [Obsolete] public Task<InboxIdsResult> GetInboxIdsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxIdsResult> Task of InboxIdsResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxIdsWithHttpInfo(int) Get all inbox IDs Get list of inbox IDs Declaration [Obsolete] public ApiResponse<InboxIdsResult> GetInboxIdsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxIdsResult> ApiResponse of InboxIdsResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxIdsWithHttpInfoAsync(int, CancellationToken) Get all inbox IDs Get list of inbox IDs Declaration [Obsolete] public Task<ApiResponse<InboxIdsResult>> GetInboxIdsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxIdsResult>> Task of ApiResponse (InboxIdsResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxSentEmails(Guid, int?, int?, string, string, DateTime?, DateTime?, int) Get Inbox Sent Emails Returns an inbox's sent email receipts. Call individual sent email endpoints for more details. Note for privacy reasons the full body of sent emails is never stored. An MD5 hash hex is available for comparison instead. Declaration [Obsolete] public PageSentEmailProjection GetInboxSentEmails(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional sent email search (optional) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageSentEmailProjection PageSentEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxSentEmailsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get Inbox Sent Emails Returns an inbox's sent email receipts. Call individual sent email endpoints for more details. Note for privacy reasons the full body of sent emails is never stored. An MD5 hash hex is available for comparison instead. Declaration [Obsolete] public Task<PageSentEmailProjection> GetInboxSentEmailsAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional sent email search (optional) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageSentEmailProjection> Task of PageSentEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxSentEmailsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) Get Inbox Sent Emails Returns an inbox's sent email receipts. Call individual sent email endpoints for more details. Note for privacy reasons the full body of sent emails is never stored. An MD5 hash hex is available for comparison instead. Declaration [Obsolete] public ApiResponse<PageSentEmailProjection> GetInboxSentEmailsWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional sent email search (optional) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageSentEmailProjection> ApiResponse of PageSentEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxSentEmailsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get Inbox Sent Emails Returns an inbox's sent email receipts. Call individual sent email endpoints for more details. Note for privacy reasons the full body of sent emails is never stored. An MD5 hash hex is available for comparison instead. Declaration [Obsolete] public Task<ApiResponse<PageSentEmailProjection>> GetInboxSentEmailsWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional sent email search (optional) DateTime? since Optional filter by sent after given date time (optional) DateTime? before Optional filter by sent before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageSentEmailProjection>> Task of ApiResponse (PageSentEmailProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxTags(int) Get inbox tags Get all inbox tags Declaration [Obsolete] public List<string> GetInboxTags(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<string> List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxTagsAsync(int, CancellationToken) Get inbox tags Get all inbox tags Declaration [Obsolete] public Task<List<string>> GetInboxTagsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<string>> Task of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxTagsWithHttpInfo(int) Get inbox tags Get all inbox tags Declaration [Obsolete] public ApiResponse<List<string>> GetInboxTagsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<string>> ApiResponse of List<string> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxTagsWithHttpInfoAsync(int, CancellationToken) Get inbox tags Get all inbox tags Declaration [Obsolete] public Task<ApiResponse<List<string>>> GetInboxTagsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<string>>> Task of ApiResponse (List<string>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxWithHttpInfo(Guid, int) Get Inbox. Returns properties of an inbox. Returns an inbox's properties, including its email address and ID. Declaration public ApiResponse<InboxDto> GetInboxWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxWithHttpInfoAsync(Guid, int, CancellationToken) Get Inbox. Returns properties of an inbox. Returns an inbox's properties, including its email address and ID. Declaration public Task<ApiResponse<InboxDto>> GetInboxWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInbox(Guid, long, int) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Get the newest email in an inbox or wait for one to arrive Declaration public Email GetLatestEmailInInbox(Guid inboxId, long timeoutMillis, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from long timeoutMillis Timeout milliseconds to wait for latest email int operationIndex Index associated with the operation. Returns Type Description Email Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInboxAsync(Guid, long, int, CancellationToken) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Get the newest email in an inbox or wait for one to arrive Declaration public Task<Email> GetLatestEmailInInboxAsync(Guid inboxId, long timeoutMillis, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from long timeoutMillis Timeout milliseconds to wait for latest email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInboxWithHttpInfo(Guid, long, int) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Get the newest email in an inbox or wait for one to arrive Declaration public ApiResponse<Email> GetLatestEmailInInboxWithHttpInfo(Guid inboxId, long timeoutMillis, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from long timeoutMillis Timeout milliseconds to wait for latest email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetLatestEmailInInboxWithHttpInfoAsync(Guid, long, int, CancellationToken) Get latest email in an inbox. Use WaitForController to get emails that may not have arrived yet. Get the newest email in an inbox or wait for one to arrive Declaration public Task<ApiResponse<Email>> GetLatestEmailInInboxWithHttpInfoAsync(Guid inboxId, long timeoutMillis, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to get the latest email from long timeoutMillis Timeout milliseconds to wait for latest email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationInboxes(int?, int?, string, string, DateTime?, DateTime?, int) List Organization Inboxes Paginated List organization inboxes in paginated form. These are inboxes created with allowTeamAccess flag enabled. Organization inboxes are readOnly for non-admin users. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). Declaration [Obsolete] public PageOrganizationInboxProjection GetOrganizationInboxes(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageOrganizationInboxProjection PageOrganizationInboxProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationInboxesAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List Organization Inboxes Paginated List organization inboxes in paginated form. These are inboxes created with allowTeamAccess flag enabled. Organization inboxes are readOnly for non-admin users. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). Declaration [Obsolete] public Task<PageOrganizationInboxProjection> GetOrganizationInboxesAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageOrganizationInboxProjection> Task of PageOrganizationInboxProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationInboxesWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, int) List Organization Inboxes Paginated List organization inboxes in paginated form. These are inboxes created with allowTeamAccess flag enabled. Organization inboxes are readOnly for non-admin users. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). Declaration [Obsolete] public ApiResponse<PageOrganizationInboxProjection> GetOrganizationInboxesWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageOrganizationInboxProjection> ApiResponse of PageOrganizationInboxProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetOrganizationInboxesWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List Organization Inboxes Paginated List organization inboxes in paginated form. These are inboxes created with allowTeamAccess flag enabled. Organization inboxes are readOnly for non-admin users. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). Declaration [Obsolete] public Task<ApiResponse<PageOrganizationInboxProjection>> GetOrganizationInboxesWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageOrganizationInboxProjection>> Task of ApiResponse (PageOrganizationInboxProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJob(Guid, int) Get a scheduled email job Get a scheduled email job details. Declaration public ScheduledJobDto GetScheduledJob(Guid jobId, int operationIndex = 0) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. Returns Type Description ScheduledJobDto ScheduledJobDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobAsync(Guid, int, CancellationToken) Get a scheduled email job Get a scheduled email job details. Declaration public Task<ScheduledJobDto> GetScheduledJobAsync(Guid jobId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ScheduledJobDto> Task of ScheduledJobDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobsByInboxId(Guid, int?, int?, string, DateTime?, DateTime?, int) Get all scheduled email sending jobs for the inbox Schedule sending of emails using scheduled jobs. Declaration public PageScheduledJobs GetScheduledJobsByInboxId(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageScheduledJobs PageScheduledJobs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobsByInboxIdAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all scheduled email sending jobs for the inbox Schedule sending of emails using scheduled jobs. Declaration public Task<PageScheduledJobs> GetScheduledJobsByInboxIdAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageScheduledJobs> Task of PageScheduledJobs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobsByInboxIdWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get all scheduled email sending jobs for the inbox Schedule sending of emails using scheduled jobs. Declaration public ApiResponse<PageScheduledJobs> GetScheduledJobsByInboxIdWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageScheduledJobs> ApiResponse of PageScheduledJobs Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobsByInboxIdWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all scheduled email sending jobs for the inbox Schedule sending of emails using scheduled jobs. Declaration public Task<ApiResponse<PageScheduledJobs>> GetScheduledJobsByInboxIdWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in scheduled job list pagination (optional, default to 0) int? size Optional page size in scheduled job list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageScheduledJobs>> Task of ApiResponse (PageScheduledJobs) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobWithHttpInfo(Guid, int) Get a scheduled email job Get a scheduled email job details. Declaration public ApiResponse<ScheduledJobDto> GetScheduledJobWithHttpInfo(Guid jobId, int operationIndex = 0) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ScheduledJobDto> ApiResponse of ScheduledJobDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetScheduledJobWithHttpInfoAsync(Guid, int, CancellationToken) Get a scheduled email job Get a scheduled email job details. Declaration public Task<ApiResponse<ScheduledJobDto>> GetScheduledJobWithHttpInfoAsync(Guid jobId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid jobId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ScheduledJobDto>> Task of ApiResponse (ScheduledJobDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxRulesets(Guid, int?, int?, string, string, DateTime?, DateTime?, int) List inbox rulesets List all rulesets attached to an inbox Declaration public PageInboxRulesetDto ListInboxRulesets(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageInboxRulesetDto PageInboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxRulesetsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox rulesets List all rulesets attached to an inbox Declaration public Task<PageInboxRulesetDto> ListInboxRulesetsAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxRulesetDto> Task of PageInboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxRulesetsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) List inbox rulesets List all rulesets attached to an inbox Declaration public ApiResponse<PageInboxRulesetDto> ListInboxRulesetsWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxRulesetDto> ApiResponse of PageInboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxRulesetsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox rulesets List all rulesets attached to an inbox Declaration public Task<ApiResponse<PageInboxRulesetDto>> ListInboxRulesetsWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxRulesetDto>> Task of ApiResponse (PageInboxRulesetDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxTrackingPixels(Guid, int?, int?, string, string, DateTime?, DateTime?, int) List inbox tracking pixels List all tracking pixels sent from an inbox Declaration public PageTrackingPixelProjection ListInboxTrackingPixels(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox tracking pixel list pagination (optional, default to 0) int? size Optional page size in inbox tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageTrackingPixelProjection PageTrackingPixelProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxTrackingPixelsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox tracking pixels List all tracking pixels sent from an inbox Declaration public Task<PageTrackingPixelProjection> ListInboxTrackingPixelsAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox tracking pixel list pagination (optional, default to 0) int? size Optional page size in inbox tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageTrackingPixelProjection> Task of PageTrackingPixelProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxTrackingPixelsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) List inbox tracking pixels List all tracking pixels sent from an inbox Declaration public ApiResponse<PageTrackingPixelProjection> ListInboxTrackingPixelsWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox tracking pixel list pagination (optional, default to 0) int? size Optional page size in inbox tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageTrackingPixelProjection> ApiResponse of PageTrackingPixelProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source ListInboxTrackingPixelsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox tracking pixels List all tracking pixels sent from an inbox Declaration public Task<ApiResponse<PageTrackingPixelProjection>> ListInboxTrackingPixelsWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in inbox tracking pixel list pagination (optional, default to 0) int? size Optional page size in inbox tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Optional filter by created after given date time (optional) DateTime? before Optional filter by created before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageTrackingPixelProjection>> Task of ApiResponse (PageTrackingPixelProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchInboxes(SearchInboxesOptions, int) Search all inboxes and return matching inboxes Search inboxes and return in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Declaration public PageInboxProjection SearchInboxes(SearchInboxesOptions searchInboxesOptions, int operationIndex = 0) Parameters Type Name Description SearchInboxesOptions searchInboxesOptions int operationIndex Index associated with the operation. Returns Type Description PageInboxProjection PageInboxProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchInboxesAsync(SearchInboxesOptions, int, CancellationToken) Search all inboxes and return matching inboxes Search inboxes and return in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Declaration public Task<PageInboxProjection> SearchInboxesAsync(SearchInboxesOptions searchInboxesOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SearchInboxesOptions searchInboxesOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxProjection> Task of PageInboxProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchInboxesWithHttpInfo(SearchInboxesOptions, int) Search all inboxes and return matching inboxes Search inboxes and return in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Declaration public ApiResponse<PageInboxProjection> SearchInboxesWithHttpInfo(SearchInboxesOptions searchInboxesOptions, int operationIndex = 0) Parameters Type Name Description SearchInboxesOptions searchInboxesOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxProjection> ApiResponse of PageInboxProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source SearchInboxesWithHttpInfoAsync(SearchInboxesOptions, int, CancellationToken) Search all inboxes and return matching inboxes Search inboxes and return in paginated form. The results are available on the content property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative getInboxes method returns a full list of inboxes but is limited to 100 results. Declaration public Task<ApiResponse<PageInboxProjection>> SearchInboxesWithHttpInfoAsync(SearchInboxesOptions searchInboxesOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description SearchInboxesOptions searchInboxesOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxProjection>> Task of ApiResponse (PageInboxProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmail(Guid, SendEmailOptions, int) Send Email Send an email from an inbox's email address. The request body should contain the SendEmailOptions that include recipients, attachments, body etc. See SendEmailOptions for all available properties. Note the inboxId refers to the inbox's id not the inbox's email address. See https://www.mailslurp.com/guides/ for more information on how to send emails. This method does not return a sent email entity due to legacy reasons. To send and get a sent email as returned response use the sister method sendEmailAndConfirm. Declaration public void SendEmail(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailAndConfirm(Guid, SendEmailOptions, int) Send email and return sent confirmation Sister method for standard sendEmail method with the benefit of returning a SentEmail entity confirming the successful sending of the email with a link to the sent object created for it. Declaration public SentEmailDto SendEmailAndConfirm(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailAndConfirmAsync(Guid, SendEmailOptions, int, CancellationToken) Send email and return sent confirmation Sister method for standard sendEmail method with the benefit of returning a SentEmail entity confirming the successful sending of the email with a link to the sent object created for it. Declaration public Task<SentEmailDto> SendEmailAndConfirmAsync(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailAndConfirmWithHttpInfo(Guid, SendEmailOptions, int) Send email and return sent confirmation Sister method for standard sendEmail method with the benefit of returning a SentEmail entity confirming the successful sending of the email with a link to the sent object created for it. Declaration public ApiResponse<SentEmailDto> SendEmailAndConfirmWithHttpInfo(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailAndConfirmWithHttpInfoAsync(Guid, SendEmailOptions, int, CancellationToken) Send email and return sent confirmation Sister method for standard sendEmail method with the benefit of returning a SentEmail entity confirming the successful sending of the email with a link to the sent object created for it. Declaration public Task<ApiResponse<SentEmailDto>> SendEmailAndConfirmWithHttpInfoAsync(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailAsync(Guid, SendEmailOptions, int, CancellationToken) Send Email Send an email from an inbox's email address. The request body should contain the SendEmailOptions that include recipients, attachments, body etc. See SendEmailOptions for all available properties. Note the inboxId refers to the inbox's id not the inbox's email address. See https://www.mailslurp.com/guides/ for more information on how to send emails. This method does not return a sent email entity due to legacy reasons. To send and get a sent email as returned response use the sister method sendEmailAndConfirm. Declaration public Task SendEmailAsync(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailWithHttpInfo(Guid, SendEmailOptions, int) Send Email Send an email from an inbox's email address. The request body should contain the SendEmailOptions that include recipients, attachments, body etc. See SendEmailOptions for all available properties. Note the inboxId refers to the inbox's id not the inbox's email address. See https://www.mailslurp.com/guides/ for more information on how to send emails. This method does not return a sent email entity due to legacy reasons. To send and get a sent email as returned response use the sister method sendEmailAndConfirm. Declaration public ApiResponse<object> SendEmailWithHttpInfo(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailWithHttpInfoAsync(Guid, SendEmailOptions, int, CancellationToken) Send Email Send an email from an inbox's email address. The request body should contain the SendEmailOptions that include recipients, attachments, body etc. See SendEmailOptions for all available properties. Note the inboxId refers to the inbox's id not the inbox's email address. See https://www.mailslurp.com/guides/ for more information on how to send emails. This method does not return a sent email entity due to legacy reasons. To send and get a sent email as returned response use the sister method sendEmailAndConfirm. Declaration public Task<ApiResponse<object>> SendEmailWithHttpInfoAsync(Guid inboxId, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailWithQueue(Guid, bool, SendEmailOptions, int) Send email with queue Send an email using a queue. Will place the email onto a queue that will then be processed and sent. Use this queue method to enable any failed email sending to be recovered. This will prevent lost emails when sending if your account encounters a block or payment issue. Declaration public void SendEmailWithQueue(Guid inboxId, bool validateBeforeEnqueue, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from bool validateBeforeEnqueue Validate before adding to queue SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailWithQueueAsync(Guid, bool, SendEmailOptions, int, CancellationToken) Send email with queue Send an email using a queue. Will place the email onto a queue that will then be processed and sent. Use this queue method to enable any failed email sending to be recovered. This will prevent lost emails when sending if your account encounters a block or payment issue. Declaration public Task SendEmailWithQueueAsync(Guid inboxId, bool validateBeforeEnqueue, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from bool validateBeforeEnqueue Validate before adding to queue SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailWithQueueWithHttpInfo(Guid, bool, SendEmailOptions, int) Send email with queue Send an email using a queue. Will place the email onto a queue that will then be processed and sent. Use this queue method to enable any failed email sending to be recovered. This will prevent lost emails when sending if your account encounters a block or payment issue. Declaration public ApiResponse<object> SendEmailWithQueueWithHttpInfo(Guid inboxId, bool validateBeforeEnqueue, SendEmailOptions sendEmailOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from bool validateBeforeEnqueue Validate before adding to queue SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendEmailWithQueueWithHttpInfoAsync(Guid, bool, SendEmailOptions, int, CancellationToken) Send email with queue Send an email using a queue. Will place the email onto a queue that will then be processed and sent. Use this queue method to enable any failed email sending to be recovered. This will prevent lost emails when sending if your account encounters a block or payment issue. Declaration public Task<ApiResponse<object>> SendEmailWithQueueWithHttpInfoAsync(Guid inboxId, bool validateBeforeEnqueue, SendEmailOptions sendEmailOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from bool validateBeforeEnqueue Validate before adding to queue SendEmailOptions sendEmailOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendSmtpEnvelope(Guid, SendSMTPEnvelopeOptions, int) Send email using an SMTP mail envelope and message body and return sent confirmation Send email using an SMTP envelope containing RCPT TO, MAIL FROM, and a SMTP BODY. Declaration public SentEmailDto SendSmtpEnvelope(Guid inboxId, SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendSmtpEnvelopeAsync(Guid, SendSMTPEnvelopeOptions, int, CancellationToken) Send email using an SMTP mail envelope and message body and return sent confirmation Send email using an SMTP envelope containing RCPT TO, MAIL FROM, and a SMTP BODY. Declaration public Task<SentEmailDto> SendSmtpEnvelopeAsync(Guid inboxId, SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendSmtpEnvelopeWithHttpInfo(Guid, SendSMTPEnvelopeOptions, int) Send email using an SMTP mail envelope and message body and return sent confirmation Send email using an SMTP envelope containing RCPT TO, MAIL FROM, and a SMTP BODY. Declaration public ApiResponse<SentEmailDto> SendSmtpEnvelopeWithHttpInfo(Guid inboxId, SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendSmtpEnvelopeWithHttpInfoAsync(Guid, SendSMTPEnvelopeOptions, int, CancellationToken) Send email using an SMTP mail envelope and message body and return sent confirmation Send email using an SMTP envelope containing RCPT TO, MAIL FROM, and a SMTP BODY. Declaration public Task<ApiResponse<SentEmailDto>> SendSmtpEnvelopeWithHttpInfoAsync(Guid inboxId, SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendSMTPEnvelopeOptions sendSMTPEnvelopeOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestEmail(Guid, int) Send a test email to inbox Send an inbox a test email to test email receiving is working Declaration public void SendTestEmail(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestEmailAsync(Guid, int, CancellationToken) Send a test email to inbox Send an inbox a test email to test email receiving is working Declaration public Task SendTestEmailAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestEmailWithHttpInfo(Guid, int) Send a test email to inbox Send an inbox a test email to test email receiving is working Declaration public ApiResponse<object> SendTestEmailWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestEmailWithHttpInfoAsync(Guid, int, CancellationToken) Send a test email to inbox Send an inbox a test email to test email receiving is working Declaration public Task<ApiResponse<object>> SendTestEmailWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendWithSchedule(Guid, SendEmailOptions, DateTime?, long?, bool?, int) Send email with with delay or schedule Send an email using a delay. Will place the email onto a scheduler that will then be processed and sent. Use delays to schedule email sending. Declaration public ScheduledJobDto SendWithSchedule(Guid inboxId, SendEmailOptions sendEmailOptions, DateTime? sendAtTimestamp = null, long? sendAtNowPlusSeconds = null, bool? validateBeforeEnqueue = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions DateTime? sendAtTimestamp Sending timestamp (optional) long? sendAtNowPlusSeconds Send after n seconds (optional) bool? validateBeforeEnqueue Validate before adding to queue (optional) int operationIndex Index associated with the operation. Returns Type Description ScheduledJobDto ScheduledJobDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendWithScheduleAsync(Guid, SendEmailOptions, DateTime?, long?, bool?, int, CancellationToken) Send email with with delay or schedule Send an email using a delay. Will place the email onto a scheduler that will then be processed and sent. Use delays to schedule email sending. Declaration public Task<ScheduledJobDto> SendWithScheduleAsync(Guid inboxId, SendEmailOptions sendEmailOptions, DateTime? sendAtTimestamp = null, long? sendAtNowPlusSeconds = null, bool? validateBeforeEnqueue = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions DateTime? sendAtTimestamp Sending timestamp (optional) long? sendAtNowPlusSeconds Send after n seconds (optional) bool? validateBeforeEnqueue Validate before adding to queue (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ScheduledJobDto> Task of ScheduledJobDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendWithScheduleWithHttpInfo(Guid, SendEmailOptions, DateTime?, long?, bool?, int) Send email with with delay or schedule Send an email using a delay. Will place the email onto a scheduler that will then be processed and sent. Use delays to schedule email sending. Declaration public ApiResponse<ScheduledJobDto> SendWithScheduleWithHttpInfo(Guid inboxId, SendEmailOptions sendEmailOptions, DateTime? sendAtTimestamp = null, long? sendAtNowPlusSeconds = null, bool? validateBeforeEnqueue = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions DateTime? sendAtTimestamp Sending timestamp (optional) long? sendAtNowPlusSeconds Send after n seconds (optional) bool? validateBeforeEnqueue Validate before adding to queue (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ScheduledJobDto> ApiResponse of ScheduledJobDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendWithScheduleWithHttpInfoAsync(Guid, SendEmailOptions, DateTime?, long?, bool?, int, CancellationToken) Send email with with delay or schedule Send an email using a delay. Will place the email onto a scheduler that will then be processed and sent. Use delays to schedule email sending. Declaration public Task<ApiResponse<ScheduledJobDto>> SendWithScheduleWithHttpInfoAsync(Guid inboxId, SendEmailOptions sendEmailOptions, DateTime? sendAtTimestamp = null, long? sendAtNowPlusSeconds = null, bool? validateBeforeEnqueue = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of the inbox you want to send the email from SendEmailOptions sendEmailOptions DateTime? sendAtTimestamp Sending timestamp (optional) long? sendAtNowPlusSeconds Send after n seconds (optional) bool? validateBeforeEnqueue Validate before adding to queue (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ScheduledJobDto>> Task of ApiResponse (ScheduledJobDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SetInboxFavourited(Guid, SetInboxFavouritedOptions, int) Set inbox favourited state Set and return new favourite state for an inbox Declaration public InboxDto SetInboxFavourited(Guid inboxId, SetInboxFavouritedOptions setInboxFavouritedOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox to set favourite state SetInboxFavouritedOptions setInboxFavouritedOptions int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SetInboxFavouritedAsync(Guid, SetInboxFavouritedOptions, int, CancellationToken) Set inbox favourited state Set and return new favourite state for an inbox Declaration public Task<InboxDto> SetInboxFavouritedAsync(Guid inboxId, SetInboxFavouritedOptions setInboxFavouritedOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox to set favourite state SetInboxFavouritedOptions setInboxFavouritedOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SetInboxFavouritedWithHttpInfo(Guid, SetInboxFavouritedOptions, int) Set inbox favourited state Set and return new favourite state for an inbox Declaration public ApiResponse<InboxDto> SetInboxFavouritedWithHttpInfo(Guid inboxId, SetInboxFavouritedOptions setInboxFavouritedOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox to set favourite state SetInboxFavouritedOptions setInboxFavouritedOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source SetInboxFavouritedWithHttpInfoAsync(Guid, SetInboxFavouritedOptions, int, CancellationToken) Set inbox favourited state Set and return new favourite state for an inbox Declaration public Task<ApiResponse<InboxDto>> SetInboxFavouritedWithHttpInfoAsync(Guid inboxId, SetInboxFavouritedOptions setInboxFavouritedOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox to set favourite state SetInboxFavouritedOptions setInboxFavouritedOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInbox(Guid, UpdateInboxOptions, int) Update Inbox. Change name and description. Email address is not editable. Update editable fields on an inbox Declaration public InboxDto UpdateInbox(Guid inboxId, UpdateInboxOptions updateInboxOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId UpdateInboxOptions updateInboxOptions int operationIndex Index associated with the operation. Returns Type Description InboxDto InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxAsync(Guid, UpdateInboxOptions, int, CancellationToken) Update Inbox. Change name and description. Email address is not editable. Update editable fields on an inbox Declaration public Task<InboxDto> UpdateInboxAsync(Guid inboxId, UpdateInboxOptions updateInboxOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId UpdateInboxOptions updateInboxOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxDto> Task of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxWithHttpInfo(Guid, UpdateInboxOptions, int) Update Inbox. Change name and description. Email address is not editable. Update editable fields on an inbox Declaration public ApiResponse<InboxDto> UpdateInboxWithHttpInfo(Guid inboxId, UpdateInboxOptions updateInboxOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId UpdateInboxOptions updateInboxOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxDto> ApiResponse of InboxDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxWithHttpInfoAsync(Guid, UpdateInboxOptions, int, CancellationToken) Update Inbox. Change name and description. Email address is not editable. Update editable fields on an inbox Declaration public Task<ApiResponse<InboxDto>> UpdateInboxWithHttpInfoAsync(Guid inboxId, UpdateInboxOptions updateInboxOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId UpdateInboxOptions updateInboxOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxDto>> Task of ApiResponse (InboxDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IInboxControllerApi IInboxControllerApiSync IInboxControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.InboxForwarderControllerApi.html": {
    "href": "api/mailslurp.Api.InboxForwarderControllerApi.html",
    "title": "Class InboxForwarderControllerApi | MailSlurp",
    "keywords": "Class InboxForwarderControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object InboxForwarderControllerApi Implements IInboxForwarderControllerApi IInboxForwarderControllerApiSync IInboxForwarderControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class InboxForwarderControllerApi : IInboxForwarderControllerApi, IInboxForwarderControllerApiSync, IInboxForwarderControllerApiAsync, IApiAccessor Constructors View Source InboxForwarderControllerApi() Initializes a new instance of the InboxForwarderControllerApi class. Declaration public InboxForwarderControllerApi() View Source InboxForwarderControllerApi(Configuration) Initializes a new instance of the InboxForwarderControllerApi class using Configuration object Declaration public InboxForwarderControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source InboxForwarderControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the InboxForwarderControllerApi class using a Configuration object and client instance. Declaration public InboxForwarderControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source InboxForwarderControllerApi(string) Initializes a new instance of the InboxForwarderControllerApi class. Declaration public InboxForwarderControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CreateNewInboxForwarder(Guid, CreateInboxForwarderOptions, int) Create an inbox forwarder Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Declaration public InboxForwarderDto CreateNewInboxForwarder(Guid inboxId, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId Inbox id to attach forwarder to CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. Returns Type Description InboxForwarderDto InboxForwarderDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxForwarderAsync(Guid, CreateInboxForwarderOptions, int, CancellationToken) Create an inbox forwarder Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Declaration public Task<InboxForwarderDto> CreateNewInboxForwarderAsync(Guid inboxId, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Inbox id to attach forwarder to CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderDto> Task of InboxForwarderDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxForwarderWithHttpInfo(Guid, CreateInboxForwarderOptions, int) Create an inbox forwarder Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Declaration public ApiResponse<InboxForwarderDto> CreateNewInboxForwarderWithHttpInfo(Guid inboxId, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId Inbox id to attach forwarder to CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderDto> ApiResponse of InboxForwarderDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxForwarderWithHttpInfoAsync(Guid, CreateInboxForwarderOptions, int, CancellationToken) Create an inbox forwarder Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Declaration public Task<ApiResponse<InboxForwarderDto>> CreateNewInboxForwarderWithHttpInfoAsync(Guid inboxId, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Inbox id to attach forwarder to CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderDto>> Task of ApiResponse (InboxForwarderDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwarder(Guid, int) Delete an inbox forwarder Delete inbox forwarder Declaration public void DeleteInboxForwarder(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwarderAsync(Guid, int, CancellationToken) Delete an inbox forwarder Delete inbox forwarder Declaration public Task DeleteInboxForwarderAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwarders(Guid?, int) Delete inbox forwarders Delete inbox forwarders. Accepts optional inboxId filter. Declaration public void DeleteInboxForwarders(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to attach forwarder to (optional) int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwardersAsync(Guid?, int, CancellationToken) Delete inbox forwarders Delete inbox forwarders. Accepts optional inboxId filter. Declaration public Task DeleteInboxForwardersAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to attach forwarder to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwardersWithHttpInfo(Guid?, int) Delete inbox forwarders Delete inbox forwarders. Accepts optional inboxId filter. Declaration public ApiResponse<object> DeleteInboxForwardersWithHttpInfo(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to attach forwarder to (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwardersWithHttpInfoAsync(Guid?, int, CancellationToken) Delete inbox forwarders Delete inbox forwarders. Accepts optional inboxId filter. Declaration public Task<ApiResponse<object>> DeleteInboxForwardersWithHttpInfoAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to attach forwarder to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwarderWithHttpInfo(Guid, int) Delete an inbox forwarder Delete inbox forwarder Declaration public ApiResponse<object> DeleteInboxForwarderWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxForwarderWithHttpInfoAsync(Guid, int, CancellationToken) Delete an inbox forwarder Delete inbox forwarder Declaration public Task<ApiResponse<object>> DeleteInboxForwarderWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxForwarderEvents(int?, int?, string, int) Get all inbox forwarder events Get all inbox forwarder events Declaration public PageInboxForwarderEvents GetAllInboxForwarderEvents(int? page = null, int? size = null, string sort = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. Returns Type Description PageInboxForwarderEvents PageInboxForwarderEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxForwarderEventsAsync(int?, int?, string, int, CancellationToken) Get all inbox forwarder events Get all inbox forwarder events Declaration public Task<PageInboxForwarderEvents> GetAllInboxForwarderEventsAsync(int? page = null, int? size = null, string sort = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxForwarderEvents> Task of PageInboxForwarderEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxForwarderEventsWithHttpInfo(int?, int?, string, int) Get all inbox forwarder events Get all inbox forwarder events Declaration public ApiResponse<PageInboxForwarderEvents> GetAllInboxForwarderEventsWithHttpInfo(int? page = null, int? size = null, string sort = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxForwarderEvents> ApiResponse of PageInboxForwarderEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllInboxForwarderEventsWithHttpInfoAsync(int?, int?, string, int, CancellationToken) Get all inbox forwarder events Get all inbox forwarder events Declaration public Task<ApiResponse<PageInboxForwarderEvents>> GetAllInboxForwarderEventsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxForwarderEvents>> Task of ApiResponse (PageInboxForwarderEvents) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetForwarderEvent(Guid, int) Get a forwarder event Get forwarder event Declaration public InboxForwarderEventDto GetForwarderEvent(Guid eventId, int operationIndex = 0) Parameters Type Name Description Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. Returns Type Description InboxForwarderEventDto InboxForwarderEventDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetForwarderEventAsync(Guid, int, CancellationToken) Get a forwarder event Get forwarder event Declaration public Task<InboxForwarderEventDto> GetForwarderEventAsync(Guid eventId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderEventDto> Task of InboxForwarderEventDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetForwarderEventWithHttpInfo(Guid, int) Get a forwarder event Get forwarder event Declaration public ApiResponse<InboxForwarderEventDto> GetForwarderEventWithHttpInfo(Guid eventId, int operationIndex = 0) Parameters Type Name Description Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderEventDto> ApiResponse of InboxForwarderEventDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetForwarderEventWithHttpInfoAsync(Guid, int, CancellationToken) Get a forwarder event Get forwarder event Declaration public Task<ApiResponse<InboxForwarderEventDto>> GetForwarderEventWithHttpInfoAsync(Guid eventId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderEventDto>> Task of ApiResponse (InboxForwarderEventDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarder(Guid, int) Get an inbox forwarder Get inbox forwarder Declaration public InboxForwarderDto GetInboxForwarder(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. Returns Type Description InboxForwarderDto InboxForwarderDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderAsync(Guid, int, CancellationToken) Get an inbox forwarder Get inbox forwarder Declaration public Task<InboxForwarderDto> GetInboxForwarderAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderDto> Task of InboxForwarderDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEvent(Guid, Guid, int) Get an inbox forwarder event Get inbox forwarder event Declaration public InboxForwarderEventDto GetInboxForwarderEvent(Guid id, Guid eventId, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. Returns Type Description InboxForwarderEventDto InboxForwarderEventDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEventAsync(Guid, Guid, int, CancellationToken) Get an inbox forwarder event Get inbox forwarder event Declaration public Task<InboxForwarderEventDto> GetInboxForwarderEventAsync(Guid id, Guid eventId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderEventDto> Task of InboxForwarderEventDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEvents(Guid, int?, int?, string, int) Get an inbox forwarder event list Get inbox forwarder events Declaration public PageInboxForwarderEvents GetInboxForwarderEvents(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. Returns Type Description PageInboxForwarderEvents PageInboxForwarderEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEventsAsync(Guid, int?, int?, string, int, CancellationToken) Get an inbox forwarder event list Get inbox forwarder events Declaration public Task<PageInboxForwarderEvents> GetInboxForwarderEventsAsync(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxForwarderEvents> Task of PageInboxForwarderEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEventsWithHttpInfo(Guid, int?, int?, string, int) Get an inbox forwarder event list Get inbox forwarder events Declaration public ApiResponse<PageInboxForwarderEvents> GetInboxForwarderEventsWithHttpInfo(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxForwarderEvents> ApiResponse of PageInboxForwarderEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEventsWithHttpInfoAsync(Guid, int?, int?, string, int, CancellationToken) Get an inbox forwarder event list Get inbox forwarder events Declaration public Task<ApiResponse<PageInboxForwarderEvents>> GetInboxForwarderEventsWithHttpInfoAsync(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder int? page Optional page index in inbox forwarder event list pagination (optional, default to 0) int? size Optional page size in inbox forwarder event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxForwarderEvents>> Task of ApiResponse (PageInboxForwarderEvents) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEventWithHttpInfo(Guid, Guid, int) Get an inbox forwarder event Get inbox forwarder event Declaration public ApiResponse<InboxForwarderEventDto> GetInboxForwarderEventWithHttpInfo(Guid id, Guid eventId, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderEventDto> ApiResponse of InboxForwarderEventDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderEventWithHttpInfoAsync(Guid, Guid, int, CancellationToken) Get an inbox forwarder event Get inbox forwarder event Declaration public Task<ApiResponse<InboxForwarderEventDto>> GetInboxForwarderEventWithHttpInfoAsync(Guid id, Guid eventId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder Guid eventId ID of inbox forwarder event int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderEventDto>> Task of ApiResponse (InboxForwarderEventDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarders(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) List inbox forwarders List all forwarders attached to an inbox Declaration public PageInboxForwarderDto GetInboxForwarders(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to get forwarders from (optional) int? page Optional page index in inbox forwarder list pagination (optional, default to 0) int? size Optional page size in inbox forwarder list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageInboxForwarderDto PageInboxForwarderDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwardersAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox forwarders List all forwarders attached to an inbox Declaration public Task<PageInboxForwarderDto> GetInboxForwardersAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to get forwarders from (optional) int? page Optional page index in inbox forwarder list pagination (optional, default to 0) int? size Optional page size in inbox forwarder list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxForwarderDto> Task of PageInboxForwarderDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwardersWithHttpInfo(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) List inbox forwarders List all forwarders attached to an inbox Declaration public ApiResponse<PageInboxForwarderDto> GetInboxForwardersWithHttpInfo(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to get forwarders from (optional) int? page Optional page index in inbox forwarder list pagination (optional, default to 0) int? size Optional page size in inbox forwarder list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxForwarderDto> ApiResponse of PageInboxForwarderDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwardersWithHttpInfoAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox forwarders List all forwarders attached to an inbox Declaration public Task<ApiResponse<PageInboxForwarderDto>> GetInboxForwardersWithHttpInfoAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to get forwarders from (optional) int? page Optional page index in inbox forwarder list pagination (optional, default to 0) int? size Optional page size in inbox forwarder list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxForwarderDto>> Task of ApiResponse (PageInboxForwarderDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderWithHttpInfo(Guid, int) Get an inbox forwarder Get inbox forwarder Declaration public ApiResponse<InboxForwarderDto> GetInboxForwarderWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderDto> ApiResponse of InboxForwarderDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxForwarderWithHttpInfoAsync(Guid, int, CancellationToken) Get an inbox forwarder Get inbox forwarder Declaration public Task<ApiResponse<InboxForwarderDto>> GetInboxForwarderWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderDto>> Task of ApiResponse (InboxForwarderDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwarder(Guid, InboxForwarderTestOptions, int) Test an inbox forwarder Test an inbox forwarder Declaration public InboxForwarderTestResult TestInboxForwarder(Guid id, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. Returns Type Description InboxForwarderTestResult InboxForwarderTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwarderAsync(Guid, InboxForwarderTestOptions, int, CancellationToken) Test an inbox forwarder Test an inbox forwarder Declaration public Task<InboxForwarderTestResult> TestInboxForwarderAsync(Guid id, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderTestResult> Task of InboxForwarderTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwardersForInbox(Guid, InboxForwarderTestOptions, int) Test inbox forwarders for inbox Test inbox forwarders for inbox Declaration public InboxForwarderTestResult TestInboxForwardersForInbox(Guid inboxId, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. Returns Type Description InboxForwarderTestResult InboxForwarderTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwardersForInboxAsync(Guid, InboxForwarderTestOptions, int, CancellationToken) Test inbox forwarders for inbox Test inbox forwarders for inbox Declaration public Task<InboxForwarderTestResult> TestInboxForwardersForInboxAsync(Guid inboxId, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderTestResult> Task of InboxForwarderTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwardersForInboxWithHttpInfo(Guid, InboxForwarderTestOptions, int) Test inbox forwarders for inbox Test inbox forwarders for inbox Declaration public ApiResponse<InboxForwarderTestResult> TestInboxForwardersForInboxWithHttpInfo(Guid inboxId, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderTestResult> ApiResponse of InboxForwarderTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwardersForInboxWithHttpInfoAsync(Guid, InboxForwarderTestOptions, int, CancellationToken) Test inbox forwarders for inbox Test inbox forwarders for inbox Declaration public Task<ApiResponse<InboxForwarderTestResult>> TestInboxForwardersForInboxWithHttpInfoAsync(Guid inboxId, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderTestResult>> Task of ApiResponse (InboxForwarderTestResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwarderWithHttpInfo(Guid, InboxForwarderTestOptions, int) Test an inbox forwarder Test an inbox forwarder Declaration public ApiResponse<InboxForwarderTestResult> TestInboxForwarderWithHttpInfo(Guid id, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderTestResult> ApiResponse of InboxForwarderTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxForwarderWithHttpInfoAsync(Guid, InboxForwarderTestOptions, int, CancellationToken) Test an inbox forwarder Test an inbox forwarder Declaration public Task<ApiResponse<InboxForwarderTestResult>> TestInboxForwarderWithHttpInfoAsync(Guid id, InboxForwarderTestOptions inboxForwarderTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder InboxForwarderTestOptions inboxForwarderTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderTestResult>> Task of ApiResponse (InboxForwarderTestResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxForwarder(TestNewInboxForwarderOptions, int) Test new inbox forwarder Test new inbox forwarder Declaration public InboxForwarderTestResult TestNewInboxForwarder(TestNewInboxForwarderOptions testNewInboxForwarderOptions, int operationIndex = 0) Parameters Type Name Description TestNewInboxForwarderOptions testNewInboxForwarderOptions int operationIndex Index associated with the operation. Returns Type Description InboxForwarderTestResult InboxForwarderTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxForwarderAsync(TestNewInboxForwarderOptions, int, CancellationToken) Test new inbox forwarder Test new inbox forwarder Declaration public Task<InboxForwarderTestResult> TestNewInboxForwarderAsync(TestNewInboxForwarderOptions testNewInboxForwarderOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestNewInboxForwarderOptions testNewInboxForwarderOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderTestResult> Task of InboxForwarderTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxForwarderWithHttpInfo(TestNewInboxForwarderOptions, int) Test new inbox forwarder Test new inbox forwarder Declaration public ApiResponse<InboxForwarderTestResult> TestNewInboxForwarderWithHttpInfo(TestNewInboxForwarderOptions testNewInboxForwarderOptions, int operationIndex = 0) Parameters Type Name Description TestNewInboxForwarderOptions testNewInboxForwarderOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderTestResult> ApiResponse of InboxForwarderTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxForwarderWithHttpInfoAsync(TestNewInboxForwarderOptions, int, CancellationToken) Test new inbox forwarder Test new inbox forwarder Declaration public Task<ApiResponse<InboxForwarderTestResult>> TestNewInboxForwarderWithHttpInfoAsync(TestNewInboxForwarderOptions testNewInboxForwarderOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestNewInboxForwarderOptions testNewInboxForwarderOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderTestResult>> Task of ApiResponse (InboxForwarderTestResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxForwarder(Guid, CreateInboxForwarderOptions, int) Update an inbox forwarder Update inbox forwarder Declaration public InboxForwarderDto UpdateInboxForwarder(Guid id, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. Returns Type Description InboxForwarderDto InboxForwarderDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxForwarderAsync(Guid, CreateInboxForwarderOptions, int, CancellationToken) Update an inbox forwarder Update inbox forwarder Declaration public Task<InboxForwarderDto> UpdateInboxForwarderAsync(Guid id, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxForwarderDto> Task of InboxForwarderDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxForwarderWithHttpInfo(Guid, CreateInboxForwarderOptions, int) Update an inbox forwarder Update inbox forwarder Declaration public ApiResponse<InboxForwarderDto> UpdateInboxForwarderWithHttpInfo(Guid id, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox forwarder CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxForwarderDto> ApiResponse of InboxForwarderDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxForwarderWithHttpInfoAsync(Guid, CreateInboxForwarderOptions, int, CancellationToken) Update an inbox forwarder Update inbox forwarder Declaration public Task<ApiResponse<InboxForwarderDto>> UpdateInboxForwarderWithHttpInfoAsync(Guid id, CreateInboxForwarderOptions createInboxForwarderOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox forwarder CreateInboxForwarderOptions createInboxForwarderOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxForwarderDto>> Task of ApiResponse (InboxForwarderDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IInboxForwarderControllerApi IInboxForwarderControllerApiSync IInboxForwarderControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.InboxReplierControllerApi.html": {
    "href": "api/mailslurp.Api.InboxReplierControllerApi.html",
    "title": "Class InboxReplierControllerApi | MailSlurp",
    "keywords": "Class InboxReplierControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object InboxReplierControllerApi Implements IInboxReplierControllerApi IInboxReplierControllerApiSync IInboxReplierControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class InboxReplierControllerApi : IInboxReplierControllerApi, IInboxReplierControllerApiSync, IInboxReplierControllerApiAsync, IApiAccessor Constructors View Source InboxReplierControllerApi() Initializes a new instance of the InboxReplierControllerApi class. Declaration public InboxReplierControllerApi() View Source InboxReplierControllerApi(Configuration) Initializes a new instance of the InboxReplierControllerApi class using Configuration object Declaration public InboxReplierControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source InboxReplierControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the InboxReplierControllerApi class using a Configuration object and client instance. Declaration public InboxReplierControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source InboxReplierControllerApi(string) Initializes a new instance of the InboxReplierControllerApi class. Declaration public InboxReplierControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CreateNewInboxReplier(CreateInboxReplierOptions, int) Create an inbox replier Create a new inbox rule for reply toing, blocking, and allowing emails when sending and receiving Declaration public InboxReplierDto CreateNewInboxReplier(CreateInboxReplierOptions createInboxReplierOptions, int operationIndex = 0) Parameters Type Name Description CreateInboxReplierOptions createInboxReplierOptions int operationIndex Index associated with the operation. Returns Type Description InboxReplierDto InboxReplierDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxReplierAsync(CreateInboxReplierOptions, int, CancellationToken) Create an inbox replier Create a new inbox rule for reply toing, blocking, and allowing emails when sending and receiving Declaration public Task<InboxReplierDto> CreateNewInboxReplierAsync(CreateInboxReplierOptions createInboxReplierOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateInboxReplierOptions createInboxReplierOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxReplierDto> Task of InboxReplierDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxReplierWithHttpInfo(CreateInboxReplierOptions, int) Create an inbox replier Create a new inbox rule for reply toing, blocking, and allowing emails when sending and receiving Declaration public ApiResponse<InboxReplierDto> CreateNewInboxReplierWithHttpInfo(CreateInboxReplierOptions createInboxReplierOptions, int operationIndex = 0) Parameters Type Name Description CreateInboxReplierOptions createInboxReplierOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxReplierDto> ApiResponse of InboxReplierDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxReplierWithHttpInfoAsync(CreateInboxReplierOptions, int, CancellationToken) Create an inbox replier Create a new inbox rule for reply toing, blocking, and allowing emails when sending and receiving Declaration public Task<ApiResponse<InboxReplierDto>> CreateNewInboxReplierWithHttpInfoAsync(CreateInboxReplierOptions createInboxReplierOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateInboxReplierOptions createInboxReplierOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxReplierDto>> Task of ApiResponse (InboxReplierDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxReplier(Guid, int) Delete an inbox replier Delete inbox replier Declaration public void DeleteInboxReplier(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxReplierAsync(Guid, int, CancellationToken) Delete an inbox replier Delete inbox replier Declaration public Task DeleteInboxReplierAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRepliers(Guid?, int) Delete inbox repliers Delete inbox repliers. Accepts optional inboxId filter. Declaration public void DeleteInboxRepliers(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to attach replier to (optional) int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRepliersAsync(Guid?, int, CancellationToken) Delete inbox repliers Delete inbox repliers. Accepts optional inboxId filter. Declaration public Task DeleteInboxRepliersAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to attach replier to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRepliersWithHttpInfo(Guid?, int) Delete inbox repliers Delete inbox repliers. Accepts optional inboxId filter. Declaration public ApiResponse<object> DeleteInboxRepliersWithHttpInfo(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to attach replier to (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRepliersWithHttpInfoAsync(Guid?, int, CancellationToken) Delete inbox repliers Delete inbox repliers. Accepts optional inboxId filter. Declaration public Task<ApiResponse<object>> DeleteInboxRepliersWithHttpInfoAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to attach replier to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxReplierWithHttpInfo(Guid, int) Delete an inbox replier Delete inbox replier Declaration public ApiResponse<object> DeleteInboxReplierWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxReplierWithHttpInfoAsync(Guid, int, CancellationToken) Delete an inbox replier Delete inbox replier Declaration public Task<ApiResponse<object>> DeleteInboxReplierWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetInboxReplier(Guid, int) Get an inbox replier Get inbox ruleset Declaration public InboxReplierDto GetInboxReplier(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. Returns Type Description InboxReplierDto InboxReplierDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierAsync(Guid, int, CancellationToken) Get an inbox replier Get inbox ruleset Declaration public Task<InboxReplierDto> GetInboxReplierAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxReplierDto> Task of InboxReplierDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierEvents(Guid, int?, int?, string, int) Get an inbox replier event list Get inbox ruleset events Declaration public PageInboxReplierEvents GetInboxReplierEvents(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier int? page Optional page index in inbox replier event list pagination (optional, default to 0) int? size Optional page size in inbox replier event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. Returns Type Description PageInboxReplierEvents PageInboxReplierEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierEventsAsync(Guid, int?, int?, string, int, CancellationToken) Get an inbox replier event list Get inbox ruleset events Declaration public Task<PageInboxReplierEvents> GetInboxReplierEventsAsync(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier int? page Optional page index in inbox replier event list pagination (optional, default to 0) int? size Optional page size in inbox replier event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxReplierEvents> Task of PageInboxReplierEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierEventsWithHttpInfo(Guid, int?, int?, string, int) Get an inbox replier event list Get inbox ruleset events Declaration public ApiResponse<PageInboxReplierEvents> GetInboxReplierEventsWithHttpInfo(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier int? page Optional page index in inbox replier event list pagination (optional, default to 0) int? size Optional page size in inbox replier event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxReplierEvents> ApiResponse of PageInboxReplierEvents Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierEventsWithHttpInfoAsync(Guid, int?, int?, string, int, CancellationToken) Get an inbox replier event list Get inbox ruleset events Declaration public Task<ApiResponse<PageInboxReplierEvents>> GetInboxReplierEventsWithHttpInfoAsync(Guid id, int? page = null, int? size = null, string sort = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier int? page Optional page index in inbox replier event list pagination (optional, default to 0) int? size Optional page size in inbox replier event list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxReplierEvents>> Task of ApiResponse (PageInboxReplierEvents) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRepliers(Guid?, int?, int?, string, DateTime?, DateTime?, int) List inbox repliers List all repliers attached to an inbox Declaration public PageInboxReplierDto GetInboxRepliers(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to get repliers from (optional) int? page Optional page index in inbox replier list pagination (optional, default to 0) int? size Optional page size in inbox replier list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageInboxReplierDto PageInboxReplierDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRepliersAsync(Guid?, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) List inbox repliers List all repliers attached to an inbox Declaration public Task<PageInboxReplierDto> GetInboxRepliersAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to get repliers from (optional) int? page Optional page index in inbox replier list pagination (optional, default to 0) int? size Optional page size in inbox replier list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxReplierDto> Task of PageInboxReplierDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRepliersWithHttpInfo(Guid?, int?, int?, string, DateTime?, DateTime?, int) List inbox repliers List all repliers attached to an inbox Declaration public ApiResponse<PageInboxReplierDto> GetInboxRepliersWithHttpInfo(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to get repliers from (optional) int? page Optional page index in inbox replier list pagination (optional, default to 0) int? size Optional page size in inbox replier list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxReplierDto> ApiResponse of PageInboxReplierDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRepliersWithHttpInfoAsync(Guid?, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) List inbox repliers List all repliers attached to an inbox Declaration public Task<ApiResponse<PageInboxReplierDto>> GetInboxRepliersWithHttpInfoAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to get repliers from (optional) int? page Optional page index in inbox replier list pagination (optional, default to 0) int? size Optional page size in inbox replier list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxReplierDto>> Task of ApiResponse (PageInboxReplierDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierWithHttpInfo(Guid, int) Get an inbox replier Get inbox ruleset Declaration public ApiResponse<InboxReplierDto> GetInboxReplierWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxReplierDto> ApiResponse of InboxReplierDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxReplierWithHttpInfoAsync(Guid, int, CancellationToken) Get an inbox replier Get inbox ruleset Declaration public Task<ApiResponse<InboxReplierDto>> GetInboxReplierWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxReplierDto>> Task of ApiResponse (InboxReplierDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxReplier(Guid, UpdateInboxReplierOptions, int) Update an inbox replier Update inbox ruleset Declaration public InboxReplierDto UpdateInboxReplier(Guid id, UpdateInboxReplierOptions updateInboxReplierOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier UpdateInboxReplierOptions updateInboxReplierOptions int operationIndex Index associated with the operation. Returns Type Description InboxReplierDto InboxReplierDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxReplierAsync(Guid, UpdateInboxReplierOptions, int, CancellationToken) Update an inbox replier Update inbox ruleset Declaration public Task<InboxReplierDto> UpdateInboxReplierAsync(Guid id, UpdateInboxReplierOptions updateInboxReplierOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier UpdateInboxReplierOptions updateInboxReplierOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxReplierDto> Task of InboxReplierDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxReplierWithHttpInfo(Guid, UpdateInboxReplierOptions, int) Update an inbox replier Update inbox ruleset Declaration public ApiResponse<InboxReplierDto> UpdateInboxReplierWithHttpInfo(Guid id, UpdateInboxReplierOptions updateInboxReplierOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox replier UpdateInboxReplierOptions updateInboxReplierOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxReplierDto> ApiResponse of InboxReplierDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateInboxReplierWithHttpInfoAsync(Guid, UpdateInboxReplierOptions, int, CancellationToken) Update an inbox replier Update inbox ruleset Declaration public Task<ApiResponse<InboxReplierDto>> UpdateInboxReplierWithHttpInfoAsync(Guid id, UpdateInboxReplierOptions updateInboxReplierOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox replier UpdateInboxReplierOptions updateInboxReplierOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxReplierDto>> Task of ApiResponse (InboxReplierDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IInboxReplierControllerApi IInboxReplierControllerApiSync IInboxReplierControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.InboxRulesetControllerApi.html": {
    "href": "api/mailslurp.Api.InboxRulesetControllerApi.html",
    "title": "Class InboxRulesetControllerApi | MailSlurp",
    "keywords": "Class InboxRulesetControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object InboxRulesetControllerApi Implements IInboxRulesetControllerApi IInboxRulesetControllerApiSync IInboxRulesetControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class InboxRulesetControllerApi : IInboxRulesetControllerApi, IInboxRulesetControllerApiSync, IInboxRulesetControllerApiAsync, IApiAccessor Constructors View Source InboxRulesetControllerApi() Initializes a new instance of the InboxRulesetControllerApi class. Declaration public InboxRulesetControllerApi() View Source InboxRulesetControllerApi(Configuration) Initializes a new instance of the InboxRulesetControllerApi class using Configuration object Declaration public InboxRulesetControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source InboxRulesetControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the InboxRulesetControllerApi class using a Configuration object and client instance. Declaration public InboxRulesetControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source InboxRulesetControllerApi(string) Initializes a new instance of the InboxRulesetControllerApi class. Declaration public InboxRulesetControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CreateNewInboxRuleset(CreateInboxRulesetOptions, Guid?, int) Create an inbox ruleset Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Declaration public InboxRulesetDto CreateNewInboxRuleset(CreateInboxRulesetOptions createInboxRulesetOptions, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description CreateInboxRulesetOptions createInboxRulesetOptions Guid? inboxId Inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. Returns Type Description InboxRulesetDto InboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxRulesetAsync(CreateInboxRulesetOptions, Guid?, int, CancellationToken) Create an inbox ruleset Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Declaration public Task<InboxRulesetDto> CreateNewInboxRulesetAsync(CreateInboxRulesetOptions createInboxRulesetOptions, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateInboxRulesetOptions createInboxRulesetOptions Guid? inboxId Inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxRulesetDto> Task of InboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxRulesetWithHttpInfo(CreateInboxRulesetOptions, Guid?, int) Create an inbox ruleset Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Declaration public ApiResponse<InboxRulesetDto> CreateNewInboxRulesetWithHttpInfo(CreateInboxRulesetOptions createInboxRulesetOptions, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description CreateInboxRulesetOptions createInboxRulesetOptions Guid? inboxId Inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxRulesetDto> ApiResponse of InboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateNewInboxRulesetWithHttpInfoAsync(CreateInboxRulesetOptions, Guid?, int, CancellationToken) Create an inbox ruleset Create a new inbox rule for forwarding, blocking, and allowing emails when sending and receiving Declaration public Task<ApiResponse<InboxRulesetDto>> CreateNewInboxRulesetWithHttpInfoAsync(CreateInboxRulesetOptions createInboxRulesetOptions, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateInboxRulesetOptions createInboxRulesetOptions Guid? inboxId Inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxRulesetDto>> Task of ApiResponse (InboxRulesetDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRuleset(Guid, int) Delete an inbox ruleset Delete inbox ruleset Declaration public void DeleteInboxRuleset(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesetAsync(Guid, int, CancellationToken) Delete an inbox ruleset Delete inbox ruleset Declaration public Task DeleteInboxRulesetAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesets(Guid?, int) Delete inbox rulesets Delete inbox rulesets. Accepts optional inboxId filter. Declaration public void DeleteInboxRulesets(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesetsAsync(Guid?, int, CancellationToken) Delete inbox rulesets Delete inbox rulesets. Accepts optional inboxId filter. Declaration public Task DeleteInboxRulesetsAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesetsWithHttpInfo(Guid?, int) Delete inbox rulesets Delete inbox rulesets. Accepts optional inboxId filter. Declaration public ApiResponse<object> DeleteInboxRulesetsWithHttpInfo(Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesetsWithHttpInfoAsync(Guid?, int, CancellationToken) Delete inbox rulesets Delete inbox rulesets. Accepts optional inboxId filter. Declaration public Task<ApiResponse<object>> DeleteInboxRulesetsWithHttpInfoAsync(Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to attach ruleset to (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesetWithHttpInfo(Guid, int) Delete an inbox ruleset Delete inbox ruleset Declaration public ApiResponse<object> DeleteInboxRulesetWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteInboxRulesetWithHttpInfoAsync(Guid, int, CancellationToken) Delete an inbox ruleset Delete inbox ruleset Declaration public Task<ApiResponse<object>> DeleteInboxRulesetWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetInboxRuleset(Guid, int) Get an inbox ruleset Get inbox ruleset Declaration public InboxRulesetDto GetInboxRuleset(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. Returns Type Description InboxRulesetDto InboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesetAsync(Guid, int, CancellationToken) Get an inbox ruleset Get inbox ruleset Declaration public Task<InboxRulesetDto> GetInboxRulesetAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxRulesetDto> Task of InboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesets(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) List inbox rulesets List all rulesets attached to an inbox Declaration public PageInboxRulesetDto GetInboxRulesets(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to get rulesets from (optional) int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageInboxRulesetDto PageInboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesetsAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox rulesets List all rulesets attached to an inbox Declaration public Task<PageInboxRulesetDto> GetInboxRulesetsAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to get rulesets from (optional) int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageInboxRulesetDto> Task of PageInboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesetsWithHttpInfo(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) List inbox rulesets List all rulesets attached to an inbox Declaration public ApiResponse<PageInboxRulesetDto> GetInboxRulesetsWithHttpInfo(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inbox id to get rulesets from (optional) int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageInboxRulesetDto> ApiResponse of PageInboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesetsWithHttpInfoAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List inbox rulesets List all rulesets attached to an inbox Declaration public Task<ApiResponse<PageInboxRulesetDto>> GetInboxRulesetsWithHttpInfoAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inbox id to get rulesets from (optional) int? page Optional page index in inbox ruleset list pagination (optional, default to 0) int? size Optional page size in inbox ruleset list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageInboxRulesetDto>> Task of ApiResponse (PageInboxRulesetDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesetWithHttpInfo(Guid, int) Get an inbox ruleset Get inbox ruleset Declaration public ApiResponse<InboxRulesetDto> GetInboxRulesetWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxRulesetDto> ApiResponse of InboxRulesetDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxRulesetWithHttpInfoAsync(Guid, int, CancellationToken) Get an inbox ruleset Get inbox ruleset Declaration public Task<ApiResponse<InboxRulesetDto>> GetInboxRulesetWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox ruleset int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxRulesetDto>> Task of ApiResponse (InboxRulesetDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRuleset(Guid, InboxRulesetTestOptions, int) Test an inbox ruleset Test an inbox ruleset Declaration public InboxRulesetTestResult TestInboxRuleset(Guid id, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox ruleset InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. Returns Type Description InboxRulesetTestResult InboxRulesetTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetAsync(Guid, InboxRulesetTestOptions, int, CancellationToken) Test an inbox ruleset Test an inbox ruleset Declaration public Task<InboxRulesetTestResult> TestInboxRulesetAsync(Guid id, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox ruleset InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxRulesetTestResult> Task of InboxRulesetTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetReceiving(TestInboxRulesetReceivingOptions, int) Test receiving with inbox rulesets Test whether inbound emails from an email address would be blocked or allowed by inbox rulesets Declaration public TestInboxRulesetReceivingResult TestInboxRulesetReceiving(TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions, int operationIndex = 0) Parameters Type Name Description TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions int operationIndex Index associated with the operation. Returns Type Description TestInboxRulesetReceivingResult TestInboxRulesetReceivingResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetReceivingAsync(TestInboxRulesetReceivingOptions, int, CancellationToken) Test receiving with inbox rulesets Test whether inbound emails from an email address would be blocked or allowed by inbox rulesets Declaration public Task<TestInboxRulesetReceivingResult> TestInboxRulesetReceivingAsync(TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TestInboxRulesetReceivingResult> Task of TestInboxRulesetReceivingResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetReceivingWithHttpInfo(TestInboxRulesetReceivingOptions, int) Test receiving with inbox rulesets Test whether inbound emails from an email address would be blocked or allowed by inbox rulesets Declaration public ApiResponse<TestInboxRulesetReceivingResult> TestInboxRulesetReceivingWithHttpInfo(TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions, int operationIndex = 0) Parameters Type Name Description TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TestInboxRulesetReceivingResult> ApiResponse of TestInboxRulesetReceivingResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetReceivingWithHttpInfoAsync(TestInboxRulesetReceivingOptions, int, CancellationToken) Test receiving with inbox rulesets Test whether inbound emails from an email address would be blocked or allowed by inbox rulesets Declaration public Task<ApiResponse<TestInboxRulesetReceivingResult>> TestInboxRulesetReceivingWithHttpInfoAsync(TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestInboxRulesetReceivingOptions testInboxRulesetReceivingOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TestInboxRulesetReceivingResult>> Task of ApiResponse (TestInboxRulesetReceivingResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetSending(TestInboxRulesetSendingOptions, int) Test sending with inbox rulesets Test whether outbound emails to an email address would be blocked or allowed by inbox rulesets Declaration public TestInboxRulesetSendingResult TestInboxRulesetSending(TestInboxRulesetSendingOptions testInboxRulesetSendingOptions, int operationIndex = 0) Parameters Type Name Description TestInboxRulesetSendingOptions testInboxRulesetSendingOptions int operationIndex Index associated with the operation. Returns Type Description TestInboxRulesetSendingResult TestInboxRulesetSendingResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetSendingAsync(TestInboxRulesetSendingOptions, int, CancellationToken) Test sending with inbox rulesets Test whether outbound emails to an email address would be blocked or allowed by inbox rulesets Declaration public Task<TestInboxRulesetSendingResult> TestInboxRulesetSendingAsync(TestInboxRulesetSendingOptions testInboxRulesetSendingOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestInboxRulesetSendingOptions testInboxRulesetSendingOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TestInboxRulesetSendingResult> Task of TestInboxRulesetSendingResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetSendingWithHttpInfo(TestInboxRulesetSendingOptions, int) Test sending with inbox rulesets Test whether outbound emails to an email address would be blocked or allowed by inbox rulesets Declaration public ApiResponse<TestInboxRulesetSendingResult> TestInboxRulesetSendingWithHttpInfo(TestInboxRulesetSendingOptions testInboxRulesetSendingOptions, int operationIndex = 0) Parameters Type Name Description TestInboxRulesetSendingOptions testInboxRulesetSendingOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TestInboxRulesetSendingResult> ApiResponse of TestInboxRulesetSendingResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetSendingWithHttpInfoAsync(TestInboxRulesetSendingOptions, int, CancellationToken) Test sending with inbox rulesets Test whether outbound emails to an email address would be blocked or allowed by inbox rulesets Declaration public Task<ApiResponse<TestInboxRulesetSendingResult>> TestInboxRulesetSendingWithHttpInfoAsync(TestInboxRulesetSendingOptions testInboxRulesetSendingOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestInboxRulesetSendingOptions testInboxRulesetSendingOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TestInboxRulesetSendingResult>> Task of ApiResponse (TestInboxRulesetSendingResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetsForInbox(Guid, InboxRulesetTestOptions, int) Test inbox rulesets for inbox Test inbox rulesets for inbox Declaration public InboxRulesetTestResult TestInboxRulesetsForInbox(Guid inboxId, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. Returns Type Description InboxRulesetTestResult InboxRulesetTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetsForInboxAsync(Guid, InboxRulesetTestOptions, int, CancellationToken) Test inbox rulesets for inbox Test inbox rulesets for inbox Declaration public Task<InboxRulesetTestResult> TestInboxRulesetsForInboxAsync(Guid inboxId, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxRulesetTestResult> Task of InboxRulesetTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetsForInboxWithHttpInfo(Guid, InboxRulesetTestOptions, int) Test inbox rulesets for inbox Test inbox rulesets for inbox Declaration public ApiResponse<InboxRulesetTestResult> TestInboxRulesetsForInboxWithHttpInfo(Guid inboxId, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId ID of inbox InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxRulesetTestResult> ApiResponse of InboxRulesetTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetsForInboxWithHttpInfoAsync(Guid, InboxRulesetTestOptions, int, CancellationToken) Test inbox rulesets for inbox Test inbox rulesets for inbox Declaration public Task<ApiResponse<InboxRulesetTestResult>> TestInboxRulesetsForInboxWithHttpInfoAsync(Guid inboxId, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId ID of inbox InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxRulesetTestResult>> Task of ApiResponse (InboxRulesetTestResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetWithHttpInfo(Guid, InboxRulesetTestOptions, int) Test an inbox ruleset Test an inbox ruleset Declaration public ApiResponse<InboxRulesetTestResult> TestInboxRulesetWithHttpInfo(Guid id, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0) Parameters Type Name Description Guid id ID of inbox ruleset InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxRulesetTestResult> ApiResponse of InboxRulesetTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestInboxRulesetWithHttpInfoAsync(Guid, InboxRulesetTestOptions, int, CancellationToken) Test an inbox ruleset Test an inbox ruleset Declaration public Task<ApiResponse<InboxRulesetTestResult>> TestInboxRulesetWithHttpInfoAsync(Guid id, InboxRulesetTestOptions inboxRulesetTestOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id ID of inbox ruleset InboxRulesetTestOptions inboxRulesetTestOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxRulesetTestResult>> Task of ApiResponse (InboxRulesetTestResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxRuleset(TestNewInboxRulesetOptions, int) Test new inbox ruleset Test new inbox ruleset Declaration public InboxRulesetTestResult TestNewInboxRuleset(TestNewInboxRulesetOptions testNewInboxRulesetOptions, int operationIndex = 0) Parameters Type Name Description TestNewInboxRulesetOptions testNewInboxRulesetOptions int operationIndex Index associated with the operation. Returns Type Description InboxRulesetTestResult InboxRulesetTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxRulesetAsync(TestNewInboxRulesetOptions, int, CancellationToken) Test new inbox ruleset Test new inbox ruleset Declaration public Task<InboxRulesetTestResult> TestNewInboxRulesetAsync(TestNewInboxRulesetOptions testNewInboxRulesetOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestNewInboxRulesetOptions testNewInboxRulesetOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<InboxRulesetTestResult> Task of InboxRulesetTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxRulesetWithHttpInfo(TestNewInboxRulesetOptions, int) Test new inbox ruleset Test new inbox ruleset Declaration public ApiResponse<InboxRulesetTestResult> TestNewInboxRulesetWithHttpInfo(TestNewInboxRulesetOptions testNewInboxRulesetOptions, int operationIndex = 0) Parameters Type Name Description TestNewInboxRulesetOptions testNewInboxRulesetOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<InboxRulesetTestResult> ApiResponse of InboxRulesetTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestNewInboxRulesetWithHttpInfoAsync(TestNewInboxRulesetOptions, int, CancellationToken) Test new inbox ruleset Test new inbox ruleset Declaration public Task<ApiResponse<InboxRulesetTestResult>> TestNewInboxRulesetWithHttpInfoAsync(TestNewInboxRulesetOptions testNewInboxRulesetOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description TestNewInboxRulesetOptions testNewInboxRulesetOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<InboxRulesetTestResult>> Task of ApiResponse (InboxRulesetTestResult) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IInboxRulesetControllerApi IInboxRulesetControllerApiSync IInboxRulesetControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.IPhoneControllerApi.html": {
    "href": "api/mailslurp.Api.IPhoneControllerApi.html",
    "title": "Interface IPhoneControllerApi | MailSlurp",
    "keywords": "Interface IPhoneControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IPhoneControllerApiSync.CreateEmergencyAddress(CreateEmergencyAddressOptions, int) IPhoneControllerApiSync.CreateEmergencyAddressWithHttpInfo(CreateEmergencyAddressOptions, int) IPhoneControllerApiSync.DeleteEmergencyAddress(Guid, int) IPhoneControllerApiSync.DeleteEmergencyAddressWithHttpInfo(Guid, int) IPhoneControllerApiSync.DeletePhoneNumber(Guid, int) IPhoneControllerApiSync.DeletePhoneNumberWithHttpInfo(Guid, int) IPhoneControllerApiSync.GetEmergencyAddress(Guid, int) IPhoneControllerApiSync.GetEmergencyAddressWithHttpInfo(Guid, int) IPhoneControllerApiSync.GetEmergencyAddresses(int) IPhoneControllerApiSync.GetEmergencyAddressesWithHttpInfo(int) IPhoneControllerApiSync.GetPhoneNumber(Guid, int) IPhoneControllerApiSync.GetPhoneNumberWithHttpInfo(Guid, int) IPhoneControllerApiSync.GetPhoneNumbers(string, int?, int?, string, DateTime?, DateTime?, int) IPhoneControllerApiSync.GetPhoneNumbersWithHttpInfo(string, int?, int?, string, DateTime?, DateTime?, int) IPhoneControllerApiSync.GetPhonePlans(int) IPhoneControllerApiSync.GetPhonePlansWithHttpInfo(int) IPhoneControllerApiSync.TestPhoneNumberSendSms(Guid, TestPhoneNumberOptions, string, int) IPhoneControllerApiSync.TestPhoneNumberSendSmsWithHttpInfo(Guid, TestPhoneNumberOptions, string, int) IPhoneControllerApiAsync.CreateEmergencyAddressAsync(CreateEmergencyAddressOptions, int, CancellationToken) IPhoneControllerApiAsync.CreateEmergencyAddressWithHttpInfoAsync(CreateEmergencyAddressOptions, int, CancellationToken) IPhoneControllerApiAsync.DeleteEmergencyAddressAsync(Guid, int, CancellationToken) IPhoneControllerApiAsync.DeleteEmergencyAddressWithHttpInfoAsync(Guid, int, CancellationToken) IPhoneControllerApiAsync.DeletePhoneNumberAsync(Guid, int, CancellationToken) IPhoneControllerApiAsync.DeletePhoneNumberWithHttpInfoAsync(Guid, int, CancellationToken) IPhoneControllerApiAsync.GetEmergencyAddressAsync(Guid, int, CancellationToken) IPhoneControllerApiAsync.GetEmergencyAddressWithHttpInfoAsync(Guid, int, CancellationToken) IPhoneControllerApiAsync.GetEmergencyAddressesAsync(int, CancellationToken) IPhoneControllerApiAsync.GetEmergencyAddressesWithHttpInfoAsync(int, CancellationToken) IPhoneControllerApiAsync.GetPhoneNumberAsync(Guid, int, CancellationToken) IPhoneControllerApiAsync.GetPhoneNumberWithHttpInfoAsync(Guid, int, CancellationToken) IPhoneControllerApiAsync.GetPhoneNumbersAsync(string, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IPhoneControllerApiAsync.GetPhoneNumbersWithHttpInfoAsync(string, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IPhoneControllerApiAsync.GetPhonePlansAsync(int, CancellationToken) IPhoneControllerApiAsync.GetPhonePlansWithHttpInfoAsync(int, CancellationToken) IPhoneControllerApiAsync.TestPhoneNumberSendSmsAsync(Guid, TestPhoneNumberOptions, string, int, CancellationToken) IPhoneControllerApiAsync.TestPhoneNumberSendSmsWithHttpInfoAsync(Guid, TestPhoneNumberOptions, string, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IPhoneControllerApi : IPhoneControllerApiSync, IPhoneControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IPhoneControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IPhoneControllerApiAsync.html",
    "title": "Interface IPhoneControllerApiAsync | MailSlurp",
    "keywords": "Interface IPhoneControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IPhoneControllerApiAsync : IApiAccessor Methods View Source CreateEmergencyAddressAsync(CreateEmergencyAddressOptions, int, CancellationToken) Declaration Task<EmergencyAddress> CreateEmergencyAddressAsync(CreateEmergencyAddressOptions createEmergencyAddressOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateEmergencyAddressOptions createEmergencyAddressOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmergencyAddress> Task of EmergencyAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateEmergencyAddressWithHttpInfoAsync(CreateEmergencyAddressOptions, int, CancellationToken) Declaration Task<ApiResponse<EmergencyAddress>> CreateEmergencyAddressWithHttpInfoAsync(CreateEmergencyAddressOptions createEmergencyAddressOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateEmergencyAddressOptions createEmergencyAddressOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmergencyAddress>> Task of ApiResponse (EmergencyAddress) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmergencyAddressAsync(Guid, int, CancellationToken) Declaration Task<EmptyResponseDto> DeleteEmergencyAddressAsync(Guid addressId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmptyResponseDto> Task of EmptyResponseDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmergencyAddressWithHttpInfoAsync(Guid, int, CancellationToken) Declaration Task<ApiResponse<EmptyResponseDto>> DeleteEmergencyAddressWithHttpInfoAsync(Guid addressId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmptyResponseDto>> Task of ApiResponse (EmptyResponseDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeletePhoneNumberAsync(Guid, int, CancellationToken) Declaration Task DeletePhoneNumberAsync(Guid phoneNumberId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeletePhoneNumberWithHttpInfoAsync(Guid, int, CancellationToken) Declaration Task<ApiResponse<object>> DeletePhoneNumberWithHttpInfoAsync(Guid phoneNumberId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddressAsync(Guid, int, CancellationToken) Declaration Task<EmergencyAddress> GetEmergencyAddressAsync(Guid addressId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmergencyAddress> Task of EmergencyAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddressesAsync(int, CancellationToken) Declaration Task<List<EmergencyAddressDto>> GetEmergencyAddressesAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<EmergencyAddressDto>> Task of List<EmergencyAddressDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddressesWithHttpInfoAsync(int, CancellationToken) Declaration Task<ApiResponse<List<EmergencyAddressDto>>> GetEmergencyAddressesWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<EmergencyAddressDto>>> Task of ApiResponse (List<EmergencyAddressDto>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddressWithHttpInfoAsync(Guid, int, CancellationToken) Declaration Task<ApiResponse<EmergencyAddress>> GetEmergencyAddressWithHttpInfoAsync(Guid addressId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmergencyAddress>> Task of ApiResponse (EmergencyAddress) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberAsync(Guid, int, CancellationToken) Declaration Task<PhoneNumberDto> GetPhoneNumberAsync(Guid phoneNumberId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PhoneNumberDto> Task of PhoneNumberDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumbersAsync(string, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<PagePhoneNumberProjection> GetPhoneNumbersAsync(string phoneCountry = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string phoneCountry Optional phone country (optional) int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PagePhoneNumberProjection> Task of PagePhoneNumberProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumbersWithHttpInfoAsync(string, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<ApiResponse<PagePhoneNumberProjection>> GetPhoneNumbersWithHttpInfoAsync(string phoneCountry = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string phoneCountry Optional phone country (optional) int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PagePhoneNumberProjection>> Task of ApiResponse (PagePhoneNumberProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberWithHttpInfoAsync(Guid, int, CancellationToken) Declaration Task<ApiResponse<PhoneNumberDto>> GetPhoneNumberWithHttpInfoAsync(Guid phoneNumberId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PhoneNumberDto>> Task of ApiResponse (PhoneNumberDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhonePlansAsync(int, CancellationToken) Declaration Task<List<PhonePlanDto>> GetPhonePlansAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<PhonePlanDto>> Task of List<PhonePlanDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhonePlansWithHttpInfoAsync(int, CancellationToken) Declaration Task<ApiResponse<List<PhonePlanDto>>> GetPhonePlansWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<PhonePlanDto>>> Task of ApiResponse (List<PhonePlanDto>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestPhoneNumberSendSmsAsync(Guid, TestPhoneNumberOptions, string, int, CancellationToken) Declaration Task TestPhoneNumberSendSmsAsync(Guid phoneNumberId, TestPhoneNumberOptions testPhoneNumberOptions, string xTestId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId TestPhoneNumberOptions testPhoneNumberOptions string xTestId (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestPhoneNumberSendSmsWithHttpInfoAsync(Guid, TestPhoneNumberOptions, string, int, CancellationToken) Declaration Task<ApiResponse<object>> TestPhoneNumberSendSmsWithHttpInfoAsync(Guid phoneNumberId, TestPhoneNumberOptions testPhoneNumberOptions, string xTestId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId TestPhoneNumberOptions testPhoneNumberOptions string xTestId (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IPhoneControllerApiSync.html": {
    "href": "api/mailslurp.Api.IPhoneControllerApiSync.html",
    "title": "Interface IPhoneControllerApiSync | MailSlurp",
    "keywords": "Interface IPhoneControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IPhoneControllerApiSync : IApiAccessor Methods View Source CreateEmergencyAddress(CreateEmergencyAddressOptions, int) Declaration EmergencyAddress CreateEmergencyAddress(CreateEmergencyAddressOptions createEmergencyAddressOptions, int operationIndex = 0) Parameters Type Name Description CreateEmergencyAddressOptions createEmergencyAddressOptions int operationIndex Index associated with the operation. Returns Type Description EmergencyAddress EmergencyAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateEmergencyAddressWithHttpInfo(CreateEmergencyAddressOptions, int) Declaration ApiResponse<EmergencyAddress> CreateEmergencyAddressWithHttpInfo(CreateEmergencyAddressOptions createEmergencyAddressOptions, int operationIndex = 0) Parameters Type Name Description CreateEmergencyAddressOptions createEmergencyAddressOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmergencyAddress> ApiResponse of EmergencyAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmergencyAddress(Guid, int) Declaration EmptyResponseDto DeleteEmergencyAddress(Guid addressId, int operationIndex = 0) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. Returns Type Description EmptyResponseDto EmptyResponseDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmergencyAddressWithHttpInfo(Guid, int) Declaration ApiResponse<EmptyResponseDto> DeleteEmergencyAddressWithHttpInfo(Guid addressId, int operationIndex = 0) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmptyResponseDto> ApiResponse of EmptyResponseDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeletePhoneNumber(Guid, int) Declaration void DeletePhoneNumber(Guid phoneNumberId, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeletePhoneNumberWithHttpInfo(Guid, int) Declaration ApiResponse<object> DeletePhoneNumberWithHttpInfo(Guid phoneNumberId, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddress(Guid, int) Declaration EmergencyAddress GetEmergencyAddress(Guid addressId, int operationIndex = 0) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. Returns Type Description EmergencyAddress EmergencyAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddresses(int) Declaration List<EmergencyAddressDto> GetEmergencyAddresses(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<EmergencyAddressDto> List<EmergencyAddressDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddressesWithHttpInfo(int) Declaration ApiResponse<List<EmergencyAddressDto>> GetEmergencyAddressesWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<EmergencyAddressDto>> ApiResponse of List<EmergencyAddressDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddressWithHttpInfo(Guid, int) Declaration ApiResponse<EmergencyAddress> GetEmergencyAddressWithHttpInfo(Guid addressId, int operationIndex = 0) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmergencyAddress> ApiResponse of EmergencyAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumber(Guid, int) Declaration PhoneNumberDto GetPhoneNumber(Guid phoneNumberId, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. Returns Type Description PhoneNumberDto PhoneNumberDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumbers(string, int?, int?, string, DateTime?, DateTime?, int) Declaration PagePhoneNumberProjection GetPhoneNumbers(string phoneCountry = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description string phoneCountry Optional phone country (optional) int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PagePhoneNumberProjection PagePhoneNumberProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumbersWithHttpInfo(string, int?, int?, string, DateTime?, DateTime?, int) Declaration ApiResponse<PagePhoneNumberProjection> GetPhoneNumbersWithHttpInfo(string phoneCountry = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description string phoneCountry Optional phone country (optional) int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PagePhoneNumberProjection> ApiResponse of PagePhoneNumberProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberWithHttpInfo(Guid, int) Declaration ApiResponse<PhoneNumberDto> GetPhoneNumberWithHttpInfo(Guid phoneNumberId, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PhoneNumberDto> ApiResponse of PhoneNumberDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhonePlans(int) Declaration List<PhonePlanDto> GetPhonePlans(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<PhonePlanDto> List<PhonePlanDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhonePlansWithHttpInfo(int) Declaration ApiResponse<List<PhonePlanDto>> GetPhonePlansWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<PhonePlanDto>> ApiResponse of List<PhonePlanDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestPhoneNumberSendSms(Guid, TestPhoneNumberOptions, string, int) Declaration void TestPhoneNumberSendSms(Guid phoneNumberId, TestPhoneNumberOptions testPhoneNumberOptions, string xTestId = null, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId TestPhoneNumberOptions testPhoneNumberOptions string xTestId (optional) int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestPhoneNumberSendSmsWithHttpInfo(Guid, TestPhoneNumberOptions, string, int) Declaration ApiResponse<object> TestPhoneNumberSendSmsWithHttpInfo(Guid phoneNumberId, TestPhoneNumberOptions testPhoneNumberOptions, string xTestId = null, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId TestPhoneNumberOptions testPhoneNumberOptions string xTestId (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.ISentEmailsControllerApi.html": {
    "href": "api/mailslurp.Api.ISentEmailsControllerApi.html",
    "title": "Interface ISentEmailsControllerApi | MailSlurp",
    "keywords": "Interface ISentEmailsControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members ISentEmailsControllerApiSync.DeleteAllSentEmails(int) ISentEmailsControllerApiSync.DeleteAllSentEmailsWithHttpInfo(int) ISentEmailsControllerApiSync.DeleteSentEmail(Guid, int) ISentEmailsControllerApiSync.DeleteSentEmailWithHttpInfo(Guid, int) ISentEmailsControllerApiSync.GetAllSentTrackingPixels(int?, int?, string, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetAllSentTrackingPixelsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetRawSentEmailContents(Guid, int) ISentEmailsControllerApiSync.GetRawSentEmailContentsWithHttpInfo(Guid, int) ISentEmailsControllerApiSync.GetRawSentEmailJson(Guid, int) ISentEmailsControllerApiSync.GetRawSentEmailJsonWithHttpInfo(Guid, int) ISentEmailsControllerApiSync.GetSentDeliveryStatus(Guid, int) ISentEmailsControllerApiSync.GetSentDeliveryStatusWithHttpInfo(Guid, int) ISentEmailsControllerApiSync.GetSentDeliveryStatuses(int?, int?, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetSentDeliveryStatusesWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetSentDeliveryStatusesBySentId(Guid, int?, int?, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetSentDeliveryStatusesBySentIdWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetSentEmail(Guid, int) ISentEmailsControllerApiSync.GetSentEmailWithHttpInfo(Guid, int) ISentEmailsControllerApiSync.GetSentEmailHTMLContent(Guid, int) ISentEmailsControllerApiSync.GetSentEmailHTMLContentWithHttpInfo(Guid, int) ISentEmailsControllerApiSync.GetSentEmailPreviewURLs(Guid, int) ISentEmailsControllerApiSync.GetSentEmailPreviewURLsWithHttpInfo(Guid, int) ISentEmailsControllerApiSync.GetSentEmailTrackingPixels(Guid, int?, int?, string, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetSentEmailTrackingPixelsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetSentEmails(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetSentEmailsWithHttpInfo(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetSentEmailsWithQueueResults(int?, int?, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetSentEmailsWithQueueResultsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetSentOrganizationEmails(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.GetSentOrganizationEmailsWithHttpInfo(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.WaitForDeliveryStatuses(Guid?, Guid?, long?, int?, DateTime?, DateTime?, int) ISentEmailsControllerApiSync.WaitForDeliveryStatusesWithHttpInfo(Guid?, Guid?, long?, int?, DateTime?, DateTime?, int) ISentEmailsControllerApiAsync.DeleteAllSentEmailsAsync(int, CancellationToken) ISentEmailsControllerApiAsync.DeleteAllSentEmailsWithHttpInfoAsync(int, CancellationToken) ISentEmailsControllerApiAsync.DeleteSentEmailAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.DeleteSentEmailWithHttpInfoAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetAllSentTrackingPixelsAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetAllSentTrackingPixelsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetRawSentEmailContentsAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetRawSentEmailContentsWithHttpInfoAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetRawSentEmailJsonAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetRawSentEmailJsonWithHttpInfoAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentDeliveryStatusAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentDeliveryStatusWithHttpInfoAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentDeliveryStatusesAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentDeliveryStatusesWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentDeliveryStatusesBySentIdAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentDeliveryStatusesBySentIdWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentEmailAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentEmailWithHttpInfoAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentEmailHTMLContentAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentEmailHTMLContentWithHttpInfoAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentEmailPreviewURLsAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentEmailPreviewURLsWithHttpInfoAsync(Guid, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentEmailTrackingPixelsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentEmailTrackingPixelsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentEmailsAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentEmailsWithHttpInfoAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentEmailsWithQueueResultsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentEmailsWithQueueResultsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentOrganizationEmailsAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.GetSentOrganizationEmailsWithHttpInfoAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.WaitForDeliveryStatusesAsync(Guid?, Guid?, long?, int?, DateTime?, DateTime?, int, CancellationToken) ISentEmailsControllerApiAsync.WaitForDeliveryStatusesWithHttpInfoAsync(Guid?, Guid?, long?, int?, DateTime?, DateTime?, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ISentEmailsControllerApi : ISentEmailsControllerApiSync, ISentEmailsControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.ISentEmailsControllerApiAsync.html": {
    "href": "api/mailslurp.Api.ISentEmailsControllerApiAsync.html",
    "title": "Interface ISentEmailsControllerApiAsync | MailSlurp",
    "keywords": "Interface ISentEmailsControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ISentEmailsControllerApiAsync : IApiAccessor Methods View Source DeleteAllSentEmailsAsync(int, CancellationToken) Delete all sent email receipts Declaration Task DeleteAllSentEmailsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllSentEmailsWithHttpInfoAsync(int, CancellationToken) Delete all sent email receipts Declaration Task<ApiResponse<object>> DeleteAllSentEmailsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSentEmailAsync(Guid, int, CancellationToken) Delete sent email receipt Declaration Task DeleteSentEmailAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSentEmailWithHttpInfoAsync(Guid, int, CancellationToken) Delete sent email receipt Declaration Task<ApiResponse<object>> DeleteSentEmailWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllSentTrackingPixelsAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<PageTrackingPixelProjection> GetAllSentTrackingPixelsAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageTrackingPixelProjection> Task of PageTrackingPixelProjection Remarks Get all sent email tracking pixels in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllSentTrackingPixelsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<ApiResponse<PageTrackingPixelProjection>> GetAllSentTrackingPixelsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageTrackingPixelProjection>> Task of ApiResponse (PageTrackingPixelProjection) Remarks Get all sent email tracking pixels in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailContentsAsync(Guid, int, CancellationToken) Get raw sent email string. Returns unparsed raw SMTP message with headers and body. Declaration Task GetRawSentEmailContentsAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Returns a raw, unparsed, and unprocessed sent email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawSentEmailJson endpoint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailContentsWithHttpInfoAsync(Guid, int, CancellationToken) Get raw sent email string. Returns unparsed raw SMTP message with headers and body. Declaration Task<ApiResponse<object>> GetRawSentEmailContentsWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Returns a raw, unparsed, and unprocessed sent email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawSentEmailJson endpoint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailJsonAsync(Guid, int, CancellationToken) Get raw sent email in JSON. Unparsed SMTP message in JSON wrapper format. Declaration Task<RawEmailJson> GetRawSentEmailJsonAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<RawEmailJson> Task of RawEmailJson Remarks Returns a raw, unparsed, and unprocessed sent email wrapped in a JSON response object for easier handling when compared with the getRawSentEmail text/plain response Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailJsonWithHttpInfoAsync(Guid, int, CancellationToken) Get raw sent email in JSON. Unparsed SMTP message in JSON wrapper format. Declaration Task<ApiResponse<RawEmailJson>> GetRawSentEmailJsonWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<RawEmailJson>> Task of ApiResponse (RawEmailJson) Remarks Returns a raw, unparsed, and unprocessed sent email wrapped in a JSON response object for easier handling when compared with the getRawSentEmail text/plain response Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusAsync(Guid, int, CancellationToken) Declaration Task<DeliveryStatusDto> GetSentDeliveryStatusAsync(Guid deliveryId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid deliveryId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DeliveryStatusDto> Task of DeliveryStatusDto Remarks Get a sent email delivery status Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<PageDeliveryStatus> GetSentDeliveryStatusesAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageDeliveryStatus> Task of PageDeliveryStatus Remarks Get all sent email delivery statuses Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesBySentIdAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<PageDeliveryStatus> GetSentDeliveryStatusesBySentIdAsync(Guid sentId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid sentId ID of the sent email that you want to get the delivery status of. Sent email object is returned when sending an email int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageDeliveryStatus> Task of PageDeliveryStatus Remarks Get all sent email delivery statuses Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesBySentIdWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<ApiResponse<PageDeliveryStatus>> GetSentDeliveryStatusesBySentIdWithHttpInfoAsync(Guid sentId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid sentId ID of the sent email that you want to get the delivery status of. Sent email object is returned when sending an email int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageDeliveryStatus>> Task of ApiResponse (PageDeliveryStatus) Remarks Get all sent email delivery statuses Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<ApiResponse<PageDeliveryStatus>> GetSentDeliveryStatusesWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageDeliveryStatus>> Task of ApiResponse (PageDeliveryStatus) Remarks Get all sent email delivery statuses Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusWithHttpInfoAsync(Guid, int, CancellationToken) Declaration Task<ApiResponse<DeliveryStatusDto>> GetSentDeliveryStatusWithHttpInfoAsync(Guid deliveryId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid deliveryId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DeliveryStatusDto>> Task of ApiResponse (DeliveryStatusDto) Remarks Get a sent email delivery status Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailAsync(Guid, int, CancellationToken) Get sent email receipt Declaration Task<SentEmailDto> GetSentEmailAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailHTMLContentAsync(Guid, int, CancellationToken) Get sent email HTML content Declaration Task<string> GetSentEmailHTMLContentAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<string> Task of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailHTMLContentWithHttpInfoAsync(Guid, int, CancellationToken) Get sent email HTML content Declaration Task<ApiResponse<string>> GetSentEmailHTMLContentWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<string>> Task of ApiResponse (string) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailPreviewURLsAsync(Guid, int, CancellationToken) Get sent email URL for viewing in browser or downloading Declaration Task<EmailPreviewUrls> GetSentEmailPreviewURLsAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailPreviewUrls> Task of EmailPreviewUrls Remarks Get a list of URLs for sent email content as text/html or raw SMTP message for viewing the message in a browser. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailPreviewURLsWithHttpInfoAsync(Guid, int, CancellationToken) Get sent email URL for viewing in browser or downloading Declaration Task<ApiResponse<EmailPreviewUrls>> GetSentEmailPreviewURLsWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailPreviewUrls>> Task of ApiResponse (EmailPreviewUrls) Remarks Get a list of URLs for sent email content as text/html or raw SMTP message for viewing the message in a browser. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get all sent emails in paginated form Declaration Task<PageSentEmailProjection> GetSentEmailsAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageSentEmailProjection> Task of PageSentEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsWithHttpInfoAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get all sent emails in paginated form Declaration Task<ApiResponse<PageSentEmailProjection>> GetSentEmailsWithHttpInfoAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageSentEmailProjection>> Task of ApiResponse (PageSentEmailProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsWithQueueResultsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get results of email sent with queues in paginated form Declaration Task<PageSentEmailWithQueueProjection> GetSentEmailsWithQueueResultsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageSentEmailWithQueueProjection> Task of PageSentEmailWithQueueProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsWithQueueResultsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get results of email sent with queues in paginated form Declaration Task<ApiResponse<PageSentEmailWithQueueProjection>> GetSentEmailsWithQueueResultsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageSentEmailWithQueueProjection>> Task of ApiResponse (PageSentEmailWithQueueProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailTrackingPixelsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<PageTrackingPixelProjection> GetSentEmailTrackingPixelsAsync(Guid id, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageTrackingPixelProjection> Task of PageTrackingPixelProjection Remarks Get all tracking pixels for a sent email in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailTrackingPixelsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<ApiResponse<PageTrackingPixelProjection>> GetSentEmailTrackingPixelsWithHttpInfoAsync(Guid id, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageTrackingPixelProjection>> Task of ApiResponse (PageTrackingPixelProjection) Remarks Get all tracking pixels for a sent email in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailWithHttpInfoAsync(Guid, int, CancellationToken) Get sent email receipt Declaration Task<ApiResponse<SentEmailDto>> GetSentEmailWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentOrganizationEmailsAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<PageSentEmailProjection> GetSentOrganizationEmailsAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in sent email list pagination (optional, default to 0) int? size Optional page size in sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageSentEmailProjection> Task of PageSentEmailProjection Remarks Get all sent organization emails in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentOrganizationEmailsWithHttpInfoAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Declaration Task<ApiResponse<PageSentEmailProjection>> GetSentOrganizationEmailsWithHttpInfoAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in sent email list pagination (optional, default to 0) int? size Optional page size in sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageSentEmailProjection>> Task of ApiResponse (PageSentEmailProjection) Remarks Get all sent organization emails in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForDeliveryStatusesAsync(Guid?, Guid?, long?, int?, DateTime?, DateTime?, int, CancellationToken) Declaration Task<DeliveryStatusDto> WaitForDeliveryStatusesAsync(Guid? sentId = null, Guid? inboxId = null, long? timeout = null, int? index = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? sentId Optional sent email ID filter (optional) Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) int? index Zero based index of the delivery status to wait for. If 1 delivery status already and you want to wait for the 2nd pass index=1 (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DeliveryStatusDto> Task of DeliveryStatusDto Remarks Wait for delivery statuses Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForDeliveryStatusesWithHttpInfoAsync(Guid?, Guid?, long?, int?, DateTime?, DateTime?, int, CancellationToken) Declaration Task<ApiResponse<DeliveryStatusDto>> WaitForDeliveryStatusesWithHttpInfoAsync(Guid? sentId = null, Guid? inboxId = null, long? timeout = null, int? index = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? sentId Optional sent email ID filter (optional) Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) int? index Zero based index of the delivery status to wait for. If 1 delivery status already and you want to wait for the 2nd pass index=1 (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DeliveryStatusDto>> Task of ApiResponse (DeliveryStatusDto) Remarks Wait for delivery statuses Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.ISentEmailsControllerApiSync.html": {
    "href": "api/mailslurp.Api.ISentEmailsControllerApiSync.html",
    "title": "Interface ISentEmailsControllerApiSync | MailSlurp",
    "keywords": "Interface ISentEmailsControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ISentEmailsControllerApiSync : IApiAccessor Methods View Source DeleteAllSentEmails(int) Delete all sent email receipts Declaration void DeleteAllSentEmails(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllSentEmailsWithHttpInfo(int) Delete all sent email receipts Declaration ApiResponse<object> DeleteAllSentEmailsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSentEmail(Guid, int) Delete sent email receipt Declaration void DeleteSentEmail(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSentEmailWithHttpInfo(Guid, int) Delete sent email receipt Declaration ApiResponse<object> DeleteSentEmailWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllSentTrackingPixels(int?, int?, string, string, DateTime?, DateTime?, int) Declaration PageTrackingPixelProjection GetAllSentTrackingPixels(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageTrackingPixelProjection PageTrackingPixelProjection Remarks Get all sent email tracking pixels in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllSentTrackingPixelsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, int) Declaration ApiResponse<PageTrackingPixelProjection> GetAllSentTrackingPixelsWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageTrackingPixelProjection> ApiResponse of PageTrackingPixelProjection Remarks Get all sent email tracking pixels in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailContents(Guid, int) Get raw sent email string. Returns unparsed raw SMTP message with headers and body. Declaration void GetRawSentEmailContents(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Remarks Returns a raw, unparsed, and unprocessed sent email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawSentEmailJson endpoint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailContentsWithHttpInfo(Guid, int) Get raw sent email string. Returns unparsed raw SMTP message with headers and body. Declaration ApiResponse<object> GetRawSentEmailContentsWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Returns a raw, unparsed, and unprocessed sent email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawSentEmailJson endpoint Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailJson(Guid, int) Get raw sent email in JSON. Unparsed SMTP message in JSON wrapper format. Declaration RawEmailJson GetRawSentEmailJson(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description RawEmailJson RawEmailJson Remarks Returns a raw, unparsed, and unprocessed sent email wrapped in a JSON response object for easier handling when compared with the getRawSentEmail text/plain response Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailJsonWithHttpInfo(Guid, int) Get raw sent email in JSON. Unparsed SMTP message in JSON wrapper format. Declaration ApiResponse<RawEmailJson> GetRawSentEmailJsonWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<RawEmailJson> ApiResponse of RawEmailJson Remarks Returns a raw, unparsed, and unprocessed sent email wrapped in a JSON response object for easier handling when compared with the getRawSentEmail text/plain response Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatus(Guid, int) Declaration DeliveryStatusDto GetSentDeliveryStatus(Guid deliveryId, int operationIndex = 0) Parameters Type Name Description Guid deliveryId int operationIndex Index associated with the operation. Returns Type Description DeliveryStatusDto DeliveryStatusDto Remarks Get a sent email delivery status Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatuses(int?, int?, string, DateTime?, DateTime?, int) Declaration PageDeliveryStatus GetSentDeliveryStatuses(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageDeliveryStatus PageDeliveryStatus Remarks Get all sent email delivery statuses Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesBySentId(Guid, int?, int?, string, DateTime?, DateTime?, int) Declaration PageDeliveryStatus GetSentDeliveryStatusesBySentId(Guid sentId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid sentId ID of the sent email that you want to get the delivery status of. Sent email object is returned when sending an email int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageDeliveryStatus PageDeliveryStatus Remarks Get all sent email delivery statuses Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesBySentIdWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Declaration ApiResponse<PageDeliveryStatus> GetSentDeliveryStatusesBySentIdWithHttpInfo(Guid sentId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid sentId ID of the sent email that you want to get the delivery status of. Sent email object is returned when sending an email int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageDeliveryStatus> ApiResponse of PageDeliveryStatus Remarks Get all sent email delivery statuses Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Declaration ApiResponse<PageDeliveryStatus> GetSentDeliveryStatusesWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageDeliveryStatus> ApiResponse of PageDeliveryStatus Remarks Get all sent email delivery statuses Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusWithHttpInfo(Guid, int) Declaration ApiResponse<DeliveryStatusDto> GetSentDeliveryStatusWithHttpInfo(Guid deliveryId, int operationIndex = 0) Parameters Type Name Description Guid deliveryId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DeliveryStatusDto> ApiResponse of DeliveryStatusDto Remarks Get a sent email delivery status Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmail(Guid, int) Get sent email receipt Declaration SentEmailDto GetSentEmail(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailHTMLContent(Guid, int) Get sent email HTML content Declaration string GetSentEmailHTMLContent(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description string string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailHTMLContentWithHttpInfo(Guid, int) Get sent email HTML content Declaration ApiResponse<string> GetSentEmailHTMLContentWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<string> ApiResponse of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailPreviewURLs(Guid, int) Get sent email URL for viewing in browser or downloading Declaration EmailPreviewUrls GetSentEmailPreviewURLs(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description EmailPreviewUrls EmailPreviewUrls Remarks Get a list of URLs for sent email content as text/html or raw SMTP message for viewing the message in a browser. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailPreviewURLsWithHttpInfo(Guid, int) Get sent email URL for viewing in browser or downloading Declaration ApiResponse<EmailPreviewUrls> GetSentEmailPreviewURLsWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailPreviewUrls> ApiResponse of EmailPreviewUrls Remarks Get a list of URLs for sent email content as text/html or raw SMTP message for viewing the message in a browser. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmails(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) Get all sent emails in paginated form Declaration PageSentEmailProjection GetSentEmails(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageSentEmailProjection PageSentEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsWithHttpInfo(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) Get all sent emails in paginated form Declaration ApiResponse<PageSentEmailProjection> GetSentEmailsWithHttpInfo(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageSentEmailProjection> ApiResponse of PageSentEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsWithQueueResults(int?, int?, string, DateTime?, DateTime?, int) Get results of email sent with queues in paginated form Declaration PageSentEmailWithQueueProjection GetSentEmailsWithQueueResults(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageSentEmailWithQueueProjection PageSentEmailWithQueueProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsWithQueueResultsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get results of email sent with queues in paginated form Declaration ApiResponse<PageSentEmailWithQueueProjection> GetSentEmailsWithQueueResultsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageSentEmailWithQueueProjection> ApiResponse of PageSentEmailWithQueueProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailTrackingPixels(Guid, int?, int?, string, string, DateTime?, DateTime?, int) Declaration PageTrackingPixelProjection GetSentEmailTrackingPixels(Guid id, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid id int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageTrackingPixelProjection PageTrackingPixelProjection Remarks Get all tracking pixels for a sent email in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailTrackingPixelsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) Declaration ApiResponse<PageTrackingPixelProjection> GetSentEmailTrackingPixelsWithHttpInfo(Guid id, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid id int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageTrackingPixelProjection> ApiResponse of PageTrackingPixelProjection Remarks Get all tracking pixels for a sent email in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailWithHttpInfo(Guid, int) Get sent email receipt Declaration ApiResponse<SentEmailDto> GetSentEmailWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentOrganizationEmails(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) Declaration PageSentEmailProjection GetSentOrganizationEmails(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in sent email list pagination (optional, default to 0) int? size Optional page size in sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageSentEmailProjection PageSentEmailProjection Remarks Get all sent organization emails in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentOrganizationEmailsWithHttpInfo(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) Declaration ApiResponse<PageSentEmailProjection> GetSentOrganizationEmailsWithHttpInfo(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in sent email list pagination (optional, default to 0) int? size Optional page size in sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageSentEmailProjection> ApiResponse of PageSentEmailProjection Remarks Get all sent organization emails in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForDeliveryStatuses(Guid?, Guid?, long?, int?, DateTime?, DateTime?, int) Declaration DeliveryStatusDto WaitForDeliveryStatuses(Guid? sentId = null, Guid? inboxId = null, long? timeout = null, int? index = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? sentId Optional sent email ID filter (optional) Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) int? index Zero based index of the delivery status to wait for. If 1 delivery status already and you want to wait for the 2nd pass index=1 (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description DeliveryStatusDto DeliveryStatusDto Remarks Wait for delivery statuses Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForDeliveryStatusesWithHttpInfo(Guid?, Guid?, long?, int?, DateTime?, DateTime?, int) Declaration ApiResponse<DeliveryStatusDto> WaitForDeliveryStatusesWithHttpInfo(Guid? sentId = null, Guid? inboxId = null, long? timeout = null, int? index = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? sentId Optional sent email ID filter (optional) Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) int? index Zero based index of the delivery status to wait for. If 1 delivery status already and you want to wait for the 2nd pass index=1 (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DeliveryStatusDto> ApiResponse of DeliveryStatusDto Remarks Wait for delivery statuses Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.ISmsControllerApi.html": {
    "href": "api/mailslurp.Api.ISmsControllerApi.html",
    "title": "Interface ISmsControllerApi | MailSlurp",
    "keywords": "Interface ISmsControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members ISmsControllerApiSync.DeleteSmsMessage(Guid, int) ISmsControllerApiSync.DeleteSmsMessageWithHttpInfo(Guid, int) ISmsControllerApiSync.DeleteSmsMessages(Guid?, int) ISmsControllerApiSync.DeleteSmsMessagesWithHttpInfo(Guid?, int) ISmsControllerApiSync.GetReplyForSmsMessage(Guid, int) ISmsControllerApiSync.GetReplyForSmsMessageWithHttpInfo(Guid, int) ISmsControllerApiSync.GetSmsCount(int) ISmsControllerApiSync.GetSmsCountWithHttpInfo(int) ISmsControllerApiSync.GetSmsMessage(Guid, int) ISmsControllerApiSync.GetSmsMessageWithHttpInfo(Guid, int) ISmsControllerApiSync.GetSmsMessagesPaginated(Guid?, int?, int?, string, bool?, DateTime?, DateTime?, int) ISmsControllerApiSync.GetSmsMessagesPaginatedWithHttpInfo(Guid?, int?, int?, string, bool?, DateTime?, DateTime?, int) ISmsControllerApiSync.GetUnreadSmsCount(int) ISmsControllerApiSync.GetUnreadSmsCountWithHttpInfo(int) ISmsControllerApiSync.ReplyToSmsMessage(Guid, SmsReplyOptions, int) ISmsControllerApiSync.ReplyToSmsMessageWithHttpInfo(Guid, SmsReplyOptions, int) ISmsControllerApiAsync.DeleteSmsMessageAsync(Guid, int, CancellationToken) ISmsControllerApiAsync.DeleteSmsMessageWithHttpInfoAsync(Guid, int, CancellationToken) ISmsControllerApiAsync.DeleteSmsMessagesAsync(Guid?, int, CancellationToken) ISmsControllerApiAsync.DeleteSmsMessagesWithHttpInfoAsync(Guid?, int, CancellationToken) ISmsControllerApiAsync.GetReplyForSmsMessageAsync(Guid, int, CancellationToken) ISmsControllerApiAsync.GetReplyForSmsMessageWithHttpInfoAsync(Guid, int, CancellationToken) ISmsControllerApiAsync.GetSmsCountAsync(int, CancellationToken) ISmsControllerApiAsync.GetSmsCountWithHttpInfoAsync(int, CancellationToken) ISmsControllerApiAsync.GetSmsMessageAsync(Guid, int, CancellationToken) ISmsControllerApiAsync.GetSmsMessageWithHttpInfoAsync(Guid, int, CancellationToken) ISmsControllerApiAsync.GetSmsMessagesPaginatedAsync(Guid?, int?, int?, string, bool?, DateTime?, DateTime?, int, CancellationToken) ISmsControllerApiAsync.GetSmsMessagesPaginatedWithHttpInfoAsync(Guid?, int?, int?, string, bool?, DateTime?, DateTime?, int, CancellationToken) ISmsControllerApiAsync.GetUnreadSmsCountAsync(int, CancellationToken) ISmsControllerApiAsync.GetUnreadSmsCountWithHttpInfoAsync(int, CancellationToken) ISmsControllerApiAsync.ReplyToSmsMessageAsync(Guid, SmsReplyOptions, int, CancellationToken) ISmsControllerApiAsync.ReplyToSmsMessageWithHttpInfoAsync(Guid, SmsReplyOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ISmsControllerApi : ISmsControllerApiSync, ISmsControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.ISmsControllerApiAsync.html": {
    "href": "api/mailslurp.Api.ISmsControllerApiAsync.html",
    "title": "Interface ISmsControllerApiAsync | MailSlurp",
    "keywords": "Interface ISmsControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ISmsControllerApiAsync : IApiAccessor Methods View Source DeleteSmsMessageAsync(Guid, int, CancellationToken) Delete SMS message. Declaration Task DeleteSmsMessageAsync(Guid smsId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Delete an SMS message Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessagesAsync(Guid?, int, CancellationToken) Delete all SMS messages Declaration Task DeleteSmsMessagesAsync(Guid? phoneNumberId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? phoneNumberId (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Delete all SMS messages or all messages for a given phone number Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessagesWithHttpInfoAsync(Guid?, int, CancellationToken) Delete all SMS messages Declaration Task<ApiResponse<object>> DeleteSmsMessagesWithHttpInfoAsync(Guid? phoneNumberId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? phoneNumberId (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Delete all SMS messages or all messages for a given phone number Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessageWithHttpInfoAsync(Guid, int, CancellationToken) Delete SMS message. Declaration Task<ApiResponse<object>> DeleteSmsMessageWithHttpInfoAsync(Guid smsId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Delete an SMS message Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetReplyForSmsMessageAsync(Guid, int, CancellationToken) Get reply for an SMS message Declaration Task<ReplyForSms> GetReplyForSmsMessageAsync(Guid smsId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ReplyForSms> Task of ReplyForSms Remarks Get reply for an SMS message. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetReplyForSmsMessageWithHttpInfoAsync(Guid, int, CancellationToken) Get reply for an SMS message Declaration Task<ApiResponse<ReplyForSms>> GetReplyForSmsMessageWithHttpInfoAsync(Guid smsId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ReplyForSms>> Task of ApiResponse (ReplyForSms) Remarks Get reply for an SMS message. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsCountAsync(int, CancellationToken) Get SMS count Declaration Task<CountDto> GetSmsCountAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CountDto> Task of CountDto Remarks Get number of SMS Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsCountWithHttpInfoAsync(int, CancellationToken) Get SMS count Declaration Task<ApiResponse<CountDto>> GetSmsCountWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CountDto>> Task of ApiResponse (CountDto) Remarks Get number of SMS Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessageAsync(Guid, int, CancellationToken) Get SMS content including body. Expects SMS to exist by ID. For SMS that may not have arrived yet use the WaitForController. Declaration Task<SmsDto> GetSmsMessageAsync(Guid smsId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SmsDto> Task of SmsDto Remarks Returns a SMS summary object with content. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessagesPaginatedAsync(Guid?, int?, int?, string, bool?, DateTime?, DateTime?, int, CancellationToken) Get all SMS messages in all phone numbers in paginated form. . Declaration Task<PageSmsProjection> GetSmsMessagesPaginatedAsync(Guid? phoneNumber = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? phoneNumber Optional receiving phone number to filter SMS messages for (optional) int? page Optional page index in SMS list pagination (optional, default to 0) int? size Optional page size in SMS list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread SMS only. All SMS are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) DateTime? since Optional filter SMSs received after given date time (optional) DateTime? before Optional filter SMSs received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageSmsProjection> Task of PageSmsProjection Remarks By default returns all SMS messages across all phone numbers sorted by ascending created at date. Responses are paginated. You can restrict results to a list of phone number IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessagesPaginatedWithHttpInfoAsync(Guid?, int?, int?, string, bool?, DateTime?, DateTime?, int, CancellationToken) Get all SMS messages in all phone numbers in paginated form. . Declaration Task<ApiResponse<PageSmsProjection>> GetSmsMessagesPaginatedWithHttpInfoAsync(Guid? phoneNumber = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? phoneNumber Optional receiving phone number to filter SMS messages for (optional) int? page Optional page index in SMS list pagination (optional, default to 0) int? size Optional page size in SMS list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread SMS only. All SMS are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) DateTime? since Optional filter SMSs received after given date time (optional) DateTime? before Optional filter SMSs received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageSmsProjection>> Task of ApiResponse (PageSmsProjection) Remarks By default returns all SMS messages across all phone numbers sorted by ascending created at date. Responses are paginated. You can restrict results to a list of phone number IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessageWithHttpInfoAsync(Guid, int, CancellationToken) Get SMS content including body. Expects SMS to exist by ID. For SMS that may not have arrived yet use the WaitForController. Declaration Task<ApiResponse<SmsDto>> GetSmsMessageWithHttpInfoAsync(Guid smsId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SmsDto>> Task of ApiResponse (SmsDto) Remarks Returns a SMS summary object with content. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadSmsCountAsync(int, CancellationToken) Get unread SMS count Declaration Task<UnreadCount> GetUnreadSmsCountAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<UnreadCount> Task of UnreadCount Remarks Get number of SMS unread. Unread means has not been viewed in dashboard or returned in an email API response Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadSmsCountWithHttpInfoAsync(int, CancellationToken) Get unread SMS count Declaration Task<ApiResponse<UnreadCount>> GetUnreadSmsCountWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<UnreadCount>> Task of ApiResponse (UnreadCount) Remarks Get number of SMS unread. Unread means has not been viewed in dashboard or returned in an email API response Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToSmsMessageAsync(Guid, SmsReplyOptions, int, CancellationToken) Send a reply to a received SMS message. Replies are sent from the receiving number. Declaration Task<SentSmsDto> ReplyToSmsMessageAsync(Guid smsId, SmsReplyOptions smsReplyOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId SmsReplyOptions smsReplyOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentSmsDto> Task of SentSmsDto Remarks Reply to an SMS message. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToSmsMessageWithHttpInfoAsync(Guid, SmsReplyOptions, int, CancellationToken) Send a reply to a received SMS message. Replies are sent from the receiving number. Declaration Task<ApiResponse<SentSmsDto>> ReplyToSmsMessageWithHttpInfoAsync(Guid smsId, SmsReplyOptions smsReplyOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId SmsReplyOptions smsReplyOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentSmsDto>> Task of ApiResponse (SentSmsDto) Remarks Reply to an SMS message. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.ISmsControllerApiSync.html": {
    "href": "api/mailslurp.Api.ISmsControllerApiSync.html",
    "title": "Interface ISmsControllerApiSync | MailSlurp",
    "keywords": "Interface ISmsControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ISmsControllerApiSync : IApiAccessor Methods View Source DeleteSmsMessage(Guid, int) Delete SMS message. Declaration void DeleteSmsMessage(Guid smsId, int operationIndex = 0) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. Remarks Delete an SMS message Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessages(Guid?, int) Delete all SMS messages Declaration void DeleteSmsMessages(Guid? phoneNumberId = null, int operationIndex = 0) Parameters Type Name Description Guid? phoneNumberId (optional) int operationIndex Index associated with the operation. Remarks Delete all SMS messages or all messages for a given phone number Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessagesWithHttpInfo(Guid?, int) Delete all SMS messages Declaration ApiResponse<object> DeleteSmsMessagesWithHttpInfo(Guid? phoneNumberId = null, int operationIndex = 0) Parameters Type Name Description Guid? phoneNumberId (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Delete all SMS messages or all messages for a given phone number Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessageWithHttpInfo(Guid, int) Delete SMS message. Declaration ApiResponse<object> DeleteSmsMessageWithHttpInfo(Guid smsId, int operationIndex = 0) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Delete an SMS message Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetReplyForSmsMessage(Guid, int) Get reply for an SMS message Declaration ReplyForSms GetReplyForSmsMessage(Guid smsId, int operationIndex = 0) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. Returns Type Description ReplyForSms ReplyForSms Remarks Get reply for an SMS message. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetReplyForSmsMessageWithHttpInfo(Guid, int) Get reply for an SMS message Declaration ApiResponse<ReplyForSms> GetReplyForSmsMessageWithHttpInfo(Guid smsId, int operationIndex = 0) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ReplyForSms> ApiResponse of ReplyForSms Remarks Get reply for an SMS message. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsCount(int) Get SMS count Declaration CountDto GetSmsCount(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description CountDto CountDto Remarks Get number of SMS Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsCountWithHttpInfo(int) Get SMS count Declaration ApiResponse<CountDto> GetSmsCountWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CountDto> ApiResponse of CountDto Remarks Get number of SMS Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessage(Guid, int) Get SMS content including body. Expects SMS to exist by ID. For SMS that may not have arrived yet use the WaitForController. Declaration SmsDto GetSmsMessage(Guid smsId, int operationIndex = 0) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. Returns Type Description SmsDto SmsDto Remarks Returns a SMS summary object with content. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessagesPaginated(Guid?, int?, int?, string, bool?, DateTime?, DateTime?, int) Get all SMS messages in all phone numbers in paginated form. . Declaration PageSmsProjection GetSmsMessagesPaginated(Guid? phoneNumber = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? phoneNumber Optional receiving phone number to filter SMS messages for (optional) int? page Optional page index in SMS list pagination (optional, default to 0) int? size Optional page size in SMS list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread SMS only. All SMS are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) DateTime? since Optional filter SMSs received after given date time (optional) DateTime? before Optional filter SMSs received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageSmsProjection PageSmsProjection Remarks By default returns all SMS messages across all phone numbers sorted by ascending created at date. Responses are paginated. You can restrict results to a list of phone number IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessagesPaginatedWithHttpInfo(Guid?, int?, int?, string, bool?, DateTime?, DateTime?, int) Get all SMS messages in all phone numbers in paginated form. . Declaration ApiResponse<PageSmsProjection> GetSmsMessagesPaginatedWithHttpInfo(Guid? phoneNumber = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? phoneNumber Optional receiving phone number to filter SMS messages for (optional) int? page Optional page index in SMS list pagination (optional, default to 0) int? size Optional page size in SMS list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread SMS only. All SMS are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) DateTime? since Optional filter SMSs received after given date time (optional) DateTime? before Optional filter SMSs received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageSmsProjection> ApiResponse of PageSmsProjection Remarks By default returns all SMS messages across all phone numbers sorted by ascending created at date. Responses are paginated. You can restrict results to a list of phone number IDs. You can also filter out read messages Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessageWithHttpInfo(Guid, int) Get SMS content including body. Expects SMS to exist by ID. For SMS that may not have arrived yet use the WaitForController. Declaration ApiResponse<SmsDto> GetSmsMessageWithHttpInfo(Guid smsId, int operationIndex = 0) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SmsDto> ApiResponse of SmsDto Remarks Returns a SMS summary object with content. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadSmsCount(int) Get unread SMS count Declaration UnreadCount GetUnreadSmsCount(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description UnreadCount UnreadCount Remarks Get number of SMS unread. Unread means has not been viewed in dashboard or returned in an email API response Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadSmsCountWithHttpInfo(int) Get unread SMS count Declaration ApiResponse<UnreadCount> GetUnreadSmsCountWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<UnreadCount> ApiResponse of UnreadCount Remarks Get number of SMS unread. Unread means has not been viewed in dashboard or returned in an email API response Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToSmsMessage(Guid, SmsReplyOptions, int) Send a reply to a received SMS message. Replies are sent from the receiving number. Declaration SentSmsDto ReplyToSmsMessage(Guid smsId, SmsReplyOptions smsReplyOptions, int operationIndex = 0) Parameters Type Name Description Guid smsId SmsReplyOptions smsReplyOptions int operationIndex Index associated with the operation. Returns Type Description SentSmsDto SentSmsDto Remarks Reply to an SMS message. Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToSmsMessageWithHttpInfo(Guid, SmsReplyOptions, int) Send a reply to a received SMS message. Replies are sent from the receiving number. Declaration ApiResponse<SentSmsDto> ReplyToSmsMessageWithHttpInfo(Guid smsId, SmsReplyOptions smsReplyOptions, int operationIndex = 0) Parameters Type Name Description Guid smsId SmsReplyOptions smsReplyOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentSmsDto> ApiResponse of SentSmsDto Remarks Reply to an SMS message. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.ITemplateControllerApi.html": {
    "href": "api/mailslurp.Api.ITemplateControllerApi.html",
    "title": "Interface ITemplateControllerApi | MailSlurp",
    "keywords": "Interface ITemplateControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members ITemplateControllerApiSync.CreateTemplate(CreateTemplateOptions, int) ITemplateControllerApiSync.CreateTemplateWithHttpInfo(CreateTemplateOptions, int) ITemplateControllerApiSync.DeleteTemplate(Guid, int) ITemplateControllerApiSync.DeleteTemplateWithHttpInfo(Guid, int) ITemplateControllerApiSync.GetAllTemplates(int?, int?, string, DateTime?, DateTime?, int) ITemplateControllerApiSync.GetAllTemplatesWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) ITemplateControllerApiSync.GetTemplate(Guid, int) ITemplateControllerApiSync.GetTemplateWithHttpInfo(Guid, int) ITemplateControllerApiSync.GetTemplatePreviewHtml(Guid, int) ITemplateControllerApiSync.GetTemplatePreviewHtmlWithHttpInfo(Guid, int) ITemplateControllerApiSync.GetTemplatePreviewJson(Guid, int) ITemplateControllerApiSync.GetTemplatePreviewJsonWithHttpInfo(Guid, int) ITemplateControllerApiSync.GetTemplates(int) ITemplateControllerApiSync.GetTemplatesWithHttpInfo(int) ITemplateControllerApiSync.UpdateTemplate(Guid, CreateTemplateOptions, int) ITemplateControllerApiSync.UpdateTemplateWithHttpInfo(Guid, CreateTemplateOptions, int) ITemplateControllerApiAsync.CreateTemplateAsync(CreateTemplateOptions, int, CancellationToken) ITemplateControllerApiAsync.CreateTemplateWithHttpInfoAsync(CreateTemplateOptions, int, CancellationToken) ITemplateControllerApiAsync.DeleteTemplateAsync(Guid, int, CancellationToken) ITemplateControllerApiAsync.DeleteTemplateWithHttpInfoAsync(Guid, int, CancellationToken) ITemplateControllerApiAsync.GetAllTemplatesAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) ITemplateControllerApiAsync.GetAllTemplatesWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) ITemplateControllerApiAsync.GetTemplateAsync(Guid, int, CancellationToken) ITemplateControllerApiAsync.GetTemplateWithHttpInfoAsync(Guid, int, CancellationToken) ITemplateControllerApiAsync.GetTemplatePreviewHtmlAsync(Guid, int, CancellationToken) ITemplateControllerApiAsync.GetTemplatePreviewHtmlWithHttpInfoAsync(Guid, int, CancellationToken) ITemplateControllerApiAsync.GetTemplatePreviewJsonAsync(Guid, int, CancellationToken) ITemplateControllerApiAsync.GetTemplatePreviewJsonWithHttpInfoAsync(Guid, int, CancellationToken) ITemplateControllerApiAsync.GetTemplatesAsync(int, CancellationToken) ITemplateControllerApiAsync.GetTemplatesWithHttpInfoAsync(int, CancellationToken) ITemplateControllerApiAsync.UpdateTemplateAsync(Guid, CreateTemplateOptions, int, CancellationToken) ITemplateControllerApiAsync.UpdateTemplateWithHttpInfoAsync(Guid, CreateTemplateOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ITemplateControllerApi : ITemplateControllerApiSync, ITemplateControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.ITemplateControllerApiAsync.html": {
    "href": "api/mailslurp.Api.ITemplateControllerApiAsync.html",
    "title": "Interface ITemplateControllerApiAsync | MailSlurp",
    "keywords": "Interface ITemplateControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ITemplateControllerApiAsync : IApiAccessor Methods View Source CreateTemplateAsync(CreateTemplateOptions, int, CancellationToken) Create a Template Declaration Task<TemplateDto> CreateTemplateAsync(CreateTemplateOptions createTemplateOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TemplateDto> Task of TemplateDto Remarks Create an email template with variables for use with templated transactional emails. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateTemplateWithHttpInfoAsync(CreateTemplateOptions, int, CancellationToken) Create a Template Declaration Task<ApiResponse<TemplateDto>> CreateTemplateWithHttpInfoAsync(CreateTemplateOptions createTemplateOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TemplateDto>> Task of ApiResponse (TemplateDto) Remarks Create an email template with variables for use with templated transactional emails. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteTemplateAsync(Guid, int, CancellationToken) Delete email template Declaration Task DeleteTemplateAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Remarks Delete template Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteTemplateWithHttpInfoAsync(Guid, int, CancellationToken) Delete email template Declaration Task<ApiResponse<object>> DeleteTemplateWithHttpInfoAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Remarks Delete template Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTemplatesAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) List templates Declaration Task<PageTemplateProjection> GetAllTemplatesAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageTemplateProjection> Task of PageTemplateProjection Remarks Get all templates in paginated format Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTemplatesWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) List templates Declaration Task<ApiResponse<PageTemplateProjection>> GetAllTemplatesWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageTemplateProjection>> Task of ApiResponse (PageTemplateProjection) Remarks Get all templates in paginated format Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplateAsync(Guid, int, CancellationToken) Get template Declaration Task<TemplateDto> GetTemplateAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TemplateDto> Task of TemplateDto Remarks Get email template Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewHtmlAsync(Guid, int, CancellationToken) Get template preview HTML Declaration Task<string> GetTemplatePreviewHtmlAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<string> Task of string Remarks Get email template preview with passed template variables in HTML format for browsers. Pass template variables as query params. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewHtmlWithHttpInfoAsync(Guid, int, CancellationToken) Get template preview HTML Declaration Task<ApiResponse<string>> GetTemplatePreviewHtmlWithHttpInfoAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<string>> Task of ApiResponse (string) Remarks Get email template preview with passed template variables in HTML format for browsers. Pass template variables as query params. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewJsonAsync(Guid, int, CancellationToken) Get template preview Json Declaration Task<TemplatePreview> GetTemplatePreviewJsonAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TemplatePreview> Task of TemplatePreview Remarks Get email template preview with passed template variables in JSON format. Pass template variables as query params. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewJsonWithHttpInfoAsync(Guid, int, CancellationToken) Get template preview Json Declaration Task<ApiResponse<TemplatePreview>> GetTemplatePreviewJsonWithHttpInfoAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TemplatePreview>> Task of ApiResponse (TemplatePreview) Remarks Get email template preview with passed template variables in JSON format. Pass template variables as query params. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatesAsync(int, CancellationToken) List templates Declaration Task<List<TemplateProjection>> GetTemplatesAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<TemplateProjection>> Task of List<TemplateProjection> Remarks Get all templates Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatesWithHttpInfoAsync(int, CancellationToken) List templates Declaration Task<ApiResponse<List<TemplateProjection>>> GetTemplatesWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<TemplateProjection>>> Task of ApiResponse (List<TemplateProjection>) Remarks Get all templates Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplateWithHttpInfoAsync(Guid, int, CancellationToken) Get template Declaration Task<ApiResponse<TemplateDto>> GetTemplateWithHttpInfoAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TemplateDto>> Task of ApiResponse (TemplateDto) Remarks Get email template Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateTemplateAsync(Guid, CreateTemplateOptions, int, CancellationToken) Update template Declaration Task<TemplateDto> UpdateTemplateAsync(Guid templateId, CreateTemplateOptions createTemplateOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TemplateDto> Task of TemplateDto Remarks Update email template Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateTemplateWithHttpInfoAsync(Guid, CreateTemplateOptions, int, CancellationToken) Update template Declaration Task<ApiResponse<TemplateDto>> UpdateTemplateWithHttpInfoAsync(Guid templateId, CreateTemplateOptions createTemplateOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TemplateDto>> Task of ApiResponse (TemplateDto) Remarks Update email template Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.ITemplateControllerApiSync.html": {
    "href": "api/mailslurp.Api.ITemplateControllerApiSync.html",
    "title": "Interface ITemplateControllerApiSync | MailSlurp",
    "keywords": "Interface ITemplateControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ITemplateControllerApiSync : IApiAccessor Methods View Source CreateTemplate(CreateTemplateOptions, int) Create a Template Declaration TemplateDto CreateTemplate(CreateTemplateOptions createTemplateOptions, int operationIndex = 0) Parameters Type Name Description CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. Returns Type Description TemplateDto TemplateDto Remarks Create an email template with variables for use with templated transactional emails. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateTemplateWithHttpInfo(CreateTemplateOptions, int) Create a Template Declaration ApiResponse<TemplateDto> CreateTemplateWithHttpInfo(CreateTemplateOptions createTemplateOptions, int operationIndex = 0) Parameters Type Name Description CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TemplateDto> ApiResponse of TemplateDto Remarks Create an email template with variables for use with templated transactional emails. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteTemplate(Guid, int) Delete email template Declaration void DeleteTemplate(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Remarks Delete template Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteTemplateWithHttpInfo(Guid, int) Delete email template Declaration ApiResponse<object> DeleteTemplateWithHttpInfo(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Remarks Delete template Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTemplates(int?, int?, string, DateTime?, DateTime?, int) List templates Declaration PageTemplateProjection GetAllTemplates(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageTemplateProjection PageTemplateProjection Remarks Get all templates in paginated format Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTemplatesWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) List templates Declaration ApiResponse<PageTemplateProjection> GetAllTemplatesWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageTemplateProjection> ApiResponse of PageTemplateProjection Remarks Get all templates in paginated format Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplate(Guid, int) Get template Declaration TemplateDto GetTemplate(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description TemplateDto TemplateDto Remarks Get email template Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewHtml(Guid, int) Get template preview HTML Declaration string GetTemplatePreviewHtml(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description string string Remarks Get email template preview with passed template variables in HTML format for browsers. Pass template variables as query params. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewHtmlWithHttpInfo(Guid, int) Get template preview HTML Declaration ApiResponse<string> GetTemplatePreviewHtmlWithHttpInfo(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description ApiResponse<string> ApiResponse of string Remarks Get email template preview with passed template variables in HTML format for browsers. Pass template variables as query params. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewJson(Guid, int) Get template preview Json Declaration TemplatePreview GetTemplatePreviewJson(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description TemplatePreview TemplatePreview Remarks Get email template preview with passed template variables in JSON format. Pass template variables as query params. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewJsonWithHttpInfo(Guid, int) Get template preview Json Declaration ApiResponse<TemplatePreview> GetTemplatePreviewJsonWithHttpInfo(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TemplatePreview> ApiResponse of TemplatePreview Remarks Get email template preview with passed template variables in JSON format. Pass template variables as query params. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplates(int) List templates Declaration List<TemplateProjection> GetTemplates(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<TemplateProjection> List<TemplateProjection> Remarks Get all templates Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatesWithHttpInfo(int) List templates Declaration ApiResponse<List<TemplateProjection>> GetTemplatesWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<TemplateProjection>> ApiResponse of List<TemplateProjection> Remarks Get all templates Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplateWithHttpInfo(Guid, int) Get template Declaration ApiResponse<TemplateDto> GetTemplateWithHttpInfo(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TemplateDto> ApiResponse of TemplateDto Remarks Get email template Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateTemplate(Guid, CreateTemplateOptions, int) Update template Declaration TemplateDto UpdateTemplate(Guid templateId, CreateTemplateOptions createTemplateOptions, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. Returns Type Description TemplateDto TemplateDto Remarks Update email template Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateTemplateWithHttpInfo(Guid, CreateTemplateOptions, int) Update template Declaration ApiResponse<TemplateDto> UpdateTemplateWithHttpInfo(Guid templateId, CreateTemplateOptions createTemplateOptions, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TemplateDto> ApiResponse of TemplateDto Remarks Update email template Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IToolsControllerApi.html": {
    "href": "api/mailslurp.Api.IToolsControllerApi.html",
    "title": "Interface IToolsControllerApi | MailSlurp",
    "keywords": "Interface IToolsControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IToolsControllerApiSync.CheckEmailFeaturesClientSupport(CheckEmailFeaturesClientSupportOptions, int) IToolsControllerApiSync.CheckEmailFeaturesClientSupportWithHttpInfo(CheckEmailFeaturesClientSupportOptions, int) IToolsControllerApiSync.GenerateBimiRecord(GenerateBimiRecordOptions, int) IToolsControllerApiSync.GenerateBimiRecordWithHttpInfo(GenerateBimiRecordOptions, int) IToolsControllerApiSync.GenerateDmarcRecord(GenerateDmarcRecordOptions, int) IToolsControllerApiSync.GenerateDmarcRecordWithHttpInfo(GenerateDmarcRecordOptions, int) IToolsControllerApiSync.GenerateMtaStsRecord(GenerateMtaStsRecordOptions, int) IToolsControllerApiSync.GenerateMtaStsRecordWithHttpInfo(GenerateMtaStsRecordOptions, int) IToolsControllerApiSync.GenerateTlsReportingRecord(GenerateTlsReportingRecordOptions, int) IToolsControllerApiSync.GenerateTlsReportingRecordWithHttpInfo(GenerateTlsReportingRecordOptions, int) IToolsControllerApiSync.LookupBimiDomain(LookupBimiDomainOptions, int) IToolsControllerApiSync.LookupBimiDomainWithHttpInfo(LookupBimiDomainOptions, int) IToolsControllerApiSync.LookupDmarcDomain(LookupDmarcDomainOptions, int) IToolsControllerApiSync.LookupDmarcDomainWithHttpInfo(LookupDmarcDomainOptions, int) IToolsControllerApiSync.LookupMtaStsDomain(LookupMtaStsDomainOptions, int) IToolsControllerApiSync.LookupMtaStsDomainWithHttpInfo(LookupMtaStsDomainOptions, int) IToolsControllerApiSync.LookupTlsReportingDomain(LookupTlsReportingDomainOptions, int) IToolsControllerApiSync.LookupTlsReportingDomainWithHttpInfo(LookupTlsReportingDomainOptions, int) IToolsControllerApiAsync.CheckEmailFeaturesClientSupportAsync(CheckEmailFeaturesClientSupportOptions, int, CancellationToken) IToolsControllerApiAsync.CheckEmailFeaturesClientSupportWithHttpInfoAsync(CheckEmailFeaturesClientSupportOptions, int, CancellationToken) IToolsControllerApiAsync.GenerateBimiRecordAsync(GenerateBimiRecordOptions, int, CancellationToken) IToolsControllerApiAsync.GenerateBimiRecordWithHttpInfoAsync(GenerateBimiRecordOptions, int, CancellationToken) IToolsControllerApiAsync.GenerateDmarcRecordAsync(GenerateDmarcRecordOptions, int, CancellationToken) IToolsControllerApiAsync.GenerateDmarcRecordWithHttpInfoAsync(GenerateDmarcRecordOptions, int, CancellationToken) IToolsControllerApiAsync.GenerateMtaStsRecordAsync(GenerateMtaStsRecordOptions, int, CancellationToken) IToolsControllerApiAsync.GenerateMtaStsRecordWithHttpInfoAsync(GenerateMtaStsRecordOptions, int, CancellationToken) IToolsControllerApiAsync.GenerateTlsReportingRecordAsync(GenerateTlsReportingRecordOptions, int, CancellationToken) IToolsControllerApiAsync.GenerateTlsReportingRecordWithHttpInfoAsync(GenerateTlsReportingRecordOptions, int, CancellationToken) IToolsControllerApiAsync.LookupBimiDomainAsync(LookupBimiDomainOptions, int, CancellationToken) IToolsControllerApiAsync.LookupBimiDomainWithHttpInfoAsync(LookupBimiDomainOptions, int, CancellationToken) IToolsControllerApiAsync.LookupDmarcDomainAsync(LookupDmarcDomainOptions, int, CancellationToken) IToolsControllerApiAsync.LookupDmarcDomainWithHttpInfoAsync(LookupDmarcDomainOptions, int, CancellationToken) IToolsControllerApiAsync.LookupMtaStsDomainAsync(LookupMtaStsDomainOptions, int, CancellationToken) IToolsControllerApiAsync.LookupMtaStsDomainWithHttpInfoAsync(LookupMtaStsDomainOptions, int, CancellationToken) IToolsControllerApiAsync.LookupTlsReportingDomainAsync(LookupTlsReportingDomainOptions, int, CancellationToken) IToolsControllerApiAsync.LookupTlsReportingDomainWithHttpInfoAsync(LookupTlsReportingDomainOptions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IToolsControllerApi : IToolsControllerApiSync, IToolsControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IToolsControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IToolsControllerApiAsync.html",
    "title": "Interface IToolsControllerApiAsync | MailSlurp",
    "keywords": "Interface IToolsControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IToolsControllerApiAsync : IApiAccessor Methods View Source CheckEmailFeaturesClientSupportAsync(CheckEmailFeaturesClientSupportOptions, int, CancellationToken) Check email client support for email HTML and CSS features Declaration Task<CheckEmailFeaturesClientSupportResults> CheckEmailFeaturesClientSupportAsync(CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CheckEmailFeaturesClientSupportResults> Task of CheckEmailFeaturesClientSupportResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailFeaturesClientSupportWithHttpInfoAsync(CheckEmailFeaturesClientSupportOptions, int, CancellationToken) Check email client support for email HTML and CSS features Declaration Task<ApiResponse<CheckEmailFeaturesClientSupportResults>> CheckEmailFeaturesClientSupportWithHttpInfoAsync(CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CheckEmailFeaturesClientSupportResults>> Task of ApiResponse (CheckEmailFeaturesClientSupportResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateBimiRecordAsync(GenerateBimiRecordOptions, int, CancellationToken) Create a BIMI record policy Declaration Task<GenerateBimiRecordResults> GenerateBimiRecordAsync(GenerateBimiRecordOptions generateBimiRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateBimiRecordOptions generateBimiRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GenerateBimiRecordResults> Task of GenerateBimiRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateBimiRecordWithHttpInfoAsync(GenerateBimiRecordOptions, int, CancellationToken) Create a BIMI record policy Declaration Task<ApiResponse<GenerateBimiRecordResults>> GenerateBimiRecordWithHttpInfoAsync(GenerateBimiRecordOptions generateBimiRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateBimiRecordOptions generateBimiRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GenerateBimiRecordResults>> Task of ApiResponse (GenerateBimiRecordResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateDmarcRecordAsync(GenerateDmarcRecordOptions, int, CancellationToken) Create a DMARC record policy Declaration Task<GenerateDmarcRecordResults> GenerateDmarcRecordAsync(GenerateDmarcRecordOptions generateDmarcRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateDmarcRecordOptions generateDmarcRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GenerateDmarcRecordResults> Task of GenerateDmarcRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateDmarcRecordWithHttpInfoAsync(GenerateDmarcRecordOptions, int, CancellationToken) Create a DMARC record policy Declaration Task<ApiResponse<GenerateDmarcRecordResults>> GenerateDmarcRecordWithHttpInfoAsync(GenerateDmarcRecordOptions generateDmarcRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateDmarcRecordOptions generateDmarcRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GenerateDmarcRecordResults>> Task of ApiResponse (GenerateDmarcRecordResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateMtaStsRecordAsync(GenerateMtaStsRecordOptions, int, CancellationToken) Create a TLS reporting record policy Declaration Task<GenerateMtaStsRecordResults> GenerateMtaStsRecordAsync(GenerateMtaStsRecordOptions generateMtaStsRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateMtaStsRecordOptions generateMtaStsRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GenerateMtaStsRecordResults> Task of GenerateMtaStsRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateMtaStsRecordWithHttpInfoAsync(GenerateMtaStsRecordOptions, int, CancellationToken) Create a TLS reporting record policy Declaration Task<ApiResponse<GenerateMtaStsRecordResults>> GenerateMtaStsRecordWithHttpInfoAsync(GenerateMtaStsRecordOptions generateMtaStsRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateMtaStsRecordOptions generateMtaStsRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GenerateMtaStsRecordResults>> Task of ApiResponse (GenerateMtaStsRecordResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateTlsReportingRecordAsync(GenerateTlsReportingRecordOptions, int, CancellationToken) Create a TLS reporting record policy Declaration Task<GenerateTlsReportingRecordResults> GenerateTlsReportingRecordAsync(GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GenerateTlsReportingRecordResults> Task of GenerateTlsReportingRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateTlsReportingRecordWithHttpInfoAsync(GenerateTlsReportingRecordOptions, int, CancellationToken) Create a TLS reporting record policy Declaration Task<ApiResponse<GenerateTlsReportingRecordResults>> GenerateTlsReportingRecordWithHttpInfoAsync(GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GenerateTlsReportingRecordResults>> Task of ApiResponse (GenerateTlsReportingRecordResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupBimiDomainAsync(LookupBimiDomainOptions, int, CancellationToken) Lookup a BIMI record policy Declaration Task<LookupBimiDomainResults> LookupBimiDomainAsync(LookupBimiDomainOptions lookupBimiDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupBimiDomainOptions lookupBimiDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<LookupBimiDomainResults> Task of LookupBimiDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupBimiDomainWithHttpInfoAsync(LookupBimiDomainOptions, int, CancellationToken) Lookup a BIMI record policy Declaration Task<ApiResponse<LookupBimiDomainResults>> LookupBimiDomainWithHttpInfoAsync(LookupBimiDomainOptions lookupBimiDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupBimiDomainOptions lookupBimiDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<LookupBimiDomainResults>> Task of ApiResponse (LookupBimiDomainResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupDmarcDomainAsync(LookupDmarcDomainOptions, int, CancellationToken) Lookup a DMARC record policy Declaration Task<LookupDmarcDomainResults> LookupDmarcDomainAsync(LookupDmarcDomainOptions lookupDmarcDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupDmarcDomainOptions lookupDmarcDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<LookupDmarcDomainResults> Task of LookupDmarcDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupDmarcDomainWithHttpInfoAsync(LookupDmarcDomainOptions, int, CancellationToken) Lookup a DMARC record policy Declaration Task<ApiResponse<LookupDmarcDomainResults>> LookupDmarcDomainWithHttpInfoAsync(LookupDmarcDomainOptions lookupDmarcDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupDmarcDomainOptions lookupDmarcDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<LookupDmarcDomainResults>> Task of ApiResponse (LookupDmarcDomainResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupMtaStsDomainAsync(LookupMtaStsDomainOptions, int, CancellationToken) Lookup a MTA-STS domain policy Declaration Task<LookupMtaStsDomainResults> LookupMtaStsDomainAsync(LookupMtaStsDomainOptions lookupMtaStsDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupMtaStsDomainOptions lookupMtaStsDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<LookupMtaStsDomainResults> Task of LookupMtaStsDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupMtaStsDomainWithHttpInfoAsync(LookupMtaStsDomainOptions, int, CancellationToken) Lookup a MTA-STS domain policy Declaration Task<ApiResponse<LookupMtaStsDomainResults>> LookupMtaStsDomainWithHttpInfoAsync(LookupMtaStsDomainOptions lookupMtaStsDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupMtaStsDomainOptions lookupMtaStsDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<LookupMtaStsDomainResults>> Task of ApiResponse (LookupMtaStsDomainResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupTlsReportingDomainAsync(LookupTlsReportingDomainOptions, int, CancellationToken) Lookup a TLS reporting domain policy Declaration Task<LookupTlsReportingDomainResults> LookupTlsReportingDomainAsync(LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<LookupTlsReportingDomainResults> Task of LookupTlsReportingDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupTlsReportingDomainWithHttpInfoAsync(LookupTlsReportingDomainOptions, int, CancellationToken) Lookup a TLS reporting domain policy Declaration Task<ApiResponse<LookupTlsReportingDomainResults>> LookupTlsReportingDomainWithHttpInfoAsync(LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<LookupTlsReportingDomainResults>> Task of ApiResponse (LookupTlsReportingDomainResults) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IToolsControllerApiSync.html": {
    "href": "api/mailslurp.Api.IToolsControllerApiSync.html",
    "title": "Interface IToolsControllerApiSync | MailSlurp",
    "keywords": "Interface IToolsControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IToolsControllerApiSync : IApiAccessor Methods View Source CheckEmailFeaturesClientSupport(CheckEmailFeaturesClientSupportOptions, int) Check email client support for email HTML and CSS features Declaration CheckEmailFeaturesClientSupportResults CheckEmailFeaturesClientSupport(CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions, int operationIndex = 0) Parameters Type Name Description CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions int operationIndex Index associated with the operation. Returns Type Description CheckEmailFeaturesClientSupportResults CheckEmailFeaturesClientSupportResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailFeaturesClientSupportWithHttpInfo(CheckEmailFeaturesClientSupportOptions, int) Check email client support for email HTML and CSS features Declaration ApiResponse<CheckEmailFeaturesClientSupportResults> CheckEmailFeaturesClientSupportWithHttpInfo(CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions, int operationIndex = 0) Parameters Type Name Description CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CheckEmailFeaturesClientSupportResults> ApiResponse of CheckEmailFeaturesClientSupportResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateBimiRecord(GenerateBimiRecordOptions, int) Create a BIMI record policy Declaration GenerateBimiRecordResults GenerateBimiRecord(GenerateBimiRecordOptions generateBimiRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateBimiRecordOptions generateBimiRecordOptions int operationIndex Index associated with the operation. Returns Type Description GenerateBimiRecordResults GenerateBimiRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateBimiRecordWithHttpInfo(GenerateBimiRecordOptions, int) Create a BIMI record policy Declaration ApiResponse<GenerateBimiRecordResults> GenerateBimiRecordWithHttpInfo(GenerateBimiRecordOptions generateBimiRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateBimiRecordOptions generateBimiRecordOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GenerateBimiRecordResults> ApiResponse of GenerateBimiRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateDmarcRecord(GenerateDmarcRecordOptions, int) Create a DMARC record policy Declaration GenerateDmarcRecordResults GenerateDmarcRecord(GenerateDmarcRecordOptions generateDmarcRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateDmarcRecordOptions generateDmarcRecordOptions int operationIndex Index associated with the operation. Returns Type Description GenerateDmarcRecordResults GenerateDmarcRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateDmarcRecordWithHttpInfo(GenerateDmarcRecordOptions, int) Create a DMARC record policy Declaration ApiResponse<GenerateDmarcRecordResults> GenerateDmarcRecordWithHttpInfo(GenerateDmarcRecordOptions generateDmarcRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateDmarcRecordOptions generateDmarcRecordOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GenerateDmarcRecordResults> ApiResponse of GenerateDmarcRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateMtaStsRecord(GenerateMtaStsRecordOptions, int) Create a TLS reporting record policy Declaration GenerateMtaStsRecordResults GenerateMtaStsRecord(GenerateMtaStsRecordOptions generateMtaStsRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateMtaStsRecordOptions generateMtaStsRecordOptions int operationIndex Index associated with the operation. Returns Type Description GenerateMtaStsRecordResults GenerateMtaStsRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateMtaStsRecordWithHttpInfo(GenerateMtaStsRecordOptions, int) Create a TLS reporting record policy Declaration ApiResponse<GenerateMtaStsRecordResults> GenerateMtaStsRecordWithHttpInfo(GenerateMtaStsRecordOptions generateMtaStsRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateMtaStsRecordOptions generateMtaStsRecordOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GenerateMtaStsRecordResults> ApiResponse of GenerateMtaStsRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateTlsReportingRecord(GenerateTlsReportingRecordOptions, int) Create a TLS reporting record policy Declaration GenerateTlsReportingRecordResults GenerateTlsReportingRecord(GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions int operationIndex Index associated with the operation. Returns Type Description GenerateTlsReportingRecordResults GenerateTlsReportingRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateTlsReportingRecordWithHttpInfo(GenerateTlsReportingRecordOptions, int) Create a TLS reporting record policy Declaration ApiResponse<GenerateTlsReportingRecordResults> GenerateTlsReportingRecordWithHttpInfo(GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GenerateTlsReportingRecordResults> ApiResponse of GenerateTlsReportingRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupBimiDomain(LookupBimiDomainOptions, int) Lookup a BIMI record policy Declaration LookupBimiDomainResults LookupBimiDomain(LookupBimiDomainOptions lookupBimiDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupBimiDomainOptions lookupBimiDomainOptions int operationIndex Index associated with the operation. Returns Type Description LookupBimiDomainResults LookupBimiDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupBimiDomainWithHttpInfo(LookupBimiDomainOptions, int) Lookup a BIMI record policy Declaration ApiResponse<LookupBimiDomainResults> LookupBimiDomainWithHttpInfo(LookupBimiDomainOptions lookupBimiDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupBimiDomainOptions lookupBimiDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<LookupBimiDomainResults> ApiResponse of LookupBimiDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupDmarcDomain(LookupDmarcDomainOptions, int) Lookup a DMARC record policy Declaration LookupDmarcDomainResults LookupDmarcDomain(LookupDmarcDomainOptions lookupDmarcDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupDmarcDomainOptions lookupDmarcDomainOptions int operationIndex Index associated with the operation. Returns Type Description LookupDmarcDomainResults LookupDmarcDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupDmarcDomainWithHttpInfo(LookupDmarcDomainOptions, int) Lookup a DMARC record policy Declaration ApiResponse<LookupDmarcDomainResults> LookupDmarcDomainWithHttpInfo(LookupDmarcDomainOptions lookupDmarcDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupDmarcDomainOptions lookupDmarcDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<LookupDmarcDomainResults> ApiResponse of LookupDmarcDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupMtaStsDomain(LookupMtaStsDomainOptions, int) Lookup a MTA-STS domain policy Declaration LookupMtaStsDomainResults LookupMtaStsDomain(LookupMtaStsDomainOptions lookupMtaStsDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupMtaStsDomainOptions lookupMtaStsDomainOptions int operationIndex Index associated with the operation. Returns Type Description LookupMtaStsDomainResults LookupMtaStsDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupMtaStsDomainWithHttpInfo(LookupMtaStsDomainOptions, int) Lookup a MTA-STS domain policy Declaration ApiResponse<LookupMtaStsDomainResults> LookupMtaStsDomainWithHttpInfo(LookupMtaStsDomainOptions lookupMtaStsDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupMtaStsDomainOptions lookupMtaStsDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<LookupMtaStsDomainResults> ApiResponse of LookupMtaStsDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupTlsReportingDomain(LookupTlsReportingDomainOptions, int) Lookup a TLS reporting domain policy Declaration LookupTlsReportingDomainResults LookupTlsReportingDomain(LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions int operationIndex Index associated with the operation. Returns Type Description LookupTlsReportingDomainResults LookupTlsReportingDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupTlsReportingDomainWithHttpInfo(LookupTlsReportingDomainOptions, int) Lookup a TLS reporting domain policy Declaration ApiResponse<LookupTlsReportingDomainResults> LookupTlsReportingDomainWithHttpInfo(LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<LookupTlsReportingDomainResults> ApiResponse of LookupTlsReportingDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.ITrackingControllerApi.html": {
    "href": "api/mailslurp.Api.ITrackingControllerApi.html",
    "title": "Interface ITrackingControllerApi | MailSlurp",
    "keywords": "Interface ITrackingControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members ITrackingControllerApiSync.CreateTrackingPixel(CreateTrackingPixelOptions, int) ITrackingControllerApiSync.CreateTrackingPixelWithHttpInfo(CreateTrackingPixelOptions, int) ITrackingControllerApiSync.GetAllTrackingPixels(int?, int?, string, string, DateTime?, DateTime?, int) ITrackingControllerApiSync.GetAllTrackingPixelsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, int) ITrackingControllerApiSync.GetTrackingPixel(Guid, int) ITrackingControllerApiSync.GetTrackingPixelWithHttpInfo(Guid, int) ITrackingControllerApiAsync.CreateTrackingPixelAsync(CreateTrackingPixelOptions, int, CancellationToken) ITrackingControllerApiAsync.CreateTrackingPixelWithHttpInfoAsync(CreateTrackingPixelOptions, int, CancellationToken) ITrackingControllerApiAsync.GetAllTrackingPixelsAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) ITrackingControllerApiAsync.GetAllTrackingPixelsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) ITrackingControllerApiAsync.GetTrackingPixelAsync(Guid, int, CancellationToken) ITrackingControllerApiAsync.GetTrackingPixelWithHttpInfoAsync(Guid, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ITrackingControllerApi : ITrackingControllerApiSync, ITrackingControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.ITrackingControllerApiAsync.html": {
    "href": "api/mailslurp.Api.ITrackingControllerApiAsync.html",
    "title": "Interface ITrackingControllerApiAsync | MailSlurp",
    "keywords": "Interface ITrackingControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ITrackingControllerApiAsync : IApiAccessor Methods View Source CreateTrackingPixelAsync(CreateTrackingPixelOptions, int, CancellationToken) Create tracking pixel Declaration Task<TrackingPixelDto> CreateTrackingPixelAsync(CreateTrackingPixelOptions createTrackingPixelOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateTrackingPixelOptions createTrackingPixelOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TrackingPixelDto> Task of TrackingPixelDto Remarks Create a tracking pixel. A tracking pixel is an image that can be embedded in an email. When the email is viewed and the image is seen MailSlurp will mark the pixel as seen. Use tracking pixels to monitor email open events. You can receive open notifications via webhook or by fetching the pixel. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateTrackingPixelWithHttpInfoAsync(CreateTrackingPixelOptions, int, CancellationToken) Create tracking pixel Declaration Task<ApiResponse<TrackingPixelDto>> CreateTrackingPixelWithHttpInfoAsync(CreateTrackingPixelOptions createTrackingPixelOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateTrackingPixelOptions createTrackingPixelOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TrackingPixelDto>> Task of ApiResponse (TrackingPixelDto) Remarks Create a tracking pixel. A tracking pixel is an image that can be embedded in an email. When the email is viewed and the image is seen MailSlurp will mark the pixel as seen. Use tracking pixels to monitor email open events. You can receive open notifications via webhook or by fetching the pixel. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTrackingPixelsAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get tracking pixels Declaration Task<PageTrackingPixelProjection> GetAllTrackingPixelsAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageTrackingPixelProjection> Task of PageTrackingPixelProjection Remarks List tracking pixels in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTrackingPixelsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get tracking pixels Declaration Task<ApiResponse<PageTrackingPixelProjection>> GetAllTrackingPixelsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageTrackingPixelProjection>> Task of ApiResponse (PageTrackingPixelProjection) Remarks List tracking pixels in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTrackingPixelAsync(Guid, int, CancellationToken) Get pixel Declaration Task<TrackingPixelDto> GetTrackingPixelAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TrackingPixelDto> Task of TrackingPixelDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTrackingPixelWithHttpInfoAsync(Guid, int, CancellationToken) Get pixel Declaration Task<ApiResponse<TrackingPixelDto>> GetTrackingPixelWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TrackingPixelDto>> Task of ApiResponse (TrackingPixelDto) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.ITrackingControllerApiSync.html": {
    "href": "api/mailslurp.Api.ITrackingControllerApiSync.html",
    "title": "Interface ITrackingControllerApiSync | MailSlurp",
    "keywords": "Interface ITrackingControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface ITrackingControllerApiSync : IApiAccessor Methods View Source CreateTrackingPixel(CreateTrackingPixelOptions, int) Create tracking pixel Declaration TrackingPixelDto CreateTrackingPixel(CreateTrackingPixelOptions createTrackingPixelOptions, int operationIndex = 0) Parameters Type Name Description CreateTrackingPixelOptions createTrackingPixelOptions int operationIndex Index associated with the operation. Returns Type Description TrackingPixelDto TrackingPixelDto Remarks Create a tracking pixel. A tracking pixel is an image that can be embedded in an email. When the email is viewed and the image is seen MailSlurp will mark the pixel as seen. Use tracking pixels to monitor email open events. You can receive open notifications via webhook or by fetching the pixel. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateTrackingPixelWithHttpInfo(CreateTrackingPixelOptions, int) Create tracking pixel Declaration ApiResponse<TrackingPixelDto> CreateTrackingPixelWithHttpInfo(CreateTrackingPixelOptions createTrackingPixelOptions, int operationIndex = 0) Parameters Type Name Description CreateTrackingPixelOptions createTrackingPixelOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TrackingPixelDto> ApiResponse of TrackingPixelDto Remarks Create a tracking pixel. A tracking pixel is an image that can be embedded in an email. When the email is viewed and the image is seen MailSlurp will mark the pixel as seen. Use tracking pixels to monitor email open events. You can receive open notifications via webhook or by fetching the pixel. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTrackingPixels(int?, int?, string, string, DateTime?, DateTime?, int) Get tracking pixels Declaration PageTrackingPixelProjection GetAllTrackingPixels(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageTrackingPixelProjection PageTrackingPixelProjection Remarks List tracking pixels in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTrackingPixelsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, int) Get tracking pixels Declaration ApiResponse<PageTrackingPixelProjection> GetAllTrackingPixelsWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageTrackingPixelProjection> ApiResponse of PageTrackingPixelProjection Remarks List tracking pixels in paginated form Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTrackingPixel(Guid, int) Get pixel Declaration TrackingPixelDto GetTrackingPixel(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description TrackingPixelDto TrackingPixelDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTrackingPixelWithHttpInfo(Guid, int) Get pixel Declaration ApiResponse<TrackingPixelDto> GetTrackingPixelWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TrackingPixelDto> ApiResponse of TrackingPixelDto Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IUserControllerApi.html": {
    "href": "api/mailslurp.Api.IUserControllerApi.html",
    "title": "Interface IUserControllerApi | MailSlurp",
    "keywords": "Interface IUserControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IUserControllerApiSync.GetJsonPropertyAsString(string, object, int) IUserControllerApiSync.GetJsonPropertyAsStringWithHttpInfo(string, object, int) IUserControllerApiSync.GetUserInfo(int) IUserControllerApiSync.GetUserInfoWithHttpInfo(int) IUserControllerApiAsync.GetJsonPropertyAsStringAsync(string, object, int, CancellationToken) IUserControllerApiAsync.GetJsonPropertyAsStringWithHttpInfoAsync(string, object, int, CancellationToken) IUserControllerApiAsync.GetUserInfoAsync(int, CancellationToken) IUserControllerApiAsync.GetUserInfoWithHttpInfoAsync(int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IUserControllerApi : IUserControllerApiSync, IUserControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IUserControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IUserControllerApiAsync.html",
    "title": "Interface IUserControllerApiAsync | MailSlurp",
    "keywords": "Interface IUserControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IUserControllerApiAsync : IApiAccessor Methods View Source GetJsonPropertyAsStringAsync(string, object, int, CancellationToken) Declaration Task<string> GetJsonPropertyAsStringAsync(string property, object body, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string property JSON property name or dot separated path selector such as a.b.c object body int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<string> Task of string Remarks Utility function to extract properties from JSON objects in language where this is cumbersome. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonPropertyAsStringWithHttpInfoAsync(string, object, int, CancellationToken) Declaration Task<ApiResponse<string>> GetJsonPropertyAsStringWithHttpInfoAsync(string property, object body, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string property JSON property name or dot separated path selector such as a.b.c object body int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<string>> Task of ApiResponse (string) Remarks Utility function to extract properties from JSON objects in language where this is cumbersome. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUserInfoAsync(int, CancellationToken) Declaration Task<UserInfoDto> GetUserInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<UserInfoDto> Task of UserInfoDto Remarks Get account information for your user Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUserInfoWithHttpInfoAsync(int, CancellationToken) Declaration Task<ApiResponse<UserInfoDto>> GetUserInfoWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<UserInfoDto>> Task of ApiResponse (UserInfoDto) Remarks Get account information for your user Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IUserControllerApiSync.html": {
    "href": "api/mailslurp.Api.IUserControllerApiSync.html",
    "title": "Interface IUserControllerApiSync | MailSlurp",
    "keywords": "Interface IUserControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IUserControllerApiSync : IApiAccessor Methods View Source GetJsonPropertyAsString(string, object, int) Declaration string GetJsonPropertyAsString(string property, object body, int operationIndex = 0) Parameters Type Name Description string property JSON property name or dot separated path selector such as a.b.c object body int operationIndex Index associated with the operation. Returns Type Description string string Remarks Utility function to extract properties from JSON objects in language where this is cumbersome. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonPropertyAsStringWithHttpInfo(string, object, int) Declaration ApiResponse<string> GetJsonPropertyAsStringWithHttpInfo(string property, object body, int operationIndex = 0) Parameters Type Name Description string property JSON property name or dot separated path selector such as a.b.c object body int operationIndex Index associated with the operation. Returns Type Description ApiResponse<string> ApiResponse of string Remarks Utility function to extract properties from JSON objects in language where this is cumbersome. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUserInfo(int) Declaration UserInfoDto GetUserInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description UserInfoDto UserInfoDto Remarks Get account information for your user Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUserInfoWithHttpInfo(int) Declaration ApiResponse<UserInfoDto> GetUserInfoWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<UserInfoDto> ApiResponse of UserInfoDto Remarks Get account information for your user Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IWaitForControllerApi.html": {
    "href": "api/mailslurp.Api.IWaitForControllerApi.html",
    "title": "Interface IWaitForControllerApi | MailSlurp",
    "keywords": "Interface IWaitForControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IWaitForControllerApiSync.WaitFor(WaitForConditions, int) IWaitForControllerApiSync.WaitForWithHttpInfo(WaitForConditions, int) IWaitForControllerApiSync.WaitForEmailCount(Guid, int, long?, bool?, DateTime?, DateTime?, string, long?, int) IWaitForControllerApiSync.WaitForEmailCountWithHttpInfo(Guid, int, long?, bool?, DateTime?, DateTime?, string, long?, int) IWaitForControllerApiSync.WaitForLatestEmail(Guid?, long?, bool?, DateTime?, DateTime?, string, long?, int) IWaitForControllerApiSync.WaitForLatestEmailWithHttpInfo(Guid?, long?, bool?, DateTime?, DateTime?, string, long?, int) IWaitForControllerApiSync.WaitForLatestSms(WaitForSingleSmsOptions, int) IWaitForControllerApiSync.WaitForLatestSmsWithHttpInfo(WaitForSingleSmsOptions, int) IWaitForControllerApiSync.WaitForMatchingEmails(Guid, int, MatchOptions, DateTime?, DateTime?, string, long?, long?, bool?, int) IWaitForControllerApiSync.WaitForMatchingEmailsWithHttpInfo(Guid, int, MatchOptions, DateTime?, DateTime?, string, long?, long?, bool?, int) IWaitForControllerApiSync.WaitForMatchingFirstEmail(Guid, MatchOptions, long?, bool?, DateTime?, DateTime?, string, long?, int) IWaitForControllerApiSync.WaitForMatchingFirstEmailWithHttpInfo(Guid, MatchOptions, long?, bool?, DateTime?, DateTime?, string, long?, int) IWaitForControllerApiSync.WaitForNthEmail(Guid?, int?, long?, bool?, DateTime?, DateTime?, string, long?, int) IWaitForControllerApiSync.WaitForNthEmailWithHttpInfo(Guid?, int?, long?, bool?, DateTime?, DateTime?, string, long?, int) IWaitForControllerApiSync.WaitForSms(WaitForSmsConditions, int) IWaitForControllerApiSync.WaitForSmsWithHttpInfo(WaitForSmsConditions, int) IWaitForControllerApiAsync.WaitForAsync(WaitForConditions, int, CancellationToken) IWaitForControllerApiAsync.WaitForWithHttpInfoAsync(WaitForConditions, int, CancellationToken) IWaitForControllerApiAsync.WaitForEmailCountAsync(Guid, int, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) IWaitForControllerApiAsync.WaitForEmailCountWithHttpInfoAsync(Guid, int, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) IWaitForControllerApiAsync.WaitForLatestEmailAsync(Guid?, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) IWaitForControllerApiAsync.WaitForLatestEmailWithHttpInfoAsync(Guid?, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) IWaitForControllerApiAsync.WaitForLatestSmsAsync(WaitForSingleSmsOptions, int, CancellationToken) IWaitForControllerApiAsync.WaitForLatestSmsWithHttpInfoAsync(WaitForSingleSmsOptions, int, CancellationToken) IWaitForControllerApiAsync.WaitForMatchingEmailsAsync(Guid, int, MatchOptions, DateTime?, DateTime?, string, long?, long?, bool?, int, CancellationToken) IWaitForControllerApiAsync.WaitForMatchingEmailsWithHttpInfoAsync(Guid, int, MatchOptions, DateTime?, DateTime?, string, long?, long?, bool?, int, CancellationToken) IWaitForControllerApiAsync.WaitForMatchingFirstEmailAsync(Guid, MatchOptions, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) IWaitForControllerApiAsync.WaitForMatchingFirstEmailWithHttpInfoAsync(Guid, MatchOptions, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) IWaitForControllerApiAsync.WaitForNthEmailAsync(Guid?, int?, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) IWaitForControllerApiAsync.WaitForNthEmailWithHttpInfoAsync(Guid?, int?, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) IWaitForControllerApiAsync.WaitForSmsAsync(WaitForSmsConditions, int, CancellationToken) IWaitForControllerApiAsync.WaitForSmsWithHttpInfoAsync(WaitForSmsConditions, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IWaitForControllerApi : IWaitForControllerApiSync, IWaitForControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IWaitForControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IWaitForControllerApiAsync.html",
    "title": "Interface IWaitForControllerApiAsync | MailSlurp",
    "keywords": "Interface IWaitForControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IWaitForControllerApiAsync : IApiAccessor Methods View Source WaitForAsync(WaitForConditions, int, CancellationToken) Wait for an email to match the provided filter conditions such as subject contains keyword. Declaration Task<List<EmailPreview>> WaitForAsync(WaitForConditions waitForConditions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description WaitForConditions waitForConditions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<EmailPreview>> Task of List<EmailPreview> Remarks Generic waitFor method that will wait until an inbox meets given conditions or return immediately if already met Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForEmailCountAsync(Guid, int, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Wait for and return count number of emails. Hold connection until inbox count matches expected or timeout occurs Declaration Task<List<EmailPreview>> WaitForEmailCountAsync(Guid inboxId, int count, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater that 1 long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<EmailPreview>> Task of List<EmailPreview> Remarks If inbox contains count or more emails at time of request then return count worth of emails. If not wait until the count is reached and return those or return an error if timeout is exceeded. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForEmailCountWithHttpInfoAsync(Guid, int, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Wait for and return count number of emails. Hold connection until inbox count matches expected or timeout occurs Declaration Task<ApiResponse<List<EmailPreview>>> WaitForEmailCountWithHttpInfoAsync(Guid inboxId, int count, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater that 1 long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<EmailPreview>>> Task of ApiResponse (List<EmailPreview>) Remarks If inbox contains count or more emails at time of request then return count worth of emails. If not wait until the count is reached and return those or return an error if timeout is exceeded. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestEmailAsync(Guid?, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Fetch inbox's latest email or if empty wait for an email to arrive Declaration Task<Email> WaitForLatestEmailAsync(Guid? inboxId = null, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Id of the inbox we are fetching emails from (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only. (optional, default to false) DateTime? before Filter for emails that were before after the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Remarks Will return either the last received email or wait for an email to arrive and return that. If you need to wait for an email for a non-empty inbox set unreadOnly=true or see the other receive methods such as waitForNthEmail or waitForEmailCount. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestEmailWithHttpInfoAsync(Guid?, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Fetch inbox's latest email or if empty wait for an email to arrive Declaration Task<ApiResponse<Email>> WaitForLatestEmailWithHttpInfoAsync(Guid? inboxId = null, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Id of the inbox we are fetching emails from (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only. (optional, default to false) DateTime? before Filter for emails that were before after the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Remarks Will return either the last received email or wait for an email to arrive and return that. If you need to wait for an email for a non-empty inbox set unreadOnly=true or see the other receive methods such as waitForNthEmail or waitForEmailCount. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestSmsAsync(WaitForSingleSmsOptions, int, CancellationToken) Wait for the latest SMS message to match the provided filter conditions such as body contains keyword. Declaration Task<SmsDto> WaitForLatestSmsAsync(WaitForSingleSmsOptions waitForSingleSmsOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description WaitForSingleSmsOptions waitForSingleSmsOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SmsDto> Task of SmsDto Remarks Wait until a phone number meets given conditions or return immediately if already met Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestSmsWithHttpInfoAsync(WaitForSingleSmsOptions, int, CancellationToken) Wait for the latest SMS message to match the provided filter conditions such as body contains keyword. Declaration Task<ApiResponse<SmsDto>> WaitForLatestSmsWithHttpInfoAsync(WaitForSingleSmsOptions waitForSingleSmsOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description WaitForSingleSmsOptions waitForSingleSmsOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SmsDto>> Task of ApiResponse (SmsDto) Remarks Wait until a phone number meets given conditions or return immediately if already met Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingEmailsAsync(Guid, int, MatchOptions, DateTime?, DateTime?, string, long?, long?, bool?, int, CancellationToken) Wait or return list of emails that match simple matching patterns Declaration Task<List<EmailPreview>> WaitForMatchingEmailsAsync(Guid inboxId, int count, MatchOptions matchOptions, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, long? timeout = null, bool? unreadOnly = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater or equal to 1 MatchOptions matchOptions DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<EmailPreview>> Task of List<EmailPreview> Remarks Perform a search of emails in an inbox with the given patterns. If results match expected count then return or else retry the search until results are found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingEmailsWithHttpInfoAsync(Guid, int, MatchOptions, DateTime?, DateTime?, string, long?, long?, bool?, int, CancellationToken) Wait or return list of emails that match simple matching patterns Declaration Task<ApiResponse<List<EmailPreview>>> WaitForMatchingEmailsWithHttpInfoAsync(Guid inboxId, int count, MatchOptions matchOptions, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, long? timeout = null, bool? unreadOnly = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater or equal to 1 MatchOptions matchOptions DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<EmailPreview>>> Task of ApiResponse (List<EmailPreview>) Remarks Perform a search of emails in an inbox with the given patterns. If results match expected count then return or else retry the search until results are found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingFirstEmailAsync(Guid, MatchOptions, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Wait for or return the first email that matches provided MatchOptions array Declaration Task<Email> WaitForMatchingFirstEmailAsync(Guid inboxId, MatchOptions matchOptions, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of the inbox we are matching an email for MatchOptions matchOptions long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Remarks Perform a search of emails in an inbox with the given patterns. If a result if found then return or else retry the search until a result is found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingFirstEmailWithHttpInfoAsync(Guid, MatchOptions, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Wait for or return the first email that matches provided MatchOptions array Declaration Task<ApiResponse<Email>> WaitForMatchingFirstEmailWithHttpInfoAsync(Guid inboxId, MatchOptions matchOptions, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of the inbox we are matching an email for MatchOptions matchOptions long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Remarks Perform a search of emails in an inbox with the given patterns. If a result if found then return or else retry the search until a result is found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthEmailAsync(Guid?, int?, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Wait for or fetch the email with a given index in the inbox specified. If index doesn't exist waits for it to exist or timeout to occur. Declaration Task<Email> WaitForNthEmailAsync(Guid? inboxId = null, int? index = null, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Id of the inbox you are fetching emails from (optional) int? index Zero based index of the email to wait for. If an inbox has 1 email already and you want to wait for the 2nd email pass index=1 (optional, default to 0) long? timeout Max milliseconds to wait for the nth email if not already present (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Remarks If nth email is already present in inbox then return it. If not hold the connection open until timeout expires or the nth email is received and returned. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthEmailWithHttpInfoAsync(Guid?, int?, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Wait for or fetch the email with a given index in the inbox specified. If index doesn't exist waits for it to exist or timeout to occur. Declaration Task<ApiResponse<Email>> WaitForNthEmailWithHttpInfoAsync(Guid? inboxId = null, int? index = null, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Id of the inbox you are fetching emails from (optional) int? index Zero based index of the email to wait for. If an inbox has 1 email already and you want to wait for the 2nd email pass index=1 (optional, default to 0) long? timeout Max milliseconds to wait for the nth email if not already present (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Remarks If nth email is already present in inbox then return it. If not hold the connection open until timeout expires or the nth email is received and returned. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForSmsAsync(WaitForSmsConditions, int, CancellationToken) Wait for an SMS message to match the provided filter conditions such as body contains keyword. Declaration Task<List<SmsPreview>> WaitForSmsAsync(WaitForSmsConditions waitForSmsConditions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description WaitForSmsConditions waitForSmsConditions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<SmsPreview>> Task of List<SmsPreview> Remarks Generic waitFor method that will wait until a phone number meets given conditions or return immediately if already met Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForSmsWithHttpInfoAsync(WaitForSmsConditions, int, CancellationToken) Wait for an SMS message to match the provided filter conditions such as body contains keyword. Declaration Task<ApiResponse<List<SmsPreview>>> WaitForSmsWithHttpInfoAsync(WaitForSmsConditions waitForSmsConditions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description WaitForSmsConditions waitForSmsConditions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<SmsPreview>>> Task of ApiResponse (List<SmsPreview>) Remarks Generic waitFor method that will wait until a phone number meets given conditions or return immediately if already met Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForWithHttpInfoAsync(WaitForConditions, int, CancellationToken) Wait for an email to match the provided filter conditions such as subject contains keyword. Declaration Task<ApiResponse<List<EmailPreview>>> WaitForWithHttpInfoAsync(WaitForConditions waitForConditions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description WaitForConditions waitForConditions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<EmailPreview>>> Task of ApiResponse (List<EmailPreview>) Remarks Generic waitFor method that will wait until an inbox meets given conditions or return immediately if already met Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IWaitForControllerApiSync.html": {
    "href": "api/mailslurp.Api.IWaitForControllerApiSync.html",
    "title": "Interface IWaitForControllerApiSync | MailSlurp",
    "keywords": "Interface IWaitForControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IWaitForControllerApiSync : IApiAccessor Methods View Source WaitFor(WaitForConditions, int) Wait for an email to match the provided filter conditions such as subject contains keyword. Declaration List<EmailPreview> WaitFor(WaitForConditions waitForConditions, int operationIndex = 0) Parameters Type Name Description WaitForConditions waitForConditions int operationIndex Index associated with the operation. Returns Type Description List<EmailPreview> List<EmailPreview> Remarks Generic waitFor method that will wait until an inbox meets given conditions or return immediately if already met Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForEmailCount(Guid, int, long?, bool?, DateTime?, DateTime?, string, long?, int) Wait for and return count number of emails. Hold connection until inbox count matches expected or timeout occurs Declaration List<EmailPreview> WaitForEmailCount(Guid inboxId, int count, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater that 1 long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description List<EmailPreview> List<EmailPreview> Remarks If inbox contains count or more emails at time of request then return count worth of emails. If not wait until the count is reached and return those or return an error if timeout is exceeded. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForEmailCountWithHttpInfo(Guid, int, long?, bool?, DateTime?, DateTime?, string, long?, int) Wait for and return count number of emails. Hold connection until inbox count matches expected or timeout occurs Declaration ApiResponse<List<EmailPreview>> WaitForEmailCountWithHttpInfo(Guid inboxId, int count, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater that 1 long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<EmailPreview>> ApiResponse of List<EmailPreview> Remarks If inbox contains count or more emails at time of request then return count worth of emails. If not wait until the count is reached and return those or return an error if timeout is exceeded. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestEmail(Guid?, long?, bool?, DateTime?, DateTime?, string, long?, int) Fetch inbox's latest email or if empty wait for an email to arrive Declaration Email WaitForLatestEmail(Guid? inboxId = null, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Id of the inbox we are fetching emails from (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only. (optional, default to false) DateTime? before Filter for emails that were before after the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description Email Email Remarks Will return either the last received email or wait for an email to arrive and return that. If you need to wait for an email for a non-empty inbox set unreadOnly=true or see the other receive methods such as waitForNthEmail or waitForEmailCount. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestEmailWithHttpInfo(Guid?, long?, bool?, DateTime?, DateTime?, string, long?, int) Fetch inbox's latest email or if empty wait for an email to arrive Declaration ApiResponse<Email> WaitForLatestEmailWithHttpInfo(Guid? inboxId = null, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Id of the inbox we are fetching emails from (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only. (optional, default to false) DateTime? before Filter for emails that were before after the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Remarks Will return either the last received email or wait for an email to arrive and return that. If you need to wait for an email for a non-empty inbox set unreadOnly=true or see the other receive methods such as waitForNthEmail or waitForEmailCount. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestSms(WaitForSingleSmsOptions, int) Wait for the latest SMS message to match the provided filter conditions such as body contains keyword. Declaration SmsDto WaitForLatestSms(WaitForSingleSmsOptions waitForSingleSmsOptions, int operationIndex = 0) Parameters Type Name Description WaitForSingleSmsOptions waitForSingleSmsOptions int operationIndex Index associated with the operation. Returns Type Description SmsDto SmsDto Remarks Wait until a phone number meets given conditions or return immediately if already met Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestSmsWithHttpInfo(WaitForSingleSmsOptions, int) Wait for the latest SMS message to match the provided filter conditions such as body contains keyword. Declaration ApiResponse<SmsDto> WaitForLatestSmsWithHttpInfo(WaitForSingleSmsOptions waitForSingleSmsOptions, int operationIndex = 0) Parameters Type Name Description WaitForSingleSmsOptions waitForSingleSmsOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SmsDto> ApiResponse of SmsDto Remarks Wait until a phone number meets given conditions or return immediately if already met Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingEmails(Guid, int, MatchOptions, DateTime?, DateTime?, string, long?, long?, bool?, int) Wait or return list of emails that match simple matching patterns Declaration List<EmailPreview> WaitForMatchingEmails(Guid inboxId, int count, MatchOptions matchOptions, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, long? timeout = null, bool? unreadOnly = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater or equal to 1 MatchOptions matchOptions DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description List<EmailPreview> List<EmailPreview> Remarks Perform a search of emails in an inbox with the given patterns. If results match expected count then return or else retry the search until results are found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingEmailsWithHttpInfo(Guid, int, MatchOptions, DateTime?, DateTime?, string, long?, long?, bool?, int) Wait or return list of emails that match simple matching patterns Declaration ApiResponse<List<EmailPreview>> WaitForMatchingEmailsWithHttpInfo(Guid inboxId, int count, MatchOptions matchOptions, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, long? timeout = null, bool? unreadOnly = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater or equal to 1 MatchOptions matchOptions DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<EmailPreview>> ApiResponse of List<EmailPreview> Remarks Perform a search of emails in an inbox with the given patterns. If results match expected count then return or else retry the search until results are found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingFirstEmail(Guid, MatchOptions, long?, bool?, DateTime?, DateTime?, string, long?, int) Wait for or return the first email that matches provided MatchOptions array Declaration Email WaitForMatchingFirstEmail(Guid inboxId, MatchOptions matchOptions, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of the inbox we are matching an email for MatchOptions matchOptions long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description Email Email Remarks Perform a search of emails in an inbox with the given patterns. If a result if found then return or else retry the search until a result is found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingFirstEmailWithHttpInfo(Guid, MatchOptions, long?, bool?, DateTime?, DateTime?, string, long?, int) Wait for or return the first email that matches provided MatchOptions array Declaration ApiResponse<Email> WaitForMatchingFirstEmailWithHttpInfo(Guid inboxId, MatchOptions matchOptions, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of the inbox we are matching an email for MatchOptions matchOptions long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Remarks Perform a search of emails in an inbox with the given patterns. If a result if found then return or else retry the search until a result is found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthEmail(Guid?, int?, long?, bool?, DateTime?, DateTime?, string, long?, int) Wait for or fetch the email with a given index in the inbox specified. If index doesn't exist waits for it to exist or timeout to occur. Declaration Email WaitForNthEmail(Guid? inboxId = null, int? index = null, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Id of the inbox you are fetching emails from (optional) int? index Zero based index of the email to wait for. If an inbox has 1 email already and you want to wait for the 2nd email pass index=1 (optional, default to 0) long? timeout Max milliseconds to wait for the nth email if not already present (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description Email Email Remarks If nth email is already present in inbox then return it. If not hold the connection open until timeout expires or the nth email is received and returned. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthEmailWithHttpInfo(Guid?, int?, long?, bool?, DateTime?, DateTime?, string, long?, int) Wait for or fetch the email with a given index in the inbox specified. If index doesn't exist waits for it to exist or timeout to occur. Declaration ApiResponse<Email> WaitForNthEmailWithHttpInfo(Guid? inboxId = null, int? index = null, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Id of the inbox you are fetching emails from (optional) int? index Zero based index of the email to wait for. If an inbox has 1 email already and you want to wait for the 2nd email pass index=1 (optional, default to 0) long? timeout Max milliseconds to wait for the nth email if not already present (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Remarks If nth email is already present in inbox then return it. If not hold the connection open until timeout expires or the nth email is received and returned. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForSms(WaitForSmsConditions, int) Wait for an SMS message to match the provided filter conditions such as body contains keyword. Declaration List<SmsPreview> WaitForSms(WaitForSmsConditions waitForSmsConditions, int operationIndex = 0) Parameters Type Name Description WaitForSmsConditions waitForSmsConditions int operationIndex Index associated with the operation. Returns Type Description List<SmsPreview> List<SmsPreview> Remarks Generic waitFor method that will wait until a phone number meets given conditions or return immediately if already met Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForSmsWithHttpInfo(WaitForSmsConditions, int) Wait for an SMS message to match the provided filter conditions such as body contains keyword. Declaration ApiResponse<List<SmsPreview>> WaitForSmsWithHttpInfo(WaitForSmsConditions waitForSmsConditions, int operationIndex = 0) Parameters Type Name Description WaitForSmsConditions waitForSmsConditions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<SmsPreview>> ApiResponse of List<SmsPreview> Remarks Generic waitFor method that will wait until a phone number meets given conditions or return immediately if already met Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForWithHttpInfo(WaitForConditions, int) Wait for an email to match the provided filter conditions such as subject contains keyword. Declaration ApiResponse<List<EmailPreview>> WaitForWithHttpInfo(WaitForConditions waitForConditions, int operationIndex = 0) Parameters Type Name Description WaitForConditions waitForConditions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<EmailPreview>> ApiResponse of List<EmailPreview> Remarks Generic waitFor method that will wait until an inbox meets given conditions or return immediately if already met Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IWebhookControllerApi.html": {
    "href": "api/mailslurp.Api.IWebhookControllerApi.html",
    "title": "Interface IWebhookControllerApi | MailSlurp",
    "keywords": "Interface IWebhookControllerApi Represents a collection of functions to interact with the API endpoints Inherited Members IWebhookControllerApiSync.CreateAccountWebhook(CreateWebhookOptions, int) IWebhookControllerApiSync.CreateAccountWebhookWithHttpInfo(CreateWebhookOptions, int) IWebhookControllerApiSync.CreateWebhook(Guid, CreateWebhookOptions, int) IWebhookControllerApiSync.CreateWebhookWithHttpInfo(Guid, CreateWebhookOptions, int) IWebhookControllerApiSync.CreateWebhookForPhoneNumber(Guid, CreateWebhookOptions, int) IWebhookControllerApiSync.CreateWebhookForPhoneNumberWithHttpInfo(Guid, CreateWebhookOptions, int) IWebhookControllerApiSync.DeleteAllWebhooks(DateTime?, int) IWebhookControllerApiSync.DeleteAllWebhooksWithHttpInfo(DateTime?, int) IWebhookControllerApiSync.DeleteWebhook(Guid, Guid, int) IWebhookControllerApiSync.DeleteWebhookWithHttpInfo(Guid, Guid, int) IWebhookControllerApiSync.DeleteWebhookById(Guid, int) IWebhookControllerApiSync.DeleteWebhookByIdWithHttpInfo(Guid, int) IWebhookControllerApiSync.GetAllAccountWebhooks(int?, int?, string, string, DateTime?, DateTime?, int) IWebhookControllerApiSync.GetAllAccountWebhooksWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, int) IWebhookControllerApiSync.GetAllWebhookResults(int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int) IWebhookControllerApiSync.GetAllWebhookResultsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int) IWebhookControllerApiSync.GetAllWebhooks(int?, int?, string, string, DateTime?, Guid?, Guid?, DateTime?, int) IWebhookControllerApiSync.GetAllWebhooksWithHttpInfo(int?, int?, string, string, DateTime?, Guid?, Guid?, DateTime?, int) IWebhookControllerApiSync.GetInboxWebhooksPaginated(Guid, int?, int?, string, string, DateTime?, DateTime?, int) IWebhookControllerApiSync.GetInboxWebhooksPaginatedWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) IWebhookControllerApiSync.GetJsonSchemaForWebhookEvent(string, int) IWebhookControllerApiSync.GetJsonSchemaForWebhookEventWithHttpInfo(string, int) IWebhookControllerApiSync.GetJsonSchemaForWebhookPayload(Guid, int) IWebhookControllerApiSync.GetJsonSchemaForWebhookPayloadWithHttpInfo(Guid, int) IWebhookControllerApiSync.GetPhoneNumberWebhooksPaginated(Guid, int?, int?, string, DateTime?, DateTime?, int) IWebhookControllerApiSync.GetPhoneNumberWebhooksPaginatedWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) IWebhookControllerApiSync.GetTestWebhookPayload(string, int) IWebhookControllerApiSync.GetTestWebhookPayloadWithHttpInfo(string, int) IWebhookControllerApiSync.GetTestWebhookPayloadBounce(int) IWebhookControllerApiSync.GetTestWebhookPayloadBounceWithHttpInfo(int) IWebhookControllerApiSync.GetTestWebhookPayloadBounceRecipient(int) IWebhookControllerApiSync.GetTestWebhookPayloadBounceRecipientWithHttpInfo(int) IWebhookControllerApiSync.GetTestWebhookPayloadDeliveryStatus(int) IWebhookControllerApiSync.GetTestWebhookPayloadDeliveryStatusWithHttpInfo(int) IWebhookControllerApiSync.GetTestWebhookPayloadEmailOpened(int) IWebhookControllerApiSync.GetTestWebhookPayloadEmailOpenedWithHttpInfo(int) IWebhookControllerApiSync.GetTestWebhookPayloadEmailRead(int) IWebhookControllerApiSync.GetTestWebhookPayloadEmailReadWithHttpInfo(int) IWebhookControllerApiSync.GetTestWebhookPayloadForWebhook(Guid, int) IWebhookControllerApiSync.GetTestWebhookPayloadForWebhookWithHttpInfo(Guid, int) IWebhookControllerApiSync.GetTestWebhookPayloadNewAttachment(int) IWebhookControllerApiSync.GetTestWebhookPayloadNewAttachmentWithHttpInfo(int) IWebhookControllerApiSync.GetTestWebhookPayloadNewContact(int) IWebhookControllerApiSync.GetTestWebhookPayloadNewContactWithHttpInfo(int) IWebhookControllerApiSync.GetTestWebhookPayloadNewEmail(int) IWebhookControllerApiSync.GetTestWebhookPayloadNewEmailWithHttpInfo(int) IWebhookControllerApiSync.GetTestWebhookPayloadNewSms(int) IWebhookControllerApiSync.GetTestWebhookPayloadNewSmsWithHttpInfo(int) IWebhookControllerApiSync.GetWebhook(Guid, int) IWebhookControllerApiSync.GetWebhookWithHttpInfo(Guid, int) IWebhookControllerApiSync.GetWebhookResult(Guid, int) IWebhookControllerApiSync.GetWebhookResultWithHttpInfo(Guid, int) IWebhookControllerApiSync.GetWebhookResults(Guid, int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int) IWebhookControllerApiSync.GetWebhookResultsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int) IWebhookControllerApiSync.GetWebhookResultsCount(Guid, int) IWebhookControllerApiSync.GetWebhookResultsCountWithHttpInfo(Guid, int) IWebhookControllerApiSync.GetWebhookResultsUnseenErrorCount(int) IWebhookControllerApiSync.GetWebhookResultsUnseenErrorCountWithHttpInfo(int) IWebhookControllerApiSync.GetWebhooks(Guid, int) IWebhookControllerApiSync.GetWebhooksWithHttpInfo(Guid, int) IWebhookControllerApiSync.RedriveAllWebhookResults(int) IWebhookControllerApiSync.RedriveAllWebhookResultsWithHttpInfo(int) IWebhookControllerApiSync.RedriveWebhookResult(Guid, int) IWebhookControllerApiSync.RedriveWebhookResultWithHttpInfo(Guid, int) IWebhookControllerApiSync.SendTestData(Guid, int) IWebhookControllerApiSync.SendTestDataWithHttpInfo(Guid, int) IWebhookControllerApiSync.UpdateWebhookHeaders(Guid, WebhookHeaders, int) IWebhookControllerApiSync.UpdateWebhookHeadersWithHttpInfo(Guid, WebhookHeaders, int) IWebhookControllerApiSync.VerifyWebhookSignature(VerifyWebhookSignatureOptions, int) IWebhookControllerApiSync.VerifyWebhookSignatureWithHttpInfo(VerifyWebhookSignatureOptions, int) IWebhookControllerApiSync.WaitForWebhookResults(Guid, int, int, int) IWebhookControllerApiSync.WaitForWebhookResultsWithHttpInfo(Guid, int, int, int) IWebhookControllerApiAsync.CreateAccountWebhookAsync(CreateWebhookOptions, int, CancellationToken) IWebhookControllerApiAsync.CreateAccountWebhookWithHttpInfoAsync(CreateWebhookOptions, int, CancellationToken) IWebhookControllerApiAsync.CreateWebhookAsync(Guid, CreateWebhookOptions, int, CancellationToken) IWebhookControllerApiAsync.CreateWebhookWithHttpInfoAsync(Guid, CreateWebhookOptions, int, CancellationToken) IWebhookControllerApiAsync.CreateWebhookForPhoneNumberAsync(Guid, CreateWebhookOptions, int, CancellationToken) IWebhookControllerApiAsync.CreateWebhookForPhoneNumberWithHttpInfoAsync(Guid, CreateWebhookOptions, int, CancellationToken) IWebhookControllerApiAsync.DeleteAllWebhooksAsync(DateTime?, int, CancellationToken) IWebhookControllerApiAsync.DeleteAllWebhooksWithHttpInfoAsync(DateTime?, int, CancellationToken) IWebhookControllerApiAsync.DeleteWebhookAsync(Guid, Guid, int, CancellationToken) IWebhookControllerApiAsync.DeleteWebhookWithHttpInfoAsync(Guid, Guid, int, CancellationToken) IWebhookControllerApiAsync.DeleteWebhookByIdAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.DeleteWebhookByIdWithHttpInfoAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.GetAllAccountWebhooksAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IWebhookControllerApiAsync.GetAllAccountWebhooksWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IWebhookControllerApiAsync.GetAllWebhookResultsAsync(int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int, CancellationToken) IWebhookControllerApiAsync.GetAllWebhookResultsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int, CancellationToken) IWebhookControllerApiAsync.GetAllWebhooksAsync(int?, int?, string, string, DateTime?, Guid?, Guid?, DateTime?, int, CancellationToken) IWebhookControllerApiAsync.GetAllWebhooksWithHttpInfoAsync(int?, int?, string, string, DateTime?, Guid?, Guid?, DateTime?, int, CancellationToken) IWebhookControllerApiAsync.GetInboxWebhooksPaginatedAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IWebhookControllerApiAsync.GetInboxWebhooksPaginatedWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) IWebhookControllerApiAsync.GetJsonSchemaForWebhookEventAsync(string, int, CancellationToken) IWebhookControllerApiAsync.GetJsonSchemaForWebhookEventWithHttpInfoAsync(string, int, CancellationToken) IWebhookControllerApiAsync.GetJsonSchemaForWebhookPayloadAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.GetJsonSchemaForWebhookPayloadWithHttpInfoAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.GetPhoneNumberWebhooksPaginatedAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IWebhookControllerApiAsync.GetPhoneNumberWebhooksPaginatedWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadAsync(string, int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadWithHttpInfoAsync(string, int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadBounceAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadBounceWithHttpInfoAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadBounceRecipientAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadBounceRecipientWithHttpInfoAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadDeliveryStatusAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadDeliveryStatusWithHttpInfoAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadEmailOpenedAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadEmailOpenedWithHttpInfoAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadEmailReadAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadEmailReadWithHttpInfoAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadForWebhookAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadForWebhookWithHttpInfoAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadNewAttachmentAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadNewAttachmentWithHttpInfoAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadNewContactAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadNewContactWithHttpInfoAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadNewEmailAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadNewEmailWithHttpInfoAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadNewSmsAsync(int, CancellationToken) IWebhookControllerApiAsync.GetTestWebhookPayloadNewSmsWithHttpInfoAsync(int, CancellationToken) IWebhookControllerApiAsync.GetWebhookAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.GetWebhookWithHttpInfoAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.GetWebhookResultAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.GetWebhookResultWithHttpInfoAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.GetWebhookResultsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int, CancellationToken) IWebhookControllerApiAsync.GetWebhookResultsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int, CancellationToken) IWebhookControllerApiAsync.GetWebhookResultsCountAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.GetWebhookResultsCountWithHttpInfoAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.GetWebhookResultsUnseenErrorCountAsync(int, CancellationToken) IWebhookControllerApiAsync.GetWebhookResultsUnseenErrorCountWithHttpInfoAsync(int, CancellationToken) IWebhookControllerApiAsync.GetWebhooksAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.GetWebhooksWithHttpInfoAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.RedriveAllWebhookResultsAsync(int, CancellationToken) IWebhookControllerApiAsync.RedriveAllWebhookResultsWithHttpInfoAsync(int, CancellationToken) IWebhookControllerApiAsync.RedriveWebhookResultAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.RedriveWebhookResultWithHttpInfoAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.SendTestDataAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.SendTestDataWithHttpInfoAsync(Guid, int, CancellationToken) IWebhookControllerApiAsync.UpdateWebhookHeadersAsync(Guid, WebhookHeaders, int, CancellationToken) IWebhookControllerApiAsync.UpdateWebhookHeadersWithHttpInfoAsync(Guid, WebhookHeaders, int, CancellationToken) IWebhookControllerApiAsync.VerifyWebhookSignatureAsync(VerifyWebhookSignatureOptions, int, CancellationToken) IWebhookControllerApiAsync.VerifyWebhookSignatureWithHttpInfoAsync(VerifyWebhookSignatureOptions, int, CancellationToken) IWebhookControllerApiAsync.WaitForWebhookResultsAsync(Guid, int, int, int, CancellationToken) IWebhookControllerApiAsync.WaitForWebhookResultsWithHttpInfoAsync(Guid, int, int, int, CancellationToken) IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IWebhookControllerApi : IWebhookControllerApiSync, IWebhookControllerApiAsync, IApiAccessor"
  },
  "api/mailslurp.Api.IWebhookControllerApiAsync.html": {
    "href": "api/mailslurp.Api.IWebhookControllerApiAsync.html",
    "title": "Interface IWebhookControllerApiAsync | MailSlurp",
    "keywords": "Interface IWebhookControllerApiAsync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IWebhookControllerApiAsync : IApiAccessor Methods View Source CreateAccountWebhookAsync(CreateWebhookOptions, int, CancellationToken) Attach a WebHook URL to an inbox Declaration Task<WebhookDto> CreateAccountWebhookAsync(CreateWebhookOptions createWebhookOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookDto> Task of WebhookDto Remarks Get notified of account level events such as bounce and bounce recipient. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateAccountWebhookWithHttpInfoAsync(CreateWebhookOptions, int, CancellationToken) Attach a WebHook URL to an inbox Declaration Task<ApiResponse<WebhookDto>> CreateAccountWebhookWithHttpInfoAsync(CreateWebhookOptions createWebhookOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookDto>> Task of ApiResponse (WebhookDto) Remarks Get notified of account level events such as bounce and bounce recipient. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookAsync(Guid, CreateWebhookOptions, int, CancellationToken) Attach a WebHook URL to an inbox Declaration Task<WebhookDto> CreateWebhookAsync(Guid inboxId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookDto> Task of WebhookDto Remarks Get notified whenever an inbox receives an email via a WebHook URL. An emailID will be posted to this URL every time an email is received for this inbox. The URL must be publicly reachable by the MailSlurp server. You can provide basicAuth values if you wish to secure this endpoint. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookForPhoneNumberAsync(Guid, CreateWebhookOptions, int, CancellationToken) Attach a WebHook URL to a phone number Declaration Task<WebhookDto> CreateWebhookForPhoneNumberAsync(Guid phoneNumberId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookDto> Task of WebhookDto Remarks Get notified whenever a phone number receives an SMS via a WebHook URL. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookForPhoneNumberWithHttpInfoAsync(Guid, CreateWebhookOptions, int, CancellationToken) Attach a WebHook URL to a phone number Declaration Task<ApiResponse<WebhookDto>> CreateWebhookForPhoneNumberWithHttpInfoAsync(Guid phoneNumberId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookDto>> Task of ApiResponse (WebhookDto) Remarks Get notified whenever a phone number receives an SMS via a WebHook URL. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookWithHttpInfoAsync(Guid, CreateWebhookOptions, int, CancellationToken) Attach a WebHook URL to an inbox Declaration Task<ApiResponse<WebhookDto>> CreateWebhookWithHttpInfoAsync(Guid inboxId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookDto>> Task of ApiResponse (WebhookDto) Remarks Get notified whenever an inbox receives an email via a WebHook URL. An emailID will be posted to this URL every time an email is received for this inbox. The URL must be publicly reachable by the MailSlurp server. You can provide basicAuth values if you wish to secure this endpoint. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllWebhooksAsync(DateTime?, int, CancellationToken) Delete all webhooks Declaration Task DeleteAllWebhooksAsync(DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DateTime? before before (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllWebhooksWithHttpInfoAsync(DateTime?, int, CancellationToken) Delete all webhooks Declaration Task<ApiResponse<object>> DeleteAllWebhooksWithHttpInfoAsync(DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DateTime? before before (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookAsync(Guid, Guid, int, CancellationToken) Delete and disable a Webhook for an Inbox Declaration Task DeleteWebhookAsync(Guid inboxId, Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookByIdAsync(Guid, int, CancellationToken) Delete a webhook Declaration Task DeleteWebhookByIdAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookByIdWithHttpInfoAsync(Guid, int, CancellationToken) Delete a webhook Declaration Task<ApiResponse<object>> DeleteWebhookByIdWithHttpInfoAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookWithHttpInfoAsync(Guid, Guid, int, CancellationToken) Delete and disable a Webhook for an Inbox Declaration Task<ApiResponse<object>> DeleteWebhookWithHttpInfoAsync(Guid inboxId, Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllAccountWebhooksAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List account webhooks Paginated Declaration Task<PageWebhookProjection> GetAllAccountWebhooksAsync(int? page = null, int? size = null, string sort = null, string eventType = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string eventType Optional event type (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageWebhookProjection> Task of PageWebhookProjection Remarks List account webhooks in paginated form. Allows for page index, page size, and sort direction. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllAccountWebhooksWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List account webhooks Paginated Declaration Task<ApiResponse<PageWebhookProjection>> GetAllAccountWebhooksWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string eventType = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string eventType Optional event type (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageWebhookProjection>> Task of ApiResponse (PageWebhookProjection) Remarks List account webhooks in paginated form. Allows for page index, page size, and sort direction. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhookResultsAsync(int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int, CancellationToken) Get results for all webhooks Declaration Task<PageWebhookResult> GetAllWebhookResultsAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageWebhookResult> Task of PageWebhookResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhookResultsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int, CancellationToken) Get results for all webhooks Declaration Task<ApiResponse<PageWebhookResult>> GetAllWebhookResultsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageWebhookResult>> Task of ApiResponse (PageWebhookResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhooksAsync(int?, int?, string, string, DateTime?, Guid?, Guid?, DateTime?, int, CancellationToken) List Webhooks Paginated Declaration Task<PageWebhookProjection> GetAllWebhooksAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, Guid? inboxId = null, Guid? phoneId = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) Guid? inboxId Filter by inboxId (optional) Guid? phoneId Filter by phoneId (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageWebhookProjection> Task of PageWebhookProjection Remarks List webhooks in paginated form. Allows for page index, page size, and sort direction. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhooksWithHttpInfoAsync(int?, int?, string, string, DateTime?, Guid?, Guid?, DateTime?, int, CancellationToken) List Webhooks Paginated Declaration Task<ApiResponse<PageWebhookProjection>> GetAllWebhooksWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, Guid? inboxId = null, Guid? phoneId = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) Guid? inboxId Filter by inboxId (optional) Guid? phoneId Filter by phoneId (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageWebhookProjection>> Task of ApiResponse (PageWebhookProjection) Remarks List webhooks in paginated form. Allows for page index, page size, and sort direction. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxWebhooksPaginatedAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get paginated webhooks for an Inbox Declaration Task<PageWebhookProjection> GetInboxWebhooksPaginatedAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageWebhookProjection> Task of PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxWebhooksPaginatedWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get paginated webhooks for an Inbox Declaration Task<ApiResponse<PageWebhookProjection>> GetInboxWebhooksPaginatedWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageWebhookProjection>> Task of ApiResponse (PageWebhookProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookEventAsync(string, int, CancellationToken) Declaration Task<JSONSchemaDto> GetJsonSchemaForWebhookEventAsync(string _event, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string _event int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<JSONSchemaDto> Task of JSONSchemaDto Remarks Get JSON Schema definition for webhook payload by event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookEventWithHttpInfoAsync(string, int, CancellationToken) Declaration Task<ApiResponse<JSONSchemaDto>> GetJsonSchemaForWebhookEventWithHttpInfoAsync(string _event, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string _event int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<JSONSchemaDto>> Task of ApiResponse (JSONSchemaDto) Remarks Get JSON Schema definition for webhook payload by event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookPayloadAsync(Guid, int, CancellationToken) Declaration Task<JSONSchemaDto> GetJsonSchemaForWebhookPayloadAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<JSONSchemaDto> Task of JSONSchemaDto Remarks Get JSON Schema definition for webhook payload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookPayloadWithHttpInfoAsync(Guid, int, CancellationToken) Declaration Task<ApiResponse<JSONSchemaDto>> GetJsonSchemaForWebhookPayloadWithHttpInfoAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<JSONSchemaDto>> Task of ApiResponse (JSONSchemaDto) Remarks Get JSON Schema definition for webhook payload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberWebhooksPaginatedAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated webhooks for a phone number Declaration Task<PageWebhookProjection> GetPhoneNumberWebhooksPaginatedAsync(Guid phoneId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageWebhookProjection> Task of PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberWebhooksPaginatedWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated webhooks for a phone number Declaration Task<ApiResponse<PageWebhookProjection>> GetPhoneNumberWebhooksPaginatedWithHttpInfoAsync(Guid phoneId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageWebhookProjection>> Task of ApiResponse (PageWebhookProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadAsync(string, int, CancellationToken) Declaration Task<AbstractWebhookPayload> GetTestWebhookPayloadAsync(string eventName = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string eventName (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AbstractWebhookPayload> Task of AbstractWebhookPayload Remarks Get test webhook payload example. Response content depends on eventName passed. Uses EMAIL_RECEIVED as default. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceAsync(int, CancellationToken) Declaration Task<WebhookBouncePayload> GetTestWebhookPayloadBounceAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookBouncePayload> Task of WebhookBouncePayload Remarks Get webhook test payload for bounce Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceRecipientAsync(int, CancellationToken) Declaration Task<WebhookBounceRecipientPayload> GetTestWebhookPayloadBounceRecipientAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookBounceRecipientPayload> Task of WebhookBounceRecipientPayload Remarks Get webhook test payload for bounce recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceRecipientWithHttpInfoAsync(int, CancellationToken) Declaration Task<ApiResponse<WebhookBounceRecipientPayload>> GetTestWebhookPayloadBounceRecipientWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookBounceRecipientPayload>> Task of ApiResponse (WebhookBounceRecipientPayload) Remarks Get webhook test payload for bounce recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceWithHttpInfoAsync(int, CancellationToken) Declaration Task<ApiResponse<WebhookBouncePayload>> GetTestWebhookPayloadBounceWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookBouncePayload>> Task of ApiResponse (WebhookBouncePayload) Remarks Get webhook test payload for bounce Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadDeliveryStatusAsync(int, CancellationToken) Get webhook test payload for delivery status event Declaration Task<WebhookDeliveryStatusPayload> GetTestWebhookPayloadDeliveryStatusAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookDeliveryStatusPayload> Task of WebhookDeliveryStatusPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadDeliveryStatusWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for delivery status event Declaration Task<ApiResponse<WebhookDeliveryStatusPayload>> GetTestWebhookPayloadDeliveryStatusWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookDeliveryStatusPayload>> Task of ApiResponse (WebhookDeliveryStatusPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailOpenedAsync(int, CancellationToken) Declaration Task<WebhookEmailOpenedPayload> GetTestWebhookPayloadEmailOpenedAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookEmailOpenedPayload> Task of WebhookEmailOpenedPayload Remarks Get webhook test payload for email opened event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailOpenedWithHttpInfoAsync(int, CancellationToken) Declaration Task<ApiResponse<WebhookEmailOpenedPayload>> GetTestWebhookPayloadEmailOpenedWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookEmailOpenedPayload>> Task of ApiResponse (WebhookEmailOpenedPayload) Remarks Get webhook test payload for email opened event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailReadAsync(int, CancellationToken) Declaration Task<WebhookEmailReadPayload> GetTestWebhookPayloadEmailReadAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookEmailReadPayload> Task of WebhookEmailReadPayload Remarks Get webhook test payload for email opened event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailReadWithHttpInfoAsync(int, CancellationToken) Declaration Task<ApiResponse<WebhookEmailReadPayload>> GetTestWebhookPayloadEmailReadWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookEmailReadPayload>> Task of ApiResponse (WebhookEmailReadPayload) Remarks Get webhook test payload for email opened event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadForWebhookAsync(Guid, int, CancellationToken) Declaration Task<AbstractWebhookPayload> GetTestWebhookPayloadForWebhookAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AbstractWebhookPayload> Task of AbstractWebhookPayload Remarks Get example payload for webhook Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadForWebhookWithHttpInfoAsync(Guid, int, CancellationToken) Declaration Task<ApiResponse<AbstractWebhookPayload>> GetTestWebhookPayloadForWebhookWithHttpInfoAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AbstractWebhookPayload>> Task of ApiResponse (AbstractWebhookPayload) Remarks Get example payload for webhook Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewAttachmentAsync(int, CancellationToken) Get webhook test payload for new attachment event Declaration Task<WebhookNewAttachmentPayload> GetTestWebhookPayloadNewAttachmentAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookNewAttachmentPayload> Task of WebhookNewAttachmentPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewAttachmentWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for new attachment event Declaration Task<ApiResponse<WebhookNewAttachmentPayload>> GetTestWebhookPayloadNewAttachmentWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookNewAttachmentPayload>> Task of ApiResponse (WebhookNewAttachmentPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewContactAsync(int, CancellationToken) Get webhook test payload for new contact event Declaration Task<WebhookNewContactPayload> GetTestWebhookPayloadNewContactAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookNewContactPayload> Task of WebhookNewContactPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewContactWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for new contact event Declaration Task<ApiResponse<WebhookNewContactPayload>> GetTestWebhookPayloadNewContactWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookNewContactPayload>> Task of ApiResponse (WebhookNewContactPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewEmailAsync(int, CancellationToken) Get webhook test payload for new email event Declaration Task<WebhookNewEmailPayload> GetTestWebhookPayloadNewEmailAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookNewEmailPayload> Task of WebhookNewEmailPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewEmailWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for new email event Declaration Task<ApiResponse<WebhookNewEmailPayload>> GetTestWebhookPayloadNewEmailWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookNewEmailPayload>> Task of ApiResponse (WebhookNewEmailPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewSmsAsync(int, CancellationToken) Get webhook test payload for new sms event Declaration Task<WebhookNewSmsPayload> GetTestWebhookPayloadNewSmsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookNewSmsPayload> Task of WebhookNewSmsPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewSmsWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for new sms event Declaration Task<ApiResponse<WebhookNewSmsPayload>> GetTestWebhookPayloadNewSmsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookNewSmsPayload>> Task of ApiResponse (WebhookNewSmsPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadWithHttpInfoAsync(string, int, CancellationToken) Declaration Task<ApiResponse<AbstractWebhookPayload>> GetTestWebhookPayloadWithHttpInfoAsync(string eventName = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string eventName (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AbstractWebhookPayload>> Task of ApiResponse (AbstractWebhookPayload) Remarks Get test webhook payload example. Response content depends on eventName passed. Uses EMAIL_RECEIVED as default. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookAsync(Guid, int, CancellationToken) Get a webhook Declaration Task<WebhookDto> GetWebhookAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookDto> Task of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultAsync(Guid, int, CancellationToken) Get a webhook result for a webhook Declaration Task<WebhookResultDto> GetWebhookResultAsync(Guid webhookResultId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookResultDto> Task of WebhookResultDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int, CancellationToken) Get a webhook results for a webhook Declaration Task<PageWebhookResult> GetWebhookResultsAsync(Guid webhookId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId ID of webhook to get results for int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageWebhookResult> Task of PageWebhookResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsCountAsync(Guid, int, CancellationToken) Get a webhook results count for a webhook Declaration Task<CountDto> GetWebhookResultsCountAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId ID of webhook to get results for int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CountDto> Task of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsCountWithHttpInfoAsync(Guid, int, CancellationToken) Get a webhook results count for a webhook Declaration Task<ApiResponse<CountDto>> GetWebhookResultsCountWithHttpInfoAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId ID of webhook to get results for int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CountDto>> Task of ApiResponse (CountDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsUnseenErrorCountAsync(int, CancellationToken) Get count of unseen webhook results with error status Declaration Task<UnseenErrorCountDto> GetWebhookResultsUnseenErrorCountAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<UnseenErrorCountDto> Task of UnseenErrorCountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsUnseenErrorCountWithHttpInfoAsync(int, CancellationToken) Get count of unseen webhook results with error status Declaration Task<ApiResponse<UnseenErrorCountDto>> GetWebhookResultsUnseenErrorCountWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<UnseenErrorCountDto>> Task of ApiResponse (UnseenErrorCountDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int, CancellationToken) Get a webhook results for a webhook Declaration Task<ApiResponse<PageWebhookResult>> GetWebhookResultsWithHttpInfoAsync(Guid webhookId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId ID of webhook to get results for int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageWebhookResult>> Task of ApiResponse (PageWebhookResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultWithHttpInfoAsync(Guid, int, CancellationToken) Get a webhook result for a webhook Declaration Task<ApiResponse<WebhookResultDto>> GetWebhookResultWithHttpInfoAsync(Guid webhookResultId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookResultDto>> Task of ApiResponse (WebhookResultDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhooksAsync(Guid, int, CancellationToken) Get all webhooks for an Inbox Declaration [Obsolete] Task<List<WebhookDto>> GetWebhooksAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<WebhookDto>> Task of List<WebhookDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhooksWithHttpInfoAsync(Guid, int, CancellationToken) Get all webhooks for an Inbox Declaration [Obsolete] Task<ApiResponse<List<WebhookDto>>> GetWebhooksWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<WebhookDto>>> Task of ApiResponse (List<WebhookDto>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookWithHttpInfoAsync(Guid, int, CancellationToken) Get a webhook Declaration Task<ApiResponse<WebhookDto>> GetWebhookWithHttpInfoAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookDto>> Task of ApiResponse (WebhookDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveAllWebhookResultsAsync(int, CancellationToken) Redrive all webhook results that have failed status Declaration Task<WebhookRedriveAllResult> RedriveAllWebhookResultsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookRedriveAllResult> Task of WebhookRedriveAllResult Remarks Allows you to resend webhook payloads for any recorded webhook result that failed to deliver the payload. Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveAllWebhookResultsWithHttpInfoAsync(int, CancellationToken) Redrive all webhook results that have failed status Declaration Task<ApiResponse<WebhookRedriveAllResult>> RedriveAllWebhookResultsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookRedriveAllResult>> Task of ApiResponse (WebhookRedriveAllResult) Remarks Allows you to resend webhook payloads for any recorded webhook result that failed to deliver the payload. Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveWebhookResultAsync(Guid, int, CancellationToken) Get a webhook result and try to resend the original webhook payload Declaration Task<WebhookRedriveResult> RedriveWebhookResultAsync(Guid webhookResultId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookRedriveResult> Task of WebhookRedriveResult Remarks Allows you to resend a webhook payload that was already sent. Webhooks that fail are retried automatically for 24 hours and then put in a dead letter queue. You can retry results manually using this method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveWebhookResultWithHttpInfoAsync(Guid, int, CancellationToken) Get a webhook result and try to resend the original webhook payload Declaration Task<ApiResponse<WebhookRedriveResult>> RedriveWebhookResultWithHttpInfoAsync(Guid webhookResultId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookRedriveResult>> Task of ApiResponse (WebhookRedriveResult) Remarks Allows you to resend a webhook payload that was already sent. Webhooks that fail are retried automatically for 24 hours and then put in a dead letter queue. You can retry results manually using this method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestDataAsync(Guid, int, CancellationToken) Send webhook test data Declaration Task<WebhookTestResult> SendTestDataAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookTestResult> Task of WebhookTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestDataWithHttpInfoAsync(Guid, int, CancellationToken) Send webhook test data Declaration Task<ApiResponse<WebhookTestResult>> SendTestDataWithHttpInfoAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookTestResult>> Task of ApiResponse (WebhookTestResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateWebhookHeadersAsync(Guid, WebhookHeaders, int, CancellationToken) Update a webhook request headers Declaration Task<WebhookDto> UpdateWebhookHeadersAsync(Guid webhookId, WebhookHeaders webhookHeaders, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId WebhookHeaders webhookHeaders int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookDto> Task of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateWebhookHeadersWithHttpInfoAsync(Guid, WebhookHeaders, int, CancellationToken) Update a webhook request headers Declaration Task<ApiResponse<WebhookDto>> UpdateWebhookHeadersWithHttpInfoAsync(Guid webhookId, WebhookHeaders webhookHeaders, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId WebhookHeaders webhookHeaders int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookDto>> Task of ApiResponse (WebhookDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyWebhookSignatureAsync(VerifyWebhookSignatureOptions, int, CancellationToken) Verify a webhook payload signature Declaration Task<VerifyWebhookSignatureResults> VerifyWebhookSignatureAsync(VerifyWebhookSignatureOptions verifyWebhookSignatureOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description VerifyWebhookSignatureOptions verifyWebhookSignatureOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<VerifyWebhookSignatureResults> Task of VerifyWebhookSignatureResults Remarks Verify a webhook payload using the messageId and signature. This allows you to be sure that MailSlurp sent the payload and not another server. Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyWebhookSignatureWithHttpInfoAsync(VerifyWebhookSignatureOptions, int, CancellationToken) Verify a webhook payload signature Declaration Task<ApiResponse<VerifyWebhookSignatureResults>> VerifyWebhookSignatureWithHttpInfoAsync(VerifyWebhookSignatureOptions verifyWebhookSignatureOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description VerifyWebhookSignatureOptions verifyWebhookSignatureOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<VerifyWebhookSignatureResults>> Task of ApiResponse (VerifyWebhookSignatureResults) Remarks Verify a webhook payload using the messageId and signature. This allows you to be sure that MailSlurp sent the payload and not another server. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForWebhookResultsAsync(Guid, int, int, int, CancellationToken) Wait for webhook results for a webhook Declaration Task<List<WebhookResultDto>> WaitForWebhookResultsAsync(Guid webhookId, int expectedCount, int timeout, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId ID of webhook to get results for int expectedCount Expected result count int timeout Max time to wait in milliseconds int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<WebhookResultDto>> Task of List<WebhookResultDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForWebhookResultsWithHttpInfoAsync(Guid, int, int, int, CancellationToken) Wait for webhook results for a webhook Declaration Task<ApiResponse<List<WebhookResultDto>>> WaitForWebhookResultsWithHttpInfoAsync(Guid webhookId, int expectedCount, int timeout, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId ID of webhook to get results for int expectedCount Expected result count int timeout Max time to wait in milliseconds int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<WebhookResultDto>>> Task of ApiResponse (List<WebhookResultDto>) Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.IWebhookControllerApiSync.html": {
    "href": "api/mailslurp.Api.IWebhookControllerApiSync.html",
    "title": "Interface IWebhookControllerApiSync | MailSlurp",
    "keywords": "Interface IWebhookControllerApiSync Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public interface IWebhookControllerApiSync : IApiAccessor Methods View Source CreateAccountWebhook(CreateWebhookOptions, int) Attach a WebHook URL to an inbox Declaration WebhookDto CreateAccountWebhook(CreateWebhookOptions createWebhookOptions, int operationIndex = 0) Parameters Type Name Description CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. Returns Type Description WebhookDto WebhookDto Remarks Get notified of account level events such as bounce and bounce recipient. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateAccountWebhookWithHttpInfo(CreateWebhookOptions, int) Attach a WebHook URL to an inbox Declaration ApiResponse<WebhookDto> CreateAccountWebhookWithHttpInfo(CreateWebhookOptions createWebhookOptions, int operationIndex = 0) Parameters Type Name Description CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookDto> ApiResponse of WebhookDto Remarks Get notified of account level events such as bounce and bounce recipient. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhook(Guid, CreateWebhookOptions, int) Attach a WebHook URL to an inbox Declaration WebhookDto CreateWebhook(Guid inboxId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. Returns Type Description WebhookDto WebhookDto Remarks Get notified whenever an inbox receives an email via a WebHook URL. An emailID will be posted to this URL every time an email is received for this inbox. The URL must be publicly reachable by the MailSlurp server. You can provide basicAuth values if you wish to secure this endpoint. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookForPhoneNumber(Guid, CreateWebhookOptions, int) Attach a WebHook URL to a phone number Declaration WebhookDto CreateWebhookForPhoneNumber(Guid phoneNumberId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. Returns Type Description WebhookDto WebhookDto Remarks Get notified whenever a phone number receives an SMS via a WebHook URL. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookForPhoneNumberWithHttpInfo(Guid, CreateWebhookOptions, int) Attach a WebHook URL to a phone number Declaration ApiResponse<WebhookDto> CreateWebhookForPhoneNumberWithHttpInfo(Guid phoneNumberId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookDto> ApiResponse of WebhookDto Remarks Get notified whenever a phone number receives an SMS via a WebHook URL. Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookWithHttpInfo(Guid, CreateWebhookOptions, int) Attach a WebHook URL to an inbox Declaration ApiResponse<WebhookDto> CreateWebhookWithHttpInfo(Guid inboxId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookDto> ApiResponse of WebhookDto Remarks Get notified whenever an inbox receives an email via a WebHook URL. An emailID will be posted to this URL every time an email is received for this inbox. The URL must be publicly reachable by the MailSlurp server. You can provide basicAuth values if you wish to secure this endpoint. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllWebhooks(DateTime?, int) Delete all webhooks Declaration void DeleteAllWebhooks(DateTime? before = null, int operationIndex = 0) Parameters Type Name Description DateTime? before before (optional) int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllWebhooksWithHttpInfo(DateTime?, int) Delete all webhooks Declaration ApiResponse<object> DeleteAllWebhooksWithHttpInfo(DateTime? before = null, int operationIndex = 0) Parameters Type Name Description DateTime? before before (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhook(Guid, Guid, int) Delete and disable a Webhook for an Inbox Declaration void DeleteWebhook(Guid inboxId, Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid inboxId Guid webhookId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookById(Guid, int) Delete a webhook Declaration void DeleteWebhookById(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookByIdWithHttpInfo(Guid, int) Delete a webhook Declaration ApiResponse<object> DeleteWebhookByIdWithHttpInfo(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookWithHttpInfo(Guid, Guid, int) Delete and disable a Webhook for an Inbox Declaration ApiResponse<object> DeleteWebhookWithHttpInfo(Guid inboxId, Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid inboxId Guid webhookId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllAccountWebhooks(int?, int?, string, string, DateTime?, DateTime?, int) List account webhooks Paginated Declaration PageWebhookProjection GetAllAccountWebhooks(int? page = null, int? size = null, string sort = null, string eventType = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string eventType Optional event type (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageWebhookProjection PageWebhookProjection Remarks List account webhooks in paginated form. Allows for page index, page size, and sort direction. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllAccountWebhooksWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, int) List account webhooks Paginated Declaration ApiResponse<PageWebhookProjection> GetAllAccountWebhooksWithHttpInfo(int? page = null, int? size = null, string sort = null, string eventType = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string eventType Optional event type (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageWebhookProjection> ApiResponse of PageWebhookProjection Remarks List account webhooks in paginated form. Allows for page index, page size, and sort direction. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhookResults(int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int) Get results for all webhooks Declaration PageWebhookResult GetAllWebhookResults(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. Returns Type Description PageWebhookResult PageWebhookResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhookResultsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int) Get results for all webhooks Declaration ApiResponse<PageWebhookResult> GetAllWebhookResultsWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageWebhookResult> ApiResponse of PageWebhookResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhooks(int?, int?, string, string, DateTime?, Guid?, Guid?, DateTime?, int) List Webhooks Paginated Declaration PageWebhookProjection GetAllWebhooks(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, Guid? inboxId = null, Guid? phoneId = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) Guid? inboxId Filter by inboxId (optional) Guid? phoneId Filter by phoneId (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageWebhookProjection PageWebhookProjection Remarks List webhooks in paginated form. Allows for page index, page size, and sort direction. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhooksWithHttpInfo(int?, int?, string, string, DateTime?, Guid?, Guid?, DateTime?, int) List Webhooks Paginated Declaration ApiResponse<PageWebhookProjection> GetAllWebhooksWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, Guid? inboxId = null, Guid? phoneId = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) Guid? inboxId Filter by inboxId (optional) Guid? phoneId Filter by phoneId (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageWebhookProjection> ApiResponse of PageWebhookProjection Remarks List webhooks in paginated form. Allows for page index, page size, and sort direction. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxWebhooksPaginated(Guid, int?, int?, string, string, DateTime?, DateTime?, int) Get paginated webhooks for an Inbox Declaration PageWebhookProjection GetInboxWebhooksPaginated(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageWebhookProjection PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxWebhooksPaginatedWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) Get paginated webhooks for an Inbox Declaration ApiResponse<PageWebhookProjection> GetInboxWebhooksPaginatedWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageWebhookProjection> ApiResponse of PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookEvent(string, int) Declaration JSONSchemaDto GetJsonSchemaForWebhookEvent(string _event, int operationIndex = 0) Parameters Type Name Description string _event int operationIndex Index associated with the operation. Returns Type Description JSONSchemaDto JSONSchemaDto Remarks Get JSON Schema definition for webhook payload by event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookEventWithHttpInfo(string, int) Declaration ApiResponse<JSONSchemaDto> GetJsonSchemaForWebhookEventWithHttpInfo(string _event, int operationIndex = 0) Parameters Type Name Description string _event int operationIndex Index associated with the operation. Returns Type Description ApiResponse<JSONSchemaDto> ApiResponse of JSONSchemaDto Remarks Get JSON Schema definition for webhook payload by event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookPayload(Guid, int) Declaration JSONSchemaDto GetJsonSchemaForWebhookPayload(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description JSONSchemaDto JSONSchemaDto Remarks Get JSON Schema definition for webhook payload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookPayloadWithHttpInfo(Guid, int) Declaration ApiResponse<JSONSchemaDto> GetJsonSchemaForWebhookPayloadWithHttpInfo(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<JSONSchemaDto> ApiResponse of JSONSchemaDto Remarks Get JSON Schema definition for webhook payload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberWebhooksPaginated(Guid, int?, int?, string, DateTime?, DateTime?, int) Get paginated webhooks for a phone number Declaration PageWebhookProjection GetPhoneNumberWebhooksPaginated(Guid phoneId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid phoneId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageWebhookProjection PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberWebhooksPaginatedWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get paginated webhooks for a phone number Declaration ApiResponse<PageWebhookProjection> GetPhoneNumberWebhooksPaginatedWithHttpInfo(Guid phoneId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid phoneId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageWebhookProjection> ApiResponse of PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayload(string, int) Declaration AbstractWebhookPayload GetTestWebhookPayload(string eventName = null, int operationIndex = 0) Parameters Type Name Description string eventName (optional) int operationIndex Index associated with the operation. Returns Type Description AbstractWebhookPayload AbstractWebhookPayload Remarks Get test webhook payload example. Response content depends on eventName passed. Uses EMAIL_RECEIVED as default. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounce(int) Declaration WebhookBouncePayload GetTestWebhookPayloadBounce(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookBouncePayload WebhookBouncePayload Remarks Get webhook test payload for bounce Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceRecipient(int) Declaration WebhookBounceRecipientPayload GetTestWebhookPayloadBounceRecipient(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookBounceRecipientPayload WebhookBounceRecipientPayload Remarks Get webhook test payload for bounce recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceRecipientWithHttpInfo(int) Declaration ApiResponse<WebhookBounceRecipientPayload> GetTestWebhookPayloadBounceRecipientWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookBounceRecipientPayload> ApiResponse of WebhookBounceRecipientPayload Remarks Get webhook test payload for bounce recipient Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceWithHttpInfo(int) Declaration ApiResponse<WebhookBouncePayload> GetTestWebhookPayloadBounceWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookBouncePayload> ApiResponse of WebhookBouncePayload Remarks Get webhook test payload for bounce Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadDeliveryStatus(int) Get webhook test payload for delivery status event Declaration WebhookDeliveryStatusPayload GetTestWebhookPayloadDeliveryStatus(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookDeliveryStatusPayload WebhookDeliveryStatusPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadDeliveryStatusWithHttpInfo(int) Get webhook test payload for delivery status event Declaration ApiResponse<WebhookDeliveryStatusPayload> GetTestWebhookPayloadDeliveryStatusWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookDeliveryStatusPayload> ApiResponse of WebhookDeliveryStatusPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailOpened(int) Declaration WebhookEmailOpenedPayload GetTestWebhookPayloadEmailOpened(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookEmailOpenedPayload WebhookEmailOpenedPayload Remarks Get webhook test payload for email opened event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailOpenedWithHttpInfo(int) Declaration ApiResponse<WebhookEmailOpenedPayload> GetTestWebhookPayloadEmailOpenedWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookEmailOpenedPayload> ApiResponse of WebhookEmailOpenedPayload Remarks Get webhook test payload for email opened event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailRead(int) Declaration WebhookEmailReadPayload GetTestWebhookPayloadEmailRead(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookEmailReadPayload WebhookEmailReadPayload Remarks Get webhook test payload for email opened event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailReadWithHttpInfo(int) Declaration ApiResponse<WebhookEmailReadPayload> GetTestWebhookPayloadEmailReadWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookEmailReadPayload> ApiResponse of WebhookEmailReadPayload Remarks Get webhook test payload for email opened event Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadForWebhook(Guid, int) Declaration AbstractWebhookPayload GetTestWebhookPayloadForWebhook(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description AbstractWebhookPayload AbstractWebhookPayload Remarks Get example payload for webhook Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadForWebhookWithHttpInfo(Guid, int) Declaration ApiResponse<AbstractWebhookPayload> GetTestWebhookPayloadForWebhookWithHttpInfo(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AbstractWebhookPayload> ApiResponse of AbstractWebhookPayload Remarks Get example payload for webhook Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewAttachment(int) Get webhook test payload for new attachment event Declaration WebhookNewAttachmentPayload GetTestWebhookPayloadNewAttachment(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookNewAttachmentPayload WebhookNewAttachmentPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewAttachmentWithHttpInfo(int) Get webhook test payload for new attachment event Declaration ApiResponse<WebhookNewAttachmentPayload> GetTestWebhookPayloadNewAttachmentWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookNewAttachmentPayload> ApiResponse of WebhookNewAttachmentPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewContact(int) Get webhook test payload for new contact event Declaration WebhookNewContactPayload GetTestWebhookPayloadNewContact(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookNewContactPayload WebhookNewContactPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewContactWithHttpInfo(int) Get webhook test payload for new contact event Declaration ApiResponse<WebhookNewContactPayload> GetTestWebhookPayloadNewContactWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookNewContactPayload> ApiResponse of WebhookNewContactPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewEmail(int) Get webhook test payload for new email event Declaration WebhookNewEmailPayload GetTestWebhookPayloadNewEmail(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookNewEmailPayload WebhookNewEmailPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewEmailWithHttpInfo(int) Get webhook test payload for new email event Declaration ApiResponse<WebhookNewEmailPayload> GetTestWebhookPayloadNewEmailWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookNewEmailPayload> ApiResponse of WebhookNewEmailPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewSms(int) Get webhook test payload for new sms event Declaration WebhookNewSmsPayload GetTestWebhookPayloadNewSms(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookNewSmsPayload WebhookNewSmsPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewSmsWithHttpInfo(int) Get webhook test payload for new sms event Declaration ApiResponse<WebhookNewSmsPayload> GetTestWebhookPayloadNewSmsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookNewSmsPayload> ApiResponse of WebhookNewSmsPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadWithHttpInfo(string, int) Declaration ApiResponse<AbstractWebhookPayload> GetTestWebhookPayloadWithHttpInfo(string eventName = null, int operationIndex = 0) Parameters Type Name Description string eventName (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AbstractWebhookPayload> ApiResponse of AbstractWebhookPayload Remarks Get test webhook payload example. Response content depends on eventName passed. Uses EMAIL_RECEIVED as default. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhook(Guid, int) Get a webhook Declaration WebhookDto GetWebhook(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description WebhookDto WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResult(Guid, int) Get a webhook result for a webhook Declaration WebhookResultDto GetWebhookResult(Guid webhookResultId, int operationIndex = 0) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. Returns Type Description WebhookResultDto WebhookResultDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResults(Guid, int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int) Get a webhook results for a webhook Declaration PageWebhookResult GetWebhookResults(Guid webhookId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0) Parameters Type Name Description Guid webhookId ID of webhook to get results for int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. Returns Type Description PageWebhookResult PageWebhookResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsCount(Guid, int) Get a webhook results count for a webhook Declaration CountDto GetWebhookResultsCount(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId ID of webhook to get results for int operationIndex Index associated with the operation. Returns Type Description CountDto CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsCountWithHttpInfo(Guid, int) Get a webhook results count for a webhook Declaration ApiResponse<CountDto> GetWebhookResultsCountWithHttpInfo(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId ID of webhook to get results for int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CountDto> ApiResponse of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsUnseenErrorCount(int) Get count of unseen webhook results with error status Declaration UnseenErrorCountDto GetWebhookResultsUnseenErrorCount(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description UnseenErrorCountDto UnseenErrorCountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsUnseenErrorCountWithHttpInfo(int) Get count of unseen webhook results with error status Declaration ApiResponse<UnseenErrorCountDto> GetWebhookResultsUnseenErrorCountWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<UnseenErrorCountDto> ApiResponse of UnseenErrorCountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int) Get a webhook results for a webhook Declaration ApiResponse<PageWebhookResult> GetWebhookResultsWithHttpInfo(Guid webhookId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0) Parameters Type Name Description Guid webhookId ID of webhook to get results for int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageWebhookResult> ApiResponse of PageWebhookResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultWithHttpInfo(Guid, int) Get a webhook result for a webhook Declaration ApiResponse<WebhookResultDto> GetWebhookResultWithHttpInfo(Guid webhookResultId, int operationIndex = 0) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookResultDto> ApiResponse of WebhookResultDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhooks(Guid, int) Get all webhooks for an Inbox Declaration [Obsolete] List<WebhookDto> GetWebhooks(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description List<WebhookDto> List<WebhookDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhooksWithHttpInfo(Guid, int) Get all webhooks for an Inbox Declaration [Obsolete] ApiResponse<List<WebhookDto>> GetWebhooksWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<WebhookDto>> ApiResponse of List<WebhookDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookWithHttpInfo(Guid, int) Get a webhook Declaration ApiResponse<WebhookDto> GetWebhookWithHttpInfo(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookDto> ApiResponse of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveAllWebhookResults(int) Redrive all webhook results that have failed status Declaration WebhookRedriveAllResult RedriveAllWebhookResults(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookRedriveAllResult WebhookRedriveAllResult Remarks Allows you to resend webhook payloads for any recorded webhook result that failed to deliver the payload. Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveAllWebhookResultsWithHttpInfo(int) Redrive all webhook results that have failed status Declaration ApiResponse<WebhookRedriveAllResult> RedriveAllWebhookResultsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookRedriveAllResult> ApiResponse of WebhookRedriveAllResult Remarks Allows you to resend webhook payloads for any recorded webhook result that failed to deliver the payload. Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveWebhookResult(Guid, int) Get a webhook result and try to resend the original webhook payload Declaration WebhookRedriveResult RedriveWebhookResult(Guid webhookResultId, int operationIndex = 0) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. Returns Type Description WebhookRedriveResult WebhookRedriveResult Remarks Allows you to resend a webhook payload that was already sent. Webhooks that fail are retried automatically for 24 hours and then put in a dead letter queue. You can retry results manually using this method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveWebhookResultWithHttpInfo(Guid, int) Get a webhook result and try to resend the original webhook payload Declaration ApiResponse<WebhookRedriveResult> RedriveWebhookResultWithHttpInfo(Guid webhookResultId, int operationIndex = 0) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookRedriveResult> ApiResponse of WebhookRedriveResult Remarks Allows you to resend a webhook payload that was already sent. Webhooks that fail are retried automatically for 24 hours and then put in a dead letter queue. You can retry results manually using this method. Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestData(Guid, int) Send webhook test data Declaration WebhookTestResult SendTestData(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description WebhookTestResult WebhookTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestDataWithHttpInfo(Guid, int) Send webhook test data Declaration ApiResponse<WebhookTestResult> SendTestDataWithHttpInfo(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookTestResult> ApiResponse of WebhookTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateWebhookHeaders(Guid, WebhookHeaders, int) Update a webhook request headers Declaration WebhookDto UpdateWebhookHeaders(Guid webhookId, WebhookHeaders webhookHeaders, int operationIndex = 0) Parameters Type Name Description Guid webhookId WebhookHeaders webhookHeaders int operationIndex Index associated with the operation. Returns Type Description WebhookDto WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateWebhookHeadersWithHttpInfo(Guid, WebhookHeaders, int) Update a webhook request headers Declaration ApiResponse<WebhookDto> UpdateWebhookHeadersWithHttpInfo(Guid webhookId, WebhookHeaders webhookHeaders, int operationIndex = 0) Parameters Type Name Description Guid webhookId WebhookHeaders webhookHeaders int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookDto> ApiResponse of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyWebhookSignature(VerifyWebhookSignatureOptions, int) Verify a webhook payload signature Declaration VerifyWebhookSignatureResults VerifyWebhookSignature(VerifyWebhookSignatureOptions verifyWebhookSignatureOptions, int operationIndex = 0) Parameters Type Name Description VerifyWebhookSignatureOptions verifyWebhookSignatureOptions int operationIndex Index associated with the operation. Returns Type Description VerifyWebhookSignatureResults VerifyWebhookSignatureResults Remarks Verify a webhook payload using the messageId and signature. This allows you to be sure that MailSlurp sent the payload and not another server. Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyWebhookSignatureWithHttpInfo(VerifyWebhookSignatureOptions, int) Verify a webhook payload signature Declaration ApiResponse<VerifyWebhookSignatureResults> VerifyWebhookSignatureWithHttpInfo(VerifyWebhookSignatureOptions verifyWebhookSignatureOptions, int operationIndex = 0) Parameters Type Name Description VerifyWebhookSignatureOptions verifyWebhookSignatureOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<VerifyWebhookSignatureResults> ApiResponse of VerifyWebhookSignatureResults Remarks Verify a webhook payload using the messageId and signature. This allows you to be sure that MailSlurp sent the payload and not another server. Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForWebhookResults(Guid, int, int, int) Wait for webhook results for a webhook Declaration List<WebhookResultDto> WaitForWebhookResults(Guid webhookId, int expectedCount, int timeout, int operationIndex = 0) Parameters Type Name Description Guid webhookId ID of webhook to get results for int expectedCount Expected result count int timeout Max time to wait in milliseconds int operationIndex Index associated with the operation. Returns Type Description List<WebhookResultDto> List<WebhookResultDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForWebhookResultsWithHttpInfo(Guid, int, int, int) Wait for webhook results for a webhook Declaration ApiResponse<List<WebhookResultDto>> WaitForWebhookResultsWithHttpInfo(Guid webhookId, int expectedCount, int timeout, int operationIndex = 0) Parameters Type Name Description Guid webhookId ID of webhook to get results for int expectedCount Expected result count int timeout Max time to wait in milliseconds int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<WebhookResultDto>> ApiResponse of List<WebhookResultDto> Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/mailslurp.Api.MailServerControllerApi.html": {
    "href": "api/mailslurp.Api.MailServerControllerApi.html",
    "title": "Class MailServerControllerApi | MailSlurp",
    "keywords": "Class MailServerControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object MailServerControllerApi Implements IMailServerControllerApi IMailServerControllerApiSync IMailServerControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class MailServerControllerApi : IMailServerControllerApi, IMailServerControllerApiSync, IMailServerControllerApiAsync, IApiAccessor Constructors View Source MailServerControllerApi() Initializes a new instance of the MailServerControllerApi class. Declaration public MailServerControllerApi() View Source MailServerControllerApi(Configuration) Initializes a new instance of the MailServerControllerApi class using Configuration object Declaration public MailServerControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source MailServerControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the MailServerControllerApi class using a Configuration object and client instance. Declaration public MailServerControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source MailServerControllerApi(string) Initializes a new instance of the MailServerControllerApi class. Declaration public MailServerControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source DescribeMailServerDomain(DescribeDomainOptions, int) Get DNS Mail Server records for a domain Declaration public DescribeMailServerDomainResult DescribeMailServerDomain(DescribeDomainOptions describeDomainOptions, int operationIndex = 0) Parameters Type Name Description DescribeDomainOptions describeDomainOptions int operationIndex Index associated with the operation. Returns Type Description DescribeMailServerDomainResult DescribeMailServerDomainResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source DescribeMailServerDomainAsync(DescribeDomainOptions, int, CancellationToken) Get DNS Mail Server records for a domain Declaration public Task<DescribeMailServerDomainResult> DescribeMailServerDomainAsync(DescribeDomainOptions describeDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DescribeDomainOptions describeDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DescribeMailServerDomainResult> Task of DescribeMailServerDomainResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source DescribeMailServerDomainWithHttpInfo(DescribeDomainOptions, int) Get DNS Mail Server records for a domain Declaration public ApiResponse<DescribeMailServerDomainResult> DescribeMailServerDomainWithHttpInfo(DescribeDomainOptions describeDomainOptions, int operationIndex = 0) Parameters Type Name Description DescribeDomainOptions describeDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DescribeMailServerDomainResult> ApiResponse of DescribeMailServerDomainResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source DescribeMailServerDomainWithHttpInfoAsync(DescribeDomainOptions, int, CancellationToken) Get DNS Mail Server records for a domain Declaration public Task<ApiResponse<DescribeMailServerDomainResult>> DescribeMailServerDomainWithHttpInfoAsync(DescribeDomainOptions describeDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DescribeDomainOptions describeDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DescribeMailServerDomainResult>> Task of ApiResponse (DescribeMailServerDomainResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetDnsLookup(DNSLookupOptions, int) Lookup DNS records for a domain Declaration public DNSLookupResults GetDnsLookup(DNSLookupOptions dNSLookupOptions, int operationIndex = 0) Parameters Type Name Description DNSLookupOptions dNSLookupOptions int operationIndex Index associated with the operation. Returns Type Description DNSLookupResults DNSLookupResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDnsLookupAsync(DNSLookupOptions, int, CancellationToken) Lookup DNS records for a domain Declaration public Task<DNSLookupResults> GetDnsLookupAsync(DNSLookupOptions dNSLookupOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DNSLookupOptions dNSLookupOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DNSLookupResults> Task of DNSLookupResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDnsLookupWithHttpInfo(DNSLookupOptions, int) Lookup DNS records for a domain Declaration public ApiResponse<DNSLookupResults> GetDnsLookupWithHttpInfo(DNSLookupOptions dNSLookupOptions, int operationIndex = 0) Parameters Type Name Description DNSLookupOptions dNSLookupOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DNSLookupResults> ApiResponse of DNSLookupResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetDnsLookupWithHttpInfoAsync(DNSLookupOptions, int, CancellationToken) Lookup DNS records for a domain Declaration public Task<ApiResponse<DNSLookupResults>> GetDnsLookupWithHttpInfoAsync(DNSLookupOptions dNSLookupOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DNSLookupOptions dNSLookupOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DNSLookupResults>> Task of ApiResponse (DNSLookupResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetIpAddress(string, int) Get IP address for a domain Declaration public IPAddressResult GetIpAddress(string name, int operationIndex = 0) Parameters Type Name Description string name int operationIndex Index associated with the operation. Returns Type Description IPAddressResult IPAddressResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetIpAddressAsync(string, int, CancellationToken) Get IP address for a domain Declaration public Task<IPAddressResult> GetIpAddressAsync(string name, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string name int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<IPAddressResult> Task of IPAddressResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetIpAddressWithHttpInfo(string, int) Get IP address for a domain Declaration public ApiResponse<IPAddressResult> GetIpAddressWithHttpInfo(string name, int operationIndex = 0) Parameters Type Name Description string name int operationIndex Index associated with the operation. Returns Type Description ApiResponse<IPAddressResult> ApiResponse of IPAddressResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetIpAddressWithHttpInfoAsync(string, int, CancellationToken) Get IP address for a domain Declaration public Task<ApiResponse<IPAddressResult>> GetIpAddressWithHttpInfoAsync(string name, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string name int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<IPAddressResult>> Task of ApiResponse (IPAddressResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyEmailAddress(VerifyEmailAddressOptions, int) Deprecated. Use the EmailVerificationController methods for more accurate and reliable functionality. Verify the existence of an email address at a given mail server. Declaration [Obsolete] public EmailVerificationResult VerifyEmailAddress(VerifyEmailAddressOptions verifyEmailAddressOptions, int operationIndex = 0) Parameters Type Name Description VerifyEmailAddressOptions verifyEmailAddressOptions int operationIndex Index associated with the operation. Returns Type Description EmailVerificationResult EmailVerificationResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyEmailAddressAsync(VerifyEmailAddressOptions, int, CancellationToken) Deprecated. Use the EmailVerificationController methods for more accurate and reliable functionality. Verify the existence of an email address at a given mail server. Declaration [Obsolete] public Task<EmailVerificationResult> VerifyEmailAddressAsync(VerifyEmailAddressOptions verifyEmailAddressOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description VerifyEmailAddressOptions verifyEmailAddressOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailVerificationResult> Task of EmailVerificationResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyEmailAddressWithHttpInfo(VerifyEmailAddressOptions, int) Deprecated. Use the EmailVerificationController methods for more accurate and reliable functionality. Verify the existence of an email address at a given mail server. Declaration [Obsolete] public ApiResponse<EmailVerificationResult> VerifyEmailAddressWithHttpInfo(VerifyEmailAddressOptions verifyEmailAddressOptions, int operationIndex = 0) Parameters Type Name Description VerifyEmailAddressOptions verifyEmailAddressOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailVerificationResult> ApiResponse of EmailVerificationResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyEmailAddressWithHttpInfoAsync(VerifyEmailAddressOptions, int, CancellationToken) Deprecated. Use the EmailVerificationController methods for more accurate and reliable functionality. Verify the existence of an email address at a given mail server. Declaration [Obsolete] public Task<ApiResponse<EmailVerificationResult>> VerifyEmailAddressWithHttpInfoAsync(VerifyEmailAddressOptions verifyEmailAddressOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description VerifyEmailAddressOptions verifyEmailAddressOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailVerificationResult>> Task of ApiResponse (EmailVerificationResult) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IMailServerControllerApi IMailServerControllerApiSync IMailServerControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.MissedEmailControllerApi.html": {
    "href": "api/mailslurp.Api.MissedEmailControllerApi.html",
    "title": "Class MissedEmailControllerApi | MailSlurp",
    "keywords": "Class MissedEmailControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object MissedEmailControllerApi Implements IMissedEmailControllerApi IMissedEmailControllerApiSync IMissedEmailControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class MissedEmailControllerApi : IMissedEmailControllerApi, IMissedEmailControllerApiSync, IMissedEmailControllerApiAsync, IApiAccessor Constructors View Source MissedEmailControllerApi() Initializes a new instance of the MissedEmailControllerApi class. Declaration public MissedEmailControllerApi() View Source MissedEmailControllerApi(Configuration) Initializes a new instance of the MissedEmailControllerApi class using Configuration object Declaration public MissedEmailControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source MissedEmailControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the MissedEmailControllerApi class using a Configuration object and client instance. Declaration public MissedEmailControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source MissedEmailControllerApi(string) Initializes a new instance of the MissedEmailControllerApi class. Declaration public MissedEmailControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source GetAllMissedEmails(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) Get all MissedEmails in paginated format Declaration public PageMissedEmailProjection GetAllMissedEmails(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description PageMissedEmailProjection PageMissedEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllMissedEmailsAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) Get all MissedEmails in paginated format Declaration public Task<PageMissedEmailProjection> GetAllMissedEmailsAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageMissedEmailProjection> Task of PageMissedEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllMissedEmailsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) Get all MissedEmails in paginated format Declaration public ApiResponse<PageMissedEmailProjection> GetAllMissedEmailsWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageMissedEmailProjection> ApiResponse of PageMissedEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllMissedEmailsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) Get all MissedEmails in paginated format Declaration public Task<ApiResponse<PageMissedEmailProjection>> GetAllMissedEmailsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageMissedEmailProjection>> Task of ApiResponse (PageMissedEmailProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllUnknownMissedEmails(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) Get all unknown missed emails in paginated format Unknown missed emails are emails that were sent to MailSlurp but could not be assigned to an existing inbox. Declaration public PageUnknownMissedEmailProjection GetAllUnknownMissedEmails(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description PageUnknownMissedEmailProjection PageUnknownMissedEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllUnknownMissedEmailsAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) Get all unknown missed emails in paginated format Unknown missed emails are emails that were sent to MailSlurp but could not be assigned to an existing inbox. Declaration public Task<PageUnknownMissedEmailProjection> GetAllUnknownMissedEmailsAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageUnknownMissedEmailProjection> Task of PageUnknownMissedEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllUnknownMissedEmailsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, Guid?, int) Get all unknown missed emails in paginated format Unknown missed emails are emails that were sent to MailSlurp but could not be assigned to an existing inbox. Declaration public ApiResponse<PageUnknownMissedEmailProjection> GetAllUnknownMissedEmailsWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageUnknownMissedEmailProjection> ApiResponse of PageUnknownMissedEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllUnknownMissedEmailsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, Guid?, int, CancellationToken) Get all unknown missed emails in paginated format Unknown missed emails are emails that were sent to MailSlurp but could not be assigned to an existing inbox. Declaration public Task<ApiResponse<PageUnknownMissedEmailProjection>> GetAllUnknownMissedEmailsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, Guid? inboxId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) Guid? inboxId Optional inbox ID filter (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageUnknownMissedEmailProjection>> Task of ApiResponse (PageUnknownMissedEmailProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetMissedEmail(Guid, int) Get MissedEmail List emails that were missed due to plan limits. Declaration public MissedEmailDto GetMissedEmail(Guid missedEmailId, int operationIndex = 0) Parameters Type Name Description Guid missedEmailId int operationIndex Index associated with the operation. Returns Type Description MissedEmailDto MissedEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetMissedEmailAsync(Guid, int, CancellationToken) Get MissedEmail List emails that were missed due to plan limits. Declaration public Task<MissedEmailDto> GetMissedEmailAsync(Guid missedEmailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid missedEmailId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<MissedEmailDto> Task of MissedEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetMissedEmailWithHttpInfo(Guid, int) Get MissedEmail List emails that were missed due to plan limits. Declaration public ApiResponse<MissedEmailDto> GetMissedEmailWithHttpInfo(Guid missedEmailId, int operationIndex = 0) Parameters Type Name Description Guid missedEmailId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<MissedEmailDto> ApiResponse of MissedEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetMissedEmailWithHttpInfoAsync(Guid, int, CancellationToken) Get MissedEmail List emails that were missed due to plan limits. Declaration public Task<ApiResponse<MissedEmailDto>> GetMissedEmailWithHttpInfoAsync(Guid missedEmailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid missedEmailId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<MissedEmailDto>> Task of ApiResponse (MissedEmailDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source RestoreMissedEmails(int) Restore missed emails If emails were missed due to a plan limit they are saved as missed emails. If support team enables the canRestore flag these emails can be reload into your account using this method. Declaration public void RestoreMissedEmails(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source RestoreMissedEmailsAsync(int, CancellationToken) Restore missed emails If emails were missed due to a plan limit they are saved as missed emails. If support team enables the canRestore flag these emails can be reload into your account using this method. Declaration public Task RestoreMissedEmailsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source RestoreMissedEmailsWithHttpInfo(int) Restore missed emails If emails were missed due to a plan limit they are saved as missed emails. If support team enables the canRestore flag these emails can be reload into your account using this method. Declaration public ApiResponse<object> RestoreMissedEmailsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source RestoreMissedEmailsWithHttpInfoAsync(int, CancellationToken) Restore missed emails If emails were missed due to a plan limit they are saved as missed emails. If support team enables the canRestore flag these emails can be reload into your account using this method. Declaration public Task<ApiResponse<object>> RestoreMissedEmailsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthMissedEmail(int, Guid?, long?, DateTime?, DateTime?, int) Wait for Nth missed email Wait for 0 based index missed email Declaration public MissedEmailDto WaitForNthMissedEmail(int index, Guid? inboxId = null, long? timeout = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int index Zero based index of the email to wait for. If 1 missed email already and you want to wait for the 2nd email pass index=1 Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description MissedEmailDto MissedEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthMissedEmailAsync(int, Guid?, long?, DateTime?, DateTime?, int, CancellationToken) Wait for Nth missed email Wait for 0 based index missed email Declaration public Task<MissedEmailDto> WaitForNthMissedEmailAsync(int index, Guid? inboxId = null, long? timeout = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int index Zero based index of the email to wait for. If 1 missed email already and you want to wait for the 2nd email pass index=1 Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<MissedEmailDto> Task of MissedEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthMissedEmailWithHttpInfo(int, Guid?, long?, DateTime?, DateTime?, int) Wait for Nth missed email Wait for 0 based index missed email Declaration public ApiResponse<MissedEmailDto> WaitForNthMissedEmailWithHttpInfo(int index, Guid? inboxId = null, long? timeout = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int index Zero based index of the email to wait for. If 1 missed email already and you want to wait for the 2nd email pass index=1 Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<MissedEmailDto> ApiResponse of MissedEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthMissedEmailWithHttpInfoAsync(int, Guid?, long?, DateTime?, DateTime?, int, CancellationToken) Wait for Nth missed email Wait for 0 based index missed email Declaration public Task<ApiResponse<MissedEmailDto>> WaitForNthMissedEmailWithHttpInfoAsync(int index, Guid? inboxId = null, long? timeout = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int index Zero based index of the email to wait for. If 1 missed email already and you want to wait for the 2nd email pass index=1 Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<MissedEmailDto>> Task of ApiResponse (MissedEmailDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IMissedEmailControllerApi IMissedEmailControllerApiSync IMissedEmailControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.PhoneControllerApi.html": {
    "href": "api/mailslurp.Api.PhoneControllerApi.html",
    "title": "Class PhoneControllerApi | MailSlurp",
    "keywords": "Class PhoneControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object PhoneControllerApi Implements IPhoneControllerApi IPhoneControllerApiSync IPhoneControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class PhoneControllerApi : IPhoneControllerApi, IPhoneControllerApiSync, IPhoneControllerApiAsync, IApiAccessor Constructors View Source PhoneControllerApi() Initializes a new instance of the PhoneControllerApi class. Declaration public PhoneControllerApi() View Source PhoneControllerApi(Configuration) Initializes a new instance of the PhoneControllerApi class using Configuration object Declaration public PhoneControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source PhoneControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the PhoneControllerApi class using a Configuration object and client instance. Declaration public PhoneControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source PhoneControllerApi(string) Initializes a new instance of the PhoneControllerApi class. Declaration public PhoneControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CreateEmergencyAddress(CreateEmergencyAddressOptions, int) Declaration public EmergencyAddress CreateEmergencyAddress(CreateEmergencyAddressOptions createEmergencyAddressOptions, int operationIndex = 0) Parameters Type Name Description CreateEmergencyAddressOptions createEmergencyAddressOptions int operationIndex Index associated with the operation. Returns Type Description EmergencyAddress EmergencyAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateEmergencyAddressAsync(CreateEmergencyAddressOptions, int, CancellationToken) Declaration public Task<EmergencyAddress> CreateEmergencyAddressAsync(CreateEmergencyAddressOptions createEmergencyAddressOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateEmergencyAddressOptions createEmergencyAddressOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmergencyAddress> Task of EmergencyAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateEmergencyAddressWithHttpInfo(CreateEmergencyAddressOptions, int) Declaration public ApiResponse<EmergencyAddress> CreateEmergencyAddressWithHttpInfo(CreateEmergencyAddressOptions createEmergencyAddressOptions, int operationIndex = 0) Parameters Type Name Description CreateEmergencyAddressOptions createEmergencyAddressOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmergencyAddress> ApiResponse of EmergencyAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateEmergencyAddressWithHttpInfoAsync(CreateEmergencyAddressOptions, int, CancellationToken) Declaration public Task<ApiResponse<EmergencyAddress>> CreateEmergencyAddressWithHttpInfoAsync(CreateEmergencyAddressOptions createEmergencyAddressOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateEmergencyAddressOptions createEmergencyAddressOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmergencyAddress>> Task of ApiResponse (EmergencyAddress) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmergencyAddress(Guid, int) Declaration public EmptyResponseDto DeleteEmergencyAddress(Guid addressId, int operationIndex = 0) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. Returns Type Description EmptyResponseDto EmptyResponseDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmergencyAddressAsync(Guid, int, CancellationToken) Declaration public Task<EmptyResponseDto> DeleteEmergencyAddressAsync(Guid addressId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmptyResponseDto> Task of EmptyResponseDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmergencyAddressWithHttpInfo(Guid, int) Declaration public ApiResponse<EmptyResponseDto> DeleteEmergencyAddressWithHttpInfo(Guid addressId, int operationIndex = 0) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmptyResponseDto> ApiResponse of EmptyResponseDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteEmergencyAddressWithHttpInfoAsync(Guid, int, CancellationToken) Declaration public Task<ApiResponse<EmptyResponseDto>> DeleteEmergencyAddressWithHttpInfoAsync(Guid addressId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmptyResponseDto>> Task of ApiResponse (EmptyResponseDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeletePhoneNumber(Guid, int) Declaration public void DeletePhoneNumber(Guid phoneNumberId, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeletePhoneNumberAsync(Guid, int, CancellationToken) Declaration public Task DeletePhoneNumberAsync(Guid phoneNumberId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeletePhoneNumberWithHttpInfo(Guid, int) Declaration public ApiResponse<object> DeletePhoneNumberWithHttpInfo(Guid phoneNumberId, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeletePhoneNumberWithHttpInfoAsync(Guid, int, CancellationToken) Declaration public Task<ApiResponse<object>> DeletePhoneNumberWithHttpInfoAsync(Guid phoneNumberId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetEmergencyAddress(Guid, int) Declaration public EmergencyAddress GetEmergencyAddress(Guid addressId, int operationIndex = 0) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. Returns Type Description EmergencyAddress EmergencyAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddressAsync(Guid, int, CancellationToken) Declaration public Task<EmergencyAddress> GetEmergencyAddressAsync(Guid addressId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmergencyAddress> Task of EmergencyAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddresses(int) Declaration public List<EmergencyAddressDto> GetEmergencyAddresses(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<EmergencyAddressDto> List<EmergencyAddressDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddressesAsync(int, CancellationToken) Declaration public Task<List<EmergencyAddressDto>> GetEmergencyAddressesAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<EmergencyAddressDto>> Task of List<EmergencyAddressDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddressesWithHttpInfo(int) Declaration public ApiResponse<List<EmergencyAddressDto>> GetEmergencyAddressesWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<EmergencyAddressDto>> ApiResponse of List<EmergencyAddressDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddressesWithHttpInfoAsync(int, CancellationToken) Declaration public Task<ApiResponse<List<EmergencyAddressDto>>> GetEmergencyAddressesWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<EmergencyAddressDto>>> Task of ApiResponse (List<EmergencyAddressDto>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddressWithHttpInfo(Guid, int) Declaration public ApiResponse<EmergencyAddress> GetEmergencyAddressWithHttpInfo(Guid addressId, int operationIndex = 0) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmergencyAddress> ApiResponse of EmergencyAddress Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetEmergencyAddressWithHttpInfoAsync(Guid, int, CancellationToken) Declaration public Task<ApiResponse<EmergencyAddress>> GetEmergencyAddressWithHttpInfoAsync(Guid addressId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid addressId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmergencyAddress>> Task of ApiResponse (EmergencyAddress) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumber(Guid, int) Declaration public PhoneNumberDto GetPhoneNumber(Guid phoneNumberId, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. Returns Type Description PhoneNumberDto PhoneNumberDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberAsync(Guid, int, CancellationToken) Declaration public Task<PhoneNumberDto> GetPhoneNumberAsync(Guid phoneNumberId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PhoneNumberDto> Task of PhoneNumberDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumbers(string, int?, int?, string, DateTime?, DateTime?, int) Declaration public PagePhoneNumberProjection GetPhoneNumbers(string phoneCountry = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description string phoneCountry Optional phone country (optional) int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PagePhoneNumberProjection PagePhoneNumberProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumbersAsync(string, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Declaration public Task<PagePhoneNumberProjection> GetPhoneNumbersAsync(string phoneCountry = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string phoneCountry Optional phone country (optional) int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PagePhoneNumberProjection> Task of PagePhoneNumberProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumbersWithHttpInfo(string, int?, int?, string, DateTime?, DateTime?, int) Declaration public ApiResponse<PagePhoneNumberProjection> GetPhoneNumbersWithHttpInfo(string phoneCountry = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description string phoneCountry Optional phone country (optional) int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PagePhoneNumberProjection> ApiResponse of PagePhoneNumberProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumbersWithHttpInfoAsync(string, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Declaration public Task<ApiResponse<PagePhoneNumberProjection>> GetPhoneNumbersWithHttpInfoAsync(string phoneCountry = null, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string phoneCountry Optional phone country (optional) int? page Optional page index for list pagination (optional, default to 0) int? size Optional page size for list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PagePhoneNumberProjection>> Task of ApiResponse (PagePhoneNumberProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberWithHttpInfo(Guid, int) Declaration public ApiResponse<PhoneNumberDto> GetPhoneNumberWithHttpInfo(Guid phoneNumberId, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PhoneNumberDto> ApiResponse of PhoneNumberDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberWithHttpInfoAsync(Guid, int, CancellationToken) Declaration public Task<ApiResponse<PhoneNumberDto>> GetPhoneNumberWithHttpInfoAsync(Guid phoneNumberId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PhoneNumberDto>> Task of ApiResponse (PhoneNumberDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhonePlans(int) Declaration public List<PhonePlanDto> GetPhonePlans(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<PhonePlanDto> List<PhonePlanDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhonePlansAsync(int, CancellationToken) Declaration public Task<List<PhonePlanDto>> GetPhonePlansAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<PhonePlanDto>> Task of List<PhonePlanDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhonePlansWithHttpInfo(int) Declaration public ApiResponse<List<PhonePlanDto>> GetPhonePlansWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<PhonePlanDto>> ApiResponse of List<PhonePlanDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhonePlansWithHttpInfoAsync(int, CancellationToken) Declaration public Task<ApiResponse<List<PhonePlanDto>>> GetPhonePlansWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<PhonePlanDto>>> Task of ApiResponse (List<PhonePlanDto>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestPhoneNumberSendSms(Guid, TestPhoneNumberOptions, string, int) Declaration public void TestPhoneNumberSendSms(Guid phoneNumberId, TestPhoneNumberOptions testPhoneNumberOptions, string xTestId = null, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId TestPhoneNumberOptions testPhoneNumberOptions string xTestId (optional) int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestPhoneNumberSendSmsAsync(Guid, TestPhoneNumberOptions, string, int, CancellationToken) Declaration public Task TestPhoneNumberSendSmsAsync(Guid phoneNumberId, TestPhoneNumberOptions testPhoneNumberOptions, string xTestId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId TestPhoneNumberOptions testPhoneNumberOptions string xTestId (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestPhoneNumberSendSmsWithHttpInfo(Guid, TestPhoneNumberOptions, string, int) Declaration public ApiResponse<object> TestPhoneNumberSendSmsWithHttpInfo(Guid phoneNumberId, TestPhoneNumberOptions testPhoneNumberOptions, string xTestId = null, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId TestPhoneNumberOptions testPhoneNumberOptions string xTestId (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source TestPhoneNumberSendSmsWithHttpInfoAsync(Guid, TestPhoneNumberOptions, string, int, CancellationToken) Declaration public Task<ApiResponse<object>> TestPhoneNumberSendSmsWithHttpInfoAsync(Guid phoneNumberId, TestPhoneNumberOptions testPhoneNumberOptions, string xTestId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId TestPhoneNumberOptions testPhoneNumberOptions string xTestId (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call Implements IPhoneControllerApi IPhoneControllerApiSync IPhoneControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.SentEmailsControllerApi.html": {
    "href": "api/mailslurp.Api.SentEmailsControllerApi.html",
    "title": "Class SentEmailsControllerApi | MailSlurp",
    "keywords": "Class SentEmailsControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object SentEmailsControllerApi Implements ISentEmailsControllerApi ISentEmailsControllerApiSync ISentEmailsControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class SentEmailsControllerApi : ISentEmailsControllerApi, ISentEmailsControllerApiSync, ISentEmailsControllerApiAsync, IApiAccessor Constructors View Source SentEmailsControllerApi() Initializes a new instance of the SentEmailsControllerApi class. Declaration public SentEmailsControllerApi() View Source SentEmailsControllerApi(Configuration) Initializes a new instance of the SentEmailsControllerApi class using Configuration object Declaration public SentEmailsControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source SentEmailsControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the SentEmailsControllerApi class using a Configuration object and client instance. Declaration public SentEmailsControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source SentEmailsControllerApi(string) Initializes a new instance of the SentEmailsControllerApi class. Declaration public SentEmailsControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source DeleteAllSentEmails(int) Delete all sent email receipts Declaration public void DeleteAllSentEmails(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllSentEmailsAsync(int, CancellationToken) Delete all sent email receipts Declaration public Task DeleteAllSentEmailsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllSentEmailsWithHttpInfo(int) Delete all sent email receipts Declaration public ApiResponse<object> DeleteAllSentEmailsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllSentEmailsWithHttpInfoAsync(int, CancellationToken) Delete all sent email receipts Declaration public Task<ApiResponse<object>> DeleteAllSentEmailsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSentEmail(Guid, int) Delete sent email receipt Declaration public void DeleteSentEmail(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSentEmailAsync(Guid, int, CancellationToken) Delete sent email receipt Declaration public Task DeleteSentEmailAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSentEmailWithHttpInfo(Guid, int) Delete sent email receipt Declaration public ApiResponse<object> DeleteSentEmailWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSentEmailWithHttpInfoAsync(Guid, int, CancellationToken) Delete sent email receipt Declaration public Task<ApiResponse<object>> DeleteSentEmailWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllSentTrackingPixels(int?, int?, string, string, DateTime?, DateTime?, int) Get all sent email tracking pixels in paginated form Declaration public PageTrackingPixelProjection GetAllSentTrackingPixels(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageTrackingPixelProjection PageTrackingPixelProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllSentTrackingPixelsAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get all sent email tracking pixels in paginated form Declaration public Task<PageTrackingPixelProjection> GetAllSentTrackingPixelsAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageTrackingPixelProjection> Task of PageTrackingPixelProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllSentTrackingPixelsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, int) Get all sent email tracking pixels in paginated form Declaration public ApiResponse<PageTrackingPixelProjection> GetAllSentTrackingPixelsWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageTrackingPixelProjection> ApiResponse of PageTrackingPixelProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllSentTrackingPixelsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get all sent email tracking pixels in paginated form Declaration public Task<ApiResponse<PageTrackingPixelProjection>> GetAllSentTrackingPixelsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageTrackingPixelProjection>> Task of ApiResponse (PageTrackingPixelProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetRawSentEmailContents(Guid, int) Get raw sent email string. Returns unparsed raw SMTP message with headers and body. Returns a raw, unparsed, and unprocessed sent email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawSentEmailJson endpoint Declaration public void GetRawSentEmailContents(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailContentsAsync(Guid, int, CancellationToken) Get raw sent email string. Returns unparsed raw SMTP message with headers and body. Returns a raw, unparsed, and unprocessed sent email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawSentEmailJson endpoint Declaration public Task GetRawSentEmailContentsAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailContentsWithHttpInfo(Guid, int) Get raw sent email string. Returns unparsed raw SMTP message with headers and body. Returns a raw, unparsed, and unprocessed sent email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawSentEmailJson endpoint Declaration public ApiResponse<object> GetRawSentEmailContentsWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailContentsWithHttpInfoAsync(Guid, int, CancellationToken) Get raw sent email string. Returns unparsed raw SMTP message with headers and body. Returns a raw, unparsed, and unprocessed sent email. If your client has issues processing the response it is likely due to the response content-type which is text/plain. If you need a JSON response content-type use the getRawSentEmailJson endpoint Declaration public Task<ApiResponse<object>> GetRawSentEmailContentsWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailJson(Guid, int) Get raw sent email in JSON. Unparsed SMTP message in JSON wrapper format. Returns a raw, unparsed, and unprocessed sent email wrapped in a JSON response object for easier handling when compared with the getRawSentEmail text/plain response Declaration public RawEmailJson GetRawSentEmailJson(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description RawEmailJson RawEmailJson Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailJsonAsync(Guid, int, CancellationToken) Get raw sent email in JSON. Unparsed SMTP message in JSON wrapper format. Returns a raw, unparsed, and unprocessed sent email wrapped in a JSON response object for easier handling when compared with the getRawSentEmail text/plain response Declaration public Task<RawEmailJson> GetRawSentEmailJsonAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<RawEmailJson> Task of RawEmailJson Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailJsonWithHttpInfo(Guid, int) Get raw sent email in JSON. Unparsed SMTP message in JSON wrapper format. Returns a raw, unparsed, and unprocessed sent email wrapped in a JSON response object for easier handling when compared with the getRawSentEmail text/plain response Declaration public ApiResponse<RawEmailJson> GetRawSentEmailJsonWithHttpInfo(Guid emailId, int operationIndex = 0) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. Returns Type Description ApiResponse<RawEmailJson> ApiResponse of RawEmailJson Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetRawSentEmailJsonWithHttpInfoAsync(Guid, int, CancellationToken) Get raw sent email in JSON. Unparsed SMTP message in JSON wrapper format. Returns a raw, unparsed, and unprocessed sent email wrapped in a JSON response object for easier handling when compared with the getRawSentEmail text/plain response Declaration public Task<ApiResponse<RawEmailJson>> GetRawSentEmailJsonWithHttpInfoAsync(Guid emailId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid emailId ID of email int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<RawEmailJson>> Task of ApiResponse (RawEmailJson) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatus(Guid, int) Get a sent email delivery status Declaration public DeliveryStatusDto GetSentDeliveryStatus(Guid deliveryId, int operationIndex = 0) Parameters Type Name Description Guid deliveryId int operationIndex Index associated with the operation. Returns Type Description DeliveryStatusDto DeliveryStatusDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusAsync(Guid, int, CancellationToken) Get a sent email delivery status Declaration public Task<DeliveryStatusDto> GetSentDeliveryStatusAsync(Guid deliveryId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid deliveryId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DeliveryStatusDto> Task of DeliveryStatusDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatuses(int?, int?, string, DateTime?, DateTime?, int) Get all sent email delivery statuses Declaration public PageDeliveryStatus GetSentDeliveryStatuses(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageDeliveryStatus PageDeliveryStatus Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all sent email delivery statuses Declaration public Task<PageDeliveryStatus> GetSentDeliveryStatusesAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageDeliveryStatus> Task of PageDeliveryStatus Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesBySentId(Guid, int?, int?, string, DateTime?, DateTime?, int) Get all sent email delivery statuses Declaration public PageDeliveryStatus GetSentDeliveryStatusesBySentId(Guid sentId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid sentId ID of the sent email that you want to get the delivery status of. Sent email object is returned when sending an email int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageDeliveryStatus PageDeliveryStatus Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesBySentIdAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all sent email delivery statuses Declaration public Task<PageDeliveryStatus> GetSentDeliveryStatusesBySentIdAsync(Guid sentId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid sentId ID of the sent email that you want to get the delivery status of. Sent email object is returned when sending an email int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageDeliveryStatus> Task of PageDeliveryStatus Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesBySentIdWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get all sent email delivery statuses Declaration public ApiResponse<PageDeliveryStatus> GetSentDeliveryStatusesBySentIdWithHttpInfo(Guid sentId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid sentId ID of the sent email that you want to get the delivery status of. Sent email object is returned when sending an email int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageDeliveryStatus> ApiResponse of PageDeliveryStatus Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesBySentIdWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all sent email delivery statuses Declaration public Task<ApiResponse<PageDeliveryStatus>> GetSentDeliveryStatusesBySentIdWithHttpInfoAsync(Guid sentId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid sentId ID of the sent email that you want to get the delivery status of. Sent email object is returned when sending an email int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageDeliveryStatus>> Task of ApiResponse (PageDeliveryStatus) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get all sent email delivery statuses Declaration public ApiResponse<PageDeliveryStatus> GetSentDeliveryStatusesWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageDeliveryStatus> ApiResponse of PageDeliveryStatus Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusesWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get all sent email delivery statuses Declaration public Task<ApiResponse<PageDeliveryStatus>> GetSentDeliveryStatusesWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in delivery status list pagination (optional, default to 0) int? size Optional page size in delivery status list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageDeliveryStatus>> Task of ApiResponse (PageDeliveryStatus) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusWithHttpInfo(Guid, int) Get a sent email delivery status Declaration public ApiResponse<DeliveryStatusDto> GetSentDeliveryStatusWithHttpInfo(Guid deliveryId, int operationIndex = 0) Parameters Type Name Description Guid deliveryId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DeliveryStatusDto> ApiResponse of DeliveryStatusDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentDeliveryStatusWithHttpInfoAsync(Guid, int, CancellationToken) Get a sent email delivery status Declaration public Task<ApiResponse<DeliveryStatusDto>> GetSentDeliveryStatusWithHttpInfoAsync(Guid deliveryId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid deliveryId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DeliveryStatusDto>> Task of ApiResponse (DeliveryStatusDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmail(Guid, int) Get sent email receipt Declaration public SentEmailDto GetSentEmail(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description SentEmailDto SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailAsync(Guid, int, CancellationToken) Get sent email receipt Declaration public Task<SentEmailDto> GetSentEmailAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentEmailDto> Task of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailHTMLContent(Guid, int) Get sent email HTML content Declaration public string GetSentEmailHTMLContent(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description string string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailHTMLContentAsync(Guid, int, CancellationToken) Get sent email HTML content Declaration public Task<string> GetSentEmailHTMLContentAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<string> Task of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailHTMLContentWithHttpInfo(Guid, int) Get sent email HTML content Declaration public ApiResponse<string> GetSentEmailHTMLContentWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<string> ApiResponse of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailHTMLContentWithHttpInfoAsync(Guid, int, CancellationToken) Get sent email HTML content Declaration public Task<ApiResponse<string>> GetSentEmailHTMLContentWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<string>> Task of ApiResponse (string) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailPreviewURLs(Guid, int) Get sent email URL for viewing in browser or downloading Get a list of URLs for sent email content as text/html or raw SMTP message for viewing the message in a browser. Declaration public EmailPreviewUrls GetSentEmailPreviewURLs(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description EmailPreviewUrls EmailPreviewUrls Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailPreviewURLsAsync(Guid, int, CancellationToken) Get sent email URL for viewing in browser or downloading Get a list of URLs for sent email content as text/html or raw SMTP message for viewing the message in a browser. Declaration public Task<EmailPreviewUrls> GetSentEmailPreviewURLsAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<EmailPreviewUrls> Task of EmailPreviewUrls Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailPreviewURLsWithHttpInfo(Guid, int) Get sent email URL for viewing in browser or downloading Get a list of URLs for sent email content as text/html or raw SMTP message for viewing the message in a browser. Declaration public ApiResponse<EmailPreviewUrls> GetSentEmailPreviewURLsWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<EmailPreviewUrls> ApiResponse of EmailPreviewUrls Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailPreviewURLsWithHttpInfoAsync(Guid, int, CancellationToken) Get sent email URL for viewing in browser or downloading Get a list of URLs for sent email content as text/html or raw SMTP message for viewing the message in a browser. Declaration public Task<ApiResponse<EmailPreviewUrls>> GetSentEmailPreviewURLsWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<EmailPreviewUrls>> Task of ApiResponse (EmailPreviewUrls) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmails(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) Get all sent emails in paginated form Declaration public PageSentEmailProjection GetSentEmails(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageSentEmailProjection PageSentEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get all sent emails in paginated form Declaration public Task<PageSentEmailProjection> GetSentEmailsAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageSentEmailProjection> Task of PageSentEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsWithHttpInfo(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) Get all sent emails in paginated form Declaration public ApiResponse<PageSentEmailProjection> GetSentEmailsWithHttpInfo(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageSentEmailProjection> ApiResponse of PageSentEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsWithHttpInfoAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get all sent emails in paginated form Declaration public Task<ApiResponse<PageSentEmailProjection>> GetSentEmailsWithHttpInfoAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageSentEmailProjection>> Task of ApiResponse (PageSentEmailProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsWithQueueResults(int?, int?, string, DateTime?, DateTime?, int) Get results of email sent with queues in paginated form Declaration public PageSentEmailWithQueueProjection GetSentEmailsWithQueueResults(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageSentEmailWithQueueProjection PageSentEmailWithQueueProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsWithQueueResultsAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get results of email sent with queues in paginated form Declaration public Task<PageSentEmailWithQueueProjection> GetSentEmailsWithQueueResultsAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageSentEmailWithQueueProjection> Task of PageSentEmailWithQueueProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsWithQueueResultsWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) Get results of email sent with queues in paginated form Declaration public ApiResponse<PageSentEmailWithQueueProjection> GetSentEmailsWithQueueResultsWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageSentEmailWithQueueProjection> ApiResponse of PageSentEmailWithQueueProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailsWithQueueResultsWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get results of email sent with queues in paginated form Declaration public Task<ApiResponse<PageSentEmailWithQueueProjection>> GetSentEmailsWithQueueResultsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in inbox sent email list pagination (optional, default to 0) int? size Optional page size in inbox sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageSentEmailWithQueueProjection>> Task of ApiResponse (PageSentEmailWithQueueProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailTrackingPixels(Guid, int?, int?, string, string, DateTime?, DateTime?, int) Get all tracking pixels for a sent email in paginated form Declaration public PageTrackingPixelProjection GetSentEmailTrackingPixels(Guid id, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid id int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageTrackingPixelProjection PageTrackingPixelProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailTrackingPixelsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get all tracking pixels for a sent email in paginated form Declaration public Task<PageTrackingPixelProjection> GetSentEmailTrackingPixelsAsync(Guid id, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageTrackingPixelProjection> Task of PageTrackingPixelProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailTrackingPixelsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) Get all tracking pixels for a sent email in paginated form Declaration public ApiResponse<PageTrackingPixelProjection> GetSentEmailTrackingPixelsWithHttpInfo(Guid id, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid id int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageTrackingPixelProjection> ApiResponse of PageTrackingPixelProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailTrackingPixelsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get all tracking pixels for a sent email in paginated form Declaration public Task<ApiResponse<PageTrackingPixelProjection>> GetSentEmailTrackingPixelsWithHttpInfoAsync(Guid id, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int? page Optional page index in sent email tracking pixel list pagination (optional, default to 0) int? size Optional page size in sent email tracking pixel list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageTrackingPixelProjection>> Task of ApiResponse (PageTrackingPixelProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailWithHttpInfo(Guid, int) Get sent email receipt Declaration public ApiResponse<SentEmailDto> GetSentEmailWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentEmailDto> ApiResponse of SentEmailDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentEmailWithHttpInfoAsync(Guid, int, CancellationToken) Get sent email receipt Declaration public Task<ApiResponse<SentEmailDto>> GetSentEmailWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentEmailDto>> Task of ApiResponse (SentEmailDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentOrganizationEmails(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) Get all sent organization emails in paginated form Declaration public PageSentEmailProjection GetSentOrganizationEmails(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in sent email list pagination (optional, default to 0) int? size Optional page size in sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageSentEmailProjection PageSentEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentOrganizationEmailsAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get all sent organization emails in paginated form Declaration public Task<PageSentEmailProjection> GetSentOrganizationEmailsAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in sent email list pagination (optional, default to 0) int? size Optional page size in sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageSentEmailProjection> Task of PageSentEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentOrganizationEmailsWithHttpInfo(Guid?, int?, int?, string, string, DateTime?, DateTime?, int) Get all sent organization emails in paginated form Declaration public ApiResponse<PageSentEmailProjection> GetSentOrganizationEmailsWithHttpInfo(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in sent email list pagination (optional, default to 0) int? size Optional page size in sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageSentEmailProjection> ApiResponse of PageSentEmailProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSentOrganizationEmailsWithHttpInfoAsync(Guid?, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get all sent organization emails in paginated form Declaration public Task<ApiResponse<PageSentEmailProjection>> GetSentOrganizationEmailsWithHttpInfoAsync(Guid? inboxId = null, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Optional inboxId to filter sender of sent emails by (optional) int? page Optional page index in sent email list pagination (optional, default to 0) int? size Optional page size in sent email list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageSentEmailProjection>> Task of ApiResponse (PageSentEmailProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForDeliveryStatuses(Guid?, Guid?, long?, int?, DateTime?, DateTime?, int) Wait for delivery statuses Declaration public DeliveryStatusDto WaitForDeliveryStatuses(Guid? sentId = null, Guid? inboxId = null, long? timeout = null, int? index = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? sentId Optional sent email ID filter (optional) Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) int? index Zero based index of the delivery status to wait for. If 1 delivery status already and you want to wait for the 2nd pass index=1 (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description DeliveryStatusDto DeliveryStatusDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForDeliveryStatusesAsync(Guid?, Guid?, long?, int?, DateTime?, DateTime?, int, CancellationToken) Wait for delivery statuses Declaration public Task<DeliveryStatusDto> WaitForDeliveryStatusesAsync(Guid? sentId = null, Guid? inboxId = null, long? timeout = null, int? index = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? sentId Optional sent email ID filter (optional) Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) int? index Zero based index of the delivery status to wait for. If 1 delivery status already and you want to wait for the 2nd pass index=1 (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<DeliveryStatusDto> Task of DeliveryStatusDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForDeliveryStatusesWithHttpInfo(Guid?, Guid?, long?, int?, DateTime?, DateTime?, int) Wait for delivery statuses Declaration public ApiResponse<DeliveryStatusDto> WaitForDeliveryStatusesWithHttpInfo(Guid? sentId = null, Guid? inboxId = null, long? timeout = null, int? index = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? sentId Optional sent email ID filter (optional) Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) int? index Zero based index of the delivery status to wait for. If 1 delivery status already and you want to wait for the 2nd pass index=1 (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<DeliveryStatusDto> ApiResponse of DeliveryStatusDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForDeliveryStatusesWithHttpInfoAsync(Guid?, Guid?, long?, int?, DateTime?, DateTime?, int, CancellationToken) Wait for delivery statuses Declaration public Task<ApiResponse<DeliveryStatusDto>> WaitForDeliveryStatusesWithHttpInfoAsync(Guid? sentId = null, Guid? inboxId = null, long? timeout = null, int? index = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? sentId Optional sent email ID filter (optional) Guid? inboxId Optional inbox ID filter (optional) long? timeout Optional timeout milliseconds (optional) int? index Zero based index of the delivery status to wait for. If 1 delivery status already and you want to wait for the 2nd pass index=1 (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<DeliveryStatusDto>> Task of ApiResponse (DeliveryStatusDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements ISentEmailsControllerApi ISentEmailsControllerApiSync ISentEmailsControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.SmsControllerApi.html": {
    "href": "api/mailslurp.Api.SmsControllerApi.html",
    "title": "Class SmsControllerApi | MailSlurp",
    "keywords": "Class SmsControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object SmsControllerApi Implements ISmsControllerApi ISmsControllerApiSync ISmsControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class SmsControllerApi : ISmsControllerApi, ISmsControllerApiSync, ISmsControllerApiAsync, IApiAccessor Constructors View Source SmsControllerApi() Initializes a new instance of the SmsControllerApi class. Declaration public SmsControllerApi() View Source SmsControllerApi(Configuration) Initializes a new instance of the SmsControllerApi class using Configuration object Declaration public SmsControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source SmsControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the SmsControllerApi class using a Configuration object and client instance. Declaration public SmsControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source SmsControllerApi(string) Initializes a new instance of the SmsControllerApi class. Declaration public SmsControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source DeleteSmsMessage(Guid, int) Delete SMS message. Delete an SMS message Declaration public void DeleteSmsMessage(Guid smsId, int operationIndex = 0) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessageAsync(Guid, int, CancellationToken) Delete SMS message. Delete an SMS message Declaration public Task DeleteSmsMessageAsync(Guid smsId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessages(Guid?, int) Delete all SMS messages Delete all SMS messages or all messages for a given phone number Declaration public void DeleteSmsMessages(Guid? phoneNumberId = null, int operationIndex = 0) Parameters Type Name Description Guid? phoneNumberId (optional) int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessagesAsync(Guid?, int, CancellationToken) Delete all SMS messages Delete all SMS messages or all messages for a given phone number Declaration public Task DeleteSmsMessagesAsync(Guid? phoneNumberId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? phoneNumberId (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessagesWithHttpInfo(Guid?, int) Delete all SMS messages Delete all SMS messages or all messages for a given phone number Declaration public ApiResponse<object> DeleteSmsMessagesWithHttpInfo(Guid? phoneNumberId = null, int operationIndex = 0) Parameters Type Name Description Guid? phoneNumberId (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessagesWithHttpInfoAsync(Guid?, int, CancellationToken) Delete all SMS messages Delete all SMS messages or all messages for a given phone number Declaration public Task<ApiResponse<object>> DeleteSmsMessagesWithHttpInfoAsync(Guid? phoneNumberId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? phoneNumberId (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessageWithHttpInfo(Guid, int) Delete SMS message. Delete an SMS message Declaration public ApiResponse<object> DeleteSmsMessageWithHttpInfo(Guid smsId, int operationIndex = 0) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteSmsMessageWithHttpInfoAsync(Guid, int, CancellationToken) Delete SMS message. Delete an SMS message Declaration public Task<ApiResponse<object>> DeleteSmsMessageWithHttpInfoAsync(Guid smsId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetReplyForSmsMessage(Guid, int) Get reply for an SMS message Get reply for an SMS message. Declaration public ReplyForSms GetReplyForSmsMessage(Guid smsId, int operationIndex = 0) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. Returns Type Description ReplyForSms ReplyForSms Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetReplyForSmsMessageAsync(Guid, int, CancellationToken) Get reply for an SMS message Get reply for an SMS message. Declaration public Task<ReplyForSms> GetReplyForSmsMessageAsync(Guid smsId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ReplyForSms> Task of ReplyForSms Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetReplyForSmsMessageWithHttpInfo(Guid, int) Get reply for an SMS message Get reply for an SMS message. Declaration public ApiResponse<ReplyForSms> GetReplyForSmsMessageWithHttpInfo(Guid smsId, int operationIndex = 0) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<ReplyForSms> ApiResponse of ReplyForSms Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetReplyForSmsMessageWithHttpInfoAsync(Guid, int, CancellationToken) Get reply for an SMS message Get reply for an SMS message. Declaration public Task<ApiResponse<ReplyForSms>> GetReplyForSmsMessageWithHttpInfoAsync(Guid smsId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<ReplyForSms>> Task of ApiResponse (ReplyForSms) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsCount(int) Get SMS count Get number of SMS Declaration public CountDto GetSmsCount(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description CountDto CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsCountAsync(int, CancellationToken) Get SMS count Get number of SMS Declaration public Task<CountDto> GetSmsCountAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CountDto> Task of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsCountWithHttpInfo(int) Get SMS count Get number of SMS Declaration public ApiResponse<CountDto> GetSmsCountWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CountDto> ApiResponse of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsCountWithHttpInfoAsync(int, CancellationToken) Get SMS count Get number of SMS Declaration public Task<ApiResponse<CountDto>> GetSmsCountWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CountDto>> Task of ApiResponse (CountDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessage(Guid, int) Get SMS content including body. Expects SMS to exist by ID. For SMS that may not have arrived yet use the WaitForController. Returns a SMS summary object with content. Declaration public SmsDto GetSmsMessage(Guid smsId, int operationIndex = 0) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. Returns Type Description SmsDto SmsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessageAsync(Guid, int, CancellationToken) Get SMS content including body. Expects SMS to exist by ID. For SMS that may not have arrived yet use the WaitForController. Returns a SMS summary object with content. Declaration public Task<SmsDto> GetSmsMessageAsync(Guid smsId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SmsDto> Task of SmsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessagesPaginated(Guid?, int?, int?, string, bool?, DateTime?, DateTime?, int) Get all SMS messages in all phone numbers in paginated form. . By default returns all SMS messages across all phone numbers sorted by ascending created at date. Responses are paginated. You can restrict results to a list of phone number IDs. You can also filter out read messages Declaration public PageSmsProjection GetSmsMessagesPaginated(Guid? phoneNumber = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? phoneNumber Optional receiving phone number to filter SMS messages for (optional) int? page Optional page index in SMS list pagination (optional, default to 0) int? size Optional page size in SMS list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread SMS only. All SMS are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) DateTime? since Optional filter SMSs received after given date time (optional) DateTime? before Optional filter SMSs received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description PageSmsProjection PageSmsProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessagesPaginatedAsync(Guid?, int?, int?, string, bool?, DateTime?, DateTime?, int, CancellationToken) Get all SMS messages in all phone numbers in paginated form. . By default returns all SMS messages across all phone numbers sorted by ascending created at date. Responses are paginated. You can restrict results to a list of phone number IDs. You can also filter out read messages Declaration public Task<PageSmsProjection> GetSmsMessagesPaginatedAsync(Guid? phoneNumber = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? phoneNumber Optional receiving phone number to filter SMS messages for (optional) int? page Optional page index in SMS list pagination (optional, default to 0) int? size Optional page size in SMS list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread SMS only. All SMS are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) DateTime? since Optional filter SMSs received after given date time (optional) DateTime? before Optional filter SMSs received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageSmsProjection> Task of PageSmsProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessagesPaginatedWithHttpInfo(Guid?, int?, int?, string, bool?, DateTime?, DateTime?, int) Get all SMS messages in all phone numbers in paginated form. . By default returns all SMS messages across all phone numbers sorted by ascending created at date. Responses are paginated. You can restrict results to a list of phone number IDs. You can also filter out read messages Declaration public ApiResponse<PageSmsProjection> GetSmsMessagesPaginatedWithHttpInfo(Guid? phoneNumber = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid? phoneNumber Optional receiving phone number to filter SMS messages for (optional) int? page Optional page index in SMS list pagination (optional, default to 0) int? size Optional page size in SMS list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread SMS only. All SMS are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) DateTime? since Optional filter SMSs received after given date time (optional) DateTime? before Optional filter SMSs received before given date time (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageSmsProjection> ApiResponse of PageSmsProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessagesPaginatedWithHttpInfoAsync(Guid?, int?, int?, string, bool?, DateTime?, DateTime?, int, CancellationToken) Get all SMS messages in all phone numbers in paginated form. . By default returns all SMS messages across all phone numbers sorted by ascending created at date. Responses are paginated. You can restrict results to a list of phone number IDs. You can also filter out read messages Declaration public Task<ApiResponse<PageSmsProjection>> GetSmsMessagesPaginatedWithHttpInfoAsync(Guid? phoneNumber = null, int? page = null, int? size = null, string sort = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? phoneNumber Optional receiving phone number to filter SMS messages for (optional) int? page Optional page index in SMS list pagination (optional, default to 0) int? size Optional page size in SMS list pagination. Maximum size is 100. Use page index and sort to page through larger results (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) bool? unreadOnly Optional filter for unread SMS only. All SMS are considered unread until they are viewed in the dashboard or requested directly (optional, default to false) DateTime? since Optional filter SMSs received after given date time (optional) DateTime? before Optional filter SMSs received before given date time (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageSmsProjection>> Task of ApiResponse (PageSmsProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessageWithHttpInfo(Guid, int) Get SMS content including body. Expects SMS to exist by ID. For SMS that may not have arrived yet use the WaitForController. Returns a SMS summary object with content. Declaration public ApiResponse<SmsDto> GetSmsMessageWithHttpInfo(Guid smsId, int operationIndex = 0) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SmsDto> ApiResponse of SmsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetSmsMessageWithHttpInfoAsync(Guid, int, CancellationToken) Get SMS content including body. Expects SMS to exist by ID. For SMS that may not have arrived yet use the WaitForController. Returns a SMS summary object with content. Declaration public Task<ApiResponse<SmsDto>> GetSmsMessageWithHttpInfoAsync(Guid smsId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SmsDto>> Task of ApiResponse (SmsDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadSmsCount(int) Get unread SMS count Get number of SMS unread. Unread means has not been viewed in dashboard or returned in an email API response Declaration public UnreadCount GetUnreadSmsCount(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description UnreadCount UnreadCount Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadSmsCountAsync(int, CancellationToken) Get unread SMS count Get number of SMS unread. Unread means has not been viewed in dashboard or returned in an email API response Declaration public Task<UnreadCount> GetUnreadSmsCountAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<UnreadCount> Task of UnreadCount Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadSmsCountWithHttpInfo(int) Get unread SMS count Get number of SMS unread. Unread means has not been viewed in dashboard or returned in an email API response Declaration public ApiResponse<UnreadCount> GetUnreadSmsCountWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<UnreadCount> ApiResponse of UnreadCount Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUnreadSmsCountWithHttpInfoAsync(int, CancellationToken) Get unread SMS count Get number of SMS unread. Unread means has not been viewed in dashboard or returned in an email API response Declaration public Task<ApiResponse<UnreadCount>> GetUnreadSmsCountWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<UnreadCount>> Task of ApiResponse (UnreadCount) Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToSmsMessage(Guid, SmsReplyOptions, int) Send a reply to a received SMS message. Replies are sent from the receiving number. Reply to an SMS message. Declaration public SentSmsDto ReplyToSmsMessage(Guid smsId, SmsReplyOptions smsReplyOptions, int operationIndex = 0) Parameters Type Name Description Guid smsId SmsReplyOptions smsReplyOptions int operationIndex Index associated with the operation. Returns Type Description SentSmsDto SentSmsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToSmsMessageAsync(Guid, SmsReplyOptions, int, CancellationToken) Send a reply to a received SMS message. Replies are sent from the receiving number. Reply to an SMS message. Declaration public Task<SentSmsDto> ReplyToSmsMessageAsync(Guid smsId, SmsReplyOptions smsReplyOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId SmsReplyOptions smsReplyOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SentSmsDto> Task of SentSmsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToSmsMessageWithHttpInfo(Guid, SmsReplyOptions, int) Send a reply to a received SMS message. Replies are sent from the receiving number. Reply to an SMS message. Declaration public ApiResponse<SentSmsDto> ReplyToSmsMessageWithHttpInfo(Guid smsId, SmsReplyOptions smsReplyOptions, int operationIndex = 0) Parameters Type Name Description Guid smsId SmsReplyOptions smsReplyOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SentSmsDto> ApiResponse of SentSmsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source ReplyToSmsMessageWithHttpInfoAsync(Guid, SmsReplyOptions, int, CancellationToken) Send a reply to a received SMS message. Replies are sent from the receiving number. Reply to an SMS message. Declaration public Task<ApiResponse<SentSmsDto>> ReplyToSmsMessageWithHttpInfoAsync(Guid smsId, SmsReplyOptions smsReplyOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid smsId SmsReplyOptions smsReplyOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SentSmsDto>> Task of ApiResponse (SentSmsDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements ISmsControllerApi ISmsControllerApiSync ISmsControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.TemplateControllerApi.html": {
    "href": "api/mailslurp.Api.TemplateControllerApi.html",
    "title": "Class TemplateControllerApi | MailSlurp",
    "keywords": "Class TemplateControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object TemplateControllerApi Implements ITemplateControllerApi ITemplateControllerApiSync ITemplateControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class TemplateControllerApi : ITemplateControllerApi, ITemplateControllerApiSync, ITemplateControllerApiAsync, IApiAccessor Constructors View Source TemplateControllerApi() Initializes a new instance of the TemplateControllerApi class. Declaration public TemplateControllerApi() View Source TemplateControllerApi(Configuration) Initializes a new instance of the TemplateControllerApi class using Configuration object Declaration public TemplateControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source TemplateControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the TemplateControllerApi class using a Configuration object and client instance. Declaration public TemplateControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source TemplateControllerApi(string) Initializes a new instance of the TemplateControllerApi class. Declaration public TemplateControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CreateTemplate(CreateTemplateOptions, int) Create a Template Create an email template with variables for use with templated transactional emails. Declaration public TemplateDto CreateTemplate(CreateTemplateOptions createTemplateOptions, int operationIndex = 0) Parameters Type Name Description CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. Returns Type Description TemplateDto TemplateDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateTemplateAsync(CreateTemplateOptions, int, CancellationToken) Create a Template Create an email template with variables for use with templated transactional emails. Declaration public Task<TemplateDto> CreateTemplateAsync(CreateTemplateOptions createTemplateOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TemplateDto> Task of TemplateDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateTemplateWithHttpInfo(CreateTemplateOptions, int) Create a Template Create an email template with variables for use with templated transactional emails. Declaration public ApiResponse<TemplateDto> CreateTemplateWithHttpInfo(CreateTemplateOptions createTemplateOptions, int operationIndex = 0) Parameters Type Name Description CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TemplateDto> ApiResponse of TemplateDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateTemplateWithHttpInfoAsync(CreateTemplateOptions, int, CancellationToken) Create a Template Create an email template with variables for use with templated transactional emails. Declaration public Task<ApiResponse<TemplateDto>> CreateTemplateWithHttpInfoAsync(CreateTemplateOptions createTemplateOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TemplateDto>> Task of ApiResponse (TemplateDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteTemplate(Guid, int) Delete email template Delete template Declaration public void DeleteTemplate(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteTemplateAsync(Guid, int, CancellationToken) Delete email template Delete template Declaration public Task DeleteTemplateAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteTemplateWithHttpInfo(Guid, int) Delete email template Delete template Declaration public ApiResponse<object> DeleteTemplateWithHttpInfo(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteTemplateWithHttpInfoAsync(Guid, int, CancellationToken) Delete email template Delete template Declaration public Task<ApiResponse<object>> DeleteTemplateWithHttpInfoAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTemplates(int?, int?, string, DateTime?, DateTime?, int) List templates Get all templates in paginated format Declaration public PageTemplateProjection GetAllTemplates(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageTemplateProjection PageTemplateProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTemplatesAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) List templates Get all templates in paginated format Declaration public Task<PageTemplateProjection> GetAllTemplatesAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageTemplateProjection> Task of PageTemplateProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTemplatesWithHttpInfo(int?, int?, string, DateTime?, DateTime?, int) List templates Get all templates in paginated format Declaration public ApiResponse<PageTemplateProjection> GetAllTemplatesWithHttpInfo(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageTemplateProjection> ApiResponse of PageTemplateProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTemplatesWithHttpInfoAsync(int?, int?, string, DateTime?, DateTime?, int, CancellationToken) List templates Get all templates in paginated format Declaration public Task<ApiResponse<PageTemplateProjection>> GetAllTemplatesWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageTemplateProjection>> Task of ApiResponse (PageTemplateProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetTemplate(Guid, int) Get template Get email template Declaration public TemplateDto GetTemplate(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description TemplateDto TemplateDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplateAsync(Guid, int, CancellationToken) Get template Get email template Declaration public Task<TemplateDto> GetTemplateAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TemplateDto> Task of TemplateDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewHtml(Guid, int) Get template preview HTML Get email template preview with passed template variables in HTML format for browsers. Pass template variables as query params. Declaration public string GetTemplatePreviewHtml(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description string string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewHtmlAsync(Guid, int, CancellationToken) Get template preview HTML Get email template preview with passed template variables in HTML format for browsers. Pass template variables as query params. Declaration public Task<string> GetTemplatePreviewHtmlAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<string> Task of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewHtmlWithHttpInfo(Guid, int) Get template preview HTML Get email template preview with passed template variables in HTML format for browsers. Pass template variables as query params. Declaration public ApiResponse<string> GetTemplatePreviewHtmlWithHttpInfo(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description ApiResponse<string> ApiResponse of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewHtmlWithHttpInfoAsync(Guid, int, CancellationToken) Get template preview HTML Get email template preview with passed template variables in HTML format for browsers. Pass template variables as query params. Declaration public Task<ApiResponse<string>> GetTemplatePreviewHtmlWithHttpInfoAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<string>> Task of ApiResponse (string) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewJson(Guid, int) Get template preview Json Get email template preview with passed template variables in JSON format. Pass template variables as query params. Declaration public TemplatePreview GetTemplatePreviewJson(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description TemplatePreview TemplatePreview Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewJsonAsync(Guid, int, CancellationToken) Get template preview Json Get email template preview with passed template variables in JSON format. Pass template variables as query params. Declaration public Task<TemplatePreview> GetTemplatePreviewJsonAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TemplatePreview> Task of TemplatePreview Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewJsonWithHttpInfo(Guid, int) Get template preview Json Get email template preview with passed template variables in JSON format. Pass template variables as query params. Declaration public ApiResponse<TemplatePreview> GetTemplatePreviewJsonWithHttpInfo(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TemplatePreview> ApiResponse of TemplatePreview Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatePreviewJsonWithHttpInfoAsync(Guid, int, CancellationToken) Get template preview Json Get email template preview with passed template variables in JSON format. Pass template variables as query params. Declaration public Task<ApiResponse<TemplatePreview>> GetTemplatePreviewJsonWithHttpInfoAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TemplatePreview>> Task of ApiResponse (TemplatePreview) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplates(int) List templates Get all templates Declaration public List<TemplateProjection> GetTemplates(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description List<TemplateProjection> List<TemplateProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatesAsync(int, CancellationToken) List templates Get all templates Declaration public Task<List<TemplateProjection>> GetTemplatesAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<TemplateProjection>> Task of List<TemplateProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatesWithHttpInfo(int) List templates Get all templates Declaration public ApiResponse<List<TemplateProjection>> GetTemplatesWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<TemplateProjection>> ApiResponse of List<TemplateProjection> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplatesWithHttpInfoAsync(int, CancellationToken) List templates Get all templates Declaration public Task<ApiResponse<List<TemplateProjection>>> GetTemplatesWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<TemplateProjection>>> Task of ApiResponse (List<TemplateProjection>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplateWithHttpInfo(Guid, int) Get template Get email template Declaration public ApiResponse<TemplateDto> GetTemplateWithHttpInfo(Guid templateId, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TemplateDto> ApiResponse of TemplateDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTemplateWithHttpInfoAsync(Guid, int, CancellationToken) Get template Get email template Declaration public Task<ApiResponse<TemplateDto>> GetTemplateWithHttpInfoAsync(Guid templateId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TemplateDto>> Task of ApiResponse (TemplateDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateTemplate(Guid, CreateTemplateOptions, int) Update template Update email template Declaration public TemplateDto UpdateTemplate(Guid templateId, CreateTemplateOptions createTemplateOptions, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. Returns Type Description TemplateDto TemplateDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateTemplateAsync(Guid, CreateTemplateOptions, int, CancellationToken) Update template Update email template Declaration public Task<TemplateDto> UpdateTemplateAsync(Guid templateId, CreateTemplateOptions createTemplateOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TemplateDto> Task of TemplateDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateTemplateWithHttpInfo(Guid, CreateTemplateOptions, int) Update template Update email template Declaration public ApiResponse<TemplateDto> UpdateTemplateWithHttpInfo(Guid templateId, CreateTemplateOptions createTemplateOptions, int operationIndex = 0) Parameters Type Name Description Guid templateId Template ID CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TemplateDto> ApiResponse of TemplateDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateTemplateWithHttpInfoAsync(Guid, CreateTemplateOptions, int, CancellationToken) Update template Update email template Declaration public Task<ApiResponse<TemplateDto>> UpdateTemplateWithHttpInfoAsync(Guid templateId, CreateTemplateOptions createTemplateOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid templateId Template ID CreateTemplateOptions createTemplateOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TemplateDto>> Task of ApiResponse (TemplateDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements ITemplateControllerApi ITemplateControllerApiSync ITemplateControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.ToolsControllerApi.html": {
    "href": "api/mailslurp.Api.ToolsControllerApi.html",
    "title": "Class ToolsControllerApi | MailSlurp",
    "keywords": "Class ToolsControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object ToolsControllerApi Implements IToolsControllerApi IToolsControllerApiSync IToolsControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class ToolsControllerApi : IToolsControllerApi, IToolsControllerApiSync, IToolsControllerApiAsync, IApiAccessor Constructors View Source ToolsControllerApi() Initializes a new instance of the ToolsControllerApi class. Declaration public ToolsControllerApi() View Source ToolsControllerApi(Configuration) Initializes a new instance of the ToolsControllerApi class using Configuration object Declaration public ToolsControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source ToolsControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the ToolsControllerApi class using a Configuration object and client instance. Declaration public ToolsControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source ToolsControllerApi(string) Initializes a new instance of the ToolsControllerApi class. Declaration public ToolsControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CheckEmailFeaturesClientSupport(CheckEmailFeaturesClientSupportOptions, int) Check email client support for email HTML and CSS features Declaration public CheckEmailFeaturesClientSupportResults CheckEmailFeaturesClientSupport(CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions, int operationIndex = 0) Parameters Type Name Description CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions int operationIndex Index associated with the operation. Returns Type Description CheckEmailFeaturesClientSupportResults CheckEmailFeaturesClientSupportResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailFeaturesClientSupportAsync(CheckEmailFeaturesClientSupportOptions, int, CancellationToken) Check email client support for email HTML and CSS features Declaration public Task<CheckEmailFeaturesClientSupportResults> CheckEmailFeaturesClientSupportAsync(CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CheckEmailFeaturesClientSupportResults> Task of CheckEmailFeaturesClientSupportResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailFeaturesClientSupportWithHttpInfo(CheckEmailFeaturesClientSupportOptions, int) Check email client support for email HTML and CSS features Declaration public ApiResponse<CheckEmailFeaturesClientSupportResults> CheckEmailFeaturesClientSupportWithHttpInfo(CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions, int operationIndex = 0) Parameters Type Name Description CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CheckEmailFeaturesClientSupportResults> ApiResponse of CheckEmailFeaturesClientSupportResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source CheckEmailFeaturesClientSupportWithHttpInfoAsync(CheckEmailFeaturesClientSupportOptions, int, CancellationToken) Check email client support for email HTML and CSS features Declaration public Task<ApiResponse<CheckEmailFeaturesClientSupportResults>> CheckEmailFeaturesClientSupportWithHttpInfoAsync(CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CheckEmailFeaturesClientSupportOptions checkEmailFeaturesClientSupportOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CheckEmailFeaturesClientSupportResults>> Task of ApiResponse (CheckEmailFeaturesClientSupportResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateBimiRecord(GenerateBimiRecordOptions, int) Create a BIMI record policy Declaration public GenerateBimiRecordResults GenerateBimiRecord(GenerateBimiRecordOptions generateBimiRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateBimiRecordOptions generateBimiRecordOptions int operationIndex Index associated with the operation. Returns Type Description GenerateBimiRecordResults GenerateBimiRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateBimiRecordAsync(GenerateBimiRecordOptions, int, CancellationToken) Create a BIMI record policy Declaration public Task<GenerateBimiRecordResults> GenerateBimiRecordAsync(GenerateBimiRecordOptions generateBimiRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateBimiRecordOptions generateBimiRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GenerateBimiRecordResults> Task of GenerateBimiRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateBimiRecordWithHttpInfo(GenerateBimiRecordOptions, int) Create a BIMI record policy Declaration public ApiResponse<GenerateBimiRecordResults> GenerateBimiRecordWithHttpInfo(GenerateBimiRecordOptions generateBimiRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateBimiRecordOptions generateBimiRecordOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GenerateBimiRecordResults> ApiResponse of GenerateBimiRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateBimiRecordWithHttpInfoAsync(GenerateBimiRecordOptions, int, CancellationToken) Create a BIMI record policy Declaration public Task<ApiResponse<GenerateBimiRecordResults>> GenerateBimiRecordWithHttpInfoAsync(GenerateBimiRecordOptions generateBimiRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateBimiRecordOptions generateBimiRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GenerateBimiRecordResults>> Task of ApiResponse (GenerateBimiRecordResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateDmarcRecord(GenerateDmarcRecordOptions, int) Create a DMARC record policy Declaration public GenerateDmarcRecordResults GenerateDmarcRecord(GenerateDmarcRecordOptions generateDmarcRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateDmarcRecordOptions generateDmarcRecordOptions int operationIndex Index associated with the operation. Returns Type Description GenerateDmarcRecordResults GenerateDmarcRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateDmarcRecordAsync(GenerateDmarcRecordOptions, int, CancellationToken) Create a DMARC record policy Declaration public Task<GenerateDmarcRecordResults> GenerateDmarcRecordAsync(GenerateDmarcRecordOptions generateDmarcRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateDmarcRecordOptions generateDmarcRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GenerateDmarcRecordResults> Task of GenerateDmarcRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateDmarcRecordWithHttpInfo(GenerateDmarcRecordOptions, int) Create a DMARC record policy Declaration public ApiResponse<GenerateDmarcRecordResults> GenerateDmarcRecordWithHttpInfo(GenerateDmarcRecordOptions generateDmarcRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateDmarcRecordOptions generateDmarcRecordOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GenerateDmarcRecordResults> ApiResponse of GenerateDmarcRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateDmarcRecordWithHttpInfoAsync(GenerateDmarcRecordOptions, int, CancellationToken) Create a DMARC record policy Declaration public Task<ApiResponse<GenerateDmarcRecordResults>> GenerateDmarcRecordWithHttpInfoAsync(GenerateDmarcRecordOptions generateDmarcRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateDmarcRecordOptions generateDmarcRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GenerateDmarcRecordResults>> Task of ApiResponse (GenerateDmarcRecordResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateMtaStsRecord(GenerateMtaStsRecordOptions, int) Create a TLS reporting record policy Declaration public GenerateMtaStsRecordResults GenerateMtaStsRecord(GenerateMtaStsRecordOptions generateMtaStsRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateMtaStsRecordOptions generateMtaStsRecordOptions int operationIndex Index associated with the operation. Returns Type Description GenerateMtaStsRecordResults GenerateMtaStsRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateMtaStsRecordAsync(GenerateMtaStsRecordOptions, int, CancellationToken) Create a TLS reporting record policy Declaration public Task<GenerateMtaStsRecordResults> GenerateMtaStsRecordAsync(GenerateMtaStsRecordOptions generateMtaStsRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateMtaStsRecordOptions generateMtaStsRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GenerateMtaStsRecordResults> Task of GenerateMtaStsRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateMtaStsRecordWithHttpInfo(GenerateMtaStsRecordOptions, int) Create a TLS reporting record policy Declaration public ApiResponse<GenerateMtaStsRecordResults> GenerateMtaStsRecordWithHttpInfo(GenerateMtaStsRecordOptions generateMtaStsRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateMtaStsRecordOptions generateMtaStsRecordOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GenerateMtaStsRecordResults> ApiResponse of GenerateMtaStsRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateMtaStsRecordWithHttpInfoAsync(GenerateMtaStsRecordOptions, int, CancellationToken) Create a TLS reporting record policy Declaration public Task<ApiResponse<GenerateMtaStsRecordResults>> GenerateMtaStsRecordWithHttpInfoAsync(GenerateMtaStsRecordOptions generateMtaStsRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateMtaStsRecordOptions generateMtaStsRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GenerateMtaStsRecordResults>> Task of ApiResponse (GenerateMtaStsRecordResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateTlsReportingRecord(GenerateTlsReportingRecordOptions, int) Create a TLS reporting record policy Declaration public GenerateTlsReportingRecordResults GenerateTlsReportingRecord(GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions int operationIndex Index associated with the operation. Returns Type Description GenerateTlsReportingRecordResults GenerateTlsReportingRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateTlsReportingRecordAsync(GenerateTlsReportingRecordOptions, int, CancellationToken) Create a TLS reporting record policy Declaration public Task<GenerateTlsReportingRecordResults> GenerateTlsReportingRecordAsync(GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<GenerateTlsReportingRecordResults> Task of GenerateTlsReportingRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateTlsReportingRecordWithHttpInfo(GenerateTlsReportingRecordOptions, int) Create a TLS reporting record policy Declaration public ApiResponse<GenerateTlsReportingRecordResults> GenerateTlsReportingRecordWithHttpInfo(GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions, int operationIndex = 0) Parameters Type Name Description GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<GenerateTlsReportingRecordResults> ApiResponse of GenerateTlsReportingRecordResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source GenerateTlsReportingRecordWithHttpInfoAsync(GenerateTlsReportingRecordOptions, int, CancellationToken) Create a TLS reporting record policy Declaration public Task<ApiResponse<GenerateTlsReportingRecordResults>> GenerateTlsReportingRecordWithHttpInfoAsync(GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description GenerateTlsReportingRecordOptions generateTlsReportingRecordOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<GenerateTlsReportingRecordResults>> Task of ApiResponse (GenerateTlsReportingRecordResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source LookupBimiDomain(LookupBimiDomainOptions, int) Lookup a BIMI record policy Declaration public LookupBimiDomainResults LookupBimiDomain(LookupBimiDomainOptions lookupBimiDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupBimiDomainOptions lookupBimiDomainOptions int operationIndex Index associated with the operation. Returns Type Description LookupBimiDomainResults LookupBimiDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupBimiDomainAsync(LookupBimiDomainOptions, int, CancellationToken) Lookup a BIMI record policy Declaration public Task<LookupBimiDomainResults> LookupBimiDomainAsync(LookupBimiDomainOptions lookupBimiDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupBimiDomainOptions lookupBimiDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<LookupBimiDomainResults> Task of LookupBimiDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupBimiDomainWithHttpInfo(LookupBimiDomainOptions, int) Lookup a BIMI record policy Declaration public ApiResponse<LookupBimiDomainResults> LookupBimiDomainWithHttpInfo(LookupBimiDomainOptions lookupBimiDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupBimiDomainOptions lookupBimiDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<LookupBimiDomainResults> ApiResponse of LookupBimiDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupBimiDomainWithHttpInfoAsync(LookupBimiDomainOptions, int, CancellationToken) Lookup a BIMI record policy Declaration public Task<ApiResponse<LookupBimiDomainResults>> LookupBimiDomainWithHttpInfoAsync(LookupBimiDomainOptions lookupBimiDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupBimiDomainOptions lookupBimiDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<LookupBimiDomainResults>> Task of ApiResponse (LookupBimiDomainResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupDmarcDomain(LookupDmarcDomainOptions, int) Lookup a DMARC record policy Declaration public LookupDmarcDomainResults LookupDmarcDomain(LookupDmarcDomainOptions lookupDmarcDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupDmarcDomainOptions lookupDmarcDomainOptions int operationIndex Index associated with the operation. Returns Type Description LookupDmarcDomainResults LookupDmarcDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupDmarcDomainAsync(LookupDmarcDomainOptions, int, CancellationToken) Lookup a DMARC record policy Declaration public Task<LookupDmarcDomainResults> LookupDmarcDomainAsync(LookupDmarcDomainOptions lookupDmarcDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupDmarcDomainOptions lookupDmarcDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<LookupDmarcDomainResults> Task of LookupDmarcDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupDmarcDomainWithHttpInfo(LookupDmarcDomainOptions, int) Lookup a DMARC record policy Declaration public ApiResponse<LookupDmarcDomainResults> LookupDmarcDomainWithHttpInfo(LookupDmarcDomainOptions lookupDmarcDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupDmarcDomainOptions lookupDmarcDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<LookupDmarcDomainResults> ApiResponse of LookupDmarcDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupDmarcDomainWithHttpInfoAsync(LookupDmarcDomainOptions, int, CancellationToken) Lookup a DMARC record policy Declaration public Task<ApiResponse<LookupDmarcDomainResults>> LookupDmarcDomainWithHttpInfoAsync(LookupDmarcDomainOptions lookupDmarcDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupDmarcDomainOptions lookupDmarcDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<LookupDmarcDomainResults>> Task of ApiResponse (LookupDmarcDomainResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupMtaStsDomain(LookupMtaStsDomainOptions, int) Lookup a MTA-STS domain policy Declaration public LookupMtaStsDomainResults LookupMtaStsDomain(LookupMtaStsDomainOptions lookupMtaStsDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupMtaStsDomainOptions lookupMtaStsDomainOptions int operationIndex Index associated with the operation. Returns Type Description LookupMtaStsDomainResults LookupMtaStsDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupMtaStsDomainAsync(LookupMtaStsDomainOptions, int, CancellationToken) Lookup a MTA-STS domain policy Declaration public Task<LookupMtaStsDomainResults> LookupMtaStsDomainAsync(LookupMtaStsDomainOptions lookupMtaStsDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupMtaStsDomainOptions lookupMtaStsDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<LookupMtaStsDomainResults> Task of LookupMtaStsDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupMtaStsDomainWithHttpInfo(LookupMtaStsDomainOptions, int) Lookup a MTA-STS domain policy Declaration public ApiResponse<LookupMtaStsDomainResults> LookupMtaStsDomainWithHttpInfo(LookupMtaStsDomainOptions lookupMtaStsDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupMtaStsDomainOptions lookupMtaStsDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<LookupMtaStsDomainResults> ApiResponse of LookupMtaStsDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupMtaStsDomainWithHttpInfoAsync(LookupMtaStsDomainOptions, int, CancellationToken) Lookup a MTA-STS domain policy Declaration public Task<ApiResponse<LookupMtaStsDomainResults>> LookupMtaStsDomainWithHttpInfoAsync(LookupMtaStsDomainOptions lookupMtaStsDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupMtaStsDomainOptions lookupMtaStsDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<LookupMtaStsDomainResults>> Task of ApiResponse (LookupMtaStsDomainResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupTlsReportingDomain(LookupTlsReportingDomainOptions, int) Lookup a TLS reporting domain policy Declaration public LookupTlsReportingDomainResults LookupTlsReportingDomain(LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions int operationIndex Index associated with the operation. Returns Type Description LookupTlsReportingDomainResults LookupTlsReportingDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupTlsReportingDomainAsync(LookupTlsReportingDomainOptions, int, CancellationToken) Lookup a TLS reporting domain policy Declaration public Task<LookupTlsReportingDomainResults> LookupTlsReportingDomainAsync(LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<LookupTlsReportingDomainResults> Task of LookupTlsReportingDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupTlsReportingDomainWithHttpInfo(LookupTlsReportingDomainOptions, int) Lookup a TLS reporting domain policy Declaration public ApiResponse<LookupTlsReportingDomainResults> LookupTlsReportingDomainWithHttpInfo(LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions, int operationIndex = 0) Parameters Type Name Description LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<LookupTlsReportingDomainResults> ApiResponse of LookupTlsReportingDomainResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source LookupTlsReportingDomainWithHttpInfoAsync(LookupTlsReportingDomainOptions, int, CancellationToken) Lookup a TLS reporting domain policy Declaration public Task<ApiResponse<LookupTlsReportingDomainResults>> LookupTlsReportingDomainWithHttpInfoAsync(LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description LookupTlsReportingDomainOptions lookupTlsReportingDomainOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<LookupTlsReportingDomainResults>> Task of ApiResponse (LookupTlsReportingDomainResults) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IToolsControllerApi IToolsControllerApiSync IToolsControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.TrackingControllerApi.html": {
    "href": "api/mailslurp.Api.TrackingControllerApi.html",
    "title": "Class TrackingControllerApi | MailSlurp",
    "keywords": "Class TrackingControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object TrackingControllerApi Implements ITrackingControllerApi ITrackingControllerApiSync ITrackingControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class TrackingControllerApi : ITrackingControllerApi, ITrackingControllerApiSync, ITrackingControllerApiAsync, IApiAccessor Constructors View Source TrackingControllerApi() Initializes a new instance of the TrackingControllerApi class. Declaration public TrackingControllerApi() View Source TrackingControllerApi(Configuration) Initializes a new instance of the TrackingControllerApi class using Configuration object Declaration public TrackingControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source TrackingControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the TrackingControllerApi class using a Configuration object and client instance. Declaration public TrackingControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source TrackingControllerApi(string) Initializes a new instance of the TrackingControllerApi class. Declaration public TrackingControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CreateTrackingPixel(CreateTrackingPixelOptions, int) Create tracking pixel Create a tracking pixel. A tracking pixel is an image that can be embedded in an email. When the email is viewed and the image is seen MailSlurp will mark the pixel as seen. Use tracking pixels to monitor email open events. You can receive open notifications via webhook or by fetching the pixel. Declaration public TrackingPixelDto CreateTrackingPixel(CreateTrackingPixelOptions createTrackingPixelOptions, int operationIndex = 0) Parameters Type Name Description CreateTrackingPixelOptions createTrackingPixelOptions int operationIndex Index associated with the operation. Returns Type Description TrackingPixelDto TrackingPixelDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateTrackingPixelAsync(CreateTrackingPixelOptions, int, CancellationToken) Create tracking pixel Create a tracking pixel. A tracking pixel is an image that can be embedded in an email. When the email is viewed and the image is seen MailSlurp will mark the pixel as seen. Use tracking pixels to monitor email open events. You can receive open notifications via webhook or by fetching the pixel. Declaration public Task<TrackingPixelDto> CreateTrackingPixelAsync(CreateTrackingPixelOptions createTrackingPixelOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateTrackingPixelOptions createTrackingPixelOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TrackingPixelDto> Task of TrackingPixelDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateTrackingPixelWithHttpInfo(CreateTrackingPixelOptions, int) Create tracking pixel Create a tracking pixel. A tracking pixel is an image that can be embedded in an email. When the email is viewed and the image is seen MailSlurp will mark the pixel as seen. Use tracking pixels to monitor email open events. You can receive open notifications via webhook or by fetching the pixel. Declaration public ApiResponse<TrackingPixelDto> CreateTrackingPixelWithHttpInfo(CreateTrackingPixelOptions createTrackingPixelOptions, int operationIndex = 0) Parameters Type Name Description CreateTrackingPixelOptions createTrackingPixelOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TrackingPixelDto> ApiResponse of TrackingPixelDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateTrackingPixelWithHttpInfoAsync(CreateTrackingPixelOptions, int, CancellationToken) Create tracking pixel Create a tracking pixel. A tracking pixel is an image that can be embedded in an email. When the email is viewed and the image is seen MailSlurp will mark the pixel as seen. Use tracking pixels to monitor email open events. You can receive open notifications via webhook or by fetching the pixel. Declaration public Task<ApiResponse<TrackingPixelDto>> CreateTrackingPixelWithHttpInfoAsync(CreateTrackingPixelOptions createTrackingPixelOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateTrackingPixelOptions createTrackingPixelOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TrackingPixelDto>> Task of ApiResponse (TrackingPixelDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTrackingPixels(int?, int?, string, string, DateTime?, DateTime?, int) Get tracking pixels List tracking pixels in paginated form Declaration public PageTrackingPixelProjection GetAllTrackingPixels(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageTrackingPixelProjection PageTrackingPixelProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTrackingPixelsAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get tracking pixels List tracking pixels in paginated form Declaration public Task<PageTrackingPixelProjection> GetAllTrackingPixelsAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageTrackingPixelProjection> Task of PageTrackingPixelProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTrackingPixelsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, int) Get tracking pixels List tracking pixels in paginated form Declaration public ApiResponse<PageTrackingPixelProjection> GetAllTrackingPixelsWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageTrackingPixelProjection> ApiResponse of PageTrackingPixelProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllTrackingPixelsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get tracking pixels List tracking pixels in paginated form Declaration public Task<ApiResponse<PageTrackingPixelProjection>> GetAllTrackingPixelsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageTrackingPixelProjection>> Task of ApiResponse (PageTrackingPixelProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetTrackingPixel(Guid, int) Get pixel Declaration public TrackingPixelDto GetTrackingPixel(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description TrackingPixelDto TrackingPixelDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTrackingPixelAsync(Guid, int, CancellationToken) Get pixel Declaration public Task<TrackingPixelDto> GetTrackingPixelAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<TrackingPixelDto> Task of TrackingPixelDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTrackingPixelWithHttpInfo(Guid, int) Get pixel Declaration public ApiResponse<TrackingPixelDto> GetTrackingPixelWithHttpInfo(Guid id, int operationIndex = 0) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. Returns Type Description ApiResponse<TrackingPixelDto> ApiResponse of TrackingPixelDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTrackingPixelWithHttpInfoAsync(Guid, int, CancellationToken) Get pixel Declaration public Task<ApiResponse<TrackingPixelDto>> GetTrackingPixelWithHttpInfoAsync(Guid id, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid id int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<TrackingPixelDto>> Task of ApiResponse (TrackingPixelDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements ITrackingControllerApi ITrackingControllerApiSync ITrackingControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.UserControllerApi.html": {
    "href": "api/mailslurp.Api.UserControllerApi.html",
    "title": "Class UserControllerApi | MailSlurp",
    "keywords": "Class UserControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object UserControllerApi Implements IUserControllerApi IUserControllerApiSync IUserControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class UserControllerApi : IUserControllerApi, IUserControllerApiSync, IUserControllerApiAsync, IApiAccessor Constructors View Source UserControllerApi() Initializes a new instance of the UserControllerApi class. Declaration public UserControllerApi() View Source UserControllerApi(Configuration) Initializes a new instance of the UserControllerApi class using Configuration object Declaration public UserControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source UserControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the UserControllerApi class using a Configuration object and client instance. Declaration public UserControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source UserControllerApi(string) Initializes a new instance of the UserControllerApi class. Declaration public UserControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetJsonPropertyAsString(string, object, int) Utility function to extract properties from JSON objects in language where this is cumbersome. Declaration public string GetJsonPropertyAsString(string property, object body, int operationIndex = 0) Parameters Type Name Description string property JSON property name or dot separated path selector such as a.b.c object body int operationIndex Index associated with the operation. Returns Type Description string string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonPropertyAsStringAsync(string, object, int, CancellationToken) Utility function to extract properties from JSON objects in language where this is cumbersome. Declaration public Task<string> GetJsonPropertyAsStringAsync(string property, object body, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string property JSON property name or dot separated path selector such as a.b.c object body int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<string> Task of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonPropertyAsStringWithHttpInfo(string, object, int) Utility function to extract properties from JSON objects in language where this is cumbersome. Declaration public ApiResponse<string> GetJsonPropertyAsStringWithHttpInfo(string property, object body, int operationIndex = 0) Parameters Type Name Description string property JSON property name or dot separated path selector such as a.b.c object body int operationIndex Index associated with the operation. Returns Type Description ApiResponse<string> ApiResponse of string Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonPropertyAsStringWithHttpInfoAsync(string, object, int, CancellationToken) Utility function to extract properties from JSON objects in language where this is cumbersome. Declaration public Task<ApiResponse<string>> GetJsonPropertyAsStringWithHttpInfoAsync(string property, object body, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string property JSON property name or dot separated path selector such as a.b.c object body int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<string>> Task of ApiResponse (string) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUserInfo(int) Get account information for your user Declaration public UserInfoDto GetUserInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description UserInfoDto UserInfoDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUserInfoAsync(int, CancellationToken) Get account information for your user Declaration public Task<UserInfoDto> GetUserInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<UserInfoDto> Task of UserInfoDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUserInfoWithHttpInfo(int) Get account information for your user Declaration public ApiResponse<UserInfoDto> GetUserInfoWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<UserInfoDto> ApiResponse of UserInfoDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetUserInfoWithHttpInfoAsync(int, CancellationToken) Get account information for your user Declaration public Task<ApiResponse<UserInfoDto>> GetUserInfoWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<UserInfoDto>> Task of ApiResponse (UserInfoDto) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IUserControllerApi IUserControllerApiSync IUserControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.WaitForControllerApi.html": {
    "href": "api/mailslurp.Api.WaitForControllerApi.html",
    "title": "Class WaitForControllerApi | MailSlurp",
    "keywords": "Class WaitForControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object WaitForControllerApi Implements IWaitForControllerApi IWaitForControllerApiSync IWaitForControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class WaitForControllerApi : IWaitForControllerApi, IWaitForControllerApiSync, IWaitForControllerApiAsync, IApiAccessor Constructors View Source WaitForControllerApi() Initializes a new instance of the WaitForControllerApi class. Declaration public WaitForControllerApi() View Source WaitForControllerApi(Configuration) Initializes a new instance of the WaitForControllerApi class using Configuration object Declaration public WaitForControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source WaitForControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the WaitForControllerApi class using a Configuration object and client instance. Declaration public WaitForControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source WaitForControllerApi(string) Initializes a new instance of the WaitForControllerApi class. Declaration public WaitForControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source WaitFor(WaitForConditions, int) Wait for an email to match the provided filter conditions such as subject contains keyword. Generic waitFor method that will wait until an inbox meets given conditions or return immediately if already met Declaration public List<EmailPreview> WaitFor(WaitForConditions waitForConditions, int operationIndex = 0) Parameters Type Name Description WaitForConditions waitForConditions int operationIndex Index associated with the operation. Returns Type Description List<EmailPreview> List<EmailPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForAsync(WaitForConditions, int, CancellationToken) Wait for an email to match the provided filter conditions such as subject contains keyword. Generic waitFor method that will wait until an inbox meets given conditions or return immediately if already met Declaration public Task<List<EmailPreview>> WaitForAsync(WaitForConditions waitForConditions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description WaitForConditions waitForConditions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<EmailPreview>> Task of List<EmailPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForEmailCount(Guid, int, long?, bool?, DateTime?, DateTime?, string, long?, int) Wait for and return count number of emails. Hold connection until inbox count matches expected or timeout occurs If inbox contains count or more emails at time of request then return count worth of emails. If not wait until the count is reached and return those or return an error if timeout is exceeded. Declaration public List<EmailPreview> WaitForEmailCount(Guid inboxId, int count, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater that 1 long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description List<EmailPreview> List<EmailPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForEmailCountAsync(Guid, int, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Wait for and return count number of emails. Hold connection until inbox count matches expected or timeout occurs If inbox contains count or more emails at time of request then return count worth of emails. If not wait until the count is reached and return those or return an error if timeout is exceeded. Declaration public Task<List<EmailPreview>> WaitForEmailCountAsync(Guid inboxId, int count, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater that 1 long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<EmailPreview>> Task of List<EmailPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForEmailCountWithHttpInfo(Guid, int, long?, bool?, DateTime?, DateTime?, string, long?, int) Wait for and return count number of emails. Hold connection until inbox count matches expected or timeout occurs If inbox contains count or more emails at time of request then return count worth of emails. If not wait until the count is reached and return those or return an error if timeout is exceeded. Declaration public ApiResponse<List<EmailPreview>> WaitForEmailCountWithHttpInfo(Guid inboxId, int count, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater that 1 long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<EmailPreview>> ApiResponse of List<EmailPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForEmailCountWithHttpInfoAsync(Guid, int, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Wait for and return count number of emails. Hold connection until inbox count matches expected or timeout occurs If inbox contains count or more emails at time of request then return count worth of emails. If not wait until the count is reached and return those or return an error if timeout is exceeded. Declaration public Task<ApiResponse<List<EmailPreview>>> WaitForEmailCountWithHttpInfoAsync(Guid inboxId, int count, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater that 1 long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<EmailPreview>>> Task of ApiResponse (List<EmailPreview>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestEmail(Guid?, long?, bool?, DateTime?, DateTime?, string, long?, int) Fetch inbox's latest email or if empty wait for an email to arrive Will return either the last received email or wait for an email to arrive and return that. If you need to wait for an email for a non-empty inbox set unreadOnly=true or see the other receive methods such as waitForNthEmail or waitForEmailCount. Declaration public Email WaitForLatestEmail(Guid? inboxId = null, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Id of the inbox we are fetching emails from (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only. (optional, default to false) DateTime? before Filter for emails that were before after the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description Email Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestEmailAsync(Guid?, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Fetch inbox's latest email or if empty wait for an email to arrive Will return either the last received email or wait for an email to arrive and return that. If you need to wait for an email for a non-empty inbox set unreadOnly=true or see the other receive methods such as waitForNthEmail or waitForEmailCount. Declaration public Task<Email> WaitForLatestEmailAsync(Guid? inboxId = null, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Id of the inbox we are fetching emails from (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only. (optional, default to false) DateTime? before Filter for emails that were before after the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestEmailWithHttpInfo(Guid?, long?, bool?, DateTime?, DateTime?, string, long?, int) Fetch inbox's latest email or if empty wait for an email to arrive Will return either the last received email or wait for an email to arrive and return that. If you need to wait for an email for a non-empty inbox set unreadOnly=true or see the other receive methods such as waitForNthEmail or waitForEmailCount. Declaration public ApiResponse<Email> WaitForLatestEmailWithHttpInfo(Guid? inboxId = null, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Id of the inbox we are fetching emails from (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only. (optional, default to false) DateTime? before Filter for emails that were before after the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestEmailWithHttpInfoAsync(Guid?, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Fetch inbox's latest email or if empty wait for an email to arrive Will return either the last received email or wait for an email to arrive and return that. If you need to wait for an email for a non-empty inbox set unreadOnly=true or see the other receive methods such as waitForNthEmail or waitForEmailCount. Declaration public Task<ApiResponse<Email>> WaitForLatestEmailWithHttpInfoAsync(Guid? inboxId = null, long? timeout = null, bool? unreadOnly = null, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Id of the inbox we are fetching emails from (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only. (optional, default to false) DateTime? before Filter for emails that were before after the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestSms(WaitForSingleSmsOptions, int) Wait for the latest SMS message to match the provided filter conditions such as body contains keyword. Wait until a phone number meets given conditions or return immediately if already met Declaration public SmsDto WaitForLatestSms(WaitForSingleSmsOptions waitForSingleSmsOptions, int operationIndex = 0) Parameters Type Name Description WaitForSingleSmsOptions waitForSingleSmsOptions int operationIndex Index associated with the operation. Returns Type Description SmsDto SmsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestSmsAsync(WaitForSingleSmsOptions, int, CancellationToken) Wait for the latest SMS message to match the provided filter conditions such as body contains keyword. Wait until a phone number meets given conditions or return immediately if already met Declaration public Task<SmsDto> WaitForLatestSmsAsync(WaitForSingleSmsOptions waitForSingleSmsOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description WaitForSingleSmsOptions waitForSingleSmsOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<SmsDto> Task of SmsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestSmsWithHttpInfo(WaitForSingleSmsOptions, int) Wait for the latest SMS message to match the provided filter conditions such as body contains keyword. Wait until a phone number meets given conditions or return immediately if already met Declaration public ApiResponse<SmsDto> WaitForLatestSmsWithHttpInfo(WaitForSingleSmsOptions waitForSingleSmsOptions, int operationIndex = 0) Parameters Type Name Description WaitForSingleSmsOptions waitForSingleSmsOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<SmsDto> ApiResponse of SmsDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForLatestSmsWithHttpInfoAsync(WaitForSingleSmsOptions, int, CancellationToken) Wait for the latest SMS message to match the provided filter conditions such as body contains keyword. Wait until a phone number meets given conditions or return immediately if already met Declaration public Task<ApiResponse<SmsDto>> WaitForLatestSmsWithHttpInfoAsync(WaitForSingleSmsOptions waitForSingleSmsOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description WaitForSingleSmsOptions waitForSingleSmsOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<SmsDto>> Task of ApiResponse (SmsDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingEmails(Guid, int, MatchOptions, DateTime?, DateTime?, string, long?, long?, bool?, int) Wait or return list of emails that match simple matching patterns Perform a search of emails in an inbox with the given patterns. If results match expected count then return or else retry the search until results are found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Declaration public List<EmailPreview> WaitForMatchingEmails(Guid inboxId, int count, MatchOptions matchOptions, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, long? timeout = null, bool? unreadOnly = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater or equal to 1 MatchOptions matchOptions DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description List<EmailPreview> List<EmailPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingEmailsAsync(Guid, int, MatchOptions, DateTime?, DateTime?, string, long?, long?, bool?, int, CancellationToken) Wait or return list of emails that match simple matching patterns Perform a search of emails in an inbox with the given patterns. If results match expected count then return or else retry the search until results are found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Declaration public Task<List<EmailPreview>> WaitForMatchingEmailsAsync(Guid inboxId, int count, MatchOptions matchOptions, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, long? timeout = null, bool? unreadOnly = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater or equal to 1 MatchOptions matchOptions DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<EmailPreview>> Task of List<EmailPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingEmailsWithHttpInfo(Guid, int, MatchOptions, DateTime?, DateTime?, string, long?, long?, bool?, int) Wait or return list of emails that match simple matching patterns Perform a search of emails in an inbox with the given patterns. If results match expected count then return or else retry the search until results are found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Declaration public ApiResponse<List<EmailPreview>> WaitForMatchingEmailsWithHttpInfo(Guid inboxId, int count, MatchOptions matchOptions, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, long? timeout = null, bool? unreadOnly = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater or equal to 1 MatchOptions matchOptions DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<EmailPreview>> ApiResponse of List<EmailPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingEmailsWithHttpInfoAsync(Guid, int, MatchOptions, DateTime?, DateTime?, string, long?, long?, bool?, int, CancellationToken) Wait or return list of emails that match simple matching patterns Perform a search of emails in an inbox with the given patterns. If results match expected count then return or else retry the search until results are found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Declaration public Task<ApiResponse<List<EmailPreview>>> WaitForMatchingEmailsWithHttpInfoAsync(Guid inboxId, int count, MatchOptions matchOptions, DateTime? before = null, DateTime? since = null, string sort = null, long? delay = null, long? timeout = null, bool? unreadOnly = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of the inbox we are fetching emails from int count Number of emails to wait for. Must be greater or equal to 1 MatchOptions matchOptions DateTime? before Filter for emails that were received before the given timestamp (optional) DateTime? since Filter for emails that were received after the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<EmailPreview>>> Task of ApiResponse (List<EmailPreview>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingFirstEmail(Guid, MatchOptions, long?, bool?, DateTime?, DateTime?, string, long?, int) Wait for or return the first email that matches provided MatchOptions array Perform a search of emails in an inbox with the given patterns. If a result if found then return or else retry the search until a result is found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Declaration public Email WaitForMatchingFirstEmail(Guid inboxId, MatchOptions matchOptions, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of the inbox we are matching an email for MatchOptions matchOptions long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description Email Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingFirstEmailAsync(Guid, MatchOptions, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Wait for or return the first email that matches provided MatchOptions array Perform a search of emails in an inbox with the given patterns. If a result if found then return or else retry the search until a result is found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Declaration public Task<Email> WaitForMatchingFirstEmailAsync(Guid inboxId, MatchOptions matchOptions, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of the inbox we are matching an email for MatchOptions matchOptions long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingFirstEmailWithHttpInfo(Guid, MatchOptions, long?, bool?, DateTime?, DateTime?, string, long?, int) Wait for or return the first email that matches provided MatchOptions array Perform a search of emails in an inbox with the given patterns. If a result if found then return or else retry the search until a result is found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Declaration public ApiResponse<Email> WaitForMatchingFirstEmailWithHttpInfo(Guid inboxId, MatchOptions matchOptions, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId Id of the inbox we are matching an email for MatchOptions matchOptions long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForMatchingFirstEmailWithHttpInfoAsync(Guid, MatchOptions, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Wait for or return the first email that matches provided MatchOptions array Perform a search of emails in an inbox with the given patterns. If a result if found then return or else retry the search until a result is found or timeout is reached. Match options allow simple CONTAINS or EQUALS filtering on SUBJECT, TO, BCC, CC, and FROM. See the MatchOptions object for options. An example payload is { matches: [{field: &apos;SUBJECT&apos;,should:&apos;CONTAIN&apos;,value:&apos;needle&apos;}] }. You can use an array of matches and they will be applied sequentially to filter out emails. If you want to perform matches and extractions of content using Regex patterns see the EmailController getEmailContentMatch method. Declaration public Task<ApiResponse<Email>> WaitForMatchingFirstEmailWithHttpInfoAsync(Guid inboxId, MatchOptions matchOptions, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Id of the inbox we are matching an email for MatchOptions matchOptions long? timeout Max milliseconds to wait (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthEmail(Guid?, int?, long?, bool?, DateTime?, DateTime?, string, long?, int) Wait for or fetch the email with a given index in the inbox specified. If index doesn't exist waits for it to exist or timeout to occur. If nth email is already present in inbox then return it. If not hold the connection open until timeout expires or the nth email is received and returned. Declaration public Email WaitForNthEmail(Guid? inboxId = null, int? index = null, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Id of the inbox you are fetching emails from (optional) int? index Zero based index of the email to wait for. If an inbox has 1 email already and you want to wait for the 2nd email pass index=1 (optional, default to 0) long? timeout Max milliseconds to wait for the nth email if not already present (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description Email Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthEmailAsync(Guid?, int?, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Wait for or fetch the email with a given index in the inbox specified. If index doesn't exist waits for it to exist or timeout to occur. If nth email is already present in inbox then return it. If not hold the connection open until timeout expires or the nth email is received and returned. Declaration public Task<Email> WaitForNthEmailAsync(Guid? inboxId = null, int? index = null, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Id of the inbox you are fetching emails from (optional) int? index Zero based index of the email to wait for. If an inbox has 1 email already and you want to wait for the 2nd email pass index=1 (optional, default to 0) long? timeout Max milliseconds to wait for the nth email if not already present (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<Email> Task of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthEmailWithHttpInfo(Guid?, int?, long?, bool?, DateTime?, DateTime?, string, long?, int) Wait for or fetch the email with a given index in the inbox specified. If index doesn't exist waits for it to exist or timeout to occur. If nth email is already present in inbox then return it. If not hold the connection open until timeout expires or the nth email is received and returned. Declaration public ApiResponse<Email> WaitForNthEmailWithHttpInfo(Guid? inboxId = null, int? index = null, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0) Parameters Type Name Description Guid? inboxId Id of the inbox you are fetching emails from (optional) int? index Zero based index of the email to wait for. If an inbox has 1 email already and you want to wait for the 2nd email pass index=1 (optional, default to 0) long? timeout Max milliseconds to wait for the nth email if not already present (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<Email> ApiResponse of Email Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForNthEmailWithHttpInfoAsync(Guid?, int?, long?, bool?, DateTime?, DateTime?, string, long?, int, CancellationToken) Wait for or fetch the email with a given index in the inbox specified. If index doesn't exist waits for it to exist or timeout to occur. If nth email is already present in inbox then return it. If not hold the connection open until timeout expires or the nth email is received and returned. Declaration public Task<ApiResponse<Email>> WaitForNthEmailWithHttpInfoAsync(Guid? inboxId = null, int? index = null, long? timeout = null, bool? unreadOnly = null, DateTime? since = null, DateTime? before = null, string sort = null, long? delay = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid? inboxId Id of the inbox you are fetching emails from (optional) int? index Zero based index of the email to wait for. If an inbox has 1 email already and you want to wait for the 2nd email pass index=1 (optional, default to 0) long? timeout Max milliseconds to wait for the nth email if not already present (optional) bool? unreadOnly Optional filter for unread only (optional, default to false) DateTime? since Filter for emails that were received after the given timestamp (optional) DateTime? before Filter for emails that were received before the given timestamp (optional) string sort Sort direction (optional) long? delay Max milliseconds delay between calls (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<Email>> Task of ApiResponse (Email) Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForSms(WaitForSmsConditions, int) Wait for an SMS message to match the provided filter conditions such as body contains keyword. Generic waitFor method that will wait until a phone number meets given conditions or return immediately if already met Declaration public List<SmsPreview> WaitForSms(WaitForSmsConditions waitForSmsConditions, int operationIndex = 0) Parameters Type Name Description WaitForSmsConditions waitForSmsConditions int operationIndex Index associated with the operation. Returns Type Description List<SmsPreview> List<SmsPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForSmsAsync(WaitForSmsConditions, int, CancellationToken) Wait for an SMS message to match the provided filter conditions such as body contains keyword. Generic waitFor method that will wait until a phone number meets given conditions or return immediately if already met Declaration public Task<List<SmsPreview>> WaitForSmsAsync(WaitForSmsConditions waitForSmsConditions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description WaitForSmsConditions waitForSmsConditions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<SmsPreview>> Task of List<SmsPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForSmsWithHttpInfo(WaitForSmsConditions, int) Wait for an SMS message to match the provided filter conditions such as body contains keyword. Generic waitFor method that will wait until a phone number meets given conditions or return immediately if already met Declaration public ApiResponse<List<SmsPreview>> WaitForSmsWithHttpInfo(WaitForSmsConditions waitForSmsConditions, int operationIndex = 0) Parameters Type Name Description WaitForSmsConditions waitForSmsConditions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<SmsPreview>> ApiResponse of List<SmsPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForSmsWithHttpInfoAsync(WaitForSmsConditions, int, CancellationToken) Wait for an SMS message to match the provided filter conditions such as body contains keyword. Generic waitFor method that will wait until a phone number meets given conditions or return immediately if already met Declaration public Task<ApiResponse<List<SmsPreview>>> WaitForSmsWithHttpInfoAsync(WaitForSmsConditions waitForSmsConditions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description WaitForSmsConditions waitForSmsConditions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<SmsPreview>>> Task of ApiResponse (List<SmsPreview>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForWithHttpInfo(WaitForConditions, int) Wait for an email to match the provided filter conditions such as subject contains keyword. Generic waitFor method that will wait until an inbox meets given conditions or return immediately if already met Declaration public ApiResponse<List<EmailPreview>> WaitForWithHttpInfo(WaitForConditions waitForConditions, int operationIndex = 0) Parameters Type Name Description WaitForConditions waitForConditions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<EmailPreview>> ApiResponse of List<EmailPreview> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForWithHttpInfoAsync(WaitForConditions, int, CancellationToken) Wait for an email to match the provided filter conditions such as subject contains keyword. Generic waitFor method that will wait until an inbox meets given conditions or return immediately if already met Declaration public Task<ApiResponse<List<EmailPreview>>> WaitForWithHttpInfoAsync(WaitForConditions waitForConditions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description WaitForConditions waitForConditions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<EmailPreview>>> Task of ApiResponse (List<EmailPreview>) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IWaitForControllerApi IWaitForControllerApiSync IWaitForControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Api.WebhookControllerApi.html": {
    "href": "api/mailslurp.Api.WebhookControllerApi.html",
    "title": "Class WebhookControllerApi | MailSlurp",
    "keywords": "Class WebhookControllerApi Represents a collection of functions to interact with the API endpoints Inheritance object WebhookControllerApi Implements IWebhookControllerApi IWebhookControllerApiSync IWebhookControllerApiAsync IApiAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Api Assembly: mailslurp.dll Syntax public class WebhookControllerApi : IWebhookControllerApi, IWebhookControllerApiSync, IWebhookControllerApiAsync, IApiAccessor Constructors View Source WebhookControllerApi() Initializes a new instance of the WebhookControllerApi class. Declaration public WebhookControllerApi() View Source WebhookControllerApi(Configuration) Initializes a new instance of the WebhookControllerApi class using Configuration object Declaration public WebhookControllerApi(Configuration configuration) Parameters Type Name Description Configuration configuration An instance of Configuration View Source WebhookControllerApi(ISynchronousClient, IAsynchronousClient, IReadableConfiguration) Initializes a new instance of the WebhookControllerApi class using a Configuration object and client instance. Declaration public WebhookControllerApi(ISynchronousClient client, IAsynchronousClient asyncClient, IReadableConfiguration configuration) Parameters Type Name Description ISynchronousClient client The client interface for synchronous API access. IAsynchronousClient asyncClient The client interface for asynchronous API access. IReadableConfiguration configuration The configuration object. View Source WebhookControllerApi(string) Initializes a new instance of the WebhookControllerApi class. Declaration public WebhookControllerApi(string basePath) Parameters Type Name Description string basePath Properties View Source AsynchronousClient The client for accessing this underlying API asynchronously. Declaration public IAsynchronousClient AsynchronousClient { get; set; } Property Value Type Description IAsynchronousClient View Source Client The client for accessing this underlying API synchronously. Declaration public ISynchronousClient Client { get; set; } Property Value Type Description ISynchronousClient View Source Configuration Gets or sets the configuration object Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source CreateAccountWebhook(CreateWebhookOptions, int) Attach a WebHook URL to an inbox Get notified of account level events such as bounce and bounce recipient. Declaration public WebhookDto CreateAccountWebhook(CreateWebhookOptions createWebhookOptions, int operationIndex = 0) Parameters Type Name Description CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. Returns Type Description WebhookDto WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateAccountWebhookAsync(CreateWebhookOptions, int, CancellationToken) Attach a WebHook URL to an inbox Get notified of account level events such as bounce and bounce recipient. Declaration public Task<WebhookDto> CreateAccountWebhookAsync(CreateWebhookOptions createWebhookOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookDto> Task of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateAccountWebhookWithHttpInfo(CreateWebhookOptions, int) Attach a WebHook URL to an inbox Get notified of account level events such as bounce and bounce recipient. Declaration public ApiResponse<WebhookDto> CreateAccountWebhookWithHttpInfo(CreateWebhookOptions createWebhookOptions, int operationIndex = 0) Parameters Type Name Description CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookDto> ApiResponse of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateAccountWebhookWithHttpInfoAsync(CreateWebhookOptions, int, CancellationToken) Attach a WebHook URL to an inbox Get notified of account level events such as bounce and bounce recipient. Declaration public Task<ApiResponse<WebhookDto>> CreateAccountWebhookWithHttpInfoAsync(CreateWebhookOptions createWebhookOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookDto>> Task of ApiResponse (WebhookDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhook(Guid, CreateWebhookOptions, int) Attach a WebHook URL to an inbox Get notified whenever an inbox receives an email via a WebHook URL. An emailID will be posted to this URL every time an email is received for this inbox. The URL must be publicly reachable by the MailSlurp server. You can provide basicAuth values if you wish to secure this endpoint. Declaration public WebhookDto CreateWebhook(Guid inboxId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. Returns Type Description WebhookDto WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookAsync(Guid, CreateWebhookOptions, int, CancellationToken) Attach a WebHook URL to an inbox Get notified whenever an inbox receives an email via a WebHook URL. An emailID will be posted to this URL every time an email is received for this inbox. The URL must be publicly reachable by the MailSlurp server. You can provide basicAuth values if you wish to secure this endpoint. Declaration public Task<WebhookDto> CreateWebhookAsync(Guid inboxId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookDto> Task of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookForPhoneNumber(Guid, CreateWebhookOptions, int) Attach a WebHook URL to a phone number Get notified whenever a phone number receives an SMS via a WebHook URL. Declaration public WebhookDto CreateWebhookForPhoneNumber(Guid phoneNumberId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. Returns Type Description WebhookDto WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookForPhoneNumberAsync(Guid, CreateWebhookOptions, int, CancellationToken) Attach a WebHook URL to a phone number Get notified whenever a phone number receives an SMS via a WebHook URL. Declaration public Task<WebhookDto> CreateWebhookForPhoneNumberAsync(Guid phoneNumberId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookDto> Task of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookForPhoneNumberWithHttpInfo(Guid, CreateWebhookOptions, int) Attach a WebHook URL to a phone number Get notified whenever a phone number receives an SMS via a WebHook URL. Declaration public ApiResponse<WebhookDto> CreateWebhookForPhoneNumberWithHttpInfo(Guid phoneNumberId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0) Parameters Type Name Description Guid phoneNumberId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookDto> ApiResponse of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookForPhoneNumberWithHttpInfoAsync(Guid, CreateWebhookOptions, int, CancellationToken) Attach a WebHook URL to a phone number Get notified whenever a phone number receives an SMS via a WebHook URL. Declaration public Task<ApiResponse<WebhookDto>> CreateWebhookForPhoneNumberWithHttpInfoAsync(Guid phoneNumberId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneNumberId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookDto>> Task of ApiResponse (WebhookDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookWithHttpInfo(Guid, CreateWebhookOptions, int) Attach a WebHook URL to an inbox Get notified whenever an inbox receives an email via a WebHook URL. An emailID will be posted to this URL every time an email is received for this inbox. The URL must be publicly reachable by the MailSlurp server. You can provide basicAuth values if you wish to secure this endpoint. Declaration public ApiResponse<WebhookDto> CreateWebhookWithHttpInfo(Guid inboxId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0) Parameters Type Name Description Guid inboxId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookDto> ApiResponse of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source CreateWebhookWithHttpInfoAsync(Guid, CreateWebhookOptions, int, CancellationToken) Attach a WebHook URL to an inbox Get notified whenever an inbox receives an email via a WebHook URL. An emailID will be posted to this URL every time an email is received for this inbox. The URL must be publicly reachable by the MailSlurp server. You can provide basicAuth values if you wish to secure this endpoint. Declaration public Task<ApiResponse<WebhookDto>> CreateWebhookWithHttpInfoAsync(Guid inboxId, CreateWebhookOptions createWebhookOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId CreateWebhookOptions createWebhookOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookDto>> Task of ApiResponse (WebhookDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllWebhooks(DateTime?, int) Delete all webhooks Declaration public void DeleteAllWebhooks(DateTime? before = null, int operationIndex = 0) Parameters Type Name Description DateTime? before before (optional) int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllWebhooksAsync(DateTime?, int, CancellationToken) Delete all webhooks Declaration public Task DeleteAllWebhooksAsync(DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DateTime? before before (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllWebhooksWithHttpInfo(DateTime?, int) Delete all webhooks Declaration public ApiResponse<object> DeleteAllWebhooksWithHttpInfo(DateTime? before = null, int operationIndex = 0) Parameters Type Name Description DateTime? before before (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteAllWebhooksWithHttpInfoAsync(DateTime?, int, CancellationToken) Delete all webhooks Declaration public Task<ApiResponse<object>> DeleteAllWebhooksWithHttpInfoAsync(DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description DateTime? before before (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhook(Guid, Guid, int) Delete and disable a Webhook for an Inbox Declaration public void DeleteWebhook(Guid inboxId, Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid inboxId Guid webhookId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookAsync(Guid, Guid, int, CancellationToken) Delete and disable a Webhook for an Inbox Declaration public Task DeleteWebhookAsync(Guid inboxId, Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookById(Guid, int) Delete a webhook Declaration public void DeleteWebhookById(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookByIdAsync(Guid, int, CancellationToken) Delete a webhook Declaration public Task DeleteWebhookByIdAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookByIdWithHttpInfo(Guid, int) Delete a webhook Declaration public ApiResponse<object> DeleteWebhookByIdWithHttpInfo(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookByIdWithHttpInfoAsync(Guid, int, CancellationToken) Delete a webhook Declaration public Task<ApiResponse<object>> DeleteWebhookByIdWithHttpInfoAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookWithHttpInfo(Guid, Guid, int) Delete and disable a Webhook for an Inbox Declaration public ApiResponse<object> DeleteWebhookWithHttpInfo(Guid inboxId, Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid inboxId Guid webhookId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<object> ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call View Source DeleteWebhookWithHttpInfoAsync(Guid, Guid, int, CancellationToken) Delete and disable a Webhook for an Inbox Declaration public Task<ApiResponse<object>> DeleteWebhookWithHttpInfoAsync(Guid inboxId, Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<object>> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllAccountWebhooks(int?, int?, string, string, DateTime?, DateTime?, int) List account webhooks Paginated List account webhooks in paginated form. Allows for page index, page size, and sort direction. Declaration public PageWebhookProjection GetAllAccountWebhooks(int? page = null, int? size = null, string sort = null, string eventType = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string eventType Optional event type (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageWebhookProjection PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllAccountWebhooksAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List account webhooks Paginated List account webhooks in paginated form. Allows for page index, page size, and sort direction. Declaration public Task<PageWebhookProjection> GetAllAccountWebhooksAsync(int? page = null, int? size = null, string sort = null, string eventType = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string eventType Optional event type (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageWebhookProjection> Task of PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllAccountWebhooksWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, int) List account webhooks Paginated List account webhooks in paginated form. Allows for page index, page size, and sort direction. Declaration public ApiResponse<PageWebhookProjection> GetAllAccountWebhooksWithHttpInfo(int? page = null, int? size = null, string sort = null, string eventType = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string eventType Optional event type (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageWebhookProjection> ApiResponse of PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllAccountWebhooksWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) List account webhooks Paginated List account webhooks in paginated form. Allows for page index, page size, and sort direction. Declaration public Task<ApiResponse<PageWebhookProjection>> GetAllAccountWebhooksWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string eventType = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string eventType Optional event type (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageWebhookProjection>> Task of ApiResponse (PageWebhookProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhookResults(int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int) Get results for all webhooks Declaration public PageWebhookResult GetAllWebhookResults(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. Returns Type Description PageWebhookResult PageWebhookResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhookResultsAsync(int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int, CancellationToken) Get results for all webhooks Declaration public Task<PageWebhookResult> GetAllWebhookResultsAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageWebhookResult> Task of PageWebhookResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhookResultsWithHttpInfo(int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int) Get results for all webhooks Declaration public ApiResponse<PageWebhookResult> GetAllWebhookResultsWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageWebhookResult> ApiResponse of PageWebhookResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhookResultsWithHttpInfoAsync(int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int, CancellationToken) Get results for all webhooks Declaration public Task<ApiResponse<PageWebhookResult>> GetAllWebhookResultsWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageWebhookResult>> Task of ApiResponse (PageWebhookResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhooks(int?, int?, string, string, DateTime?, Guid?, Guid?, DateTime?, int) List Webhooks Paginated List webhooks in paginated form. Allows for page index, page size, and sort direction. Declaration public PageWebhookProjection GetAllWebhooks(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, Guid? inboxId = null, Guid? phoneId = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) Guid? inboxId Filter by inboxId (optional) Guid? phoneId Filter by phoneId (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageWebhookProjection PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhooksAsync(int?, int?, string, string, DateTime?, Guid?, Guid?, DateTime?, int, CancellationToken) List Webhooks Paginated List webhooks in paginated form. Allows for page index, page size, and sort direction. Declaration public Task<PageWebhookProjection> GetAllWebhooksAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, Guid? inboxId = null, Guid? phoneId = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) Guid? inboxId Filter by inboxId (optional) Guid? phoneId Filter by phoneId (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageWebhookProjection> Task of PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhooksWithHttpInfo(int?, int?, string, string, DateTime?, Guid?, Guid?, DateTime?, int) List Webhooks Paginated List webhooks in paginated form. Allows for page index, page size, and sort direction. Declaration public ApiResponse<PageWebhookProjection> GetAllWebhooksWithHttpInfo(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, Guid? inboxId = null, Guid? phoneId = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) Guid? inboxId Filter by inboxId (optional) Guid? phoneId Filter by phoneId (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageWebhookProjection> ApiResponse of PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetAllWebhooksWithHttpInfoAsync(int?, int?, string, string, DateTime?, Guid?, Guid?, DateTime?, int, CancellationToken) List Webhooks Paginated List webhooks in paginated form. Allows for page index, page size, and sort direction. Declaration public Task<ApiResponse<PageWebhookProjection>> GetAllWebhooksWithHttpInfoAsync(int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, Guid? inboxId = null, Guid? phoneId = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size for paginated result list. (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to DESC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) Guid? inboxId Filter by inboxId (optional) Guid? phoneId Filter by phoneId (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageWebhookProjection>> Task of ApiResponse (PageWebhookProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description string The base path View Source GetInboxWebhooksPaginated(Guid, int?, int?, string, string, DateTime?, DateTime?, int) Get paginated webhooks for an Inbox Declaration public PageWebhookProjection GetInboxWebhooksPaginated(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageWebhookProjection PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxWebhooksPaginatedAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get paginated webhooks for an Inbox Declaration public Task<PageWebhookProjection> GetInboxWebhooksPaginatedAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageWebhookProjection> Task of PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxWebhooksPaginatedWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, int) Get paginated webhooks for an Inbox Declaration public ApiResponse<PageWebhookProjection> GetInboxWebhooksPaginatedWithHttpInfo(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid inboxId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageWebhookProjection> ApiResponse of PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetInboxWebhooksPaginatedWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, int, CancellationToken) Get paginated webhooks for an Inbox Declaration public Task<ApiResponse<PageWebhookProjection>> GetInboxWebhooksPaginatedWithHttpInfoAsync(Guid inboxId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageWebhookProjection>> Task of ApiResponse (PageWebhookProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookEvent(string, int) Get JSON Schema definition for webhook payload by event Declaration public JSONSchemaDto GetJsonSchemaForWebhookEvent(string _event, int operationIndex = 0) Parameters Type Name Description string _event int operationIndex Index associated with the operation. Returns Type Description JSONSchemaDto JSONSchemaDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookEventAsync(string, int, CancellationToken) Get JSON Schema definition for webhook payload by event Declaration public Task<JSONSchemaDto> GetJsonSchemaForWebhookEventAsync(string _event, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string _event int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<JSONSchemaDto> Task of JSONSchemaDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookEventWithHttpInfo(string, int) Get JSON Schema definition for webhook payload by event Declaration public ApiResponse<JSONSchemaDto> GetJsonSchemaForWebhookEventWithHttpInfo(string _event, int operationIndex = 0) Parameters Type Name Description string _event int operationIndex Index associated with the operation. Returns Type Description ApiResponse<JSONSchemaDto> ApiResponse of JSONSchemaDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookEventWithHttpInfoAsync(string, int, CancellationToken) Get JSON Schema definition for webhook payload by event Declaration public Task<ApiResponse<JSONSchemaDto>> GetJsonSchemaForWebhookEventWithHttpInfoAsync(string _event, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string _event int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<JSONSchemaDto>> Task of ApiResponse (JSONSchemaDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookPayload(Guid, int) Get JSON Schema definition for webhook payload Declaration public JSONSchemaDto GetJsonSchemaForWebhookPayload(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description JSONSchemaDto JSONSchemaDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookPayloadAsync(Guid, int, CancellationToken) Get JSON Schema definition for webhook payload Declaration public Task<JSONSchemaDto> GetJsonSchemaForWebhookPayloadAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<JSONSchemaDto> Task of JSONSchemaDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookPayloadWithHttpInfo(Guid, int) Get JSON Schema definition for webhook payload Declaration public ApiResponse<JSONSchemaDto> GetJsonSchemaForWebhookPayloadWithHttpInfo(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<JSONSchemaDto> ApiResponse of JSONSchemaDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetJsonSchemaForWebhookPayloadWithHttpInfoAsync(Guid, int, CancellationToken) Get JSON Schema definition for webhook payload Declaration public Task<ApiResponse<JSONSchemaDto>> GetJsonSchemaForWebhookPayloadWithHttpInfoAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<JSONSchemaDto>> Task of ApiResponse (JSONSchemaDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberWebhooksPaginated(Guid, int?, int?, string, DateTime?, DateTime?, int) Get paginated webhooks for a phone number Declaration public PageWebhookProjection GetPhoneNumberWebhooksPaginated(Guid phoneId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid phoneId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description PageWebhookProjection PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberWebhooksPaginatedAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated webhooks for a phone number Declaration public Task<PageWebhookProjection> GetPhoneNumberWebhooksPaginatedAsync(Guid phoneId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageWebhookProjection> Task of PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberWebhooksPaginatedWithHttpInfo(Guid, int?, int?, string, DateTime?, DateTime?, int) Get paginated webhooks for a phone number Declaration public ApiResponse<PageWebhookProjection> GetPhoneNumberWebhooksPaginatedWithHttpInfo(Guid phoneId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0) Parameters Type Name Description Guid phoneId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageWebhookProjection> ApiResponse of PageWebhookProjection Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetPhoneNumberWebhooksPaginatedWithHttpInfoAsync(Guid, int?, int?, string, DateTime?, DateTime?, int, CancellationToken) Get paginated webhooks for a phone number Declaration public Task<ApiResponse<PageWebhookProjection>> GetPhoneNumberWebhooksPaginatedWithHttpInfoAsync(Guid phoneId, int? page = null, int? size = null, string sort = null, DateTime? since = null, DateTime? before = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid phoneId int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageWebhookProjection>> Task of ApiResponse (PageWebhookProjection) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayload(string, int) Get test webhook payload example. Response content depends on eventName passed. Uses EMAIL_RECEIVED as default. Declaration public AbstractWebhookPayload GetTestWebhookPayload(string eventName = null, int operationIndex = 0) Parameters Type Name Description string eventName (optional) int operationIndex Index associated with the operation. Returns Type Description AbstractWebhookPayload AbstractWebhookPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadAsync(string, int, CancellationToken) Get test webhook payload example. Response content depends on eventName passed. Uses EMAIL_RECEIVED as default. Declaration public Task<AbstractWebhookPayload> GetTestWebhookPayloadAsync(string eventName = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string eventName (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AbstractWebhookPayload> Task of AbstractWebhookPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounce(int) Get webhook test payload for bounce Declaration public WebhookBouncePayload GetTestWebhookPayloadBounce(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookBouncePayload WebhookBouncePayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceAsync(int, CancellationToken) Get webhook test payload for bounce Declaration public Task<WebhookBouncePayload> GetTestWebhookPayloadBounceAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookBouncePayload> Task of WebhookBouncePayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceRecipient(int) Get webhook test payload for bounce recipient Declaration public WebhookBounceRecipientPayload GetTestWebhookPayloadBounceRecipient(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookBounceRecipientPayload WebhookBounceRecipientPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceRecipientAsync(int, CancellationToken) Get webhook test payload for bounce recipient Declaration public Task<WebhookBounceRecipientPayload> GetTestWebhookPayloadBounceRecipientAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookBounceRecipientPayload> Task of WebhookBounceRecipientPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceRecipientWithHttpInfo(int) Get webhook test payload for bounce recipient Declaration public ApiResponse<WebhookBounceRecipientPayload> GetTestWebhookPayloadBounceRecipientWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookBounceRecipientPayload> ApiResponse of WebhookBounceRecipientPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceRecipientWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for bounce recipient Declaration public Task<ApiResponse<WebhookBounceRecipientPayload>> GetTestWebhookPayloadBounceRecipientWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookBounceRecipientPayload>> Task of ApiResponse (WebhookBounceRecipientPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceWithHttpInfo(int) Get webhook test payload for bounce Declaration public ApiResponse<WebhookBouncePayload> GetTestWebhookPayloadBounceWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookBouncePayload> ApiResponse of WebhookBouncePayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadBounceWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for bounce Declaration public Task<ApiResponse<WebhookBouncePayload>> GetTestWebhookPayloadBounceWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookBouncePayload>> Task of ApiResponse (WebhookBouncePayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadDeliveryStatus(int) Get webhook test payload for delivery status event Declaration public WebhookDeliveryStatusPayload GetTestWebhookPayloadDeliveryStatus(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookDeliveryStatusPayload WebhookDeliveryStatusPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadDeliveryStatusAsync(int, CancellationToken) Get webhook test payload for delivery status event Declaration public Task<WebhookDeliveryStatusPayload> GetTestWebhookPayloadDeliveryStatusAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookDeliveryStatusPayload> Task of WebhookDeliveryStatusPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadDeliveryStatusWithHttpInfo(int) Get webhook test payload for delivery status event Declaration public ApiResponse<WebhookDeliveryStatusPayload> GetTestWebhookPayloadDeliveryStatusWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookDeliveryStatusPayload> ApiResponse of WebhookDeliveryStatusPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadDeliveryStatusWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for delivery status event Declaration public Task<ApiResponse<WebhookDeliveryStatusPayload>> GetTestWebhookPayloadDeliveryStatusWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookDeliveryStatusPayload>> Task of ApiResponse (WebhookDeliveryStatusPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailOpened(int) Get webhook test payload for email opened event Declaration public WebhookEmailOpenedPayload GetTestWebhookPayloadEmailOpened(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookEmailOpenedPayload WebhookEmailOpenedPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailOpenedAsync(int, CancellationToken) Get webhook test payload for email opened event Declaration public Task<WebhookEmailOpenedPayload> GetTestWebhookPayloadEmailOpenedAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookEmailOpenedPayload> Task of WebhookEmailOpenedPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailOpenedWithHttpInfo(int) Get webhook test payload for email opened event Declaration public ApiResponse<WebhookEmailOpenedPayload> GetTestWebhookPayloadEmailOpenedWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookEmailOpenedPayload> ApiResponse of WebhookEmailOpenedPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailOpenedWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for email opened event Declaration public Task<ApiResponse<WebhookEmailOpenedPayload>> GetTestWebhookPayloadEmailOpenedWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookEmailOpenedPayload>> Task of ApiResponse (WebhookEmailOpenedPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailRead(int) Get webhook test payload for email opened event Declaration public WebhookEmailReadPayload GetTestWebhookPayloadEmailRead(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookEmailReadPayload WebhookEmailReadPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailReadAsync(int, CancellationToken) Get webhook test payload for email opened event Declaration public Task<WebhookEmailReadPayload> GetTestWebhookPayloadEmailReadAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookEmailReadPayload> Task of WebhookEmailReadPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailReadWithHttpInfo(int) Get webhook test payload for email opened event Declaration public ApiResponse<WebhookEmailReadPayload> GetTestWebhookPayloadEmailReadWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookEmailReadPayload> ApiResponse of WebhookEmailReadPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadEmailReadWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for email opened event Declaration public Task<ApiResponse<WebhookEmailReadPayload>> GetTestWebhookPayloadEmailReadWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookEmailReadPayload>> Task of ApiResponse (WebhookEmailReadPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadForWebhook(Guid, int) Get example payload for webhook Declaration public AbstractWebhookPayload GetTestWebhookPayloadForWebhook(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description AbstractWebhookPayload AbstractWebhookPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadForWebhookAsync(Guid, int, CancellationToken) Get example payload for webhook Declaration public Task<AbstractWebhookPayload> GetTestWebhookPayloadForWebhookAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<AbstractWebhookPayload> Task of AbstractWebhookPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadForWebhookWithHttpInfo(Guid, int) Get example payload for webhook Declaration public ApiResponse<AbstractWebhookPayload> GetTestWebhookPayloadForWebhookWithHttpInfo(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AbstractWebhookPayload> ApiResponse of AbstractWebhookPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadForWebhookWithHttpInfoAsync(Guid, int, CancellationToken) Get example payload for webhook Declaration public Task<ApiResponse<AbstractWebhookPayload>> GetTestWebhookPayloadForWebhookWithHttpInfoAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AbstractWebhookPayload>> Task of ApiResponse (AbstractWebhookPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewAttachment(int) Get webhook test payload for new attachment event Declaration public WebhookNewAttachmentPayload GetTestWebhookPayloadNewAttachment(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookNewAttachmentPayload WebhookNewAttachmentPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewAttachmentAsync(int, CancellationToken) Get webhook test payload for new attachment event Declaration public Task<WebhookNewAttachmentPayload> GetTestWebhookPayloadNewAttachmentAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookNewAttachmentPayload> Task of WebhookNewAttachmentPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewAttachmentWithHttpInfo(int) Get webhook test payload for new attachment event Declaration public ApiResponse<WebhookNewAttachmentPayload> GetTestWebhookPayloadNewAttachmentWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookNewAttachmentPayload> ApiResponse of WebhookNewAttachmentPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewAttachmentWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for new attachment event Declaration public Task<ApiResponse<WebhookNewAttachmentPayload>> GetTestWebhookPayloadNewAttachmentWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookNewAttachmentPayload>> Task of ApiResponse (WebhookNewAttachmentPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewContact(int) Get webhook test payload for new contact event Declaration public WebhookNewContactPayload GetTestWebhookPayloadNewContact(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookNewContactPayload WebhookNewContactPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewContactAsync(int, CancellationToken) Get webhook test payload for new contact event Declaration public Task<WebhookNewContactPayload> GetTestWebhookPayloadNewContactAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookNewContactPayload> Task of WebhookNewContactPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewContactWithHttpInfo(int) Get webhook test payload for new contact event Declaration public ApiResponse<WebhookNewContactPayload> GetTestWebhookPayloadNewContactWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookNewContactPayload> ApiResponse of WebhookNewContactPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewContactWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for new contact event Declaration public Task<ApiResponse<WebhookNewContactPayload>> GetTestWebhookPayloadNewContactWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookNewContactPayload>> Task of ApiResponse (WebhookNewContactPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewEmail(int) Get webhook test payload for new email event Declaration public WebhookNewEmailPayload GetTestWebhookPayloadNewEmail(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookNewEmailPayload WebhookNewEmailPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewEmailAsync(int, CancellationToken) Get webhook test payload for new email event Declaration public Task<WebhookNewEmailPayload> GetTestWebhookPayloadNewEmailAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookNewEmailPayload> Task of WebhookNewEmailPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewEmailWithHttpInfo(int) Get webhook test payload for new email event Declaration public ApiResponse<WebhookNewEmailPayload> GetTestWebhookPayloadNewEmailWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookNewEmailPayload> ApiResponse of WebhookNewEmailPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewEmailWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for new email event Declaration public Task<ApiResponse<WebhookNewEmailPayload>> GetTestWebhookPayloadNewEmailWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookNewEmailPayload>> Task of ApiResponse (WebhookNewEmailPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewSms(int) Get webhook test payload for new sms event Declaration public WebhookNewSmsPayload GetTestWebhookPayloadNewSms(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookNewSmsPayload WebhookNewSmsPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewSmsAsync(int, CancellationToken) Get webhook test payload for new sms event Declaration public Task<WebhookNewSmsPayload> GetTestWebhookPayloadNewSmsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookNewSmsPayload> Task of WebhookNewSmsPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewSmsWithHttpInfo(int) Get webhook test payload for new sms event Declaration public ApiResponse<WebhookNewSmsPayload> GetTestWebhookPayloadNewSmsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookNewSmsPayload> ApiResponse of WebhookNewSmsPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadNewSmsWithHttpInfoAsync(int, CancellationToken) Get webhook test payload for new sms event Declaration public Task<ApiResponse<WebhookNewSmsPayload>> GetTestWebhookPayloadNewSmsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookNewSmsPayload>> Task of ApiResponse (WebhookNewSmsPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadWithHttpInfo(string, int) Get test webhook payload example. Response content depends on eventName passed. Uses EMAIL_RECEIVED as default. Declaration public ApiResponse<AbstractWebhookPayload> GetTestWebhookPayloadWithHttpInfo(string eventName = null, int operationIndex = 0) Parameters Type Name Description string eventName (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<AbstractWebhookPayload> ApiResponse of AbstractWebhookPayload Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetTestWebhookPayloadWithHttpInfoAsync(string, int, CancellationToken) Get test webhook payload example. Response content depends on eventName passed. Uses EMAIL_RECEIVED as default. Declaration public Task<ApiResponse<AbstractWebhookPayload>> GetTestWebhookPayloadWithHttpInfoAsync(string eventName = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description string eventName (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<AbstractWebhookPayload>> Task of ApiResponse (AbstractWebhookPayload) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhook(Guid, int) Get a webhook Declaration public WebhookDto GetWebhook(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description WebhookDto WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookAsync(Guid, int, CancellationToken) Get a webhook Declaration public Task<WebhookDto> GetWebhookAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookDto> Task of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResult(Guid, int) Get a webhook result for a webhook Declaration public WebhookResultDto GetWebhookResult(Guid webhookResultId, int operationIndex = 0) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. Returns Type Description WebhookResultDto WebhookResultDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultAsync(Guid, int, CancellationToken) Get a webhook result for a webhook Declaration public Task<WebhookResultDto> GetWebhookResultAsync(Guid webhookResultId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookResultDto> Task of WebhookResultDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResults(Guid, int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int) Get a webhook results for a webhook Declaration public PageWebhookResult GetWebhookResults(Guid webhookId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0) Parameters Type Name Description Guid webhookId ID of webhook to get results for int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. Returns Type Description PageWebhookResult PageWebhookResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int, CancellationToken) Get a webhook results for a webhook Declaration public Task<PageWebhookResult> GetWebhookResultsAsync(Guid webhookId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId ID of webhook to get results for int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<PageWebhookResult> Task of PageWebhookResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsCount(Guid, int) Get a webhook results count for a webhook Declaration public CountDto GetWebhookResultsCount(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId ID of webhook to get results for int operationIndex Index associated with the operation. Returns Type Description CountDto CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsCountAsync(Guid, int, CancellationToken) Get a webhook results count for a webhook Declaration public Task<CountDto> GetWebhookResultsCountAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId ID of webhook to get results for int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<CountDto> Task of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsCountWithHttpInfo(Guid, int) Get a webhook results count for a webhook Declaration public ApiResponse<CountDto> GetWebhookResultsCountWithHttpInfo(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId ID of webhook to get results for int operationIndex Index associated with the operation. Returns Type Description ApiResponse<CountDto> ApiResponse of CountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsCountWithHttpInfoAsync(Guid, int, CancellationToken) Get a webhook results count for a webhook Declaration public Task<ApiResponse<CountDto>> GetWebhookResultsCountWithHttpInfoAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId ID of webhook to get results for int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<CountDto>> Task of ApiResponse (CountDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsUnseenErrorCount(int) Get count of unseen webhook results with error status Declaration public UnseenErrorCountDto GetWebhookResultsUnseenErrorCount(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description UnseenErrorCountDto UnseenErrorCountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsUnseenErrorCountAsync(int, CancellationToken) Get count of unseen webhook results with error status Declaration public Task<UnseenErrorCountDto> GetWebhookResultsUnseenErrorCountAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<UnseenErrorCountDto> Task of UnseenErrorCountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsUnseenErrorCountWithHttpInfo(int) Get count of unseen webhook results with error status Declaration public ApiResponse<UnseenErrorCountDto> GetWebhookResultsUnseenErrorCountWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<UnseenErrorCountDto> ApiResponse of UnseenErrorCountDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsUnseenErrorCountWithHttpInfoAsync(int, CancellationToken) Get count of unseen webhook results with error status Declaration public Task<ApiResponse<UnseenErrorCountDto>> GetWebhookResultsUnseenErrorCountWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<UnseenErrorCountDto>> Task of ApiResponse (UnseenErrorCountDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsWithHttpInfo(Guid, int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int) Get a webhook results for a webhook Declaration public ApiResponse<PageWebhookResult> GetWebhookResultsWithHttpInfo(Guid webhookId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0) Parameters Type Name Description Guid webhookId ID of webhook to get results for int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. Returns Type Description ApiResponse<PageWebhookResult> ApiResponse of PageWebhookResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultsWithHttpInfoAsync(Guid, int?, int?, string, string, DateTime?, DateTime?, bool?, string, string, int?, int?, Guid?, Guid?, Guid?, Guid?, Guid?, int, CancellationToken) Get a webhook results for a webhook Declaration public Task<ApiResponse<PageWebhookResult>> GetWebhookResultsWithHttpInfoAsync(Guid webhookId, int? page = null, int? size = null, string sort = null, string searchFilter = null, DateTime? since = null, DateTime? before = null, bool? unseenOnly = null, string resultType = null, string eventName = null, int? minStatusCode = null, int? maxStatusCode = null, Guid? inboxId = null, Guid? smsId = null, Guid? attachmentId = null, Guid? emailId = null, Guid? phoneId = null, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId ID of webhook to get results for int? page Optional page index in list pagination (optional, default to 0) int? size Optional page size in list pagination (optional, default to 20) string sort Optional createdAt sort direction ASC or DESC (optional, default to ASC) string searchFilter Optional search filter (optional) DateTime? since Filter by created at after the given timestamp (optional) DateTime? before Filter by created at before the given timestamp (optional) bool? unseenOnly Filter for unseen exceptions only (optional) string resultType Filter by result type (optional) string eventName Filter by event name (optional) int? minStatusCode Minimum response status (optional) int? maxStatusCode Maximum response status (optional) Guid? inboxId Inbox ID (optional) Guid? smsId Sms ID (optional) Guid? attachmentId Attachment ID (optional) Guid? emailId Email ID (optional) Guid? phoneId Phone ID (optional) int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<PageWebhookResult>> Task of ApiResponse (PageWebhookResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultWithHttpInfo(Guid, int) Get a webhook result for a webhook Declaration public ApiResponse<WebhookResultDto> GetWebhookResultWithHttpInfo(Guid webhookResultId, int operationIndex = 0) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookResultDto> ApiResponse of WebhookResultDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookResultWithHttpInfoAsync(Guid, int, CancellationToken) Get a webhook result for a webhook Declaration public Task<ApiResponse<WebhookResultDto>> GetWebhookResultWithHttpInfoAsync(Guid webhookResultId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookResultDto>> Task of ApiResponse (WebhookResultDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhooks(Guid, int) Get all webhooks for an Inbox Declaration [Obsolete] public List<WebhookDto> GetWebhooks(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description List<WebhookDto> List<WebhookDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhooksAsync(Guid, int, CancellationToken) Get all webhooks for an Inbox Declaration [Obsolete] public Task<List<WebhookDto>> GetWebhooksAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<WebhookDto>> Task of List<WebhookDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhooksWithHttpInfo(Guid, int) Get all webhooks for an Inbox Declaration [Obsolete] public ApiResponse<List<WebhookDto>> GetWebhooksWithHttpInfo(Guid inboxId, int operationIndex = 0) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<WebhookDto>> ApiResponse of List<WebhookDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhooksWithHttpInfoAsync(Guid, int, CancellationToken) Get all webhooks for an Inbox Declaration [Obsolete] public Task<ApiResponse<List<WebhookDto>>> GetWebhooksWithHttpInfoAsync(Guid inboxId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid inboxId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<WebhookDto>>> Task of ApiResponse (List<WebhookDto>) Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookWithHttpInfo(Guid, int) Get a webhook Declaration public ApiResponse<WebhookDto> GetWebhookWithHttpInfo(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookDto> ApiResponse of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source GetWebhookWithHttpInfoAsync(Guid, int, CancellationToken) Get a webhook Declaration public Task<ApiResponse<WebhookDto>> GetWebhookWithHttpInfoAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookDto>> Task of ApiResponse (WebhookDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveAllWebhookResults(int) Redrive all webhook results that have failed status Allows you to resend webhook payloads for any recorded webhook result that failed to deliver the payload. Declaration public WebhookRedriveAllResult RedriveAllWebhookResults(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description WebhookRedriveAllResult WebhookRedriveAllResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveAllWebhookResultsAsync(int, CancellationToken) Redrive all webhook results that have failed status Allows you to resend webhook payloads for any recorded webhook result that failed to deliver the payload. Declaration public Task<WebhookRedriveAllResult> RedriveAllWebhookResultsAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookRedriveAllResult> Task of WebhookRedriveAllResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveAllWebhookResultsWithHttpInfo(int) Redrive all webhook results that have failed status Allows you to resend webhook payloads for any recorded webhook result that failed to deliver the payload. Declaration public ApiResponse<WebhookRedriveAllResult> RedriveAllWebhookResultsWithHttpInfo(int operationIndex = 0) Parameters Type Name Description int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookRedriveAllResult> ApiResponse of WebhookRedriveAllResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveAllWebhookResultsWithHttpInfoAsync(int, CancellationToken) Redrive all webhook results that have failed status Allows you to resend webhook payloads for any recorded webhook result that failed to deliver the payload. Declaration public Task<ApiResponse<WebhookRedriveAllResult>> RedriveAllWebhookResultsWithHttpInfoAsync(int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookRedriveAllResult>> Task of ApiResponse (WebhookRedriveAllResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveWebhookResult(Guid, int) Get a webhook result and try to resend the original webhook payload Allows you to resend a webhook payload that was already sent. Webhooks that fail are retried automatically for 24 hours and then put in a dead letter queue. You can retry results manually using this method. Declaration public WebhookRedriveResult RedriveWebhookResult(Guid webhookResultId, int operationIndex = 0) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. Returns Type Description WebhookRedriveResult WebhookRedriveResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveWebhookResultAsync(Guid, int, CancellationToken) Get a webhook result and try to resend the original webhook payload Allows you to resend a webhook payload that was already sent. Webhooks that fail are retried automatically for 24 hours and then put in a dead letter queue. You can retry results manually using this method. Declaration public Task<WebhookRedriveResult> RedriveWebhookResultAsync(Guid webhookResultId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookRedriveResult> Task of WebhookRedriveResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveWebhookResultWithHttpInfo(Guid, int) Get a webhook result and try to resend the original webhook payload Allows you to resend a webhook payload that was already sent. Webhooks that fail are retried automatically for 24 hours and then put in a dead letter queue. You can retry results manually using this method. Declaration public ApiResponse<WebhookRedriveResult> RedriveWebhookResultWithHttpInfo(Guid webhookResultId, int operationIndex = 0) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookRedriveResult> ApiResponse of WebhookRedriveResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source RedriveWebhookResultWithHttpInfoAsync(Guid, int, CancellationToken) Get a webhook result and try to resend the original webhook payload Allows you to resend a webhook payload that was already sent. Webhooks that fail are retried automatically for 24 hours and then put in a dead letter queue. You can retry results manually using this method. Declaration public Task<ApiResponse<WebhookRedriveResult>> RedriveWebhookResultWithHttpInfoAsync(Guid webhookResultId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookResultId Webhook Result ID int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookRedriveResult>> Task of ApiResponse (WebhookRedriveResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestData(Guid, int) Send webhook test data Declaration public WebhookTestResult SendTestData(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description WebhookTestResult WebhookTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestDataAsync(Guid, int, CancellationToken) Send webhook test data Declaration public Task<WebhookTestResult> SendTestDataAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookTestResult> Task of WebhookTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestDataWithHttpInfo(Guid, int) Send webhook test data Declaration public ApiResponse<WebhookTestResult> SendTestDataWithHttpInfo(Guid webhookId, int operationIndex = 0) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookTestResult> ApiResponse of WebhookTestResult Exceptions Type Condition ApiException Thrown when fails to make API call View Source SendTestDataWithHttpInfoAsync(Guid, int, CancellationToken) Send webhook test data Declaration public Task<ApiResponse<WebhookTestResult>> SendTestDataWithHttpInfoAsync(Guid webhookId, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookTestResult>> Task of ApiResponse (WebhookTestResult) Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateWebhookHeaders(Guid, WebhookHeaders, int) Update a webhook request headers Declaration public WebhookDto UpdateWebhookHeaders(Guid webhookId, WebhookHeaders webhookHeaders, int operationIndex = 0) Parameters Type Name Description Guid webhookId WebhookHeaders webhookHeaders int operationIndex Index associated with the operation. Returns Type Description WebhookDto WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateWebhookHeadersAsync(Guid, WebhookHeaders, int, CancellationToken) Update a webhook request headers Declaration public Task<WebhookDto> UpdateWebhookHeadersAsync(Guid webhookId, WebhookHeaders webhookHeaders, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId WebhookHeaders webhookHeaders int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<WebhookDto> Task of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateWebhookHeadersWithHttpInfo(Guid, WebhookHeaders, int) Update a webhook request headers Declaration public ApiResponse<WebhookDto> UpdateWebhookHeadersWithHttpInfo(Guid webhookId, WebhookHeaders webhookHeaders, int operationIndex = 0) Parameters Type Name Description Guid webhookId WebhookHeaders webhookHeaders int operationIndex Index associated with the operation. Returns Type Description ApiResponse<WebhookDto> ApiResponse of WebhookDto Exceptions Type Condition ApiException Thrown when fails to make API call View Source UpdateWebhookHeadersWithHttpInfoAsync(Guid, WebhookHeaders, int, CancellationToken) Update a webhook request headers Declaration public Task<ApiResponse<WebhookDto>> UpdateWebhookHeadersWithHttpInfoAsync(Guid webhookId, WebhookHeaders webhookHeaders, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId WebhookHeaders webhookHeaders int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<WebhookDto>> Task of ApiResponse (WebhookDto) Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyWebhookSignature(VerifyWebhookSignatureOptions, int) Verify a webhook payload signature Verify a webhook payload using the messageId and signature. This allows you to be sure that MailSlurp sent the payload and not another server. Declaration public VerifyWebhookSignatureResults VerifyWebhookSignature(VerifyWebhookSignatureOptions verifyWebhookSignatureOptions, int operationIndex = 0) Parameters Type Name Description VerifyWebhookSignatureOptions verifyWebhookSignatureOptions int operationIndex Index associated with the operation. Returns Type Description VerifyWebhookSignatureResults VerifyWebhookSignatureResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyWebhookSignatureAsync(VerifyWebhookSignatureOptions, int, CancellationToken) Verify a webhook payload signature Verify a webhook payload using the messageId and signature. This allows you to be sure that MailSlurp sent the payload and not another server. Declaration public Task<VerifyWebhookSignatureResults> VerifyWebhookSignatureAsync(VerifyWebhookSignatureOptions verifyWebhookSignatureOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description VerifyWebhookSignatureOptions verifyWebhookSignatureOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<VerifyWebhookSignatureResults> Task of VerifyWebhookSignatureResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyWebhookSignatureWithHttpInfo(VerifyWebhookSignatureOptions, int) Verify a webhook payload signature Verify a webhook payload using the messageId and signature. This allows you to be sure that MailSlurp sent the payload and not another server. Declaration public ApiResponse<VerifyWebhookSignatureResults> VerifyWebhookSignatureWithHttpInfo(VerifyWebhookSignatureOptions verifyWebhookSignatureOptions, int operationIndex = 0) Parameters Type Name Description VerifyWebhookSignatureOptions verifyWebhookSignatureOptions int operationIndex Index associated with the operation. Returns Type Description ApiResponse<VerifyWebhookSignatureResults> ApiResponse of VerifyWebhookSignatureResults Exceptions Type Condition ApiException Thrown when fails to make API call View Source VerifyWebhookSignatureWithHttpInfoAsync(VerifyWebhookSignatureOptions, int, CancellationToken) Verify a webhook payload signature Verify a webhook payload using the messageId and signature. This allows you to be sure that MailSlurp sent the payload and not another server. Declaration public Task<ApiResponse<VerifyWebhookSignatureResults>> VerifyWebhookSignatureWithHttpInfoAsync(VerifyWebhookSignatureOptions verifyWebhookSignatureOptions, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description VerifyWebhookSignatureOptions verifyWebhookSignatureOptions int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<VerifyWebhookSignatureResults>> Task of ApiResponse (VerifyWebhookSignatureResults) Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForWebhookResults(Guid, int, int, int) Wait for webhook results for a webhook Declaration public List<WebhookResultDto> WaitForWebhookResults(Guid webhookId, int expectedCount, int timeout, int operationIndex = 0) Parameters Type Name Description Guid webhookId ID of webhook to get results for int expectedCount Expected result count int timeout Max time to wait in milliseconds int operationIndex Index associated with the operation. Returns Type Description List<WebhookResultDto> List<WebhookResultDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForWebhookResultsAsync(Guid, int, int, int, CancellationToken) Wait for webhook results for a webhook Declaration public Task<List<WebhookResultDto>> WaitForWebhookResultsAsync(Guid webhookId, int expectedCount, int timeout, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId ID of webhook to get results for int expectedCount Expected result count int timeout Max time to wait in milliseconds int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<List<WebhookResultDto>> Task of List<WebhookResultDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForWebhookResultsWithHttpInfo(Guid, int, int, int) Wait for webhook results for a webhook Declaration public ApiResponse<List<WebhookResultDto>> WaitForWebhookResultsWithHttpInfo(Guid webhookId, int expectedCount, int timeout, int operationIndex = 0) Parameters Type Name Description Guid webhookId ID of webhook to get results for int expectedCount Expected result count int timeout Max time to wait in milliseconds int operationIndex Index associated with the operation. Returns Type Description ApiResponse<List<WebhookResultDto>> ApiResponse of List<WebhookResultDto> Exceptions Type Condition ApiException Thrown when fails to make API call View Source WaitForWebhookResultsWithHttpInfoAsync(Guid, int, int, int, CancellationToken) Wait for webhook results for a webhook Declaration public Task<ApiResponse<List<WebhookResultDto>>> WaitForWebhookResultsWithHttpInfoAsync(Guid webhookId, int expectedCount, int timeout, int operationIndex = 0, CancellationToken cancellationToken = default) Parameters Type Name Description Guid webhookId ID of webhook to get results for int expectedCount Expected result count int timeout Max time to wait in milliseconds int operationIndex Index associated with the operation. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<List<WebhookResultDto>>> Task of ApiResponse (List<WebhookResultDto>) Exceptions Type Condition ApiException Thrown when fails to make API call Implements IWebhookControllerApi IWebhookControllerApiSync IWebhookControllerApiAsync IApiAccessor"
  },
  "api/mailslurp.Client.ApiClient.html": {
    "href": "api/mailslurp.Client.ApiClient.html",
    "title": "Class ApiClient | MailSlurp",
    "keywords": "Class ApiClient Provides a default implementation of an Api client (both synchronous and asynchronous implementations), encapsulating general REST accessor use cases. Inheritance object ApiClient Implements ISynchronousClient IAsynchronousClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public class ApiClient : ISynchronousClient, IAsynchronousClient Constructors View Source ApiClient() Initializes a new instance of the ApiClient, defaulting to the global configurations' base url. Declaration public ApiClient() View Source ApiClient(string) Initializes a new instance of the ApiClient Declaration public ApiClient(string basePath) Parameters Type Name Description string basePath The target service's base path in URL format. Exceptions Type Condition ArgumentException Properties View Source SerializerSettings Specifies the settings on a Newtonsoft.Json.JsonSerializer object. These settings can be adjusted to accommodate custom serialization rules. Declaration public JsonSerializerSettings SerializerSettings { get; set; } Property Value Type Description Newtonsoft.Json.JsonSerializerSettings Methods View Source Delete<T>(string, RequestOptions, IReadableConfiguration) Make a HTTP DELETE request (synchronous). Declaration public ApiResponse<T> Delete<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. Returns Type Description ApiResponse<T> A Task containing ApiResponse Type Parameters Name Description T View Source DeleteAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Make a HTTP DELETE request (async). Declaration public Task<ApiResponse<T>> DeleteAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. CancellationToken cancellationToken Token that enables callers to cancel the request. Returns Type Description Task<ApiResponse<T>> A Task containing ApiResponse Type Parameters Name Description T View Source Get<T>(string, RequestOptions, IReadableConfiguration) Make a HTTP GET request (synchronous). Declaration public ApiResponse<T> Get<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. Returns Type Description ApiResponse<T> A Task containing ApiResponse Type Parameters Name Description T View Source GetAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Make a HTTP GET request (async). Declaration public Task<ApiResponse<T>> GetAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. CancellationToken cancellationToken Token that enables callers to cancel the request. Returns Type Description Task<ApiResponse<T>> A Task containing ApiResponse Type Parameters Name Description T View Source Head<T>(string, RequestOptions, IReadableConfiguration) Make a HTTP HEAD request (synchronous). Declaration public ApiResponse<T> Head<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. Returns Type Description ApiResponse<T> A Task containing ApiResponse Type Parameters Name Description T View Source HeadAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Make a HTTP HEAD request (async). Declaration public Task<ApiResponse<T>> HeadAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. CancellationToken cancellationToken Token that enables callers to cancel the request. Returns Type Description Task<ApiResponse<T>> A Task containing ApiResponse Type Parameters Name Description T View Source Options<T>(string, RequestOptions, IReadableConfiguration) Make a HTTP OPTION request (synchronous). Declaration public ApiResponse<T> Options<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. Returns Type Description ApiResponse<T> A Task containing ApiResponse Type Parameters Name Description T View Source OptionsAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Make a HTTP OPTION request (async). Declaration public Task<ApiResponse<T>> OptionsAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. CancellationToken cancellationToken Token that enables callers to cancel the request. Returns Type Description Task<ApiResponse<T>> A Task containing ApiResponse Type Parameters Name Description T View Source Patch<T>(string, RequestOptions, IReadableConfiguration) Make a HTTP PATCH request (synchronous). Declaration public ApiResponse<T> Patch<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. Returns Type Description ApiResponse<T> A Task containing ApiResponse Type Parameters Name Description T View Source PatchAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Make a HTTP PATCH request (async). Declaration public Task<ApiResponse<T>> PatchAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. CancellationToken cancellationToken Token that enables callers to cancel the request. Returns Type Description Task<ApiResponse<T>> A Task containing ApiResponse Type Parameters Name Description T View Source Post<T>(string, RequestOptions, IReadableConfiguration) Make a HTTP POST request (synchronous). Declaration public ApiResponse<T> Post<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. Returns Type Description ApiResponse<T> A Task containing ApiResponse Type Parameters Name Description T View Source PostAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Make a HTTP POST request (async). Declaration public Task<ApiResponse<T>> PostAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. CancellationToken cancellationToken Token that enables callers to cancel the request. Returns Type Description Task<ApiResponse<T>> A Task containing ApiResponse Type Parameters Name Description T View Source Put<T>(string, RequestOptions, IReadableConfiguration) Make a HTTP PUT request (synchronous). Declaration public ApiResponse<T> Put<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. Returns Type Description ApiResponse<T> A Task containing ApiResponse Type Parameters Name Description T View Source PutAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Make a HTTP PUT request (async). Declaration public Task<ApiResponse<T>> PutAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The target path (or resource). RequestOptions options The additional request options. IReadableConfiguration configuration A per-request configuration object. It is assumed that any merge with GlobalConfiguration has been done before calling this method. CancellationToken cancellationToken Token that enables callers to cancel the request. Returns Type Description Task<ApiResponse<T>> A Task containing ApiResponse Type Parameters Name Description T Implements ISynchronousClient IAsynchronousClient"
  },
  "api/mailslurp.Client.ApiException.html": {
    "href": "api/mailslurp.Client.ApiException.html",
    "title": "Class ApiException | MailSlurp",
    "keywords": "Class ApiException API Exception Inheritance object Exception ApiException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public class ApiException : Exception, ISerializable Constructors View Source ApiException() Initializes a new instance of the ApiException class. Declaration public ApiException() View Source ApiException(int, string, object, Multimap<string, string>) Initializes a new instance of the ApiException class. Declaration public ApiException(int errorCode, string message, object errorContent = null, Multimap<string, string> headers = null) Parameters Type Name Description int errorCode HTTP status code. string message Error message. object errorContent Error content. Multimap<string, string> headers HTTP Headers. View Source ApiException(int, string) Initializes a new instance of the ApiException class. Declaration public ApiException(int errorCode, string message) Parameters Type Name Description int errorCode HTTP status code. string message Error message. Properties View Source ErrorCode Gets or sets the error code (HTTP status code) Declaration public int ErrorCode { get; set; } Property Value Type Description int The error code (HTTP status code). View Source ErrorContent Gets or sets the error content (body json object) Declaration public object ErrorContent { get; } Property Value Type Description object The error content (Http response body). View Source Headers Gets or sets the HTTP headers Declaration public Multimap<string, string> Headers { get; } Property Value Type Description Multimap<string, string> HTTP headers Implements System.Runtime.Serialization.ISerializable"
  },
  "api/mailslurp.Client.ApiResponse-1.html": {
    "href": "api/mailslurp.Client.ApiResponse-1.html",
    "title": "Class ApiResponse<T> | MailSlurp",
    "keywords": "Class ApiResponse<T> API Response Inheritance object ApiResponse<T> Implements IApiResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public class ApiResponse<T> : IApiResponse Type Parameters Name Description T Constructors View Source ApiResponse(HttpStatusCode, T, string) Initializes a new instance of the ApiResponse<T> class. Declaration public ApiResponse(HttpStatusCode statusCode, T data, string rawContent) Parameters Type Name Description HttpStatusCode statusCode HTTP status code. T data Data (parsed HTTP body) string rawContent Raw content. View Source ApiResponse(HttpStatusCode, T) Initializes a new instance of the ApiResponse<T> class. Declaration public ApiResponse(HttpStatusCode statusCode, T data) Parameters Type Name Description HttpStatusCode statusCode HTTP status code. T data Data (parsed HTTP body) View Source ApiResponse(HttpStatusCode, Multimap<string, string>, T, string) Initializes a new instance of the ApiResponse<T> class. Declaration public ApiResponse(HttpStatusCode statusCode, Multimap<string, string> headers, T data, string rawContent) Parameters Type Name Description HttpStatusCode statusCode HTTP status code. Multimap<string, string> headers HTTP headers. T data Data (parsed HTTP body) string rawContent Raw content. View Source ApiResponse(HttpStatusCode, Multimap<string, string>, T) Initializes a new instance of the ApiResponse<T> class. Declaration public ApiResponse(HttpStatusCode statusCode, Multimap<string, string> headers, T data) Parameters Type Name Description HttpStatusCode statusCode HTTP status code. Multimap<string, string> headers HTTP headers. T data Data (parsed HTTP body) Properties View Source Content The data type of Content Declaration public object Content { get; } Property Value Type Description object View Source Cookies Gets or sets any cookies passed along on the response. Declaration public List<Cookie> Cookies { get; set; } Property Value Type Description List<Cookie> View Source Data Gets or sets the data (parsed HTTP body) Declaration public T Data { get; } Property Value Type Description T The data. View Source ErrorText Gets or sets any error text defined by the calling client. Declaration public string ErrorText { get; set; } Property Value Type Description string View Source Headers Gets or sets the HTTP headers Declaration public Multimap<string, string> Headers { get; } Property Value Type Description Multimap<string, string> HTTP headers View Source RawContent The raw content Declaration public string RawContent { get; } Property Value Type Description string View Source ResponseType The content of this response Declaration public Type ResponseType { get; } Property Value Type Description Type View Source StatusCode Gets or sets the status code (HTTP status code) Declaration public HttpStatusCode StatusCode { get; } Property Value Type Description HttpStatusCode The status code. Implements IApiResponse"
  },
  "api/mailslurp.Client.ClientUtils.html": {
    "href": "api/mailslurp.Client.ClientUtils.html",
    "title": "Class ClientUtils | MailSlurp",
    "keywords": "Class ClientUtils Utility functions providing some benefit to API client consumers. Inheritance object ClientUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public static class ClientUtils Fields View Source JsonRegex Provides a case-insensitive check that a provided content type is a known JSON-like content type. Declaration public static readonly Regex JsonRegex Field Value Type Description Regex Methods View Source Base64Encode(string) Encode string in base64 format. Declaration public static string Base64Encode(string text) Parameters Type Name Description string text string to be encoded. Returns Type Description string Encoded string. View Source IsJsonMime(string) Check if the given MIME is a JSON MIME. JSON MIME examples: application/json application/json; charset=UTF8 APPLICATION/JSON application/vnd.company+json Declaration public static bool IsJsonMime(string mime) Parameters Type Name Description string mime MIME Returns Type Description bool Returns True if MIME type is json. View Source ParameterToMultiMap(string, string, object) Convert params to key/value pairs. Use collectionFormat to properly format lists and collections. Declaration public static Multimap<string, string> ParameterToMultiMap(string collectionFormat, string name, object value) Parameters Type Name Description string collectionFormat The swagger-supported collection format, one of: csv, tsv, ssv, pipes, multi string name Key name. object value Value object. Returns Type Description Multimap<string, string> A multimap of keys with 1..n associated values. View Source ParameterToString(object, IReadableConfiguration) If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime. If parameter is a list, join the list with \",\". Otherwise just return the string. Declaration public static string ParameterToString(object obj, IReadableConfiguration configuration = null) Parameters Type Name Description object obj The parameter (header, path, query, form). IReadableConfiguration configuration An optional configuration instance, providing formatting options used in processing. Returns Type Description string Formatted string. View Source ReadAsBytes(Stream) Convert stream to byte array Declaration public static byte[] ReadAsBytes(Stream inputStream) Parameters Type Name Description Stream inputStream Input stream to be converted Returns Type Description byte[] Byte array View Source SanitizeFilename(string) Sanitize filename by removing the path Declaration public static string SanitizeFilename(string filename) Parameters Type Name Description string filename Filename Returns Type Description string Filename View Source SelectHeaderAccept(string[]) Select the Accept header's value from the given accepts array: if JSON exists in the given array, use it; otherwise use all of them (joining into a string) Declaration public static string SelectHeaderAccept(string[] accepts) Parameters Type Name Description string[] accepts The accepts array to select from. Returns Type Description string The Accept header to use. View Source SelectHeaderContentType(string[]) Select the Content-Type header's value from the given content-type array: if JSON type exists in the given array, use it; otherwise use the first one defined in 'consumes' Declaration public static string SelectHeaderContentType(string[] contentTypes) Parameters Type Name Description string[] contentTypes The Content-Type array to select from. Returns Type Description string The Content-Type header to use. View Source Serialize(object) Serializes the given object when not null. Otherwise return null. Declaration public static string Serialize(object obj) Parameters Type Name Description object obj The object to serialize. Returns Type Description string Serialized string."
  },
  "api/mailslurp.Client.Configuration.html": {
    "href": "api/mailslurp.Client.Configuration.html",
    "title": "Class Configuration | MailSlurp",
    "keywords": "Class Configuration Represents a set of configuration settings Inheritance object Configuration GlobalConfiguration Implements IReadableConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public class Configuration : IReadableConfiguration Constructors View Source Configuration() Initializes a new instance of the Configuration class Declaration public Configuration() View Source Configuration(IDictionary<string, string>, IDictionary<string, string>, IDictionary<string, string>, string) Initializes a new instance of the Configuration class Declaration public Configuration(IDictionary<string, string> defaultHeaders, IDictionary<string, string> apiKey, IDictionary<string, string> apiKeyPrefix, string basePath = \"https://csharp.api.mailslurp.com\") Parameters Type Name Description IDictionary<string, string> defaultHeaders IDictionary<string, string> apiKey IDictionary<string, string> apiKeyPrefix string basePath Fields View Source DefaultExceptionFactory Default creation of exceptions for a given method name and response object Declaration public static readonly ExceptionFactory DefaultExceptionFactory Field Value Type Description ExceptionFactory View Source ISO8601_DATETIME_FORMAT Identifier for ISO 8601 DateTime Format Declaration public const string ISO8601_DATETIME_FORMAT = \"o\" Field Value Type Description string Remarks See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information. View Source Version Version of the package. Declaration public const string Version = \"15.17.41\" Field Value Type Description string Version of the package. Properties View Source AccessToken Gets or sets the access token for OAuth2 authentication. This helper property simplifies code generation. Declaration public virtual string AccessToken { get; set; } Property Value Type Description string The access token. View Source ApiKey Gets or sets the API key based on the authentication name. Declaration public virtual IDictionary<string, string> ApiKey { get; set; } Property Value Type Description IDictionary<string, string> The API key. View Source ApiKeyPrefix Gets or sets the prefix (e.g. Token) of the API key based on the authentication name. Whatever you set here will be prepended to the value defined in AddApiKey. An example invocation here might be: ApiKeyPrefix[\"Authorization\"] = \"Bearer\"; … where ApiKey[\"Authorization\"] would then be used to set the value of your bearer token. OAuth2 workflows should set tokens via AccessToken. Declaration public virtual IDictionary<string, string> ApiKeyPrefix { get; set; } Property Value Type Description IDictionary<string, string> The prefix of the API key. View Source BasePath Gets or sets the base path for API access. Declaration public virtual string BasePath { get; set; } Property Value Type Description string View Source ClientCertificates Gets or sets certificate collection to be sent with requests. Declaration public X509CertificateCollection ClientCertificates { get; set; } Property Value Type Description X509CertificateCollection X509 Certificate collection. View Source DateTimeFormat Gets or sets the date time format used when serializing in the ApiClient By default, it's set to ISO 8601 - \"o\", for others see: https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx No validation is done to ensure that the string you're providing is valid Declaration public virtual string DateTimeFormat { get; set; } Property Value Type Description string The DateTimeFormat string View Source DefaultHeader Gets or sets the default header. Declaration [Obsolete(\"Use DefaultHeaders instead.\")] public virtual IDictionary<string, string> DefaultHeader { get; set; } Property Value Type Description IDictionary<string, string> View Source DefaultHeaders Gets or sets the default headers. Declaration public virtual IDictionary<string, string> DefaultHeaders { get; set; } Property Value Type Description IDictionary<string, string> View Source OperationServers Gets or sets the operation servers. Declaration public virtual IReadOnlyDictionary<string, List<IReadOnlyDictionary<string, object>>> OperationServers { get; set; } Property Value Type Description IReadOnlyDictionary<string, List<IReadOnlyDictionary<string, object>>> The operation servers. View Source Password Gets or sets the password (HTTP basic authentication). Declaration public virtual string Password { get; set; } Property Value Type Description string The password. View Source Proxy Gets or sets the proxy Declaration public virtual WebProxy Proxy { get; set; } Property Value Type Description WebProxy Proxy. View Source Servers Gets or sets the servers. Declaration public virtual IList<IReadOnlyDictionary<string, object>> Servers { get; set; } Property Value Type Description IList<IReadOnlyDictionary<string, object>> The servers. View Source TempFolderPath Gets or sets the temporary folder path to store the files downloaded from the server. Declaration public virtual string TempFolderPath { get; set; } Property Value Type Description string Folder path. View Source Timeout Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds. Declaration public virtual int Timeout { get; set; } Property Value Type Description int View Source UserAgent Gets or sets the HTTP user agent. Declaration public virtual string UserAgent { get; set; } Property Value Type Description string Http user agent. View Source Username Gets or sets the username (HTTP basic authentication). Declaration public virtual string Username { get; set; } Property Value Type Description string The username. Methods View Source AddApiKey(string, string) Add Api Key Header. Declaration public void AddApiKey(string key, string value) Parameters Type Name Description string key Api Key name. string value Api Key value. View Source AddApiKeyPrefix(string, string) Sets the API key prefix. Declaration public void AddApiKeyPrefix(string key, string value) Parameters Type Name Description string key Api Key name. string value Api Key value. View Source GetApiKeyWithPrefix(string) Gets the API key with prefix. Declaration public string GetApiKeyWithPrefix(string apiKeyIdentifier) Parameters Type Name Description string apiKeyIdentifier API key identifier (authentication scheme). Returns Type Description string API key with prefix. View Source GetOperationServerUrl(string, int, Dictionary<string, string>) Returns URL based on operation server settings. Declaration public string GetOperationServerUrl(string operation, int index, Dictionary<string, string> inputVariables) Parameters Type Name Description string operation Operation associated with the request path. int index Array index of the server settings. Dictionary<string, string> inputVariables Dictionary of the variables and the corresponding values. Returns Type Description string View Source GetOperationServerUrl(string, int) Returns URL based on operation server settings. Declaration public string GetOperationServerUrl(string operation, int index) Parameters Type Name Description string operation Operation associated with the request path. int index Array index of the server settings. Returns Type Description string View Source GetServerUrl(int, Dictionary<string, string>) Returns URL based on server settings. Declaration public string GetServerUrl(int index, Dictionary<string, string> inputVariables) Parameters Type Name Description int index Array index of the server settings. Dictionary<string, string> inputVariables Dictionary of the variables and the corresponding values. Returns Type Description string View Source GetServerUrl(int) Returns URL based on server settings without providing values for the variables Declaration public string GetServerUrl(int index) Parameters Type Name Description int index Array index of the server settings. Returns Type Description string View Source MergeConfigurations(IReadableConfiguration, IReadableConfiguration) Merge configurations. Declaration public static IReadableConfiguration MergeConfigurations(IReadableConfiguration first, IReadableConfiguration second) Parameters Type Name Description IReadableConfiguration first First configuration. IReadableConfiguration second Second configuration. Returns Type Description IReadableConfiguration View Source ToDebugReport() Returns a string with essential information for debugging. Declaration public static string ToDebugReport() Returns Type Description string Implements IReadableConfiguration"
  },
  "api/mailslurp.Client.ExceptionFactory.html": {
    "href": "api/mailslurp.Client.ExceptionFactory.html",
    "title": "Delegate ExceptionFactory | MailSlurp",
    "keywords": "Delegate ExceptionFactory A delegate to ExceptionFactory method Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public delegate Exception ExceptionFactory(string methodName, IApiResponse response) Parameters Type Name Description string methodName Method name IApiResponse response Response Returns Type Description Exception Exceptions"
  },
  "api/mailslurp.Client.GlobalConfiguration.html": {
    "href": "api/mailslurp.Client.GlobalConfiguration.html",
    "title": "Class GlobalConfiguration | MailSlurp",
    "keywords": "Class GlobalConfiguration GlobalConfiguration provides a compile-time extension point for globally configuring API Clients. Inheritance object Configuration GlobalConfiguration Implements IReadableConfiguration Inherited Members Configuration.Version Configuration.ISO8601_DATETIME_FORMAT Configuration.DefaultExceptionFactory Configuration.BasePath Configuration.DefaultHeader Configuration.DefaultHeaders Configuration.Timeout Configuration.Proxy Configuration.UserAgent Configuration.Username Configuration.Password Configuration.GetApiKeyWithPrefix(string) Configuration.ClientCertificates Configuration.AccessToken Configuration.TempFolderPath Configuration.DateTimeFormat Configuration.ApiKeyPrefix Configuration.ApiKey Configuration.Servers Configuration.OperationServers Configuration.GetServerUrl(int) Configuration.GetServerUrl(int, Dictionary<string, string>) Configuration.GetOperationServerUrl(string, int) Configuration.GetOperationServerUrl(string, int, Dictionary<string, string>) Configuration.ToDebugReport() Configuration.AddApiKey(string, string) Configuration.AddApiKeyPrefix(string, string) Configuration.MergeConfigurations(IReadableConfiguration, IReadableConfiguration) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public class GlobalConfiguration : Configuration, IReadableConfiguration Remarks A customized implementation via partial class may reside in another file and may be excluded from automatic generation via a .openapi-generator-ignore file. Constructors View Source GlobalConfiguration(IDictionary<string, string>, IDictionary<string, string>, IDictionary<string, string>, string) Declaration public GlobalConfiguration(IDictionary<string, string> defaultHeader, IDictionary<string, string> apiKey, IDictionary<string, string> apiKeyPrefix, string basePath = \"http://localhost:3000/api\") Parameters Type Name Description IDictionary<string, string> defaultHeader IDictionary<string, string> apiKey IDictionary<string, string> apiKeyPrefix string basePath Remarks A customized implementation via partial class may reside in another file and may be excluded from automatic generation via a .openapi-generator-ignore file. Properties View Source Instance Gets or sets the default Configuration. Declaration public static IReadableConfiguration Instance { get; set; } Property Value Type Description IReadableConfiguration Configuration. Remarks A customized implementation via partial class may reside in another file and may be excluded from automatic generation via a .openapi-generator-ignore file. Implements IReadableConfiguration"
  },
  "api/mailslurp.Client.html": {
    "href": "api/mailslurp.Client.html",
    "title": "Namespace mailslurp.Client | MailSlurp",
    "keywords": "Namespace mailslurp.Client Classes ApiClient Provides a default implementation of an Api client (both synchronous and asynchronous implementations), encapsulating general REST accessor use cases. ApiException API Exception ApiResponse<T> API Response ClientUtils Utility functions providing some benefit to API client consumers. Configuration Represents a set of configuration settings GlobalConfiguration GlobalConfiguration provides a compile-time extension point for globally configuring API Clients. Multimap<TKey, TValue> A dictionary in which one key has many associated values. OpenAPIDateConverter Formatter for 'date' openapi formats ss defined by full-date - RFC3339 see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#data-types RequestOptions A container for generalized request inputs. This type allows consumers to extend the request functionality by abstracting away from the default (built-in) request framework (e.g. RestSharp). RetryConfiguration Configuration class to set the polly retry policies to be applied to the requests. Interfaces IApiAccessor Represents configuration aspects required to interact with the API endpoints. IApiResponse Provides a non-generic contract for the ApiResponse wrapper. IAsynchronousClient Contract for Asynchronous RESTful API interactions. This interface allows consumers to provide a custom API accessor client. IReadableConfiguration Represents a readable-only configuration contract. ISynchronousClient Contract for Synchronous RESTful API interactions. This interface allows consumers to provide a custom API accessor client. Enums HttpMethod Http methods supported by swagger Delegates ExceptionFactory A delegate to ExceptionFactory method"
  },
  "api/mailslurp.Client.HttpMethod.html": {
    "href": "api/mailslurp.Client.HttpMethod.html",
    "title": "Enum HttpMethod | MailSlurp",
    "keywords": "Enum HttpMethod Http methods supported by swagger Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public enum HttpMethod Fields Name Description Delete HTTP DELETE request. Get HTTP GET request. Head HTTP HEAD request. Options HTTP OPTIONS request. Patch HTTP PATCH request. Post HTTP POST request. Put HTTP PUT request."
  },
  "api/mailslurp.Client.IApiAccessor.html": {
    "href": "api/mailslurp.Client.IApiAccessor.html",
    "title": "Interface IApiAccessor | MailSlurp",
    "keywords": "Interface IApiAccessor Represents configuration aspects required to interact with the API endpoints. Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public interface IApiAccessor Properties View Source Configuration Gets or sets the configuration object Declaration IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the Configuration View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods View Source GetBasePath() Gets the base path of the API client. Declaration string GetBasePath() Returns Type Description string The base path"
  },
  "api/mailslurp.Client.IApiResponse.html": {
    "href": "api/mailslurp.Client.IApiResponse.html",
    "title": "Interface IApiResponse | MailSlurp",
    "keywords": "Interface IApiResponse Provides a non-generic contract for the ApiResponse wrapper. Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public interface IApiResponse Properties View Source Content The content of this response Declaration object Content { get; } Property Value Type Description object View Source Cookies Gets or sets any cookies passed along on the response. Declaration List<Cookie> Cookies { get; set; } Property Value Type Description List<Cookie> View Source ErrorText Gets or sets any error text defined by the calling client. Declaration string ErrorText { get; set; } Property Value Type Description string View Source Headers Gets or sets the HTTP headers Declaration Multimap<string, string> Headers { get; } Property Value Type Description Multimap<string, string> HTTP headers View Source RawContent The raw content of this response Declaration string RawContent { get; } Property Value Type Description string View Source ResponseType The data type of Content Declaration Type ResponseType { get; } Property Value Type Description Type View Source StatusCode Gets or sets the status code (HTTP status code) Declaration HttpStatusCode StatusCode { get; } Property Value Type Description HttpStatusCode The status code."
  },
  "api/mailslurp.Client.IAsynchronousClient.html": {
    "href": "api/mailslurp.Client.IAsynchronousClient.html",
    "title": "Interface IAsynchronousClient | MailSlurp",
    "keywords": "Interface IAsynchronousClient Contract for Asynchronous RESTful API interactions. This interface allows consumers to provide a custom API accessor client. Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public interface IAsynchronousClient Methods View Source DeleteAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Executes a non-blocking call to some path using the DELETE http verb. Declaration Task<ApiResponse<T>> DeleteAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<T>> A task eventually representing the response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type. View Source GetAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Executes a non-blocking call to some path using the GET http verb. Declaration Task<ApiResponse<T>> GetAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<T>> A task eventually representing the response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type. View Source HeadAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Executes a non-blocking call to some path using the HEAD http verb. Declaration Task<ApiResponse<T>> HeadAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<T>> A task eventually representing the response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type. View Source OptionsAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Executes a non-blocking call to some path using the OPTIONS http verb. Declaration Task<ApiResponse<T>> OptionsAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<T>> A task eventually representing the response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type. View Source PatchAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Executes a non-blocking call to some path using the PATCH http verb. Declaration Task<ApiResponse<T>> PatchAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<T>> A task eventually representing the response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type. View Source PostAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Executes a non-blocking call to some path using the POST http verb. Declaration Task<ApiResponse<T>> PostAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<T>> A task eventually representing the response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type. View Source PutAsync<T>(string, RequestOptions, IReadableConfiguration, CancellationToken) Executes a non-blocking call to some path using the PUT http verb. Declaration Task<ApiResponse<T>> PutAsync<T>(string path, RequestOptions options, IReadableConfiguration configuration = null, CancellationToken cancellationToken = default) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. CancellationToken cancellationToken Cancellation Token to cancel the request. Returns Type Description Task<ApiResponse<T>> A task eventually representing the response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type."
  },
  "api/mailslurp.Client.IReadableConfiguration.html": {
    "href": "api/mailslurp.Client.IReadableConfiguration.html",
    "title": "Interface IReadableConfiguration | MailSlurp",
    "keywords": "Interface IReadableConfiguration Represents a readable-only configuration contract. Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public interface IReadableConfiguration Properties View Source AccessToken Gets the access token. Declaration string AccessToken { get; } Property Value Type Description string Access token. View Source ApiKey Gets the API key. Declaration IDictionary<string, string> ApiKey { get; } Property Value Type Description IDictionary<string, string> API key. View Source ApiKeyPrefix Gets the API key prefix. Declaration IDictionary<string, string> ApiKeyPrefix { get; } Property Value Type Description IDictionary<string, string> API key prefix. View Source BasePath Gets the base path. Declaration string BasePath { get; } Property Value Type Description string Base path. View Source ClientCertificates Gets certificate collection to be sent with requests. Declaration X509CertificateCollection ClientCertificates { get; } Property Value Type Description X509CertificateCollection X509 Certificate collection. View Source DateTimeFormat Gets the date time format. Declaration string DateTimeFormat { get; } Property Value Type Description string Date time format. View Source DefaultHeader Gets the default header. Declaration [Obsolete(\"Use DefaultHeaders instead.\")] IDictionary<string, string> DefaultHeader { get; } Property Value Type Description IDictionary<string, string> Default header. View Source DefaultHeaders Gets the default headers. Declaration IDictionary<string, string> DefaultHeaders { get; } Property Value Type Description IDictionary<string, string> Default headers. View Source OperationServers Get the servers associated with the operation. Declaration IReadOnlyDictionary<string, List<IReadOnlyDictionary<string, object>>> OperationServers { get; } Property Value Type Description IReadOnlyDictionary<string, List<IReadOnlyDictionary<string, object>>> Operation servers. View Source Password Gets the password. Declaration string Password { get; } Property Value Type Description string Password. View Source Proxy Gets the proxy. Declaration WebProxy Proxy { get; } Property Value Type Description WebProxy Proxy. View Source TempFolderPath Gets the temp folder path. Declaration string TempFolderPath { get; } Property Value Type Description string Temp folder path. View Source Timeout Gets the HTTP connection timeout (in milliseconds) Declaration int Timeout { get; } Property Value Type Description int HTTP connection timeout. View Source UserAgent Gets the user agent. Declaration string UserAgent { get; } Property Value Type Description string User agent. View Source Username Gets the username. Declaration string Username { get; } Property Value Type Description string Username. Methods View Source GetApiKeyWithPrefix(string) Gets the API key with prefix. Declaration string GetApiKeyWithPrefix(string apiKeyIdentifier) Parameters Type Name Description string apiKeyIdentifier API key identifier (authentication scheme). Returns Type Description string API key with prefix. View Source GetOperationServerUrl(string, int) Gets the Operation server url at the provided index. Declaration string GetOperationServerUrl(string operation, int index) Parameters Type Name Description string operation Operation server name. int index Index of the operation server settings. Returns Type Description string"
  },
  "api/mailslurp.Client.ISynchronousClient.html": {
    "href": "api/mailslurp.Client.ISynchronousClient.html",
    "title": "Interface ISynchronousClient | MailSlurp",
    "keywords": "Interface ISynchronousClient Contract for Synchronous RESTful API interactions. This interface allows consumers to provide a custom API accessor client. Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public interface ISynchronousClient Methods View Source Delete<T>(string, RequestOptions, IReadableConfiguration) Executes a blocking call to some path using the DELETE http verb. Declaration ApiResponse<T> Delete<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. Returns Type Description ApiResponse<T> The response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type. View Source Get<T>(string, RequestOptions, IReadableConfiguration) Executes a blocking call to some path using the GET http verb. Declaration ApiResponse<T> Get<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. Returns Type Description ApiResponse<T> The response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type. View Source Head<T>(string, RequestOptions, IReadableConfiguration) Executes a blocking call to some path using the HEAD http verb. Declaration ApiResponse<T> Head<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. Returns Type Description ApiResponse<T> The response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type. View Source Options<T>(string, RequestOptions, IReadableConfiguration) Executes a blocking call to some path using the OPTIONS http verb. Declaration ApiResponse<T> Options<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. Returns Type Description ApiResponse<T> The response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type. View Source Patch<T>(string, RequestOptions, IReadableConfiguration) Executes a blocking call to some path using the PATCH http verb. Declaration ApiResponse<T> Patch<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. Returns Type Description ApiResponse<T> The response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type. View Source Post<T>(string, RequestOptions, IReadableConfiguration) Executes a blocking call to some path using the POST http verb. Declaration ApiResponse<T> Post<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. Returns Type Description ApiResponse<T> The response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type. View Source Put<T>(string, RequestOptions, IReadableConfiguration) Executes a blocking call to some path using the PUT http verb. Declaration ApiResponse<T> Put<T>(string path, RequestOptions options, IReadableConfiguration configuration = null) Parameters Type Name Description string path The relative path to invoke. RequestOptions options The request parameters to pass along to the client. IReadableConfiguration configuration Per-request configurable settings. Returns Type Description ApiResponse<T> The response data, decorated with ApiResponse<T> Type Parameters Name Description T The return type."
  },
  "api/mailslurp.Client.Multimap-2.html": {
    "href": "api/mailslurp.Client.Multimap-2.html",
    "title": "Class Multimap<TKey, TValue> | MailSlurp",
    "keywords": "Class Multimap<TKey, TValue> A dictionary in which one key has many associated values. Inheritance object Multimap<TKey, TValue> Implements IDictionary<TKey, IList<TValue>> ICollection<KeyValuePair<TKey, IList<TValue>>> IEnumerable<KeyValuePair<TKey, IList<TValue>>> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public class Multimap<TKey, TValue> : IDictionary<TKey, IList<TValue>>, ICollection<KeyValuePair<TKey, IList<TValue>>>, IEnumerable<KeyValuePair<TKey, IList<TValue>>>, IEnumerable Type Parameters Name Description TKey The type of the key TValue The type of the value associated with the key. Constructors View Source Multimap() Empty Constructor. Declaration public Multimap() View Source Multimap(IEqualityComparer<TKey>) Constructor with comparer. Declaration public Multimap(IEqualityComparer<TKey> comparer) Parameters Type Name Description IEqualityComparer<TKey> comparer Properties View Source Count Gets the number of items contained in the Multimap. Declaration public int Count { get; } Property Value Type Description int View Source IsReadOnly Gets a value indicating whether the Multimap is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description bool View Source this[TKey] Gets or sets the item with the specified key. Declaration public IList<TValue> this[TKey key] { get; set; } Parameters Type Name Description TKey key The key of the item to get or set. Property Value Type Description IList<TValue> The value of the specified key. View Source Keys Gets a System.Collections.Generic.ICollection containing the keys of the Multimap. Declaration public ICollection<TKey> Keys { get; } Property Value Type Description ICollection<TKey> View Source Values Gets a System.Collections.Generic.ICollection containing the values of the Multimap. Declaration public ICollection<IList<TValue>> Values { get; } Property Value Type Description ICollection<IList<TValue>> Methods View Source Add(TKey, TValue) Adds an item with the provided key and value to the Multimap. Declaration public void Add(TKey key, TValue value) Parameters Type Name Description TKey key The object to use as the key of the item to add. TValue value The object to use as the value of the item to add. Exceptions Type Condition InvalidOperationException Thrown when couldn't add value to Multimap. View Source Add(TKey, IList<TValue>) Adds an item with the provided key and value to the Multimap. Declaration public void Add(TKey key, IList<TValue> value) Parameters Type Name Description TKey key The object to use as the key of the item to add. IList<TValue> value The object to use as the value of the item to add. Exceptions Type Condition InvalidOperationException Thrown when couldn't add the value to Multimap. View Source Add(Multimap<TKey, TValue>) Add Multimap to Multimap Declaration public void Add(Multimap<TKey, TValue> multimap) Parameters Type Name Description Multimap<TKey, TValue> multimap Multimap View Source Add(KeyValuePair<TKey, IList<TValue>>) Add values to Multimap Declaration public void Add(KeyValuePair<TKey, IList<TValue>> item) Parameters Type Name Description KeyValuePair<TKey, IList<TValue>> item Key value pair View Source Clear() Clear Multimap Declaration public void Clear() View Source Contains(KeyValuePair<TKey, IList<TValue>>) Determines whether Multimap contains the specified item. Declaration public bool Contains(KeyValuePair<TKey, IList<TValue>> item) Parameters Type Name Description KeyValuePair<TKey, IList<TValue>> item Key value pair Returns Type Description bool true if the Multimap contains the item; otherwise, false. Exceptions Type Condition NotImplementedException Method needs to be implemented View Source ContainsKey(TKey) Determines whether the Multimap contains an item with the specified key. Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key The key to locate in the Multimap. Returns Type Description bool true if the Multimap contains an item with the key; otherwise, false. View Source CopyTo(Array, int) Copy the items of the Multimap to an System.Array, starting at a particular System.Array index. Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array The one-dimensional System.Array that is the destination of the items copied from Multimap. The System.Array must have zero-based indexing. int index The zero-based index in array at which copying begins. View Source CopyTo(KeyValuePair<TKey, IList<TValue>>[], int) Copy items of the Multimap to an array, starting at a particular array index. Declaration public void CopyTo(KeyValuePair<TKey, IList<TValue>>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair<TKey, IList<TValue>>[] array The array that is the destination of the items copied from Multimap. The array must have zero-based indexing. int arrayIndex The zero-based index in array at which copying begins. Exceptions Type Condition NotImplementedException Method needs to be implemented View Source GetEnumerator() To get the enumerator. Declaration public IEnumerator<KeyValuePair<TKey, IList<TValue>>> GetEnumerator() Returns Type Description IEnumerator<KeyValuePair<TKey, IList<TValue>>> Enumerator View Source Remove(TKey) Removes item with the specified key from the Multimap. Declaration public bool Remove(TKey key) Parameters Type Name Description TKey key The key to locate in the Multimap. Returns Type Description bool true if the item is successfully removed; otherwise, false. View Source Remove(KeyValuePair<TKey, IList<TValue>>) Removes the specified item from the Multimap. Declaration public bool Remove(KeyValuePair<TKey, IList<TValue>> item) Parameters Type Name Description KeyValuePair<TKey, IList<TValue>> item Key value pair Returns Type Description bool true if the item is successfully removed; otherwise, false. Exceptions Type Condition NotImplementedException Method needs to be implemented View Source TryGetValue(TKey, out IList<TValue>) Gets the value associated with the specified key. Declaration public bool TryGetValue(TKey key, out IList<TValue> value) Parameters Type Name Description TKey key The key whose value to get. IList<TValue> value When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized. Returns Type Description bool true if the object that implements Multimap contains an item with the specified key; otherwise, false. Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/mailslurp.Client.OpenAPIDateConverter.html": {
    "href": "api/mailslurp.Client.OpenAPIDateConverter.html",
    "title": "Class OpenAPIDateConverter | MailSlurp",
    "keywords": "Class OpenAPIDateConverter Formatter for 'date' openapi formats ss defined by full-date - RFC3339 see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#data-types Inheritance object Newtonsoft.Json.JsonConverter Newtonsoft.Json.Converters.DateTimeConverterBase Newtonsoft.Json.Converters.IsoDateTimeConverter OpenAPIDateConverter Inherited Members Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer) Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer) Newtonsoft.Json.Converters.IsoDateTimeConverter.DateTimeStyles Newtonsoft.Json.Converters.IsoDateTimeConverter.DateTimeFormat Newtonsoft.Json.Converters.IsoDateTimeConverter.Culture Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type) Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public class OpenAPIDateConverter : IsoDateTimeConverter Constructors View Source OpenAPIDateConverter() Initializes a new instance of the OpenAPIDateConverter class. Declaration public OpenAPIDateConverter()"
  },
  "api/mailslurp.Client.RequestOptions.html": {
    "href": "api/mailslurp.Client.RequestOptions.html",
    "title": "Class RequestOptions | MailSlurp",
    "keywords": "Class RequestOptions A container for generalized request inputs. This type allows consumers to extend the request functionality by abstracting away from the default (built-in) request framework (e.g. RestSharp). Inheritance object RequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public class RequestOptions Constructors View Source RequestOptions() Constructs a new instance of RequestOptions Declaration public RequestOptions() Properties View Source Cookies Cookies to be sent along with the request. Declaration public List<Cookie> Cookies { get; set; } Property Value Type Description List<Cookie> View Source Data Any data associated with a request body. Declaration public object Data { get; set; } Property Value Type Description object View Source FileParameters File parameters to be sent along with the request. Declaration public Multimap<string, Stream> FileParameters { get; set; } Property Value Type Description Multimap<string, Stream> View Source FormParameters Form parameters to be sent along with the request. Declaration public Dictionary<string, string> FormParameters { get; set; } Property Value Type Description Dictionary<string, string> View Source HeaderParameters Header parameters to be applied to to the request. Keys may have 1 or more values associated. Declaration public Multimap<string, string> HeaderParameters { get; set; } Property Value Type Description Multimap<string, string> View Source Operation Operation associated with the request path. Declaration public string Operation { get; set; } Property Value Type Description string View Source OperationIndex Index associated with the operation. Declaration public int OperationIndex { get; set; } Property Value Type Description int View Source PathParameters Parameters to be bound to path parts of the Request's URL Declaration public Dictionary<string, string> PathParameters { get; set; } Property Value Type Description Dictionary<string, string> View Source QueryParameters Query parameters to be applied to the request. Keys may have 1 or more values associated. Declaration public Multimap<string, string> QueryParameters { get; set; } Property Value Type Description Multimap<string, string>"
  },
  "api/mailslurp.Client.RetryConfiguration.html": {
    "href": "api/mailslurp.Client.RetryConfiguration.html",
    "title": "Class RetryConfiguration | MailSlurp",
    "keywords": "Class RetryConfiguration Configuration class to set the polly retry policies to be applied to the requests. Inheritance object RetryConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Client Assembly: mailslurp.dll Syntax public static class RetryConfiguration Properties View Source AsyncRetryPolicy Async retry policy Declaration public static AsyncPolicy<RestResponse> AsyncRetryPolicy { get; set; } Property Value Type Description Polly.AsyncPolicy<TResult><RestResponse> View Source RetryPolicy Retry policy Declaration public static Policy<RestResponse> RetryPolicy { get; set; } Property Value Type Description Polly.Policy<TResult><RestResponse>"
  },
  "api/mailslurp.Model.AbstractOpenAPISchema.html": {
    "href": "api/mailslurp.Model.AbstractOpenAPISchema.html",
    "title": "Class AbstractOpenAPISchema | MailSlurp",
    "keywords": "Class AbstractOpenAPISchema Abstract base class for oneOf, anyOf schemas in the OpenAPI specification Inheritance object AbstractOpenAPISchema Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax public abstract class AbstractOpenAPISchema Fields View Source AdditionalPropertiesSerializerSettings Custom JSON serializer for objects with additional properties Declaration public static readonly JsonSerializerSettings AdditionalPropertiesSerializerSettings Field Value Type Description Newtonsoft.Json.JsonSerializerSettings View Source SerializerSettings Custom JSON serializer Declaration public static readonly JsonSerializerSettings SerializerSettings Field Value Type Description Newtonsoft.Json.JsonSerializerSettings Properties View Source ActualInstance Gets or Sets the actual instance Declaration public abstract object ActualInstance { get; set; } Property Value Type Description object View Source IsNullable Gets or Sets IsNullable to indicate whether the instance is nullable Declaration public bool IsNullable { get; protected set; } Property Value Type Description bool View Source SchemaType Gets or Sets the schema type, which can be either oneOf or anyOf Declaration public string SchemaType { get; protected set; } Property Value Type Description string Methods View Source ToJson() Converts the instance into JSON string. Declaration public abstract string ToJson() Returns Type Description string"
  },
  "api/mailslurp.Model.AbstractWebhookPayload.EventNameEnum.html": {
    "href": "api/mailslurp.Model.AbstractWebhookPayload.EventNameEnum.html",
    "title": "Enum AbstractWebhookPayload.EventNameEnum | MailSlurp",
    "keywords": "Enum AbstractWebhookPayload.EventNameEnum Defines EventName Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum AbstractWebhookPayload.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.AbstractWebhookPayload.html": {
    "href": "api/mailslurp.Model.AbstractWebhookPayload.html",
    "title": "Class AbstractWebhookPayload | MailSlurp",
    "keywords": "Class AbstractWebhookPayload Abstract webhook payload. Use the correct payload type for your webhook event type in order to access all the specific properties for that event. See the NEW_EMAIL,NEW_CONTACT, NEW_ATTACHMENT and EMAIL_OPENED payloads for the properties available for those events. Inheritance object AbstractWebhookPayload Implements IEquatable<AbstractWebhookPayload> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"AbstractWebhookPayload\")] public class AbstractWebhookPayload : IEquatable<AbstractWebhookPayload>, IValidatableObject Constructors View Source AbstractWebhookPayload() Initializes a new instance of the AbstractWebhookPayload class. Declaration [JsonConstructor] protected AbstractWebhookPayload() View Source AbstractWebhookPayload(EventNameEnum, string, Guid, string) Initializes a new instance of the AbstractWebhookPayload class. Declaration public AbstractWebhookPayload(AbstractWebhookPayload.EventNameEnum eventName = (AbstractWebhookPayload.EventNameEnum)0, string messageId = null, Guid webhookId = default, string webhookName = null) Parameters Type Name Description AbstractWebhookPayload.EventNameEnum eventName eventName (required). string messageId messageId (required). Guid webhookId webhookId (required). string webhookName webhookName. Properties View Source EventName Gets or Sets EventName Declaration [DataMember(Name = \"eventName\", IsRequired = true, EmitDefaultValue = true)] public AbstractWebhookPayload.EventNameEnum EventName { get; set; } Property Value Type Description AbstractWebhookPayload.EventNameEnum View Source MessageId Gets or Sets MessageId Declaration [DataMember(Name = \"messageId\", IsRequired = true, EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string View Source WebhookId Gets or Sets WebhookId Declaration [DataMember(Name = \"webhookId\", IsRequired = true, EmitDefaultValue = true)] public Guid WebhookId { get; set; } Property Value Type Description Guid View Source WebhookName Gets or Sets WebhookName Declaration [DataMember(Name = \"webhookName\", EmitDefaultValue = false)] public string WebhookName { get; set; } Property Value Type Description string Methods View Source Equals(AbstractWebhookPayload) Returns true if AbstractWebhookPayload instances are equal Declaration public bool Equals(AbstractWebhookPayload input) Parameters Type Name Description AbstractWebhookPayload input Instance of AbstractWebhookPayload to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.AccountBounceBlockDto.html": {
    "href": "api/mailslurp.Model.AccountBounceBlockDto.html",
    "title": "Class AccountBounceBlockDto | MailSlurp",
    "keywords": "Class AccountBounceBlockDto AccountBounceBlockDto Inheritance object AccountBounceBlockDto Implements IEquatable<AccountBounceBlockDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"AccountBounceBlockDto\")] public class AccountBounceBlockDto : IEquatable<AccountBounceBlockDto>, IValidatableObject Constructors View Source AccountBounceBlockDto() Initializes a new instance of the AccountBounceBlockDto class. Declaration [JsonConstructor] protected AccountBounceBlockDto() View Source AccountBounceBlockDto(bool, long, long, long, long) Initializes a new instance of the AccountBounceBlockDto class. Declaration public AccountBounceBlockDto(bool isSendingBlocked = false, long bounceCount = 0, long bounceCountToday = 0, long maximumDailyBounces = 0, long maximumAccountBounces = 0) Parameters Type Name Description bool isSendingBlocked isSendingBlocked (required). long bounceCount bounceCount (required). long bounceCountToday bounceCountToday (required). long maximumDailyBounces maximumDailyBounces (required). long maximumAccountBounces maximumAccountBounces (required). Properties View Source BounceCount Gets or Sets BounceCount Declaration [DataMember(Name = \"bounceCount\", IsRequired = true, EmitDefaultValue = true)] public long BounceCount { get; set; } Property Value Type Description long View Source BounceCountToday Gets or Sets BounceCountToday Declaration [DataMember(Name = \"bounceCountToday\", IsRequired = true, EmitDefaultValue = true)] public long BounceCountToday { get; set; } Property Value Type Description long View Source IsSendingBlocked Gets or Sets IsSendingBlocked Declaration [DataMember(Name = \"isSendingBlocked\", IsRequired = true, EmitDefaultValue = true)] public bool IsSendingBlocked { get; set; } Property Value Type Description bool View Source MaximumAccountBounces Gets or Sets MaximumAccountBounces Declaration [DataMember(Name = \"maximumAccountBounces\", IsRequired = true, EmitDefaultValue = true)] public long MaximumAccountBounces { get; set; } Property Value Type Description long View Source MaximumDailyBounces Gets or Sets MaximumDailyBounces Declaration [DataMember(Name = \"maximumDailyBounces\", IsRequired = true, EmitDefaultValue = true)] public long MaximumDailyBounces { get; set; } Property Value Type Description long Methods View Source Equals(AccountBounceBlockDto) Returns true if AccountBounceBlockDto instances are equal Declaration public bool Equals(AccountBounceBlockDto input) Parameters Type Name Description AccountBounceBlockDto input Instance of AccountBounceBlockDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.AliasDto.html": {
    "href": "api/mailslurp.Model.AliasDto.html",
    "title": "Class AliasDto | MailSlurp",
    "keywords": "Class AliasDto Email alias representation Inheritance object AliasDto Implements IEquatable<AliasDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"AliasDto\")] public class AliasDto : IEquatable<AliasDto>, IValidatableObject Constructors View Source AliasDto() Initializes a new instance of the AliasDto class. Declaration [JsonConstructor] protected AliasDto() View Source AliasDto(Guid, string, string, Guid, Guid, string, bool?, bool, Guid?, DateTime?, DateTime?) Initializes a new instance of the AliasDto class. Declaration public AliasDto(Guid id = default, string emailAddress = null, string maskedEmailAddress = null, Guid userId = default, Guid inboxId = default, string name = null, bool? useThreads = null, bool isVerified = false, Guid? domainId = null, DateTime? createdAt = null, DateTime? updatedAt = null) Parameters Type Name Description Guid id id (required). string emailAddress The alias's email address for receiving email (required). string maskedEmailAddress The underlying email address that is hidden and will received forwarded email. Guid userId userId (required). Guid inboxId Inbox that is associated with the alias (required). string name name. bool? useThreads If alias will generate response threads or not when email are received by it. bool isVerified Has the alias been verified. You must verify an alias if the masked email address has not yet been verified by your account (required). Guid? domainId Domain ID associated with the alias. DateTime? createdAt createdAt. DateTime? updatedAt updatedAt. Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", EmitDefaultValue = true)] public DateTime? CreatedAt { get; set; } Property Value Type Description DateTime? View Source DomainId Domain ID associated with the alias Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? Domain ID associated with the alias View Source EmailAddress The alias's email address for receiving email Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string The alias's email address for receiving email View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Inbox that is associated with the alias Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid Inbox that is associated with the alias View Source IsVerified Has the alias been verified. You must verify an alias if the masked email address has not yet been verified by your account Declaration [DataMember(Name = \"isVerified\", IsRequired = true, EmitDefaultValue = true)] public bool IsVerified { get; set; } Property Value Type Description bool Has the alias been verified. You must verify an alias if the masked email address has not yet been verified by your account View Source MaskedEmailAddress The underlying email address that is hidden and will received forwarded email Declaration [DataMember(Name = \"maskedEmailAddress\", EmitDefaultValue = true)] public string MaskedEmailAddress { get; set; } Property Value Type Description string The underlying email address that is hidden and will received forwarded email View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", EmitDefaultValue = true)] public DateTime? UpdatedAt { get; set; } Property Value Type Description DateTime? View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid View Source UseThreads If alias will generate response threads or not when email are received by it Declaration [DataMember(Name = \"useThreads\", EmitDefaultValue = true)] public bool? UseThreads { get; set; } Property Value Type Description bool? If alias will generate response threads or not when email are received by it Methods View Source Equals(AliasDto) Returns true if AliasDto instances are equal Declaration public bool Equals(AliasDto input) Parameters Type Name Description AliasDto input Instance of AliasDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.AliasProjection.html": {
    "href": "api/mailslurp.Model.AliasProjection.html",
    "title": "Class AliasProjection | MailSlurp",
    "keywords": "Class AliasProjection Representation of a alias Inheritance object AliasProjection Implements IEquatable<AliasProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"AliasProjection\")] public class AliasProjection : IEquatable<AliasProjection>, IValidatableObject Constructors View Source AliasProjection() Initializes a new instance of the AliasProjection class. Declaration [JsonConstructor] protected AliasProjection() View Source AliasProjection(DateTime, DateTime, string, Guid, Guid, bool, string, Guid) Initializes a new instance of the AliasProjection class. Declaration public AliasProjection(DateTime createdAt = default, DateTime updatedAt = default, string emailAddress = null, Guid userId = default, Guid inboxId = default, bool useThreads = false, string name = null, Guid id = default) Parameters Type Name Description DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). string emailAddress emailAddress (required). Guid userId userId (required). Guid inboxId inboxId (required). bool useThreads useThreads. string name name. Guid id id (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EmailAddress Gets or Sets EmailAddress Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", EmitDefaultValue = false)] public string Name { get; set; } Property Value Type Description string View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid View Source UseThreads Gets or Sets UseThreads Declaration [DataMember(Name = \"useThreads\", EmitDefaultValue = true)] public bool UseThreads { get; set; } Property Value Type Description bool Methods View Source Equals(AliasProjection) Returns true if AliasProjection instances are equal Declaration public bool Equals(AliasProjection input) Parameters Type Name Description AliasProjection input Instance of AliasProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.AttachmentEntity.html": {
    "href": "api/mailslurp.Model.AttachmentEntity.html",
    "title": "Class AttachmentEntity | MailSlurp",
    "keywords": "Class AttachmentEntity AttachmentEntity Inheritance object AttachmentEntity Implements IEquatable<AttachmentEntity> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"AttachmentEntity\")] public class AttachmentEntity : IEquatable<AttachmentEntity>, IValidatableObject Constructors View Source AttachmentEntity() Initializes a new instance of the AttachmentEntity class. Declaration [JsonConstructor] protected AttachmentEntity() View Source AttachmentEntity(Guid, string, string, Guid, string, long, string, string, Guid, DateTime, DateTime) Initializes a new instance of the AttachmentEntity class. Declaration public AttachmentEntity(Guid id = default, string attachmentId = null, string bucket = null, Guid userId = default, string contentType = null, long contentLength = 0, string contentId = null, string name = null, Guid inboxId = default, DateTime createdAt = default, DateTime updatedAt = default) Parameters Type Name Description Guid id id. string attachmentId attachmentId (required). string bucket bucket. Guid userId userId (required). string contentType contentType. long contentLength contentLength. string contentId contentId. string name name. Guid inboxId inboxId. DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Properties View Source AttachmentId Gets or Sets AttachmentId Declaration [DataMember(Name = \"attachmentId\", IsRequired = true, EmitDefaultValue = true)] public string AttachmentId { get; set; } Property Value Type Description string View Source Bucket Gets or Sets Bucket Declaration [DataMember(Name = \"bucket\", EmitDefaultValue = false)] public string Bucket { get; set; } Property Value Type Description string View Source ContentId Gets or Sets ContentId Declaration [DataMember(Name = \"contentId\", EmitDefaultValue = false)] public string ContentId { get; set; } Property Value Type Description string View Source ContentLength Gets or Sets ContentLength Declaration [DataMember(Name = \"contentLength\", EmitDefaultValue = false)] public long ContentLength { get; set; } Property Value Type Description long View Source ContentType Gets or Sets ContentType Declaration [DataMember(Name = \"contentType\", EmitDefaultValue = false)] public string ContentType { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = false)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", EmitDefaultValue = false)] public string Name { get; set; } Property Value Type Description string View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(AttachmentEntity) Returns true if AttachmentEntity instances are equal Declaration public bool Equals(AttachmentEntity input) Parameters Type Name Description AttachmentEntity input Instance of AttachmentEntity to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.AttachmentMetaData.html": {
    "href": "api/mailslurp.Model.AttachmentMetaData.html",
    "title": "Class AttachmentMetaData | MailSlurp",
    "keywords": "Class AttachmentMetaData Meta data associated with an attachment. Attachments are stored as byte blobs so the meta data is stored separately. Inheritance object AttachmentMetaData Implements IEquatable<AttachmentMetaData> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"AttachmentMetaData\")] public class AttachmentMetaData : IEquatable<AttachmentMetaData>, IValidatableObject Constructors View Source AttachmentMetaData() Initializes a new instance of the AttachmentMetaData class. Declaration [JsonConstructor] protected AttachmentMetaData() View Source AttachmentMetaData(string, string, long, string, string) Initializes a new instance of the AttachmentMetaData class. Declaration public AttachmentMetaData(string name = null, string contentType = null, long contentLength = 0, string id = null, string contentId = null) Parameters Type Name Description string name Name of attachment if given (required). string contentType Content type of attachment such as image/png (required). long contentLength Size of attachment in bytes (required). string id ID of attachment. Can be used to with attachment controller endpoints to download attachment or with sending methods to attach to an email. (required). string contentId CID of attachment. Properties View Source ContentId CID of attachment Declaration [DataMember(Name = \"contentId\", EmitDefaultValue = true)] public string ContentId { get; set; } Property Value Type Description string CID of attachment View Source ContentLength Size of attachment in bytes Declaration [DataMember(Name = \"contentLength\", IsRequired = true, EmitDefaultValue = true)] public long ContentLength { get; set; } Property Value Type Description long Size of attachment in bytes View Source ContentType Content type of attachment such as image/png Declaration [DataMember(Name = \"contentType\", IsRequired = true, EmitDefaultValue = true)] public string ContentType { get; set; } Property Value Type Description string Content type of attachment such as image/png View Source Id ID of attachment. Can be used to with attachment controller endpoints to download attachment or with sending methods to attach to an email. Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public string Id { get; set; } Property Value Type Description string ID of attachment. Can be used to with attachment controller endpoints to download attachment or with sending methods to attach to an email. View Source Name Name of attachment if given Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Name of attachment if given Methods View Source Equals(AttachmentMetaData) Returns true if AttachmentMetaData instances are equal Declaration public bool Equals(AttachmentMetaData input) Parameters Type Name Description AttachmentMetaData input Instance of AttachmentMetaData to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.AttachmentProjection.html": {
    "href": "api/mailslurp.Model.AttachmentProjection.html",
    "title": "Class AttachmentProjection | MailSlurp",
    "keywords": "Class AttachmentProjection Email attachment data Inheritance object AttachmentProjection Implements IEquatable<AttachmentProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"AttachmentProjection\")] public class AttachmentProjection : IEquatable<AttachmentProjection>, IValidatableObject Constructors View Source AttachmentProjection() Initializes a new instance of the AttachmentProjection class. Declaration [JsonConstructor] protected AttachmentProjection() View Source AttachmentProjection(DateTime, DateTime, Guid, string, string, string, long?, string) Initializes a new instance of the AttachmentProjection class. Declaration public AttachmentProjection(DateTime createdAt = default, DateTime updatedAt = default, Guid userId = default, string contentId = null, string attachmentId = null, string name = null, long? contentLength = null, string contentType = null) Parameters Type Name Description DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Guid userId userId (required). string contentId Content ID of attachment.. string attachmentId Attachment ID (required). string name name. long? contentLength Content length of attachment in bytes. string contentType Content type of attachment.. Properties View Source AttachmentId Attachment ID Declaration [DataMember(Name = \"attachmentId\", IsRequired = true, EmitDefaultValue = true)] public string AttachmentId { get; set; } Property Value Type Description string Attachment ID View Source ContentId Content ID of attachment. Declaration [DataMember(Name = \"contentId\", EmitDefaultValue = true)] public string ContentId { get; set; } Property Value Type Description string Content ID of attachment. View Source ContentLength Content length of attachment in bytes Declaration [DataMember(Name = \"contentLength\", EmitDefaultValue = true)] public long? ContentLength { get; set; } Property Value Type Description long? Content length of attachment in bytes View Source ContentType Content type of attachment. Declaration [DataMember(Name = \"contentType\", EmitDefaultValue = true)] public string ContentType { get; set; } Property Value Type Description string Content type of attachment. View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(AttachmentProjection) Returns true if AttachmentProjection instances are equal Declaration public bool Equals(AttachmentProjection input) Parameters Type Name Description AttachmentProjection input Instance of AttachmentProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.BasicAuthOptions.html": {
    "href": "api/mailslurp.Model.BasicAuthOptions.html",
    "title": "Class BasicAuthOptions | MailSlurp",
    "keywords": "Class BasicAuthOptions Basic Authentication options for webhooks. Will be used is present when calling webhook endpoints. Inheritance object BasicAuthOptions Implements IEquatable<BasicAuthOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"BasicAuthOptions\")] public class BasicAuthOptions : IEquatable<BasicAuthOptions>, IValidatableObject Constructors View Source BasicAuthOptions() Initializes a new instance of the BasicAuthOptions class. Declaration [JsonConstructor] protected BasicAuthOptions() View Source BasicAuthOptions(string, string) Initializes a new instance of the BasicAuthOptions class. Declaration public BasicAuthOptions(string username = null, string password = null) Parameters Type Name Description string username username (required). string password password (required). Properties View Source Password Gets or Sets Password Declaration [DataMember(Name = \"password\", IsRequired = true, EmitDefaultValue = true)] public string Password { get; set; } Property Value Type Description string View Source Username Gets or Sets Username Declaration [DataMember(Name = \"username\", IsRequired = true, EmitDefaultValue = true)] public string Username { get; set; } Property Value Type Description string Methods View Source Equals(BasicAuthOptions) Returns true if BasicAuthOptions instances are equal Declaration public bool Equals(BasicAuthOptions input) Parameters Type Name Description BasicAuthOptions input Instance of BasicAuthOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.BouncedEmailDto.html": {
    "href": "api/mailslurp.Model.BouncedEmailDto.html",
    "title": "Class BouncedEmailDto | MailSlurp",
    "keywords": "Class BouncedEmailDto Bounced email Inheritance object BouncedEmailDto Implements IEquatable<BouncedEmailDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"BouncedEmailDto\")] public class BouncedEmailDto : IEquatable<BouncedEmailDto>, IValidatableObject Constructors View Source BouncedEmailDto() Initializes a new instance of the BouncedEmailDto class. Declaration [JsonConstructor] protected BouncedEmailDto() View Source BouncedEmailDto(Guid, Guid, string, List<string>, string, string, string, List<string>, string, Guid?, string, DateTime) Initializes a new instance of the BouncedEmailDto class. Declaration public BouncedEmailDto(Guid id = default, Guid userId = default, string notificationType = null, List<string> sentToRecipients = null, string sender = null, string bounceMta = null, string bounceType = null, List<string> bounceRecipients = null, string bounceSubType = null, Guid? sentEmailId = null, string subject = null, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). Guid userId userId (required). string notificationType notificationType (required). List<string> sentToRecipients sentToRecipients. string sender sender (required). string bounceMta bounceMta. string bounceType bounceType. List<string> bounceRecipients bounceRecipients. string bounceSubType bounceSubType. Guid? sentEmailId sentEmailId. string subject subject. DateTime createdAt createdAt (required). Properties View Source BounceMta Gets or Sets BounceMta Declaration [DataMember(Name = \"bounceMta\", EmitDefaultValue = true)] public string BounceMta { get; set; } Property Value Type Description string View Source BounceRecipients Gets or Sets BounceRecipients Declaration [DataMember(Name = \"bounceRecipients\", EmitDefaultValue = true)] public List<string> BounceRecipients { get; set; } Property Value Type Description List<string> View Source BounceSubType Gets or Sets BounceSubType Declaration [DataMember(Name = \"bounceSubType\", EmitDefaultValue = true)] public string BounceSubType { get; set; } Property Value Type Description string View Source BounceType Gets or Sets BounceType Declaration [DataMember(Name = \"bounceType\", EmitDefaultValue = true)] public string BounceType { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source NotificationType Gets or Sets NotificationType Declaration [DataMember(Name = \"notificationType\", IsRequired = true, EmitDefaultValue = true)] public string NotificationType { get; set; } Property Value Type Description string View Source Sender Gets or Sets Sender Declaration [DataMember(Name = \"sender\", IsRequired = true, EmitDefaultValue = true)] public string Sender { get; set; } Property Value Type Description string View Source SentEmailId Gets or Sets SentEmailId Declaration [DataMember(Name = \"sentEmailId\", EmitDefaultValue = true)] public Guid? SentEmailId { get; set; } Property Value Type Description Guid? View Source SentToRecipients Gets or Sets SentToRecipients Declaration [DataMember(Name = \"sentToRecipients\", EmitDefaultValue = true)] public List<string> SentToRecipients { get; set; } Property Value Type Description List<string> View Source Subject Gets or Sets Subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(BouncedEmailDto) Returns true if BouncedEmailDto instances are equal Declaration public bool Equals(BouncedEmailDto input) Parameters Type Name Description BouncedEmailDto input Instance of BouncedEmailDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.BouncedRecipientDto.html": {
    "href": "api/mailslurp.Model.BouncedRecipientDto.html",
    "title": "Class BouncedRecipientDto | MailSlurp",
    "keywords": "Class BouncedRecipientDto Bounced recipient Inheritance object BouncedRecipientDto Implements IEquatable<BouncedRecipientDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"BouncedRecipientDto\")] public class BouncedRecipientDto : IEquatable<BouncedRecipientDto>, IValidatableObject Constructors View Source BouncedRecipientDto() Initializes a new instance of the BouncedRecipientDto class. Declaration [JsonConstructor] protected BouncedRecipientDto() View Source BouncedRecipientDto(Guid, Guid?, Guid?, string, string, string, string, string, DateTime) Initializes a new instance of the BouncedRecipientDto class. Declaration public BouncedRecipientDto(Guid id = default, Guid? userId = null, Guid? sentEmailId = null, string recipient = null, string diagnosticCode = null, string action = null, string bounceType = null, string status = null, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). Guid? userId userId. Guid? sentEmailId sentEmailId. string recipient recipient (required). string diagnosticCode diagnosticCode. string action action. string bounceType bounceType. string status status. DateTime createdAt createdAt (required). Properties View Source Action Gets or Sets Action Declaration [DataMember(Name = \"action\", EmitDefaultValue = true)] public string Action { get; set; } Property Value Type Description string View Source BounceType Gets or Sets BounceType Declaration [DataMember(Name = \"bounceType\", EmitDefaultValue = true)] public string BounceType { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source DiagnosticCode Gets or Sets DiagnosticCode Declaration [DataMember(Name = \"diagnosticCode\", EmitDefaultValue = true)] public string DiagnosticCode { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source Recipient Gets or Sets Recipient Declaration [DataMember(Name = \"recipient\", IsRequired = true, EmitDefaultValue = true)] public string Recipient { get; set; } Property Value Type Description string View Source SentEmailId Gets or Sets SentEmailId Declaration [DataMember(Name = \"sentEmailId\", EmitDefaultValue = true)] public Guid? SentEmailId { get; set; } Property Value Type Description Guid? View Source Status Gets or Sets Status Declaration [DataMember(Name = \"status\", EmitDefaultValue = true)] public string Status { get; set; } Property Value Type Description string View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", EmitDefaultValue = true)] public Guid? UserId { get; set; } Property Value Type Description Guid? Methods View Source Equals(BouncedRecipientDto) Returns true if BouncedRecipientDto instances are equal Declaration public bool Equals(BouncedRecipientDto input) Parameters Type Name Description BouncedRecipientDto input Instance of BouncedRecipientDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.BounceProjection.html": {
    "href": "api/mailslurp.Model.BounceProjection.html",
    "title": "Class BounceProjection | MailSlurp",
    "keywords": "Class BounceProjection Bounced email event Inheritance object BounceProjection Implements IEquatable<BounceProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"BounceProjection\")] public class BounceProjection : IEquatable<BounceProjection>, IValidatableObject Constructors View Source BounceProjection() Initializes a new instance of the BounceProjection class. Declaration [JsonConstructor] protected BounceProjection() View Source BounceProjection(DateTime, string, string, string, string, Guid) Initializes a new instance of the BounceProjection class. Declaration public BounceProjection(DateTime createdAt = default, string sender = null, string bounceType = null, string bounceMta = null, string subject = null, Guid id = default) Parameters Type Name Description DateTime createdAt createdAt (required). string sender sender (required). string bounceType bounceType. string bounceMta bounceMta. string subject subject. Guid id id. Properties View Source BounceMta Gets or Sets BounceMta Declaration [DataMember(Name = \"bounceMta\", EmitDefaultValue = true)] public string BounceMta { get; set; } Property Value Type Description string View Source BounceType Gets or Sets BounceType Declaration [DataMember(Name = \"bounceType\", EmitDefaultValue = true)] public string BounceType { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public Guid Id { get; set; } Property Value Type Description Guid View Source Sender Gets or Sets Sender Declaration [DataMember(Name = \"sender\", IsRequired = true, EmitDefaultValue = true)] public string Sender { get; set; } Property Value Type Description string View Source Subject Gets or Sets Subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string Methods View Source Equals(BounceProjection) Returns true if BounceProjection instances are equal Declaration public bool Equals(BounceProjection input) Parameters Type Name Description BounceProjection input Instance of BounceProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.BounceRecipientProjection.html": {
    "href": "api/mailslurp.Model.BounceRecipientProjection.html",
    "title": "Class BounceRecipientProjection | MailSlurp",
    "keywords": "Class BounceRecipientProjection Bounced recipient Inheritance object BounceRecipientProjection Implements IEquatable<BounceRecipientProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"BounceRecipientProjection\")] public class BounceRecipientProjection : IEquatable<BounceRecipientProjection>, IValidatableObject Constructors View Source BounceRecipientProjection() Initializes a new instance of the BounceRecipientProjection class. Declaration [JsonConstructor] protected BounceRecipientProjection() View Source BounceRecipientProjection(DateTime, Guid?, string, string, string, Guid, string) Initializes a new instance of the BounceRecipientProjection class. Declaration public BounceRecipientProjection(DateTime createdAt = default, Guid? sentEmailId = null, string recipient = null, string action = null, string bounceType = null, Guid id = default, string status = null) Parameters Type Name Description DateTime createdAt createdAt (required). Guid? sentEmailId sentEmailId. string recipient recipient (required). string action action. string bounceType bounceType. Guid id id. string status status. Properties View Source Action Gets or Sets Action Declaration [DataMember(Name = \"action\", EmitDefaultValue = true)] public string Action { get; set; } Property Value Type Description string View Source BounceType Gets or Sets BounceType Declaration [DataMember(Name = \"bounceType\", EmitDefaultValue = true)] public string BounceType { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public Guid Id { get; set; } Property Value Type Description Guid View Source Recipient Gets or Sets Recipient Declaration [DataMember(Name = \"recipient\", IsRequired = true, EmitDefaultValue = true)] public string Recipient { get; set; } Property Value Type Description string View Source SentEmailId Gets or Sets SentEmailId Declaration [DataMember(Name = \"sentEmailId\", EmitDefaultValue = true)] public Guid? SentEmailId { get; set; } Property Value Type Description Guid? View Source Status Gets or Sets Status Declaration [DataMember(Name = \"status\", EmitDefaultValue = true)] public string Status { get; set; } Property Value Type Description string Methods View Source Equals(BounceRecipientProjection) Returns true if BounceRecipientProjection instances are equal Declaration public bool Equals(BounceRecipientProjection input) Parameters Type Name Description BounceRecipientProjection input Instance of BounceRecipientProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.BulkSendEmailOptions.html": {
    "href": "api/mailslurp.Model.BulkSendEmailOptions.html",
    "title": "Class BulkSendEmailOptions | MailSlurp",
    "keywords": "Class BulkSendEmailOptions Options for bulk sending an email from multiple addresses. See regular sendEmail methods for more information. Inheritance object BulkSendEmailOptions Implements IEquatable<BulkSendEmailOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"BulkSendEmailOptions\")] public class BulkSendEmailOptions : IEquatable<BulkSendEmailOptions>, IValidatableObject Constructors View Source BulkSendEmailOptions() Initializes a new instance of the BulkSendEmailOptions class. Declaration [JsonConstructor] protected BulkSendEmailOptions() View Source BulkSendEmailOptions(List<Guid>, SendEmailOptions) Initializes a new instance of the BulkSendEmailOptions class. Declaration public BulkSendEmailOptions(List<Guid> inboxIds = null, SendEmailOptions sendEmailOptions = null) Parameters Type Name Description List<Guid> inboxIds Inboxes to send the email from (required). SendEmailOptions sendEmailOptions sendEmailOptions (required). Properties View Source InboxIds Inboxes to send the email from Declaration [DataMember(Name = \"inboxIds\", IsRequired = true, EmitDefaultValue = true)] public List<Guid> InboxIds { get; set; } Property Value Type Description List<Guid> Inboxes to send the email from View Source SendEmailOptions Gets or Sets SendEmailOptions Declaration [DataMember(Name = \"sendEmailOptions\", IsRequired = true, EmitDefaultValue = true)] public SendEmailOptions SendEmailOptions { get; set; } Property Value Type Description SendEmailOptions Methods View Source Equals(BulkSendEmailOptions) Returns true if BulkSendEmailOptions instances are equal Declaration public bool Equals(BulkSendEmailOptions input) Parameters Type Name Description BulkSendEmailOptions input Instance of BulkSendEmailOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CanSendEmailResults.html": {
    "href": "api/mailslurp.Model.CanSendEmailResults.html",
    "title": "Class CanSendEmailResults | MailSlurp",
    "keywords": "Class CanSendEmailResults CanSendEmailResults Inheritance object CanSendEmailResults Implements IEquatable<CanSendEmailResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CanSendEmailResults\")] public class CanSendEmailResults : IEquatable<CanSendEmailResults>, IValidatableObject Constructors View Source CanSendEmailResults() Initializes a new instance of the CanSendEmailResults class. Declaration [JsonConstructor] protected CanSendEmailResults() View Source CanSendEmailResults(bool, string) Initializes a new instance of the CanSendEmailResults class. Declaration public CanSendEmailResults(bool isSendingPermitted = false, string message = null) Parameters Type Name Description bool isSendingPermitted isSendingPermitted (required). string message message. Properties View Source IsSendingPermitted Gets or Sets IsSendingPermitted Declaration [DataMember(Name = \"isSendingPermitted\", IsRequired = true, EmitDefaultValue = true)] public bool IsSendingPermitted { get; set; } Property Value Type Description bool View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description string Methods View Source Equals(CanSendEmailResults) Returns true if CanSendEmailResults instances are equal Declaration public bool Equals(CanSendEmailResults input) Parameters Type Name Description CanSendEmailResults input Instance of CanSendEmailResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CheckEmailBodyFeatureSupportResults.html": {
    "href": "api/mailslurp.Model.CheckEmailBodyFeatureSupportResults.html",
    "title": "Class CheckEmailBodyFeatureSupportResults | MailSlurp",
    "keywords": "Class CheckEmailBodyFeatureSupportResults CheckEmailBodyFeatureSupportResults Inheritance object CheckEmailBodyFeatureSupportResults Implements IEquatable<CheckEmailBodyFeatureSupportResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CheckEmailBodyFeatureSupportResults\")] public class CheckEmailBodyFeatureSupportResults : IEquatable<CheckEmailBodyFeatureSupportResults>, IValidatableObject Constructors View Source CheckEmailBodyFeatureSupportResults() Initializes a new instance of the CheckEmailBodyFeatureSupportResults class. Declaration [JsonConstructor] protected CheckEmailBodyFeatureSupportResults() View Source CheckEmailBodyFeatureSupportResults(EmailFeatureSupportResult) Initializes a new instance of the CheckEmailBodyFeatureSupportResults class. Declaration public CheckEmailBodyFeatureSupportResults(EmailFeatureSupportResult result = null) Parameters Type Name Description EmailFeatureSupportResult result result (required). Properties View Source Result Gets or Sets Result Declaration [DataMember(Name = \"result\", IsRequired = true, EmitDefaultValue = true)] public EmailFeatureSupportResult Result { get; set; } Property Value Type Description EmailFeatureSupportResult Methods View Source Equals(CheckEmailBodyFeatureSupportResults) Returns true if CheckEmailBodyFeatureSupportResults instances are equal Declaration public bool Equals(CheckEmailBodyFeatureSupportResults input) Parameters Type Name Description CheckEmailBodyFeatureSupportResults input Instance of CheckEmailBodyFeatureSupportResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CheckEmailClientSupportOptions.html": {
    "href": "api/mailslurp.Model.CheckEmailClientSupportOptions.html",
    "title": "Class CheckEmailClientSupportOptions | MailSlurp",
    "keywords": "Class CheckEmailClientSupportOptions Options for the email to be validated Inheritance object CheckEmailClientSupportOptions Implements IEquatable<CheckEmailClientSupportOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CheckEmailClientSupportOptions\")] public class CheckEmailClientSupportOptions : IEquatable<CheckEmailClientSupportOptions>, IValidatableObject Constructors View Source CheckEmailClientSupportOptions() Initializes a new instance of the CheckEmailClientSupportOptions class. Declaration [JsonConstructor] protected CheckEmailClientSupportOptions() View Source CheckEmailClientSupportOptions(string) Initializes a new instance of the CheckEmailClientSupportOptions class. Declaration public CheckEmailClientSupportOptions(string emailBody = null) Parameters Type Name Description string emailBody emailBody (required). Properties View Source EmailBody Gets or Sets EmailBody Declaration [DataMember(Name = \"emailBody\", IsRequired = true, EmitDefaultValue = true)] public string EmailBody { get; set; } Property Value Type Description string Methods View Source Equals(CheckEmailClientSupportOptions) Returns true if CheckEmailClientSupportOptions instances are equal Declaration public bool Equals(CheckEmailClientSupportOptions input) Parameters Type Name Description CheckEmailClientSupportOptions input Instance of CheckEmailClientSupportOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CheckEmailClientSupportResults.html": {
    "href": "api/mailslurp.Model.CheckEmailClientSupportResults.html",
    "title": "Class CheckEmailClientSupportResults | MailSlurp",
    "keywords": "Class CheckEmailClientSupportResults CheckEmailClientSupportResults Inheritance object CheckEmailClientSupportResults Implements IEquatable<CheckEmailClientSupportResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CheckEmailClientSupportResults\")] public class CheckEmailClientSupportResults : IEquatable<CheckEmailClientSupportResults>, IValidatableObject Constructors View Source CheckEmailClientSupportResults() Initializes a new instance of the CheckEmailClientSupportResults class. Declaration [JsonConstructor] protected CheckEmailClientSupportResults() View Source CheckEmailClientSupportResults(EmailFeatureSupportResult) Initializes a new instance of the CheckEmailClientSupportResults class. Declaration public CheckEmailClientSupportResults(EmailFeatureSupportResult result = null) Parameters Type Name Description EmailFeatureSupportResult result result (required). Properties View Source Result Gets or Sets Result Declaration [DataMember(Name = \"result\", IsRequired = true, EmitDefaultValue = true)] public EmailFeatureSupportResult Result { get; set; } Property Value Type Description EmailFeatureSupportResult Methods View Source Equals(CheckEmailClientSupportResults) Returns true if CheckEmailClientSupportResults instances are equal Declaration public bool Equals(CheckEmailClientSupportResults input) Parameters Type Name Description CheckEmailClientSupportResults input Instance of CheckEmailClientSupportResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CheckEmailFeaturesClientSupportOptions.html": {
    "href": "api/mailslurp.Model.CheckEmailFeaturesClientSupportOptions.html",
    "title": "Class CheckEmailFeaturesClientSupportOptions | MailSlurp",
    "keywords": "Class CheckEmailFeaturesClientSupportOptions CheckEmailFeaturesClientSupportOptions Inheritance object CheckEmailFeaturesClientSupportOptions Implements IEquatable<CheckEmailFeaturesClientSupportOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CheckEmailFeaturesClientSupportOptions\")] public class CheckEmailFeaturesClientSupportOptions : IEquatable<CheckEmailFeaturesClientSupportOptions>, IValidatableObject Constructors View Source CheckEmailFeaturesClientSupportOptions() Initializes a new instance of the CheckEmailFeaturesClientSupportOptions class. Declaration [JsonConstructor] protected CheckEmailFeaturesClientSupportOptions() View Source CheckEmailFeaturesClientSupportOptions(string) Initializes a new instance of the CheckEmailFeaturesClientSupportOptions class. Declaration public CheckEmailFeaturesClientSupportOptions(string emailBody = null) Parameters Type Name Description string emailBody emailBody (required). Properties View Source EmailBody Gets or Sets EmailBody Declaration [DataMember(Name = \"emailBody\", IsRequired = true, EmitDefaultValue = true)] public string EmailBody { get; set; } Property Value Type Description string Methods View Source Equals(CheckEmailFeaturesClientSupportOptions) Returns true if CheckEmailFeaturesClientSupportOptions instances are equal Declaration public bool Equals(CheckEmailFeaturesClientSupportOptions input) Parameters Type Name Description CheckEmailFeaturesClientSupportOptions input Instance of CheckEmailFeaturesClientSupportOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CheckEmailFeaturesClientSupportResults.html": {
    "href": "api/mailslurp.Model.CheckEmailFeaturesClientSupportResults.html",
    "title": "Class CheckEmailFeaturesClientSupportResults | MailSlurp",
    "keywords": "Class CheckEmailFeaturesClientSupportResults CheckEmailFeaturesClientSupportResults Inheritance object CheckEmailFeaturesClientSupportResults Implements IEquatable<CheckEmailFeaturesClientSupportResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CheckEmailFeaturesClientSupportResults\")] public class CheckEmailFeaturesClientSupportResults : IEquatable<CheckEmailFeaturesClientSupportResults>, IValidatableObject Constructors View Source CheckEmailFeaturesClientSupportResults() Initializes a new instance of the CheckEmailFeaturesClientSupportResults class. Declaration [JsonConstructor] protected CheckEmailFeaturesClientSupportResults() View Source CheckEmailFeaturesClientSupportResults(EmailFeatureSupportResult) Initializes a new instance of the CheckEmailFeaturesClientSupportResults class. Declaration public CheckEmailFeaturesClientSupportResults(EmailFeatureSupportResult result = null) Parameters Type Name Description EmailFeatureSupportResult result result (required). Properties View Source Result Gets or Sets Result Declaration [DataMember(Name = \"result\", IsRequired = true, EmitDefaultValue = true)] public EmailFeatureSupportResult Result { get; set; } Property Value Type Description EmailFeatureSupportResult Methods View Source Equals(CheckEmailFeaturesClientSupportResults) Returns true if CheckEmailFeaturesClientSupportResults instances are equal Declaration public bool Equals(CheckEmailFeaturesClientSupportResults input) Parameters Type Name Description CheckEmailFeaturesClientSupportResults input Instance of CheckEmailFeaturesClientSupportResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.Complaint.html": {
    "href": "api/mailslurp.Model.Complaint.html",
    "title": "Class Complaint | MailSlurp",
    "keywords": "Class Complaint Complaint Inheritance object Complaint Implements IEquatable<Complaint> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"Complaint\")] public class Complaint : IEquatable<Complaint>, IValidatableObject Constructors View Source Complaint() Initializes a new instance of the Complaint class. Declaration [JsonConstructor] protected Complaint() View Source Complaint(Guid, Guid, string, string, string, string, DateTime, DateTime) Initializes a new instance of the Complaint class. Declaration public Complaint(Guid id = default, Guid userId = default, string eventType = null, string mailSource = null, string mailMessageId = null, string complaintRecipient = null, DateTime createdAt = default, DateTime updatedAt = default) Parameters Type Name Description Guid id id (required). Guid userId userId. string eventType eventType. string mailSource mailSource. string mailMessageId mailMessageId. string complaintRecipient complaintRecipient (required). DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Properties View Source ComplaintRecipient Gets or Sets ComplaintRecipient Declaration [DataMember(Name = \"complaintRecipient\", IsRequired = true, EmitDefaultValue = true)] public string ComplaintRecipient { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EventType Gets or Sets EventType Declaration [DataMember(Name = \"eventType\", EmitDefaultValue = false)] public string EventType { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source MailMessageId Gets or Sets MailMessageId Declaration [DataMember(Name = \"mailMessageId\", EmitDefaultValue = false)] public string MailMessageId { get; set; } Property Value Type Description string View Source MailSource Gets or Sets MailSource Declaration [DataMember(Name = \"mailSource\", EmitDefaultValue = false)] public string MailSource { get; set; } Property Value Type Description string View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", EmitDefaultValue = false)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(Complaint) Returns true if Complaint instances are equal Declaration public bool Equals(Complaint input) Parameters Type Name Description Complaint input Instance of Complaint to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ConditionOption.ConditionEnum.html": {
    "href": "api/mailslurp.Model.ConditionOption.ConditionEnum.html",
    "title": "Enum ConditionOption.ConditionEnum | MailSlurp",
    "keywords": "Enum ConditionOption.ConditionEnum Condition of an email object that can be used to filter results Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ConditionOption.ConditionEnum Fields Name Description HASATTACHMENTS Enum HASATTACHMENTS for value: HAS_ATTACHMENTS"
  },
  "api/mailslurp.Model.ConditionOption.html": {
    "href": "api/mailslurp.Model.ConditionOption.html",
    "title": "Class ConditionOption | MailSlurp",
    "keywords": "Class ConditionOption Options for matching emails in an inbox based on a condition such as HAS_ATTACHMENTS=TRUE Inheritance object ConditionOption Implements IEquatable<ConditionOption> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ConditionOption\")] public class ConditionOption : IEquatable<ConditionOption>, IValidatableObject Constructors View Source ConditionOption() Initializes a new instance of the ConditionOption class. Declaration [JsonConstructor] protected ConditionOption() View Source ConditionOption(ConditionEnum, ValueEnum) Initializes a new instance of the ConditionOption class. Declaration public ConditionOption(ConditionOption.ConditionEnum condition = (ConditionOption.ConditionEnum)0, ConditionOption.ValueEnum value = (ConditionOption.ValueEnum)0) Parameters Type Name Description ConditionOption.ConditionEnum condition Condition of an email object that can be used to filter results (required). ConditionOption.ValueEnum value Expected condition value (required). Properties View Source Condition Condition of an email object that can be used to filter results Declaration [DataMember(Name = \"condition\", IsRequired = true, EmitDefaultValue = true)] public ConditionOption.ConditionEnum Condition { get; set; } Property Value Type Description ConditionOption.ConditionEnum Condition of an email object that can be used to filter results View Source Value Expected condition value Declaration [DataMember(Name = \"value\", IsRequired = true, EmitDefaultValue = true)] public ConditionOption.ValueEnum Value { get; set; } Property Value Type Description ConditionOption.ValueEnum Expected condition value Methods View Source Equals(ConditionOption) Returns true if ConditionOption instances are equal Declaration public bool Equals(ConditionOption input) Parameters Type Name Description ConditionOption input Instance of ConditionOption to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ConditionOption.ValueEnum.html": {
    "href": "api/mailslurp.Model.ConditionOption.ValueEnum.html",
    "title": "Enum ConditionOption.ValueEnum | MailSlurp",
    "keywords": "Enum ConditionOption.ValueEnum Expected condition value Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ConditionOption.ValueEnum Fields Name Description FALSE Enum FALSE for value: FALSE TRUE Enum TRUE for value: TRUE"
  },
  "api/mailslurp.Model.ConnectorDto.ConnectorAuthTypeEnum.html": {
    "href": "api/mailslurp.Model.ConnectorDto.ConnectorAuthTypeEnum.html",
    "title": "Enum ConnectorDto.ConnectorAuthTypeEnum | MailSlurp",
    "keywords": "Enum ConnectorDto.ConnectorAuthTypeEnum Defines ConnectorAuthType Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ConnectorDto.ConnectorAuthTypeEnum Fields Name Description PLAINTEXT Enum PLAINTEXT for value: PLAIN_TEXT"
  },
  "api/mailslurp.Model.ConnectorDto.ConnectorTypeEnum.html": {
    "href": "api/mailslurp.Model.ConnectorDto.ConnectorTypeEnum.html",
    "title": "Enum ConnectorDto.ConnectorTypeEnum | MailSlurp",
    "keywords": "Enum ConnectorDto.ConnectorTypeEnum Defines ConnectorType Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ConnectorDto.ConnectorTypeEnum Fields Name Description IMAP Enum IMAP for value: IMAP"
  },
  "api/mailslurp.Model.ConnectorDto.html": {
    "href": "api/mailslurp.Model.ConnectorDto.html",
    "title": "Class ConnectorDto | MailSlurp",
    "keywords": "Class ConnectorDto ConnectorDto Inheritance object ConnectorDto Implements IEquatable<ConnectorDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ConnectorDto\")] public class ConnectorDto : IEquatable<ConnectorDto>, IValidatableObject Constructors View Source ConnectorDto() Initializes a new instance of the ConnectorDto class. Declaration [JsonConstructor] protected ConnectorDto() View Source ConnectorDto(Guid, bool, Guid, ConnectorTypeEnum, ConnectorAuthTypeEnum, bool, SyncScheduleTypeEnum, int, string, int, string, string, bool, string, string, DateTime) Initializes a new instance of the ConnectorDto class. Declaration public ConnectorDto(Guid id = default, bool enabled = false, Guid userId = default, ConnectorDto.ConnectorTypeEnum connectorType = (ConnectorDto.ConnectorTypeEnum)0, ConnectorDto.ConnectorAuthTypeEnum connectorAuthType = (ConnectorDto.ConnectorAuthTypeEnum)0, bool syncEnabled = false, ConnectorDto.SyncScheduleTypeEnum syncScheduleType = (ConnectorDto.SyncScheduleTypeEnum)0, int syncInterval = 0, string imapHost = null, int imapPort = 0, string imapUsername = null, string imapPassword = null, bool imapSsl = false, string selectFolder = null, string searchTerms = null, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). bool enabled enabled (required). Guid userId userId (required). ConnectorDto.ConnectorTypeEnum connectorType connectorType (required). ConnectorDto.ConnectorAuthTypeEnum connectorAuthType connectorAuthType (required). bool syncEnabled syncEnabled (required). ConnectorDto.SyncScheduleTypeEnum syncScheduleType syncScheduleType (required). int syncInterval syncInterval. string imapHost imapHost. int imapPort imapPort. string imapUsername imapUsername. string imapPassword imapPassword. bool imapSsl imapSsl. string selectFolder selectFolder. string searchTerms searchTerms. DateTime createdAt createdAt (required). Properties View Source ConnectorAuthType Gets or Sets ConnectorAuthType Declaration [DataMember(Name = \"connectorAuthType\", IsRequired = true, EmitDefaultValue = true)] public ConnectorDto.ConnectorAuthTypeEnum ConnectorAuthType { get; set; } Property Value Type Description ConnectorDto.ConnectorAuthTypeEnum View Source ConnectorType Gets or Sets ConnectorType Declaration [DataMember(Name = \"connectorType\", IsRequired = true, EmitDefaultValue = true)] public ConnectorDto.ConnectorTypeEnum ConnectorType { get; set; } Property Value Type Description ConnectorDto.ConnectorTypeEnum View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Enabled Gets or Sets Enabled Declaration [DataMember(Name = \"enabled\", IsRequired = true, EmitDefaultValue = true)] public bool Enabled { get; set; } Property Value Type Description bool View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source ImapHost Gets or Sets ImapHost Declaration [DataMember(Name = \"imapHost\", EmitDefaultValue = false)] public string ImapHost { get; set; } Property Value Type Description string View Source ImapPassword Gets or Sets ImapPassword Declaration [DataMember(Name = \"imapPassword\", EmitDefaultValue = false)] public string ImapPassword { get; set; } Property Value Type Description string View Source ImapPort Gets or Sets ImapPort Declaration [DataMember(Name = \"imapPort\", EmitDefaultValue = false)] public int ImapPort { get; set; } Property Value Type Description int View Source ImapSsl Gets or Sets ImapSsl Declaration [DataMember(Name = \"imapSsl\", EmitDefaultValue = true)] public bool ImapSsl { get; set; } Property Value Type Description bool View Source ImapUsername Gets or Sets ImapUsername Declaration [DataMember(Name = \"imapUsername\", EmitDefaultValue = false)] public string ImapUsername { get; set; } Property Value Type Description string View Source SearchTerms Gets or Sets SearchTerms Declaration [DataMember(Name = \"searchTerms\", EmitDefaultValue = false)] public string SearchTerms { get; set; } Property Value Type Description string View Source SelectFolder Gets or Sets SelectFolder Declaration [DataMember(Name = \"selectFolder\", EmitDefaultValue = false)] public string SelectFolder { get; set; } Property Value Type Description string View Source SyncEnabled Gets or Sets SyncEnabled Declaration [DataMember(Name = \"syncEnabled\", IsRequired = true, EmitDefaultValue = true)] public bool SyncEnabled { get; set; } Property Value Type Description bool View Source SyncInterval Gets or Sets SyncInterval Declaration [DataMember(Name = \"syncInterval\", EmitDefaultValue = false)] public int SyncInterval { get; set; } Property Value Type Description int View Source SyncScheduleType Gets or Sets SyncScheduleType Declaration [DataMember(Name = \"syncScheduleType\", IsRequired = true, EmitDefaultValue = true)] public ConnectorDto.SyncScheduleTypeEnum SyncScheduleType { get; set; } Property Value Type Description ConnectorDto.SyncScheduleTypeEnum View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(ConnectorDto) Returns true if ConnectorDto instances are equal Declaration public bool Equals(ConnectorDto input) Parameters Type Name Description ConnectorDto input Instance of ConnectorDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ConnectorDto.SyncScheduleTypeEnum.html": {
    "href": "api/mailslurp.Model.ConnectorDto.SyncScheduleTypeEnum.html",
    "title": "Enum ConnectorDto.SyncScheduleTypeEnum | MailSlurp",
    "keywords": "Enum ConnectorDto.SyncScheduleTypeEnum Defines SyncScheduleType Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ConnectorDto.SyncScheduleTypeEnum Fields Name Description INTERVAL Enum INTERVAL for value: INTERVAL"
  },
  "api/mailslurp.Model.ConnectorProjection.ConnectorTypeEnum.html": {
    "href": "api/mailslurp.Model.ConnectorProjection.ConnectorTypeEnum.html",
    "title": "Enum ConnectorProjection.ConnectorTypeEnum | MailSlurp",
    "keywords": "Enum ConnectorProjection.ConnectorTypeEnum Defines ConnectorType Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ConnectorProjection.ConnectorTypeEnum Fields Name Description IMAP Enum IMAP for value: IMAP"
  },
  "api/mailslurp.Model.ConnectorProjection.html": {
    "href": "api/mailslurp.Model.ConnectorProjection.html",
    "title": "Class ConnectorProjection | MailSlurp",
    "keywords": "Class ConnectorProjection Connector Inheritance object ConnectorProjection Implements IEquatable<ConnectorProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ConnectorProjection\")] public class ConnectorProjection : IEquatable<ConnectorProjection>, IValidatableObject Constructors View Source ConnectorProjection() Initializes a new instance of the ConnectorProjection class. Declaration [JsonConstructor] protected ConnectorProjection() View Source ConnectorProjection(DateTime, Guid, Guid, bool, ConnectorTypeEnum, SyncScheduleTypeEnum, int, Guid) Initializes a new instance of the ConnectorProjection class. Declaration public ConnectorProjection(DateTime createdAt = default, Guid userId = default, Guid inboxId = default, bool syncEnabled = false, ConnectorProjection.ConnectorTypeEnum connectorType = (ConnectorProjection.ConnectorTypeEnum)0, ConnectorProjection.SyncScheduleTypeEnum syncScheduleType = (ConnectorProjection.SyncScheduleTypeEnum)0, int syncInterval = 0, Guid id = default) Parameters Type Name Description DateTime createdAt createdAt (required). Guid userId userId (required). Guid inboxId inboxId (required). bool syncEnabled syncEnabled (required). ConnectorProjection.ConnectorTypeEnum connectorType connectorType (required). ConnectorProjection.SyncScheduleTypeEnum syncScheduleType syncScheduleType (required). int syncInterval syncInterval. Guid id id. Properties View Source ConnectorType Gets or Sets ConnectorType Declaration [DataMember(Name = \"connectorType\", IsRequired = true, EmitDefaultValue = true)] public ConnectorProjection.ConnectorTypeEnum ConnectorType { get; set; } Property Value Type Description ConnectorProjection.ConnectorTypeEnum View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source SyncEnabled Gets or Sets SyncEnabled Declaration [DataMember(Name = \"syncEnabled\", IsRequired = true, EmitDefaultValue = true)] public bool SyncEnabled { get; set; } Property Value Type Description bool View Source SyncInterval Gets or Sets SyncInterval Declaration [DataMember(Name = \"syncInterval\", EmitDefaultValue = false)] public int SyncInterval { get; set; } Property Value Type Description int View Source SyncScheduleType Gets or Sets SyncScheduleType Declaration [DataMember(Name = \"syncScheduleType\", IsRequired = true, EmitDefaultValue = true)] public ConnectorProjection.SyncScheduleTypeEnum SyncScheduleType { get; set; } Property Value Type Description ConnectorProjection.SyncScheduleTypeEnum View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(ConnectorProjection) Returns true if ConnectorProjection instances are equal Declaration public bool Equals(ConnectorProjection input) Parameters Type Name Description ConnectorProjection input Instance of ConnectorProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ConnectorProjection.SyncScheduleTypeEnum.html": {
    "href": "api/mailslurp.Model.ConnectorProjection.SyncScheduleTypeEnum.html",
    "title": "Enum ConnectorProjection.SyncScheduleTypeEnum | MailSlurp",
    "keywords": "Enum ConnectorProjection.SyncScheduleTypeEnum Defines SyncScheduleType Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ConnectorProjection.SyncScheduleTypeEnum Fields Name Description INTERVAL Enum INTERVAL for value: INTERVAL"
  },
  "api/mailslurp.Model.ConnectorSyncEventDto.html": {
    "href": "api/mailslurp.Model.ConnectorSyncEventDto.html",
    "title": "Class ConnectorSyncEventDto | MailSlurp",
    "keywords": "Class ConnectorSyncEventDto ConnectorSyncEventDto Inheritance object ConnectorSyncEventDto Implements IEquatable<ConnectorSyncEventDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ConnectorSyncEventDto\")] public class ConnectorSyncEventDto : IEquatable<ConnectorSyncEventDto>, IValidatableObject Constructors View Source ConnectorSyncEventDto() Initializes a new instance of the ConnectorSyncEventDto class. Declaration [JsonConstructor] protected ConnectorSyncEventDto() View Source ConnectorSyncEventDto(Guid, Guid, SyncStatusEnum, long, string, DateTime) Initializes a new instance of the ConnectorSyncEventDto class. Declaration public ConnectorSyncEventDto(Guid id = default, Guid connectorId = default, ConnectorSyncEventDto.SyncStatusEnum syncStatus = (ConnectorSyncEventDto.SyncStatusEnum)0, long syncCount = 0, string message = null, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). Guid connectorId connectorId (required). ConnectorSyncEventDto.SyncStatusEnum syncStatus syncStatus (required). long syncCount syncCount (required). string message message. DateTime createdAt createdAt (required). Properties View Source ConnectorId Gets or Sets ConnectorId Declaration [DataMember(Name = \"connectorId\", IsRequired = true, EmitDefaultValue = true)] public Guid ConnectorId { get; set; } Property Value Type Description Guid View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description string View Source SyncCount Gets or Sets SyncCount Declaration [DataMember(Name = \"syncCount\", IsRequired = true, EmitDefaultValue = true)] public long SyncCount { get; set; } Property Value Type Description long View Source SyncStatus Gets or Sets SyncStatus Declaration [DataMember(Name = \"syncStatus\", IsRequired = true, EmitDefaultValue = true)] public ConnectorSyncEventDto.SyncStatusEnum SyncStatus { get; set; } Property Value Type Description ConnectorSyncEventDto.SyncStatusEnum Methods View Source Equals(ConnectorSyncEventDto) Returns true if ConnectorSyncEventDto instances are equal Declaration public bool Equals(ConnectorSyncEventDto input) Parameters Type Name Description ConnectorSyncEventDto input Instance of ConnectorSyncEventDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ConnectorSyncEventDto.SyncStatusEnum.html": {
    "href": "api/mailslurp.Model.ConnectorSyncEventDto.SyncStatusEnum.html",
    "title": "Enum ConnectorSyncEventDto.SyncStatusEnum | MailSlurp",
    "keywords": "Enum ConnectorSyncEventDto.SyncStatusEnum Defines SyncStatus Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ConnectorSyncEventDto.SyncStatusEnum Fields Name Description CONNECTIONERROR Enum CONNECTIONERROR for value: CONNECTION_ERROR INTERNALERROR Enum INTERNALERROR for value: INTERNAL_ERROR NOTFOUND Enum NOTFOUND for value: NOT_FOUND SUBSCRIPTIONERROR Enum SUBSCRIPTIONERROR for value: SUBSCRIPTION_ERROR SUCCESS Enum SUCCESS for value: SUCCESS"
  },
  "api/mailslurp.Model.ConnectorSyncEventProjection.html": {
    "href": "api/mailslurp.Model.ConnectorSyncEventProjection.html",
    "title": "Class ConnectorSyncEventProjection | MailSlurp",
    "keywords": "Class ConnectorSyncEventProjection ConnectorSyncEventProjection Inheritance object ConnectorSyncEventProjection Implements IEquatable<ConnectorSyncEventProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ConnectorSyncEventProjection\")] public class ConnectorSyncEventProjection : IEquatable<ConnectorSyncEventProjection>, IValidatableObject Constructors View Source ConnectorSyncEventProjection() Initializes a new instance of the ConnectorSyncEventProjection class. Declaration [JsonConstructor] protected ConnectorSyncEventProjection() View Source ConnectorSyncEventProjection(DateTime, Guid, long, SyncStatusEnum, string, Guid) Initializes a new instance of the ConnectorSyncEventProjection class. Declaration public ConnectorSyncEventProjection(DateTime createdAt = default, Guid connectorId = default, long syncCount = 0, ConnectorSyncEventProjection.SyncStatusEnum syncStatus = (ConnectorSyncEventProjection.SyncStatusEnum)0, string message = null, Guid id = default) Parameters Type Name Description DateTime createdAt createdAt (required). Guid connectorId connectorId (required). long syncCount syncCount (required). ConnectorSyncEventProjection.SyncStatusEnum syncStatus syncStatus (required). string message message. Guid id id. Properties View Source ConnectorId Gets or Sets ConnectorId Declaration [DataMember(Name = \"connectorId\", IsRequired = true, EmitDefaultValue = true)] public Guid ConnectorId { get; set; } Property Value Type Description Guid View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public Guid Id { get; set; } Property Value Type Description Guid View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description string View Source SyncCount Gets or Sets SyncCount Declaration [DataMember(Name = \"syncCount\", IsRequired = true, EmitDefaultValue = true)] public long SyncCount { get; set; } Property Value Type Description long View Source SyncStatus Gets or Sets SyncStatus Declaration [DataMember(Name = \"syncStatus\", IsRequired = true, EmitDefaultValue = true)] public ConnectorSyncEventProjection.SyncStatusEnum SyncStatus { get; set; } Property Value Type Description ConnectorSyncEventProjection.SyncStatusEnum Methods View Source Equals(ConnectorSyncEventProjection) Returns true if ConnectorSyncEventProjection instances are equal Declaration public bool Equals(ConnectorSyncEventProjection input) Parameters Type Name Description ConnectorSyncEventProjection input Instance of ConnectorSyncEventProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ConnectorSyncEventProjection.SyncStatusEnum.html": {
    "href": "api/mailslurp.Model.ConnectorSyncEventProjection.SyncStatusEnum.html",
    "title": "Enum ConnectorSyncEventProjection.SyncStatusEnum | MailSlurp",
    "keywords": "Enum ConnectorSyncEventProjection.SyncStatusEnum Defines SyncStatus Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ConnectorSyncEventProjection.SyncStatusEnum Fields Name Description CONNECTIONERROR Enum CONNECTIONERROR for value: CONNECTION_ERROR INTERNALERROR Enum INTERNALERROR for value: INTERNAL_ERROR NOTFOUND Enum NOTFOUND for value: NOT_FOUND SUBSCRIPTIONERROR Enum SUBSCRIPTIONERROR for value: SUBSCRIPTION_ERROR SUCCESS Enum SUCCESS for value: SUCCESS"
  },
  "api/mailslurp.Model.ConnectorSyncRequestResult.html": {
    "href": "api/mailslurp.Model.ConnectorSyncRequestResult.html",
    "title": "Class ConnectorSyncRequestResult | MailSlurp",
    "keywords": "Class ConnectorSyncRequestResult ConnectorSyncRequestResult Inheritance object ConnectorSyncRequestResult Implements IEquatable<ConnectorSyncRequestResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ConnectorSyncRequestResult\")] public class ConnectorSyncRequestResult : IEquatable<ConnectorSyncRequestResult>, IValidatableObject Constructors View Source ConnectorSyncRequestResult(ConnectorSyncResult, ConnectorSyncRequestResultException, Guid) Initializes a new instance of the ConnectorSyncRequestResult class. Declaration public ConnectorSyncRequestResult(ConnectorSyncResult syncResult = null, ConnectorSyncRequestResultException exception = null, Guid eventId = default) Parameters Type Name Description ConnectorSyncResult syncResult syncResult. ConnectorSyncRequestResultException exception exception. Guid eventId eventId. Properties View Source EventId Gets or Sets EventId Declaration [DataMember(Name = \"eventId\", EmitDefaultValue = false)] public Guid EventId { get; set; } Property Value Type Description Guid View Source Exception Gets or Sets Exception Declaration [DataMember(Name = \"exception\", EmitDefaultValue = false)] public ConnectorSyncRequestResultException Exception { get; set; } Property Value Type Description ConnectorSyncRequestResultException View Source SyncResult Gets or Sets SyncResult Declaration [DataMember(Name = \"syncResult\", EmitDefaultValue = false)] public ConnectorSyncResult SyncResult { get; set; } Property Value Type Description ConnectorSyncResult Methods View Source Equals(ConnectorSyncRequestResult) Returns true if ConnectorSyncRequestResult instances are equal Declaration public bool Equals(ConnectorSyncRequestResult input) Parameters Type Name Description ConnectorSyncRequestResult input Instance of ConnectorSyncRequestResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ConnectorSyncRequestResultException.html": {
    "href": "api/mailslurp.Model.ConnectorSyncRequestResultException.html",
    "title": "Class ConnectorSyncRequestResultException | MailSlurp",
    "keywords": "Class ConnectorSyncRequestResultException ConnectorSyncRequestResultException Inheritance object ConnectorSyncRequestResultException Implements IEquatable<ConnectorSyncRequestResultException> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ConnectorSyncRequestResult_exception\")] public class ConnectorSyncRequestResultException : IEquatable<ConnectorSyncRequestResultException>, IValidatableObject Constructors View Source ConnectorSyncRequestResultException(ConnectorSyncRequestResultExceptionCause, List<ConnectorSyncRequestResultExceptionCauseStackTraceInner>, string, List<ConnectorSyncRequestResultExceptionCause>, string) Initializes a new instance of the ConnectorSyncRequestResultException class. Declaration public ConnectorSyncRequestResultException(ConnectorSyncRequestResultExceptionCause cause = null, List<ConnectorSyncRequestResultExceptionCauseStackTraceInner> stackTrace = null, string message = null, List<ConnectorSyncRequestResultExceptionCause> suppressed = null, string localizedMessage = null) Parameters Type Name Description ConnectorSyncRequestResultExceptionCause cause cause. List<ConnectorSyncRequestResultExceptionCauseStackTraceInner> stackTrace stackTrace. string message message. List<ConnectorSyncRequestResultExceptionCause> suppressed suppressed. string localizedMessage localizedMessage. Properties View Source Cause Gets or Sets Cause Declaration [DataMember(Name = \"cause\", EmitDefaultValue = false)] public ConnectorSyncRequestResultExceptionCause Cause { get; set; } Property Value Type Description ConnectorSyncRequestResultExceptionCause View Source LocalizedMessage Gets or Sets LocalizedMessage Declaration [DataMember(Name = \"localizedMessage\", EmitDefaultValue = false)] public string LocalizedMessage { get; set; } Property Value Type Description string View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description string View Source StackTrace Gets or Sets StackTrace Declaration [DataMember(Name = \"stackTrace\", EmitDefaultValue = false)] public List<ConnectorSyncRequestResultExceptionCauseStackTraceInner> StackTrace { get; set; } Property Value Type Description List<ConnectorSyncRequestResultExceptionCauseStackTraceInner> View Source Suppressed Gets or Sets Suppressed Declaration [DataMember(Name = \"suppressed\", EmitDefaultValue = false)] public List<ConnectorSyncRequestResultExceptionCause> Suppressed { get; set; } Property Value Type Description List<ConnectorSyncRequestResultExceptionCause> Methods View Source Equals(ConnectorSyncRequestResultException) Returns true if ConnectorSyncRequestResultException instances are equal Declaration public bool Equals(ConnectorSyncRequestResultException input) Parameters Type Name Description ConnectorSyncRequestResultException input Instance of ConnectorSyncRequestResultException to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ConnectorSyncRequestResultExceptionCause.html": {
    "href": "api/mailslurp.Model.ConnectorSyncRequestResultExceptionCause.html",
    "title": "Class ConnectorSyncRequestResultExceptionCause | MailSlurp",
    "keywords": "Class ConnectorSyncRequestResultExceptionCause ConnectorSyncRequestResultExceptionCause Inheritance object ConnectorSyncRequestResultExceptionCause Implements IEquatable<ConnectorSyncRequestResultExceptionCause> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ConnectorSyncRequestResult_exception_cause\")] public class ConnectorSyncRequestResultExceptionCause : IEquatable<ConnectorSyncRequestResultExceptionCause>, IValidatableObject Constructors View Source ConnectorSyncRequestResultExceptionCause(List<ConnectorSyncRequestResultExceptionCauseStackTraceInner>, string, string) Initializes a new instance of the ConnectorSyncRequestResultExceptionCause class. Declaration public ConnectorSyncRequestResultExceptionCause(List<ConnectorSyncRequestResultExceptionCauseStackTraceInner> stackTrace = null, string message = null, string localizedMessage = null) Parameters Type Name Description List<ConnectorSyncRequestResultExceptionCauseStackTraceInner> stackTrace stackTrace. string message message. string localizedMessage localizedMessage. Properties View Source LocalizedMessage Gets or Sets LocalizedMessage Declaration [DataMember(Name = \"localizedMessage\", EmitDefaultValue = false)] public string LocalizedMessage { get; set; } Property Value Type Description string View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description string View Source StackTrace Gets or Sets StackTrace Declaration [DataMember(Name = \"stackTrace\", EmitDefaultValue = false)] public List<ConnectorSyncRequestResultExceptionCauseStackTraceInner> StackTrace { get; set; } Property Value Type Description List<ConnectorSyncRequestResultExceptionCauseStackTraceInner> Methods View Source Equals(ConnectorSyncRequestResultExceptionCause) Returns true if ConnectorSyncRequestResultExceptionCause instances are equal Declaration public bool Equals(ConnectorSyncRequestResultExceptionCause input) Parameters Type Name Description ConnectorSyncRequestResultExceptionCause input Instance of ConnectorSyncRequestResultExceptionCause to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ConnectorSyncRequestResultExceptionCauseStackTraceInner.html": {
    "href": "api/mailslurp.Model.ConnectorSyncRequestResultExceptionCauseStackTraceInner.html",
    "title": "Class ConnectorSyncRequestResultExceptionCauseStackTraceInner | MailSlurp",
    "keywords": "Class ConnectorSyncRequestResultExceptionCauseStackTraceInner ConnectorSyncRequestResultExceptionCauseStackTraceInner Inheritance object ConnectorSyncRequestResultExceptionCauseStackTraceInner Implements IEquatable<ConnectorSyncRequestResultExceptionCauseStackTraceInner> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ConnectorSyncRequestResult_exception_cause_stackTrace_inner\")] public class ConnectorSyncRequestResultExceptionCauseStackTraceInner : IEquatable<ConnectorSyncRequestResultExceptionCauseStackTraceInner>, IValidatableObject Constructors View Source ConnectorSyncRequestResultExceptionCauseStackTraceInner(string, string, string, string, string, int, string, bool) Initializes a new instance of the ConnectorSyncRequestResultExceptionCauseStackTraceInner class. Declaration public ConnectorSyncRequestResultExceptionCauseStackTraceInner(string classLoaderName = null, string moduleName = null, string moduleVersion = null, string methodName = null, string fileName = null, int lineNumber = 0, string className = null, bool nativeMethod = false) Parameters Type Name Description string classLoaderName classLoaderName. string moduleName moduleName. string moduleVersion moduleVersion. string methodName methodName. string fileName fileName. int lineNumber lineNumber. string className className. bool nativeMethod nativeMethod. Properties View Source ClassLoaderName Gets or Sets ClassLoaderName Declaration [DataMember(Name = \"classLoaderName\", EmitDefaultValue = false)] public string ClassLoaderName { get; set; } Property Value Type Description string View Source ClassName Gets or Sets ClassName Declaration [DataMember(Name = \"className\", EmitDefaultValue = false)] public string ClassName { get; set; } Property Value Type Description string View Source FileName Gets or Sets FileName Declaration [DataMember(Name = \"fileName\", EmitDefaultValue = false)] public string FileName { get; set; } Property Value Type Description string View Source LineNumber Gets or Sets LineNumber Declaration [DataMember(Name = \"lineNumber\", EmitDefaultValue = false)] public int LineNumber { get; set; } Property Value Type Description int View Source MethodName Gets or Sets MethodName Declaration [DataMember(Name = \"methodName\", EmitDefaultValue = false)] public string MethodName { get; set; } Property Value Type Description string View Source ModuleName Gets or Sets ModuleName Declaration [DataMember(Name = \"moduleName\", EmitDefaultValue = false)] public string ModuleName { get; set; } Property Value Type Description string View Source ModuleVersion Gets or Sets ModuleVersion Declaration [DataMember(Name = \"moduleVersion\", EmitDefaultValue = false)] public string ModuleVersion { get; set; } Property Value Type Description string View Source NativeMethod Gets or Sets NativeMethod Declaration [DataMember(Name = \"nativeMethod\", EmitDefaultValue = true)] public bool NativeMethod { get; set; } Property Value Type Description bool Methods View Source Equals(ConnectorSyncRequestResultExceptionCauseStackTraceInner) Returns true if ConnectorSyncRequestResultExceptionCauseStackTraceInner instances are equal Declaration public bool Equals(ConnectorSyncRequestResultExceptionCauseStackTraceInner input) Parameters Type Name Description ConnectorSyncRequestResultExceptionCauseStackTraceInner input Instance of ConnectorSyncRequestResultExceptionCauseStackTraceInner to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ConnectorSyncResult.html": {
    "href": "api/mailslurp.Model.ConnectorSyncResult.html",
    "title": "Class ConnectorSyncResult | MailSlurp",
    "keywords": "Class ConnectorSyncResult ConnectorSyncResult Inheritance object ConnectorSyncResult Implements IEquatable<ConnectorSyncResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ConnectorSyncResult\")] public class ConnectorSyncResult : IEquatable<ConnectorSyncResult>, IValidatableObject Constructors View Source ConnectorSyncResult() Initializes a new instance of the ConnectorSyncResult class. Declaration [JsonConstructor] protected ConnectorSyncResult() View Source ConnectorSyncResult(long, List<string>) Initializes a new instance of the ConnectorSyncResult class. Declaration public ConnectorSyncResult(long emailSyncCount = 0, List<string> logLines = null) Parameters Type Name Description long emailSyncCount emailSyncCount (required). List<string> logLines logLines. Properties View Source EmailSyncCount Gets or Sets EmailSyncCount Declaration [DataMember(Name = \"emailSyncCount\", IsRequired = true, EmitDefaultValue = true)] public long EmailSyncCount { get; set; } Property Value Type Description long View Source LogLines Gets or Sets LogLines Declaration [DataMember(Name = \"logLines\", EmitDefaultValue = false)] public List<string> LogLines { get; set; } Property Value Type Description List<string> Methods View Source Equals(ConnectorSyncResult) Returns true if ConnectorSyncResult instances are equal Declaration public bool Equals(ConnectorSyncResult input) Parameters Type Name Description ConnectorSyncResult input Instance of ConnectorSyncResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ContactDto.html": {
    "href": "api/mailslurp.Model.ContactDto.html",
    "title": "Class ContactDto | MailSlurp",
    "keywords": "Class ContactDto Contact object. For saving a user in contact book. Inheritance object ContactDto Implements IEquatable<ContactDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ContactDto\")] public class ContactDto : IEquatable<ContactDto>, IValidatableObject Constructors View Source ContactDto() Initializes a new instance of the ContactDto class. Declaration [JsonConstructor] protected ContactDto() View Source ContactDto(Guid, Guid?, string, string, string, List<string>, string, List<string>, object, bool?, DateTime) Initializes a new instance of the ContactDto class. Declaration public ContactDto(Guid id = default, Guid? groupId = null, string firstName = null, string lastName = null, string company = null, List<string> emailAddresses = null, string primaryEmailAddress = null, List<string> tags = null, object metaData = null, bool? optOut = null, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). Guid? groupId groupId. string firstName firstName. string lastName lastName. string company company. List<string> emailAddresses emailAddresses (required). string primaryEmailAddress primaryEmailAddress. List<string> tags tags (required). object metaData metaData. bool? optOut optOut. DateTime createdAt createdAt (required). Properties View Source Company Gets or Sets Company Declaration [DataMember(Name = \"company\", EmitDefaultValue = true)] public string Company { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EmailAddresses Gets or Sets EmailAddresses Declaration [DataMember(Name = \"emailAddresses\", IsRequired = true, EmitDefaultValue = true)] public List<string> EmailAddresses { get; set; } Property Value Type Description List<string> View Source FirstName Gets or Sets FirstName Declaration [DataMember(Name = \"firstName\", EmitDefaultValue = true)] public string FirstName { get; set; } Property Value Type Description string View Source GroupId Gets or Sets GroupId Declaration [DataMember(Name = \"groupId\", EmitDefaultValue = true)] public Guid? GroupId { get; set; } Property Value Type Description Guid? View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source LastName Gets or Sets LastName Declaration [DataMember(Name = \"lastName\", EmitDefaultValue = true)] public string LastName { get; set; } Property Value Type Description string View Source MetaData Gets or Sets MetaData Declaration [DataMember(Name = \"metaData\", EmitDefaultValue = true)] public object MetaData { get; set; } Property Value Type Description object View Source OptOut Gets or Sets OptOut Declaration [DataMember(Name = \"optOut\", EmitDefaultValue = true)] public bool? OptOut { get; set; } Property Value Type Description bool? View Source PrimaryEmailAddress Gets or Sets PrimaryEmailAddress Declaration [DataMember(Name = \"primaryEmailAddress\", EmitDefaultValue = true)] public string PrimaryEmailAddress { get; set; } Property Value Type Description string View Source Tags Gets or Sets Tags Declaration [DataMember(Name = \"tags\", IsRequired = true, EmitDefaultValue = true)] public List<string> Tags { get; set; } Property Value Type Description List<string> Methods View Source Equals(ContactDto) Returns true if ContactDto instances are equal Declaration public bool Equals(ContactDto input) Parameters Type Name Description ContactDto input Instance of ContactDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ContactProjection.html": {
    "href": "api/mailslurp.Model.ContactProjection.html",
    "title": "Class ContactProjection | MailSlurp",
    "keywords": "Class ContactProjection Email contact for address book Inheritance object ContactProjection Implements IEquatable<ContactProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ContactProjection\")] public class ContactProjection : IEquatable<ContactProjection>, IValidatableObject Constructors View Source ContactProjection() Initializes a new instance of the ContactProjection class. Declaration [JsonConstructor] protected ContactProjection() View Source ContactProjection(DateTime, string, List<string>, string, string, string, bool?, Guid, Guid?) Initializes a new instance of the ContactProjection class. Declaration public ContactProjection(DateTime createdAt = default, string emailAddress = null, List<string> emailAddresses = null, string firstName = null, string lastName = null, string company = null, bool? optOut = null, Guid id = default, Guid? groupId = null) Parameters Type Name Description DateTime createdAt createdAt (required). string emailAddress emailAddress. List<string> emailAddresses emailAddresses. string firstName firstName. string lastName lastName. string company company. bool? optOut optOut. Guid id id (required). Guid? groupId groupId. Properties View Source Company Gets or Sets Company Declaration [DataMember(Name = \"company\", EmitDefaultValue = true)] public string Company { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EmailAddress Gets or Sets EmailAddress Declaration [DataMember(Name = \"emailAddress\", EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string View Source EmailAddresses Gets or Sets EmailAddresses Declaration [DataMember(Name = \"emailAddresses\", EmitDefaultValue = true)] public List<string> EmailAddresses { get; set; } Property Value Type Description List<string> View Source FirstName Gets or Sets FirstName Declaration [DataMember(Name = \"firstName\", EmitDefaultValue = true)] public string FirstName { get; set; } Property Value Type Description string View Source GroupId Gets or Sets GroupId Declaration [DataMember(Name = \"groupId\", EmitDefaultValue = true)] public Guid? GroupId { get; set; } Property Value Type Description Guid? View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source LastName Gets or Sets LastName Declaration [DataMember(Name = \"lastName\", EmitDefaultValue = true)] public string LastName { get; set; } Property Value Type Description string View Source OptOut Gets or Sets OptOut Declaration [DataMember(Name = \"optOut\", EmitDefaultValue = true)] public bool? OptOut { get; set; } Property Value Type Description bool? Methods View Source Equals(ContactProjection) Returns true if ContactProjection instances are equal Declaration public bool Equals(ContactProjection input) Parameters Type Name Description ContactProjection input Instance of ContactProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ContentMatchOptions.html": {
    "href": "api/mailslurp.Model.ContentMatchOptions.html",
    "title": "Class ContentMatchOptions | MailSlurp",
    "keywords": "Class ContentMatchOptions Options for matching content using regex patterns based on Java Pattern syntax Inheritance object ContentMatchOptions Implements IEquatable<ContentMatchOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ContentMatchOptions\")] public class ContentMatchOptions : IEquatable<ContentMatchOptions>, IValidatableObject Constructors View Source ContentMatchOptions() Initializes a new instance of the ContentMatchOptions class. Declaration [JsonConstructor] protected ContentMatchOptions() View Source ContentMatchOptions(string) Initializes a new instance of the ContentMatchOptions class. Declaration public ContentMatchOptions(string pattern = null) Parameters Type Name Description string pattern Java style regex pattern. Do not include the typical / at start or end of regex in some languages. Given an example your code is: 12345 the pattern to extract match looks like code is: (\\\\d{6}). This will return an array of matches with the first matching the entire pattern and the subsequent matching the groups: [&apos;code is: 123456&apos;, &apos;123456&apos;] See https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html for more information of available patterns. (required). Properties View Source Pattern Java style regex pattern. Do not include the typical / at start or end of regex in some languages. Given an example your code is: 12345 the pattern to extract match looks like code is: (\\\\d{6}). This will return an array of matches with the first matching the entire pattern and the subsequent matching the groups: [&apos;code is: 123456&apos;, &apos;123456&apos;] See https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html for more information of available patterns. Declaration [DataMember(Name = \"pattern\", IsRequired = true, EmitDefaultValue = true)] public string Pattern { get; set; } Property Value Type Description string Java style regex pattern. Do not include the typical / at start or end of regex in some languages. Given an example your code is: 12345 the pattern to extract match looks like code is: (\\\\d{6}). This will return an array of matches with the first matching the entire pattern and the subsequent matching the groups: [&apos;code is: 123456&apos;, &apos;123456&apos;] See https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html for more information of available patterns. Methods View Source Equals(ContentMatchOptions) Returns true if ContentMatchOptions instances are equal Declaration public bool Equals(ContentMatchOptions input) Parameters Type Name Description ContentMatchOptions input Instance of ContentMatchOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CountDto.html": {
    "href": "api/mailslurp.Model.CountDto.html",
    "title": "Class CountDto | MailSlurp",
    "keywords": "Class CountDto Number of elements Inheritance object CountDto Implements IEquatable<CountDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CountDto\")] public class CountDto : IEquatable<CountDto>, IValidatableObject Constructors View Source CountDto() Initializes a new instance of the CountDto class. Declaration [JsonConstructor] protected CountDto() View Source CountDto(long) Initializes a new instance of the CountDto class. Declaration public CountDto(long totalElements = 0) Parameters Type Name Description long totalElements totalElements (required). Properties View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long Methods View Source Equals(CountDto) Returns true if CountDto instances are equal Declaration public bool Equals(CountDto input) Parameters Type Name Description CountDto input Instance of CountDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateAliasOptions.html": {
    "href": "api/mailslurp.Model.CreateAliasOptions.html",
    "title": "Class CreateAliasOptions | MailSlurp",
    "keywords": "Class CreateAliasOptions Create email alias options. Email aliases can be used to mask real email addresses behind an ID. You can also attach an inbox to an alias so that any email received by the inbox email address if forwarded to the alias email address. Inheritance object CreateAliasOptions Implements IEquatable<CreateAliasOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateAliasOptions\")] public class CreateAliasOptions : IEquatable<CreateAliasOptions>, IValidatableObject Constructors View Source CreateAliasOptions() Initializes a new instance of the CreateAliasOptions class. Declaration [JsonConstructor] protected CreateAliasOptions() View Source CreateAliasOptions(string, Guid?, string, bool, Guid?, bool?) Initializes a new instance of the CreateAliasOptions class. Declaration public CreateAliasOptions(string emailAddress = null, Guid? inboxId = null, string name = null, bool useThreads = false, Guid? domainId = null, bool? verifyEmailAddress = null) Parameters Type Name Description string emailAddress Email address to be hidden behind alias. Emails sent to the alias email address will be forwarded to this address. If you want to enable replies set useThreads true and the reply-to for the email will allow outbound communication via a thread. Some email addresses may require verification if they are not added as a contact first. (required). Guid? inboxId Optional inbox ID to attach to alias. Null by default means an a new inbox will be created for the alias. Use a custom inbox to control what email address the alias uses. To use custom email addresses create a domain and an inbox, the use the inbox ID with this call. Emails received by this inbox will be forwarded to the alias email address. string name Optional name for alias. bool useThreads Enable threads options. If true emails will be sent with a unique reply-to thread address. This means you can reply to the forwarded email and it will be sent to the recipients via your alias address. That way a thread conversation is preserved. (required). Guid? domainId Custom domain ID to use when generating alias email addresses. bool? verifyEmailAddress Whether to verify the masked email address exists before sending an email to it. Properties View Source DomainId Custom domain ID to use when generating alias email addresses Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? Custom domain ID to use when generating alias email addresses View Source EmailAddress Email address to be hidden behind alias. Emails sent to the alias email address will be forwarded to this address. If you want to enable replies set useThreads true and the reply-to for the email will allow outbound communication via a thread. Some email addresses may require verification if they are not added as a contact first. Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string Email address to be hidden behind alias. Emails sent to the alias email address will be forwarded to this address. If you want to enable replies set useThreads true and the reply-to for the email will allow outbound communication via a thread. Some email addresses may require verification if they are not added as a contact first. View Source InboxId Optional inbox ID to attach to alias. Null by default means an a new inbox will be created for the alias. Use a custom inbox to control what email address the alias uses. To use custom email addresses create a domain and an inbox, the use the inbox ID with this call. Emails received by this inbox will be forwarded to the alias email address Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = true)] public Guid? InboxId { get; set; } Property Value Type Description Guid? Optional inbox ID to attach to alias. Null by default means an a new inbox will be created for the alias. Use a custom inbox to control what email address the alias uses. To use custom email addresses create a domain and an inbox, the use the inbox ID with this call. Emails received by this inbox will be forwarded to the alias email address View Source Name Optional name for alias Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Optional name for alias View Source UseThreads Enable threads options. If true emails will be sent with a unique reply-to thread address. This means you can reply to the forwarded email and it will be sent to the recipients via your alias address. That way a thread conversation is preserved. Declaration [DataMember(Name = \"useThreads\", IsRequired = true, EmitDefaultValue = true)] public bool UseThreads { get; set; } Property Value Type Description bool Enable threads options. If true emails will be sent with a unique reply-to thread address. This means you can reply to the forwarded email and it will be sent to the recipients via your alias address. That way a thread conversation is preserved. View Source VerifyEmailAddress Whether to verify the masked email address exists before sending an email to it Declaration [DataMember(Name = \"verifyEmailAddress\", EmitDefaultValue = true)] public bool? VerifyEmailAddress { get; set; } Property Value Type Description bool? Whether to verify the masked email address exists before sending an email to it Methods View Source Equals(CreateAliasOptions) Returns true if CreateAliasOptions instances are equal Declaration public bool Equals(CreateAliasOptions input) Parameters Type Name Description CreateAliasOptions input Instance of CreateAliasOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateConnectorImapFetchOptions.html": {
    "href": "api/mailslurp.Model.CreateConnectorImapFetchOptions.html",
    "title": "Class CreateConnectorImapFetchOptions | MailSlurp",
    "keywords": "Class CreateConnectorImapFetchOptions CreateConnectorImapFetchOptions Inheritance object CreateConnectorImapFetchOptions Implements IEquatable<CreateConnectorImapFetchOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateConnectorImapFetchOptions\")] public class CreateConnectorImapFetchOptions : IEquatable<CreateConnectorImapFetchOptions>, IValidatableObject Constructors View Source CreateConnectorImapFetchOptions(string, string) Initializes a new instance of the CreateConnectorImapFetchOptions class. Declaration public CreateConnectorImapFetchOptions(string selectFolder = null, string searchTerms = null) Parameters Type Name Description string selectFolder selectFolder. string searchTerms searchTerms. Properties View Source SearchTerms Gets or Sets SearchTerms Declaration [DataMember(Name = \"searchTerms\", EmitDefaultValue = false)] public string SearchTerms { get; set; } Property Value Type Description string View Source SelectFolder Gets or Sets SelectFolder Declaration [DataMember(Name = \"selectFolder\", EmitDefaultValue = false)] public string SelectFolder { get; set; } Property Value Type Description string Methods View Source Equals(CreateConnectorImapFetchOptions) Returns true if CreateConnectorImapFetchOptions instances are equal Declaration public bool Equals(CreateConnectorImapFetchOptions input) Parameters Type Name Description CreateConnectorImapFetchOptions input Instance of CreateConnectorImapFetchOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateConnectorImapOptions.html": {
    "href": "api/mailslurp.Model.CreateConnectorImapOptions.html",
    "title": "Class CreateConnectorImapOptions | MailSlurp",
    "keywords": "Class CreateConnectorImapOptions CreateConnectorImapOptions Inheritance object CreateConnectorImapOptions Implements IEquatable<CreateConnectorImapOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateConnectorImapOptions\")] public class CreateConnectorImapOptions : IEquatable<CreateConnectorImapOptions>, IValidatableObject Constructors View Source CreateConnectorImapOptions() Initializes a new instance of the CreateConnectorImapOptions class. Declaration [JsonConstructor] protected CreateConnectorImapOptions() View Source CreateConnectorImapOptions(string, int, string, string, bool) Initializes a new instance of the CreateConnectorImapOptions class. Declaration public CreateConnectorImapOptions(string host = null, int port = 0, string username = null, string password = null, bool useSSL = false) Parameters Type Name Description string host host (required). int port port (required). string username username (required). string password password (required). bool useSSL useSSL (required). Properties View Source Host Gets or Sets Host Declaration [DataMember(Name = \"host\", IsRequired = true, EmitDefaultValue = true)] public string Host { get; set; } Property Value Type Description string View Source Password Gets or Sets Password Declaration [DataMember(Name = \"password\", IsRequired = true, EmitDefaultValue = true)] public string Password { get; set; } Property Value Type Description string View Source Port Gets or Sets Port Declaration [DataMember(Name = \"port\", IsRequired = true, EmitDefaultValue = true)] public int Port { get; set; } Property Value Type Description int View Source Username Gets or Sets Username Declaration [DataMember(Name = \"username\", IsRequired = true, EmitDefaultValue = true)] public string Username { get; set; } Property Value Type Description string View Source UseSSL Gets or Sets UseSSL Declaration [DataMember(Name = \"useSSL\", IsRequired = true, EmitDefaultValue = true)] public bool UseSSL { get; set; } Property Value Type Description bool Methods View Source Equals(CreateConnectorImapOptions) Returns true if CreateConnectorImapOptions instances are equal Declaration public bool Equals(CreateConnectorImapOptions input) Parameters Type Name Description CreateConnectorImapOptions input Instance of CreateConnectorImapOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateConnectorOptions.ConnectorAuthTypeEnum.html": {
    "href": "api/mailslurp.Model.CreateConnectorOptions.ConnectorAuthTypeEnum.html",
    "title": "Enum CreateConnectorOptions.ConnectorAuthTypeEnum | MailSlurp",
    "keywords": "Enum CreateConnectorOptions.ConnectorAuthTypeEnum Defines ConnectorAuthType Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum CreateConnectorOptions.ConnectorAuthTypeEnum Fields Name Description PLAINTEXT Enum PLAINTEXT for value: PLAIN_TEXT"
  },
  "api/mailslurp.Model.CreateConnectorOptions.ConnectorTypeEnum.html": {
    "href": "api/mailslurp.Model.CreateConnectorOptions.ConnectorTypeEnum.html",
    "title": "Enum CreateConnectorOptions.ConnectorTypeEnum | MailSlurp",
    "keywords": "Enum CreateConnectorOptions.ConnectorTypeEnum Defines ConnectorType Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum CreateConnectorOptions.ConnectorTypeEnum Fields Name Description IMAP Enum IMAP for value: IMAP"
  },
  "api/mailslurp.Model.CreateConnectorOptions.html": {
    "href": "api/mailslurp.Model.CreateConnectorOptions.html",
    "title": "Class CreateConnectorOptions | MailSlurp",
    "keywords": "Class CreateConnectorOptions CreateConnectorOptions Inheritance object CreateConnectorOptions Implements IEquatable<CreateConnectorOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateConnectorOptions\")] public class CreateConnectorOptions : IEquatable<CreateConnectorOptions>, IValidatableObject Constructors View Source CreateConnectorOptions() Initializes a new instance of the CreateConnectorOptions class. Declaration [JsonConstructor] protected CreateConnectorOptions() View Source CreateConnectorOptions(ConnectorTypeEnum, ConnectorAuthTypeEnum, CreateConnectorImapOptions, Guid, bool, SyncScheduleTypeEnum, int, CreateConnectorImapFetchOptions) Initializes a new instance of the CreateConnectorOptions class. Declaration public CreateConnectorOptions(CreateConnectorOptions.ConnectorTypeEnum connectorType = (CreateConnectorOptions.ConnectorTypeEnum)0, CreateConnectorOptions.ConnectorAuthTypeEnum connectorAuthType = (CreateConnectorOptions.ConnectorAuthTypeEnum)0, CreateConnectorImapOptions imapSettings = null, Guid inboxId = default, bool syncEnabled = false, CreateConnectorOptions.SyncScheduleTypeEnum syncScheduleType = (CreateConnectorOptions.SyncScheduleTypeEnum)0, int syncInterval = 0, CreateConnectorImapFetchOptions fetchSettings = null) Parameters Type Name Description CreateConnectorOptions.ConnectorTypeEnum connectorType connectorType (required). CreateConnectorOptions.ConnectorAuthTypeEnum connectorAuthType connectorAuthType (required). CreateConnectorImapOptions imapSettings imapSettings. Guid inboxId inboxId. bool syncEnabled syncEnabled (required). CreateConnectorOptions.SyncScheduleTypeEnum syncScheduleType syncScheduleType (required). int syncInterval syncInterval. CreateConnectorImapFetchOptions fetchSettings fetchSettings. Properties View Source ConnectorAuthType Gets or Sets ConnectorAuthType Declaration [DataMember(Name = \"connectorAuthType\", IsRequired = true, EmitDefaultValue = true)] public CreateConnectorOptions.ConnectorAuthTypeEnum ConnectorAuthType { get; set; } Property Value Type Description CreateConnectorOptions.ConnectorAuthTypeEnum View Source ConnectorType Gets or Sets ConnectorType Declaration [DataMember(Name = \"connectorType\", IsRequired = true, EmitDefaultValue = true)] public CreateConnectorOptions.ConnectorTypeEnum ConnectorType { get; set; } Property Value Type Description CreateConnectorOptions.ConnectorTypeEnum View Source FetchSettings Gets or Sets FetchSettings Declaration [DataMember(Name = \"fetchSettings\", EmitDefaultValue = false)] public CreateConnectorImapFetchOptions FetchSettings { get; set; } Property Value Type Description CreateConnectorImapFetchOptions View Source ImapSettings Gets or Sets ImapSettings Declaration [DataMember(Name = \"imapSettings\", EmitDefaultValue = false)] public CreateConnectorImapOptions ImapSettings { get; set; } Property Value Type Description CreateConnectorImapOptions View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = false)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source SyncEnabled Gets or Sets SyncEnabled Declaration [DataMember(Name = \"syncEnabled\", IsRequired = true, EmitDefaultValue = true)] public bool SyncEnabled { get; set; } Property Value Type Description bool View Source SyncInterval Gets or Sets SyncInterval Declaration [DataMember(Name = \"syncInterval\", EmitDefaultValue = false)] public int SyncInterval { get; set; } Property Value Type Description int View Source SyncScheduleType Gets or Sets SyncScheduleType Declaration [DataMember(Name = \"syncScheduleType\", IsRequired = true, EmitDefaultValue = true)] public CreateConnectorOptions.SyncScheduleTypeEnum SyncScheduleType { get; set; } Property Value Type Description CreateConnectorOptions.SyncScheduleTypeEnum Methods View Source Equals(CreateConnectorOptions) Returns true if CreateConnectorOptions instances are equal Declaration public bool Equals(CreateConnectorOptions input) Parameters Type Name Description CreateConnectorOptions input Instance of CreateConnectorOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateConnectorOptions.SyncScheduleTypeEnum.html": {
    "href": "api/mailslurp.Model.CreateConnectorOptions.SyncScheduleTypeEnum.html",
    "title": "Enum CreateConnectorOptions.SyncScheduleTypeEnum | MailSlurp",
    "keywords": "Enum CreateConnectorOptions.SyncScheduleTypeEnum Defines SyncScheduleType Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum CreateConnectorOptions.SyncScheduleTypeEnum Fields Name Description INTERVAL Enum INTERVAL for value: INTERVAL"
  },
  "api/mailslurp.Model.CreateContactOptions.html": {
    "href": "api/mailslurp.Model.CreateContactOptions.html",
    "title": "Class CreateContactOptions | MailSlurp",
    "keywords": "Class CreateContactOptions Options for creating an email contact in address book Inheritance object CreateContactOptions Implements IEquatable<CreateContactOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateContactOptions\")] public class CreateContactOptions : IEquatable<CreateContactOptions>, IValidatableObject Constructors View Source CreateContactOptions(string, string, string, List<string>, List<string>, object, bool?, Guid?, bool?) Initializes a new instance of the CreateContactOptions class. Declaration public CreateContactOptions(string firstName = null, string lastName = null, string company = null, List<string> emailAddresses = null, List<string> tags = null, object metaData = null, bool? optOut = null, Guid? groupId = null, bool? verifyEmailAddresses = null) Parameters Type Name Description string firstName firstName. string lastName lastName. string company company. List<string> emailAddresses Set of email addresses belonging to the contact. List<string> tags Tags that can be used to search and group contacts. object metaData metaData. bool? optOut Has the user explicitly or implicitly opted out of being contacted? If so MailSlurp will ignore them in all actions.. Guid? groupId Group IDs that contact belongs to. bool? verifyEmailAddresses Whether to validate contact email address exists. Properties View Source Company Gets or Sets Company Declaration [DataMember(Name = \"company\", EmitDefaultValue = true)] public string Company { get; set; } Property Value Type Description string View Source EmailAddresses Set of email addresses belonging to the contact Declaration [DataMember(Name = \"emailAddresses\", EmitDefaultValue = true)] public List<string> EmailAddresses { get; set; } Property Value Type Description List<string> Set of email addresses belonging to the contact View Source FirstName Gets or Sets FirstName Declaration [DataMember(Name = \"firstName\", EmitDefaultValue = true)] public string FirstName { get; set; } Property Value Type Description string View Source GroupId Group IDs that contact belongs to Declaration [DataMember(Name = \"groupId\", EmitDefaultValue = true)] public Guid? GroupId { get; set; } Property Value Type Description Guid? Group IDs that contact belongs to View Source LastName Gets or Sets LastName Declaration [DataMember(Name = \"lastName\", EmitDefaultValue = true)] public string LastName { get; set; } Property Value Type Description string View Source MetaData Gets or Sets MetaData Declaration [DataMember(Name = \"metaData\", EmitDefaultValue = true)] public object MetaData { get; set; } Property Value Type Description object View Source OptOut Has the user explicitly or implicitly opted out of being contacted? If so MailSlurp will ignore them in all actions. Declaration [DataMember(Name = \"optOut\", EmitDefaultValue = true)] public bool? OptOut { get; set; } Property Value Type Description bool? Has the user explicitly or implicitly opted out of being contacted? If so MailSlurp will ignore them in all actions. View Source Tags Tags that can be used to search and group contacts Declaration [DataMember(Name = \"tags\", EmitDefaultValue = true)] public List<string> Tags { get; set; } Property Value Type Description List<string> Tags that can be used to search and group contacts View Source VerifyEmailAddresses Whether to validate contact email address exists Declaration [DataMember(Name = \"verifyEmailAddresses\", EmitDefaultValue = true)] public bool? VerifyEmailAddresses { get; set; } Property Value Type Description bool? Whether to validate contact email address exists Methods View Source Equals(CreateContactOptions) Returns true if CreateContactOptions instances are equal Declaration public bool Equals(CreateContactOptions input) Parameters Type Name Description CreateContactOptions input Instance of CreateContactOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateDomainOptions.DomainTypeEnum.html": {
    "href": "api/mailslurp.Model.CreateDomainOptions.DomainTypeEnum.html",
    "title": "Enum CreateDomainOptions.DomainTypeEnum | MailSlurp",
    "keywords": "Enum CreateDomainOptions.DomainTypeEnum Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum CreateDomainOptions.DomainTypeEnum Fields Name Description HTTPINBOX Enum HTTPINBOX for value: HTTP_INBOX SMTPDOMAIN Enum SMTPDOMAIN for value: SMTP_DOMAIN"
  },
  "api/mailslurp.Model.CreateDomainOptions.html": {
    "href": "api/mailslurp.Model.CreateDomainOptions.html",
    "title": "Class CreateDomainOptions | MailSlurp",
    "keywords": "Class CreateDomainOptions Options for creating a domain to use with MailSlurp. You must have ownership access to this domain in order to verify it. Domains will not function correctly until the domain has been verified. See https://www.mailslurp.com/guides/custom-domains for help. Domains can be either HTTP or SMTP type. The type of domain determines which inboxes can be used with it. SMTP inboxes use a mail server running mx.mailslurp.com while HTTP inboxes are handled by AWS SES. Inheritance object CreateDomainOptions Implements IEquatable<CreateDomainOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateDomainOptions\")] public class CreateDomainOptions : IEquatable<CreateDomainOptions>, IValidatableObject Constructors View Source CreateDomainOptions() Initializes a new instance of the CreateDomainOptions class. Declaration [JsonConstructor] protected CreateDomainOptions() View Source CreateDomainOptions(string, string, bool?, DomainTypeEnum?) Initializes a new instance of the CreateDomainOptions class. Declaration public CreateDomainOptions(string domain = null, string description = null, bool? createdCatchAllInbox = null, CreateDomainOptions.DomainTypeEnum? domainType = null) Parameters Type Name Description string domain The top level domain you wish to use with MailSlurp. Do not specify subdomain just the top level. So test.com covers all subdomains such as mail.test.com. Don't include a protocol such as http://. Once added you must complete the verification steps by adding the returned records to your domain. (required). string description Optional description of the domain.. bool? createdCatchAllInbox Whether to create a catch all inbox for the domain. Any email sent to an address using your domain that cannot be matched to an existing inbox you created with the domain will be routed to the created catch all inbox. You can access emails using the regular methods on this inbox ID.. CreateDomainOptions.DomainTypeEnum? domainType Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails.. Properties View Source CreatedCatchAllInbox Whether to create a catch all inbox for the domain. Any email sent to an address using your domain that cannot be matched to an existing inbox you created with the domain will be routed to the created catch all inbox. You can access emails using the regular methods on this inbox ID. Declaration [DataMember(Name = \"createdCatchAllInbox\", EmitDefaultValue = true)] public bool? CreatedCatchAllInbox { get; set; } Property Value Type Description bool? Whether to create a catch all inbox for the domain. Any email sent to an address using your domain that cannot be matched to an existing inbox you created with the domain will be routed to the created catch all inbox. You can access emails using the regular methods on this inbox ID. View Source Description Optional description of the domain. Declaration [DataMember(Name = \"description\", EmitDefaultValue = true)] public string Description { get; set; } Property Value Type Description string Optional description of the domain. View Source Domain The top level domain you wish to use with MailSlurp. Do not specify subdomain just the top level. So test.com covers all subdomains such as mail.test.com. Don't include a protocol such as http://. Once added you must complete the verification steps by adding the returned records to your domain. Declaration [DataMember(Name = \"domain\", IsRequired = true, EmitDefaultValue = true)] public string Domain { get; set; } Property Value Type Description string The top level domain you wish to use with MailSlurp. Do not specify subdomain just the top level. So test.com covers all subdomains such as mail.test.com. Don't include a protocol such as http://. Once added you must complete the verification steps by adding the returned records to your domain. View Source DomainType Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. Declaration [DataMember(Name = \"domainType\", EmitDefaultValue = true)] public CreateDomainOptions.DomainTypeEnum? DomainType { get; set; } Property Value Type Description CreateDomainOptions.DomainTypeEnum? Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. Methods View Source Equals(CreateDomainOptions) Returns true if CreateDomainOptions instances are equal Declaration public bool Equals(CreateDomainOptions input) Parameters Type Name Description CreateDomainOptions input Instance of CreateDomainOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateEmergencyAddressOptions.html": {
    "href": "api/mailslurp.Model.CreateEmergencyAddressOptions.html",
    "title": "Class CreateEmergencyAddressOptions | MailSlurp",
    "keywords": "Class CreateEmergencyAddressOptions CreateEmergencyAddressOptions Inheritance object CreateEmergencyAddressOptions Implements IEquatable<CreateEmergencyAddressOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateEmergencyAddressOptions\")] public class CreateEmergencyAddressOptions : IEquatable<CreateEmergencyAddressOptions>, IValidatableObject Constructors View Source CreateEmergencyAddressOptions() Initializes a new instance of the CreateEmergencyAddressOptions class. Declaration [JsonConstructor] protected CreateEmergencyAddressOptions() View Source CreateEmergencyAddressOptions(string, string, string, string, string, IsoCountryCodeEnum, string) Initializes a new instance of the CreateEmergencyAddressOptions class. Declaration public CreateEmergencyAddressOptions(string customerName = null, string address1 = null, string city = null, string region = null, string postalCode = null, CreateEmergencyAddressOptions.IsoCountryCodeEnum isoCountryCode = (CreateEmergencyAddressOptions.IsoCountryCodeEnum)0, string displayName = null) Parameters Type Name Description string customerName customerName (required). string address1 address1 (required). string city city (required). string region region (required). string postalCode postalCode (required). CreateEmergencyAddressOptions.IsoCountryCodeEnum isoCountryCode isoCountryCode (required). string displayName displayName. Properties View Source Address1 Gets or Sets Address1 Declaration [DataMember(Name = \"address1\", IsRequired = true, EmitDefaultValue = true)] public string Address1 { get; set; } Property Value Type Description string View Source City Gets or Sets City Declaration [DataMember(Name = \"city\", IsRequired = true, EmitDefaultValue = true)] public string City { get; set; } Property Value Type Description string View Source CustomerName Gets or Sets CustomerName Declaration [DataMember(Name = \"customerName\", IsRequired = true, EmitDefaultValue = true)] public string CustomerName { get; set; } Property Value Type Description string View Source DisplayName Gets or Sets DisplayName Declaration [DataMember(Name = \"displayName\", EmitDefaultValue = false)] public string DisplayName { get; set; } Property Value Type Description string View Source IsoCountryCode Gets or Sets IsoCountryCode Declaration [DataMember(Name = \"isoCountryCode\", IsRequired = true, EmitDefaultValue = true)] public CreateEmergencyAddressOptions.IsoCountryCodeEnum IsoCountryCode { get; set; } Property Value Type Description CreateEmergencyAddressOptions.IsoCountryCodeEnum View Source PostalCode Gets or Sets PostalCode Declaration [DataMember(Name = \"postalCode\", IsRequired = true, EmitDefaultValue = true)] public string PostalCode { get; set; } Property Value Type Description string View Source Region Gets or Sets Region Declaration [DataMember(Name = \"region\", IsRequired = true, EmitDefaultValue = true)] public string Region { get; set; } Property Value Type Description string Methods View Source Equals(CreateEmergencyAddressOptions) Returns true if CreateEmergencyAddressOptions instances are equal Declaration public bool Equals(CreateEmergencyAddressOptions input) Parameters Type Name Description CreateEmergencyAddressOptions input Instance of CreateEmergencyAddressOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateEmergencyAddressOptions.IsoCountryCodeEnum.html": {
    "href": "api/mailslurp.Model.CreateEmergencyAddressOptions.IsoCountryCodeEnum.html",
    "title": "Enum CreateEmergencyAddressOptions.IsoCountryCodeEnum | MailSlurp",
    "keywords": "Enum CreateEmergencyAddressOptions.IsoCountryCodeEnum Defines IsoCountryCode Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum CreateEmergencyAddressOptions.IsoCountryCodeEnum Fields Name Description AU Enum AU for value: AU GB Enum GB for value: GB US Enum US for value: US"
  },
  "api/mailslurp.Model.CreateGroupOptions.html": {
    "href": "api/mailslurp.Model.CreateGroupOptions.html",
    "title": "Class CreateGroupOptions | MailSlurp",
    "keywords": "Class CreateGroupOptions Create contact group options Inheritance object CreateGroupOptions Implements IEquatable<CreateGroupOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateGroupOptions\")] public class CreateGroupOptions : IEquatable<CreateGroupOptions>, IValidatableObject Constructors View Source CreateGroupOptions() Initializes a new instance of the CreateGroupOptions class. Declaration [JsonConstructor] protected CreateGroupOptions() View Source CreateGroupOptions(string, string) Initializes a new instance of the CreateGroupOptions class. Declaration public CreateGroupOptions(string name = null, string description = null) Parameters Type Name Description string name name (required). string description description. Properties View Source Description Gets or Sets Description Declaration [DataMember(Name = \"description\", EmitDefaultValue = true)] public string Description { get; set; } Property Value Type Description string View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Methods View Source Equals(CreateGroupOptions) Returns true if CreateGroupOptions instances are equal Declaration public bool Equals(CreateGroupOptions input) Parameters Type Name Description CreateGroupOptions input Instance of CreateGroupOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateInboxDto.html": {
    "href": "api/mailslurp.Model.CreateInboxDto.html",
    "title": "Class CreateInboxDto | MailSlurp",
    "keywords": "Class CreateInboxDto Options for creating an inbox. An inbox has a real email address that can send and receive emails. Inboxes can be permanent or expire at a given time. Inboxes are either SMTP or HTTP mailboxes. SMTP inboxes are processed by a mail server running at mailslurp.mx while HTTP inboxes are processed by AWS SES backed mailservers. An inbox email address is randomly assigned by default ending in either mailslurp.com or (if useDomainPool is enabled) ending in a similar domain such as mailslurp.xyz (selected at random). To specify an address use a custom domain: either pass the emailAddress options with &lt;your-recipient>@&lt;your-domain>. To create a randomized address for your domain set the domainName to the domain you have verified or pass the domainId. Virtual inboxes prevent outbound sending and instead trap mail. Inheritance object CreateInboxDto Implements IEquatable<CreateInboxDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateInboxDto\")] public class CreateInboxDto : IEquatable<CreateInboxDto>, IValidatableObject Constructors View Source CreateInboxDto(string, string, Guid?, string, string, bool?, List<string>, DateTime?, bool?, long?, bool?, InboxTypeEnum?, bool?, bool?, string) Initializes a new instance of the CreateInboxDto class. Declaration public CreateInboxDto(string emailAddress = null, string domainName = null, Guid? domainId = null, string name = null, string description = null, bool? useDomainPool = null, List<string> tags = null, DateTime? expiresAt = null, bool? favourite = null, long? expiresIn = null, bool? allowTeamAccess = null, CreateInboxDto.InboxTypeEnum? inboxType = null, bool? virtualInbox = null, bool? useShortAddress = null, string prefix = null) Parameters Type Name Description string emailAddress A custom email address to use with the inbox. Defaults to null. When null MailSlurp will assign a random email address to the inbox such as 123@mailslurp.com. If you use the useDomainPool option when the email address is null it will generate an email address with a more varied domain ending such as 123@mailslurp.info or 123@mailslurp.biz. When a custom email address is provided the address is split into a domain and the domain is queried against your user. If you have created the domain in the MailSlurp dashboard and verified it you can use any email address that ends with the domain. Note domain types must match the inbox type - so SMTP inboxes will only work with SMTP type domains. Avoid SMTP inboxes if you need to send emails as they can only receive. Send an email to this address and the inbox will receive and store it for you. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID.. string domainName FQDN domain name for the domain you have verified. Will be appended with a randomly assigned recipient name. Use the emailAddress option instead to specify the full custom inbox.. Guid? domainId ID of custom domain to use for email address.. string name Optional name of the inbox. Displayed in the dashboard for easier search and used as the sender name when sending emails.. string description Optional description of the inbox for labelling purposes. Is shown in the dashboard and can be used with. bool? useDomainPool Use the MailSlurp domain name pool with this inbox when creating the email address. Defaults to null. If enabled the inbox will be an email address with a domain randomly chosen from a list of the MailSlurp domains. This is useful when the default @mailslurp.com email addresses used with inboxes are blocked or considered spam by a provider or receiving service. When domain pool is enabled an email address will be generated ending in @mailslurp.{world,info,xyz,...} . This means a TLD is randomly selecting from a list of .biz, .info, .xyz etc to add variance to the generated email addresses. When null or false MailSlurp uses the default behavior of @mailslurp.com or custom email address provided by the emailAddress field. Note this feature is only available for HTTP inbox types.. List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI.. DateTime? expiresAt Optional inbox expiration date. If null then this inbox is permanent and the emails in it won't be deleted. If an expiration date is provided or is required by your plan the inbox will be closed when the expiration time is reached. Expired inboxes still contain their emails but can no longer send or receive emails. An ExpiredInboxRecord is created when an inbox and the email address and inbox ID are recorded. The expiresAt property is a timestamp string in ISO DateTime Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX.. bool? favourite Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering. long? expiresIn Number of milliseconds that inbox should exist for. bool? allowTeamAccess DEPRECATED (team access is always true). Grant team access to this inbox and the emails that belong to it for team members of your organization.. CreateInboxDto.InboxTypeEnum? inboxType Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send).. bool? virtualInbox Virtual inbox prevents any outbound emails from being sent. It creates sent email records but will never send real emails to recipients. Great for testing and faking email sending.. bool? useShortAddress Use a shorter email address under 31 characters. string prefix Prefix to add before the email address for easier labelling or identification.. Properties View Source AllowTeamAccess DEPRECATED (team access is always true). Grant team access to this inbox and the emails that belong to it for team members of your organization. Declaration [DataMember(Name = \"allowTeamAccess\", EmitDefaultValue = true)] public bool? AllowTeamAccess { get; set; } Property Value Type Description bool? DEPRECATED (team access is always true). Grant team access to this inbox and the emails that belong to it for team members of your organization. View Source Description Optional description of the inbox for labelling purposes. Is shown in the dashboard and can be used with Declaration [DataMember(Name = \"description\", EmitDefaultValue = true)] public string Description { get; set; } Property Value Type Description string Optional description of the inbox for labelling purposes. Is shown in the dashboard and can be used with View Source DomainId ID of custom domain to use for email address. Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? ID of custom domain to use for email address. View Source DomainName FQDN domain name for the domain you have verified. Will be appended with a randomly assigned recipient name. Use the emailAddress option instead to specify the full custom inbox. Declaration [DataMember(Name = \"domainName\", EmitDefaultValue = true)] public string DomainName { get; set; } Property Value Type Description string FQDN domain name for the domain you have verified. Will be appended with a randomly assigned recipient name. Use the emailAddress option instead to specify the full custom inbox. View Source EmailAddress A custom email address to use with the inbox. Defaults to null. When null MailSlurp will assign a random email address to the inbox such as 123@mailslurp.com. If you use the useDomainPool option when the email address is null it will generate an email address with a more varied domain ending such as 123@mailslurp.info or 123@mailslurp.biz. When a custom email address is provided the address is split into a domain and the domain is queried against your user. If you have created the domain in the MailSlurp dashboard and verified it you can use any email address that ends with the domain. Note domain types must match the inbox type - so SMTP inboxes will only work with SMTP type domains. Avoid SMTP inboxes if you need to send emails as they can only receive. Send an email to this address and the inbox will receive and store it for you. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. Declaration [DataMember(Name = \"emailAddress\", EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string A custom email address to use with the inbox. Defaults to null. When null MailSlurp will assign a random email address to the inbox such as 123@mailslurp.com. If you use the useDomainPool option when the email address is null it will generate an email address with a more varied domain ending such as 123@mailslurp.info or 123@mailslurp.biz. When a custom email address is provided the address is split into a domain and the domain is queried against your user. If you have created the domain in the MailSlurp dashboard and verified it you can use any email address that ends with the domain. Note domain types must match the inbox type - so SMTP inboxes will only work with SMTP type domains. Avoid SMTP inboxes if you need to send emails as they can only receive. Send an email to this address and the inbox will receive and store it for you. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. View Source ExpiresAt Optional inbox expiration date. If null then this inbox is permanent and the emails in it won't be deleted. If an expiration date is provided or is required by your plan the inbox will be closed when the expiration time is reached. Expired inboxes still contain their emails but can no longer send or receive emails. An ExpiredInboxRecord is created when an inbox and the email address and inbox ID are recorded. The expiresAt property is a timestamp string in ISO DateTime Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX. Declaration [DataMember(Name = \"expiresAt\", EmitDefaultValue = true)] public DateTime? ExpiresAt { get; set; } Property Value Type Description DateTime? Optional inbox expiration date. If null then this inbox is permanent and the emails in it won't be deleted. If an expiration date is provided or is required by your plan the inbox will be closed when the expiration time is reached. Expired inboxes still contain their emails but can no longer send or receive emails. An ExpiredInboxRecord is created when an inbox and the email address and inbox ID are recorded. The expiresAt property is a timestamp string in ISO DateTime Format yyyy-MM-dd'T'HH:mm:ss.SSSXXX. View Source ExpiresIn Number of milliseconds that inbox should exist for Declaration [DataMember(Name = \"expiresIn\", EmitDefaultValue = true)] public long? ExpiresIn { get; set; } Property Value Type Description long? Number of milliseconds that inbox should exist for View Source Favourite Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering Declaration [DataMember(Name = \"favourite\", EmitDefaultValue = true)] public bool? Favourite { get; set; } Property Value Type Description bool? Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering View Source InboxType Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). Declaration [DataMember(Name = \"inboxType\", EmitDefaultValue = true)] public CreateInboxDto.InboxTypeEnum? InboxType { get; set; } Property Value Type Description CreateInboxDto.InboxTypeEnum? Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). View Source Name Optional name of the inbox. Displayed in the dashboard for easier search and used as the sender name when sending emails. Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Optional name of the inbox. Displayed in the dashboard for easier search and used as the sender name when sending emails. View Source Prefix Prefix to add before the email address for easier labelling or identification. Declaration [DataMember(Name = \"prefix\", EmitDefaultValue = true)] public string Prefix { get; set; } Property Value Type Description string Prefix to add before the email address for easier labelling or identification. View Source Tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. Declaration [DataMember(Name = \"tags\", EmitDefaultValue = true)] public List<string> Tags { get; set; } Property Value Type Description List<string> Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. View Source UseDomainPool Use the MailSlurp domain name pool with this inbox when creating the email address. Defaults to null. If enabled the inbox will be an email address with a domain randomly chosen from a list of the MailSlurp domains. This is useful when the default @mailslurp.com email addresses used with inboxes are blocked or considered spam by a provider or receiving service. When domain pool is enabled an email address will be generated ending in @mailslurp.{world,info,xyz,...} . This means a TLD is randomly selecting from a list of .biz, .info, .xyz etc to add variance to the generated email addresses. When null or false MailSlurp uses the default behavior of @mailslurp.com or custom email address provided by the emailAddress field. Note this feature is only available for HTTP inbox types. Declaration [DataMember(Name = \"useDomainPool\", EmitDefaultValue = true)] public bool? UseDomainPool { get; set; } Property Value Type Description bool? Use the MailSlurp domain name pool with this inbox when creating the email address. Defaults to null. If enabled the inbox will be an email address with a domain randomly chosen from a list of the MailSlurp domains. This is useful when the default @mailslurp.com email addresses used with inboxes are blocked or considered spam by a provider or receiving service. When domain pool is enabled an email address will be generated ending in @mailslurp.{world,info,xyz,...} . This means a TLD is randomly selecting from a list of .biz, .info, .xyz etc to add variance to the generated email addresses. When null or false MailSlurp uses the default behavior of @mailslurp.com or custom email address provided by the emailAddress field. Note this feature is only available for HTTP inbox types. View Source UseShortAddress Use a shorter email address under 31 characters Declaration [DataMember(Name = \"useShortAddress\", EmitDefaultValue = true)] public bool? UseShortAddress { get; set; } Property Value Type Description bool? Use a shorter email address under 31 characters View Source VirtualInbox Virtual inbox prevents any outbound emails from being sent. It creates sent email records but will never send real emails to recipients. Great for testing and faking email sending. Declaration [DataMember(Name = \"virtualInbox\", EmitDefaultValue = true)] public bool? VirtualInbox { get; set; } Property Value Type Description bool? Virtual inbox prevents any outbound emails from being sent. It creates sent email records but will never send real emails to recipients. Great for testing and faking email sending. Methods View Source Equals(CreateInboxDto) Returns true if CreateInboxDto instances are equal Declaration public bool Equals(CreateInboxDto input) Parameters Type Name Description CreateInboxDto input Instance of CreateInboxDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateInboxDto.InboxTypeEnum.html": {
    "href": "api/mailslurp.Model.CreateInboxDto.InboxTypeEnum.html",
    "title": "Enum CreateInboxDto.InboxTypeEnum | MailSlurp",
    "keywords": "Enum CreateInboxDto.InboxTypeEnum Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum CreateInboxDto.InboxTypeEnum Fields Name Description HTTPINBOX Enum HTTPINBOX for value: HTTP_INBOX SMTPINBOX Enum SMTPINBOX for value: SMTP_INBOX"
  },
  "api/mailslurp.Model.CreateInboxForwarderOptions.FieldEnum.html": {
    "href": "api/mailslurp.Model.CreateInboxForwarderOptions.FieldEnum.html",
    "title": "Enum CreateInboxForwarderOptions.FieldEnum | MailSlurp",
    "keywords": "Enum CreateInboxForwarderOptions.FieldEnum Field to match against to trigger inbox forwarding for inbound email Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum CreateInboxForwarderOptions.FieldEnum Fields Name Description ATTACHMENTS Enum ATTACHMENTS for value: ATTACHMENTS RECIPIENTS Enum RECIPIENTS for value: RECIPIENTS SENDER Enum SENDER for value: SENDER SUBJECT Enum SUBJECT for value: SUBJECT"
  },
  "api/mailslurp.Model.CreateInboxForwarderOptions.html": {
    "href": "api/mailslurp.Model.CreateInboxForwarderOptions.html",
    "title": "Class CreateInboxForwarderOptions | MailSlurp",
    "keywords": "Class CreateInboxForwarderOptions Options for creating an inbox forwarder Inheritance object CreateInboxForwarderOptions Implements IEquatable<CreateInboxForwarderOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateInboxForwarderOptions\")] public class CreateInboxForwarderOptions : IEquatable<CreateInboxForwarderOptions>, IValidatableObject Constructors View Source CreateInboxForwarderOptions() Initializes a new instance of the CreateInboxForwarderOptions class. Declaration [JsonConstructor] protected CreateInboxForwarderOptions() View Source CreateInboxForwarderOptions(FieldEnum, string, List<string>) Initializes a new instance of the CreateInboxForwarderOptions class. Declaration public CreateInboxForwarderOptions(CreateInboxForwarderOptions.FieldEnum field = (CreateInboxForwarderOptions.FieldEnum)0, string match = null, List<string> forwardToRecipients = null) Parameters Type Name Description CreateInboxForwarderOptions.FieldEnum field Field to match against to trigger inbox forwarding for inbound email (required). string match String or wildcard style match for field specified when evaluating forwarding rules (required). List<string> forwardToRecipients Email addresses to forward an email to if it matches the field and match criteria of the forwarder (required). Properties View Source Field Field to match against to trigger inbox forwarding for inbound email Declaration [DataMember(Name = \"field\", IsRequired = true, EmitDefaultValue = true)] public CreateInboxForwarderOptions.FieldEnum Field { get; set; } Property Value Type Description CreateInboxForwarderOptions.FieldEnum Field to match against to trigger inbox forwarding for inbound email View Source ForwardToRecipients Email addresses to forward an email to if it matches the field and match criteria of the forwarder Declaration [DataMember(Name = \"forwardToRecipients\", IsRequired = true, EmitDefaultValue = true)] public List<string> ForwardToRecipients { get; set; } Property Value Type Description List<string> Email addresses to forward an email to if it matches the field and match criteria of the forwarder View Source Match String or wildcard style match for field specified when evaluating forwarding rules Declaration [DataMember(Name = \"match\", IsRequired = true, EmitDefaultValue = true)] public string Match { get; set; } Property Value Type Description string String or wildcard style match for field specified when evaluating forwarding rules Methods View Source Equals(CreateInboxForwarderOptions) Returns true if CreateInboxForwarderOptions instances are equal Declaration public bool Equals(CreateInboxForwarderOptions input) Parameters Type Name Description CreateInboxForwarderOptions input Instance of CreateInboxForwarderOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateInboxReplierOptions.FieldEnum.html": {
    "href": "api/mailslurp.Model.CreateInboxReplierOptions.FieldEnum.html",
    "title": "Enum CreateInboxReplierOptions.FieldEnum | MailSlurp",
    "keywords": "Enum CreateInboxReplierOptions.FieldEnum Field to match against to trigger inbox replier for inbound email Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum CreateInboxReplierOptions.FieldEnum Fields Name Description ATTACHMENTS Enum ATTACHMENTS for value: ATTACHMENTS RECIPIENTS Enum RECIPIENTS for value: RECIPIENTS SENDER Enum SENDER for value: SENDER SUBJECT Enum SUBJECT for value: SUBJECT"
  },
  "api/mailslurp.Model.CreateInboxReplierOptions.html": {
    "href": "api/mailslurp.Model.CreateInboxReplierOptions.html",
    "title": "Class CreateInboxReplierOptions | MailSlurp",
    "keywords": "Class CreateInboxReplierOptions Options for creating an inbox replier. Repliers can be attached to inboxes and send automated responses when an inbound email matches given criteria. Inheritance object CreateInboxReplierOptions Implements IEquatable<CreateInboxReplierOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateInboxReplierOptions\")] public class CreateInboxReplierOptions : IEquatable<CreateInboxReplierOptions>, IValidatableObject Constructors View Source CreateInboxReplierOptions() Initializes a new instance of the CreateInboxReplierOptions class. Declaration [JsonConstructor] protected CreateInboxReplierOptions() View Source CreateInboxReplierOptions(Guid, string, FieldEnum, string, string, string, string, string, bool?, bool?, string, Guid?, Dictionary<string, object>) Initializes a new instance of the CreateInboxReplierOptions class. Declaration public CreateInboxReplierOptions(Guid inboxId = default, string name = null, CreateInboxReplierOptions.FieldEnum field = (CreateInboxReplierOptions.FieldEnum)0, string match = null, string replyTo = null, string subject = null, string from = null, string charset = null, bool? ignoreReplyTo = null, bool? isHTML = null, string body = null, Guid? templateId = null, Dictionary<string, object> templateVariables = null) Parameters Type Name Description Guid inboxId Inbox ID to attach replier to (required). string name Name for replier. CreateInboxReplierOptions.FieldEnum field Field to match against to trigger inbox replier for inbound email (required). string match String or wildcard style match for field specified when evaluating reply rules. Use * to match anything. (required). string replyTo Reply-to email address when sending replying. string subject Subject override when replying to email. string from Send email from address. string charset Email reply charset. bool? ignoreReplyTo Ignore sender replyTo when responding. Send directly to the sender if enabled.. bool? isHTML Send HTML email. string body Email body for reply. Guid? templateId ID of template to use when sending a reply. Dictionary<string, object> templateVariables Template variable values. Properties View Source Body Email body for reply Declaration [DataMember(Name = \"body\", EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string Email body for reply View Source Charset Email reply charset Declaration [DataMember(Name = \"charset\", EmitDefaultValue = true)] public string Charset { get; set; } Property Value Type Description string Email reply charset View Source Field Field to match against to trigger inbox replier for inbound email Declaration [DataMember(Name = \"field\", IsRequired = true, EmitDefaultValue = true)] public CreateInboxReplierOptions.FieldEnum Field { get; set; } Property Value Type Description CreateInboxReplierOptions.FieldEnum Field to match against to trigger inbox replier for inbound email View Source From Send email from address Declaration [DataMember(Name = \"from\", EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string Send email from address View Source IgnoreReplyTo Ignore sender replyTo when responding. Send directly to the sender if enabled. Declaration [DataMember(Name = \"ignoreReplyTo\", EmitDefaultValue = true)] public bool? IgnoreReplyTo { get; set; } Property Value Type Description bool? Ignore sender replyTo when responding. Send directly to the sender if enabled. View Source InboxId Inbox ID to attach replier to Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid Inbox ID to attach replier to View Source IsHTML Send HTML email Declaration [DataMember(Name = \"isHTML\", EmitDefaultValue = true)] public bool? IsHTML { get; set; } Property Value Type Description bool? Send HTML email View Source Match String or wildcard style match for field specified when evaluating reply rules. Use * to match anything. Declaration [DataMember(Name = \"match\", IsRequired = true, EmitDefaultValue = true)] public string Match { get; set; } Property Value Type Description string String or wildcard style match for field specified when evaluating reply rules. Use * to match anything. View Source Name Name for replier Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Name for replier View Source ReplyTo Reply-to email address when sending replying Declaration [DataMember(Name = \"replyTo\", EmitDefaultValue = true)] public string ReplyTo { get; set; } Property Value Type Description string Reply-to email address when sending replying View Source Subject Subject override when replying to email Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string Subject override when replying to email View Source TemplateId ID of template to use when sending a reply Declaration [DataMember(Name = \"templateId\", EmitDefaultValue = true)] public Guid? TemplateId { get; set; } Property Value Type Description Guid? ID of template to use when sending a reply View Source TemplateVariables Template variable values Declaration [DataMember(Name = \"templateVariables\", EmitDefaultValue = true)] public Dictionary<string, object> TemplateVariables { get; set; } Property Value Type Description Dictionary<string, object> Template variable values Methods View Source Equals(CreateInboxReplierOptions) Returns true if CreateInboxReplierOptions instances are equal Declaration public bool Equals(CreateInboxReplierOptions input) Parameters Type Name Description CreateInboxReplierOptions input Instance of CreateInboxReplierOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateInboxRulesetOptions.ActionEnum.html": {
    "href": "api/mailslurp.Model.CreateInboxRulesetOptions.ActionEnum.html",
    "title": "Enum CreateInboxRulesetOptions.ActionEnum | MailSlurp",
    "keywords": "Enum CreateInboxRulesetOptions.ActionEnum Action to be taken when the ruleset matches an email for the given scope. For example: BLOCK action with target * and scope SENDING_EMAILS blocks sending to all recipients. Note ALLOW takes precedent over BLOCK. FILTER_REMOVE is like block but will remove offending email addresses during a send or receive event instead of blocking the action. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum CreateInboxRulesetOptions.ActionEnum Fields Name Description ALLOW Enum ALLOW for value: ALLOW BLOCK Enum BLOCK for value: BLOCK FILTERREMOVE Enum FILTERREMOVE for value: FILTER_REMOVE"
  },
  "api/mailslurp.Model.CreateInboxRulesetOptions.html": {
    "href": "api/mailslurp.Model.CreateInboxRulesetOptions.html",
    "title": "Class CreateInboxRulesetOptions | MailSlurp",
    "keywords": "Class CreateInboxRulesetOptions Options for creating inbox rulesets. Inbox rulesets can be used to block, allow, filter, or forward emails when sending or receiving using the inbox. Inheritance object CreateInboxRulesetOptions Implements IEquatable<CreateInboxRulesetOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateInboxRulesetOptions\")] public class CreateInboxRulesetOptions : IEquatable<CreateInboxRulesetOptions>, IValidatableObject Constructors View Source CreateInboxRulesetOptions() Initializes a new instance of the CreateInboxRulesetOptions class. Declaration [JsonConstructor] protected CreateInboxRulesetOptions() View Source CreateInboxRulesetOptions(ScopeEnum, ActionEnum, string) Initializes a new instance of the CreateInboxRulesetOptions class. Declaration public CreateInboxRulesetOptions(CreateInboxRulesetOptions.ScopeEnum scope = (CreateInboxRulesetOptions.ScopeEnum)0, CreateInboxRulesetOptions.ActionEnum action = (CreateInboxRulesetOptions.ActionEnum)0, string target = null) Parameters Type Name Description CreateInboxRulesetOptions.ScopeEnum scope What type of emails actions to apply ruleset to. Either SENDING_EMAILS or RECEIVING_EMAILS will apply action and target to any sending or receiving of emails respectively. (required). CreateInboxRulesetOptions.ActionEnum action Action to be taken when the ruleset matches an email for the given scope. For example: BLOCK action with target * and scope SENDING_EMAILS blocks sending to all recipients. Note ALLOW takes precedent over BLOCK. FILTER_REMOVE is like block but will remove offending email addresses during a send or receive event instead of blocking the action. (required). string target Target to match emails with. Can be a wild-card type pattern or a valid email address. For instance *@gmail.com matches all gmail addresses while test@gmail.com matches one address exactly. The target is applied to every recipient field email address when SENDING_EMAILS is the scope and is applied to sender of email when RECEIVING_EMAILS. (required). Properties View Source Action Action to be taken when the ruleset matches an email for the given scope. For example: BLOCK action with target * and scope SENDING_EMAILS blocks sending to all recipients. Note ALLOW takes precedent over BLOCK. FILTER_REMOVE is like block but will remove offending email addresses during a send or receive event instead of blocking the action. Declaration [DataMember(Name = \"action\", IsRequired = true, EmitDefaultValue = true)] public CreateInboxRulesetOptions.ActionEnum Action { get; set; } Property Value Type Description CreateInboxRulesetOptions.ActionEnum Action to be taken when the ruleset matches an email for the given scope. For example: BLOCK action with target * and scope SENDING_EMAILS blocks sending to all recipients. Note ALLOW takes precedent over BLOCK. FILTER_REMOVE is like block but will remove offending email addresses during a send or receive event instead of blocking the action. View Source Scope What type of emails actions to apply ruleset to. Either SENDING_EMAILS or RECEIVING_EMAILS will apply action and target to any sending or receiving of emails respectively. Declaration [DataMember(Name = \"scope\", IsRequired = true, EmitDefaultValue = true)] public CreateInboxRulesetOptions.ScopeEnum Scope { get; set; } Property Value Type Description CreateInboxRulesetOptions.ScopeEnum What type of emails actions to apply ruleset to. Either SENDING_EMAILS or RECEIVING_EMAILS will apply action and target to any sending or receiving of emails respectively. View Source Target Target to match emails with. Can be a wild-card type pattern or a valid email address. For instance *@gmail.com matches all gmail addresses while test@gmail.com matches one address exactly. The target is applied to every recipient field email address when SENDING_EMAILS is the scope and is applied to sender of email when RECEIVING_EMAILS. Declaration [DataMember(Name = \"target\", IsRequired = true, EmitDefaultValue = true)] public string Target { get; set; } Property Value Type Description string Target to match emails with. Can be a wild-card type pattern or a valid email address. For instance *@gmail.com matches all gmail addresses while test@gmail.com matches one address exactly. The target is applied to every recipient field email address when SENDING_EMAILS is the scope and is applied to sender of email when RECEIVING_EMAILS. Methods View Source Equals(CreateInboxRulesetOptions) Returns true if CreateInboxRulesetOptions instances are equal Declaration public bool Equals(CreateInboxRulesetOptions input) Parameters Type Name Description CreateInboxRulesetOptions input Instance of CreateInboxRulesetOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateInboxRulesetOptions.ScopeEnum.html": {
    "href": "api/mailslurp.Model.CreateInboxRulesetOptions.ScopeEnum.html",
    "title": "Enum CreateInboxRulesetOptions.ScopeEnum | MailSlurp",
    "keywords": "Enum CreateInboxRulesetOptions.ScopeEnum What type of emails actions to apply ruleset to. Either SENDING_EMAILS or RECEIVING_EMAILS will apply action and target to any sending or receiving of emails respectively. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum CreateInboxRulesetOptions.ScopeEnum Fields Name Description RECEIVINGEMAILS Enum RECEIVINGEMAILS for value: RECEIVING_EMAILS SENDINGEMAILS Enum SENDINGEMAILS for value: SENDING_EMAILS"
  },
  "api/mailslurp.Model.CreateTemplateOptions.html": {
    "href": "api/mailslurp.Model.CreateTemplateOptions.html",
    "title": "Class CreateTemplateOptions | MailSlurp",
    "keywords": "Class CreateTemplateOptions Create template options Inheritance object CreateTemplateOptions Implements IEquatable<CreateTemplateOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateTemplateOptions\")] public class CreateTemplateOptions : IEquatable<CreateTemplateOptions>, IValidatableObject Constructors View Source CreateTemplateOptions() Initializes a new instance of the CreateTemplateOptions class. Declaration [JsonConstructor] protected CreateTemplateOptions() View Source CreateTemplateOptions(string, string) Initializes a new instance of the CreateTemplateOptions class. Declaration public CreateTemplateOptions(string name = null, string content = null) Parameters Type Name Description string name Name of template (required). string content Template content. Can include moustache style variables such as {{var_name}} (required). Properties View Source Content Template content. Can include moustache style variables such as {{var_name}} Declaration [DataMember(Name = \"content\", IsRequired = true, EmitDefaultValue = true)] public string Content { get; set; } Property Value Type Description string Template content. Can include moustache style variables such as {{var_name}} View Source Name Name of template Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Name of template Methods View Source Equals(CreateTemplateOptions) Returns true if CreateTemplateOptions instances are equal Declaration public bool Equals(CreateTemplateOptions input) Parameters Type Name Description CreateTemplateOptions input Instance of CreateTemplateOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateTrackingPixelOptions.html": {
    "href": "api/mailslurp.Model.CreateTrackingPixelOptions.html",
    "title": "Class CreateTrackingPixelOptions | MailSlurp",
    "keywords": "Class CreateTrackingPixelOptions Options for creating a tracking pixel for email open tracking Inheritance object CreateTrackingPixelOptions Implements IEquatable<CreateTrackingPixelOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateTrackingPixelOptions\")] public class CreateTrackingPixelOptions : IEquatable<CreateTrackingPixelOptions>, IValidatableObject Constructors View Source CreateTrackingPixelOptions(string, string) Initializes a new instance of the CreateTrackingPixelOptions class. Declaration public CreateTrackingPixelOptions(string name = null, string recipient = null) Parameters Type Name Description string name name. string recipient recipient. Properties View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source Recipient Gets or Sets Recipient Declaration [DataMember(Name = \"recipient\", EmitDefaultValue = true)] public string Recipient { get; set; } Property Value Type Description string Methods View Source Equals(CreateTrackingPixelOptions) Returns true if CreateTrackingPixelOptions instances are equal Declaration public bool Equals(CreateTrackingPixelOptions input) Parameters Type Name Description CreateTrackingPixelOptions input Instance of CreateTrackingPixelOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.CreateWebhookOptions.EventNameEnum.html": {
    "href": "api/mailslurp.Model.CreateWebhookOptions.EventNameEnum.html",
    "title": "Enum CreateWebhookOptions.EventNameEnum | MailSlurp",
    "keywords": "Enum CreateWebhookOptions.EventNameEnum Optional webhook event name. Default is EMAIL_RECEIVED and is triggered when an email is received by the inbox associated with the webhook. Payload differ according to the webhook event name. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum CreateWebhookOptions.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.CreateWebhookOptions.html": {
    "href": "api/mailslurp.Model.CreateWebhookOptions.html",
    "title": "Class CreateWebhookOptions | MailSlurp",
    "keywords": "Class CreateWebhookOptions Options for creating a webhook. Webhooks can be attached to inboxes and MailSlurp will POST a webhook payload to the URL specified whenever the webhook's event is triggered. Webhooks are great for processing many inbound emails and responding to other events at scale. Customize the payload sent to your endpoint by setting the requestBodyTemplate property to a string with moustache style variables. Property names from the standard payload model for the given event are available as variables. Inheritance object CreateWebhookOptions Implements IEquatable<CreateWebhookOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"CreateWebhookOptions\")] public class CreateWebhookOptions : IEquatable<CreateWebhookOptions>, IValidatableObject Constructors View Source CreateWebhookOptions() Initializes a new instance of the CreateWebhookOptions class. Declaration [JsonConstructor] protected CreateWebhookOptions() View Source CreateWebhookOptions(string, BasicAuthOptions, string, EventNameEnum?, WebhookHeaders, string, bool?, bool?) Initializes a new instance of the CreateWebhookOptions class. Declaration public CreateWebhookOptions(string url = null, BasicAuthOptions basicAuth = null, string name = null, CreateWebhookOptions.EventNameEnum? eventName = null, WebhookHeaders includeHeaders = null, string requestBodyTemplate = null, bool? useStaticIpRange = false, bool? ignoreInsecureSslCertificates = null) Parameters Type Name Description string url Public URL on your server that MailSlurp can post WebhookNotification payload to when an email is received or an event is trigger. The payload of the submitted JSON is dependent on the webhook event type. See docs.mailslurp.com/webhooks for event payload documentation. (required). BasicAuthOptions basicAuth basicAuth. string name Optional name for the webhook. CreateWebhookOptions.EventNameEnum? eventName Optional webhook event name. Default is EMAIL_RECEIVED and is triggered when an email is received by the inbox associated with the webhook. Payload differ according to the webhook event name.. WebhookHeaders includeHeaders includeHeaders. string requestBodyTemplate Template for the JSON body of the webhook request that will be sent to your server. Use Moustache style {{variableName}} templating to use parts of the standard webhook payload for the given event.. bool? useStaticIpRange Use static IP range when calling webhook endpoint (default to false). bool? ignoreInsecureSslCertificates Ignore insecure SSL certificates when sending request. Useful for self-signed certs.. Properties View Source BasicAuth Gets or Sets BasicAuth Declaration [DataMember(Name = \"basicAuth\", EmitDefaultValue = true)] public BasicAuthOptions BasicAuth { get; set; } Property Value Type Description BasicAuthOptions View Source EventName Optional webhook event name. Default is EMAIL_RECEIVED and is triggered when an email is received by the inbox associated with the webhook. Payload differ according to the webhook event name. Declaration [DataMember(Name = \"eventName\", EmitDefaultValue = true)] public CreateWebhookOptions.EventNameEnum? EventName { get; set; } Property Value Type Description CreateWebhookOptions.EventNameEnum? Optional webhook event name. Default is EMAIL_RECEIVED and is triggered when an email is received by the inbox associated with the webhook. Payload differ according to the webhook event name. View Source IgnoreInsecureSslCertificates Ignore insecure SSL certificates when sending request. Useful for self-signed certs. Declaration [DataMember(Name = \"ignoreInsecureSslCertificates\", EmitDefaultValue = true)] public bool? IgnoreInsecureSslCertificates { get; set; } Property Value Type Description bool? Ignore insecure SSL certificates when sending request. Useful for self-signed certs. View Source IncludeHeaders Gets or Sets IncludeHeaders Declaration [DataMember(Name = \"includeHeaders\", EmitDefaultValue = false)] public WebhookHeaders IncludeHeaders { get; set; } Property Value Type Description WebhookHeaders View Source Name Optional name for the webhook Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Optional name for the webhook View Source RequestBodyTemplate Template for the JSON body of the webhook request that will be sent to your server. Use Moustache style {{variableName}} templating to use parts of the standard webhook payload for the given event. Declaration [DataMember(Name = \"requestBodyTemplate\", EmitDefaultValue = true)] public string RequestBodyTemplate { get; set; } Property Value Type Description string Template for the JSON body of the webhook request that will be sent to your server. Use Moustache style {{variableName}} templating to use parts of the standard webhook payload for the given event. View Source Url Public URL on your server that MailSlurp can post WebhookNotification payload to when an email is received or an event is trigger. The payload of the submitted JSON is dependent on the webhook event type. See docs.mailslurp.com/webhooks for event payload documentation. Declaration [DataMember(Name = \"url\", IsRequired = true, EmitDefaultValue = true)] public string Url { get; set; } Property Value Type Description string Public URL on your server that MailSlurp can post WebhookNotification payload to when an email is received or an event is trigger. The payload of the submitted JSON is dependent on the webhook event type. See docs.mailslurp.com/webhooks for event payload documentation. View Source UseStaticIpRange Use static IP range when calling webhook endpoint Declaration [DataMember(Name = \"useStaticIpRange\", EmitDefaultValue = true)] public bool? UseStaticIpRange { get; set; } Property Value Type Description bool? Use static IP range when calling webhook endpoint Methods View Source Equals(CreateWebhookOptions) Returns true if CreateWebhookOptions instances are equal Declaration public bool Equals(CreateWebhookOptions input) Parameters Type Name Description CreateWebhookOptions input Instance of CreateWebhookOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.DeliveryStatusDto.html": {
    "href": "api/mailslurp.Model.DeliveryStatusDto.html",
    "title": "Class DeliveryStatusDto | MailSlurp",
    "keywords": "Class DeliveryStatusDto DeliveryStatusDto Inheritance object DeliveryStatusDto Implements IEquatable<DeliveryStatusDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"DeliveryStatusDto\")] public class DeliveryStatusDto : IEquatable<DeliveryStatusDto>, IValidatableObject Constructors View Source DeliveryStatusDto() Initializes a new instance of the DeliveryStatusDto class. Declaration [JsonConstructor] protected DeliveryStatusDto() View Source DeliveryStatusDto(Guid, Guid, Guid, string, Guid, string, List<string>, string, int, long, DateTime, string, DateTime, DateTime) Initializes a new instance of the DeliveryStatusDto class. Declaration public DeliveryStatusDto(Guid id = default, Guid userId = default, Guid sentId = default, string remoteMtaIp = null, Guid inboxId = default, string reportingMta = null, List<string> recipients = null, string smtpResponse = null, int smtpStatusCode = 0, long processingTimeMillis = 0, DateTime received = default, string subject = null, DateTime createdAt = default, DateTime updatedAt = default) Parameters Type Name Description Guid id id (required). Guid userId userId (required). Guid sentId sentId. string remoteMtaIp remoteMtaIp. Guid inboxId inboxId. string reportingMta reportingMta. List<string> recipients recipients. string smtpResponse smtpResponse. int smtpStatusCode smtpStatusCode. long processingTimeMillis processingTimeMillis. DateTime received received. string subject subject. DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = false)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source ProcessingTimeMillis Gets or Sets ProcessingTimeMillis Declaration [DataMember(Name = \"processingTimeMillis\", EmitDefaultValue = false)] public long ProcessingTimeMillis { get; set; } Property Value Type Description long View Source Received Gets or Sets Received Declaration [DataMember(Name = \"received\", EmitDefaultValue = false)] public DateTime Received { get; set; } Property Value Type Description DateTime View Source Recipients Gets or Sets Recipients Declaration [DataMember(Name = \"recipients\", EmitDefaultValue = false)] public List<string> Recipients { get; set; } Property Value Type Description List<string> View Source RemoteMtaIp Gets or Sets RemoteMtaIp Declaration [DataMember(Name = \"remoteMtaIp\", EmitDefaultValue = false)] public string RemoteMtaIp { get; set; } Property Value Type Description string View Source ReportingMta Gets or Sets ReportingMta Declaration [DataMember(Name = \"reportingMta\", EmitDefaultValue = false)] public string ReportingMta { get; set; } Property Value Type Description string View Source SentId Gets or Sets SentId Declaration [DataMember(Name = \"sentId\", EmitDefaultValue = false)] public Guid SentId { get; set; } Property Value Type Description Guid View Source SmtpResponse Gets or Sets SmtpResponse Declaration [DataMember(Name = \"smtpResponse\", EmitDefaultValue = false)] public string SmtpResponse { get; set; } Property Value Type Description string View Source SmtpStatusCode Gets or Sets SmtpStatusCode Declaration [DataMember(Name = \"smtpStatusCode\", EmitDefaultValue = false)] public int SmtpStatusCode { get; set; } Property Value Type Description int View Source Subject Gets or Sets Subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = false)] public string Subject { get; set; } Property Value Type Description string View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(DeliveryStatusDto) Returns true if DeliveryStatusDto instances are equal Declaration public bool Equals(DeliveryStatusDto input) Parameters Type Name Description DeliveryStatusDto input Instance of DeliveryStatusDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.DescribeDomainOptions.html": {
    "href": "api/mailslurp.Model.DescribeDomainOptions.html",
    "title": "Class DescribeDomainOptions | MailSlurp",
    "keywords": "Class DescribeDomainOptions Domain record description Inheritance object DescribeDomainOptions Implements IEquatable<DescribeDomainOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"DescribeDomainOptions\")] public class DescribeDomainOptions : IEquatable<DescribeDomainOptions>, IValidatableObject Constructors View Source DescribeDomainOptions() Initializes a new instance of the DescribeDomainOptions class. Declaration [JsonConstructor] protected DescribeDomainOptions() View Source DescribeDomainOptions(string) Initializes a new instance of the DescribeDomainOptions class. Declaration public DescribeDomainOptions(string domain = null) Parameters Type Name Description string domain domain (required). Properties View Source Domain Gets or Sets Domain Declaration [DataMember(Name = \"domain\", IsRequired = true, EmitDefaultValue = true)] public string Domain { get; set; } Property Value Type Description string Methods View Source Equals(DescribeDomainOptions) Returns true if DescribeDomainOptions instances are equal Declaration public bool Equals(DescribeDomainOptions input) Parameters Type Name Description DescribeDomainOptions input Instance of DescribeDomainOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.DescribeMailServerDomainResult.html": {
    "href": "api/mailslurp.Model.DescribeMailServerDomainResult.html",
    "title": "Class DescribeMailServerDomainResult | MailSlurp",
    "keywords": "Class DescribeMailServerDomainResult Name Server lookup result Inheritance object DescribeMailServerDomainResult Implements IEquatable<DescribeMailServerDomainResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"DescribeMailServerDomainResult\")] public class DescribeMailServerDomainResult : IEquatable<DescribeMailServerDomainResult>, IValidatableObject Constructors View Source DescribeMailServerDomainResult() Initializes a new instance of the DescribeMailServerDomainResult class. Declaration [JsonConstructor] protected DescribeMailServerDomainResult() View Source DescribeMailServerDomainResult(List<NameServerRecord>, string, string) Initializes a new instance of the DescribeMailServerDomainResult class. Declaration public DescribeMailServerDomainResult(List<NameServerRecord> mxRecords = null, string domain = null, string message = null) Parameters Type Name Description List<NameServerRecord> mxRecords mxRecords (required). string domain domain (required). string message message. Properties View Source Domain Gets or Sets Domain Declaration [DataMember(Name = \"domain\", IsRequired = true, EmitDefaultValue = true)] public string Domain { get; set; } Property Value Type Description string View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = true)] public string Message { get; set; } Property Value Type Description string View Source MxRecords Gets or Sets MxRecords Declaration [DataMember(Name = \"mxRecords\", IsRequired = true, EmitDefaultValue = true)] public List<NameServerRecord> MxRecords { get; set; } Property Value Type Description List<NameServerRecord> Methods View Source Equals(DescribeMailServerDomainResult) Returns true if DescribeMailServerDomainResult instances are equal Declaration public bool Equals(DescribeMailServerDomainResult input) Parameters Type Name Description DescribeMailServerDomainResult input Instance of DescribeMailServerDomainResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.DNSLookupOptions.html": {
    "href": "api/mailslurp.Model.DNSLookupOptions.html",
    "title": "Class DNSLookupOptions | MailSlurp",
    "keywords": "Class DNSLookupOptions Options for DNS query. Inheritance object DNSLookupOptions Implements IEquatable<DNSLookupOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"DNSLookupOptions\")] public class DNSLookupOptions : IEquatable<DNSLookupOptions>, IValidatableObject Constructors View Source DNSLookupOptions() Initializes a new instance of the DNSLookupOptions class. Declaration [JsonConstructor] protected DNSLookupOptions() View Source DNSLookupOptions(string, List<RecordTypesEnum>, bool) Initializes a new instance of the DNSLookupOptions class. Declaration public DNSLookupOptions(string hostname = null, List<DNSLookupOptions.RecordTypesEnum> recordTypes = null, bool omitFinalDNSDot = false) Parameters Type Name Description string hostname List of record types you wish to query such as MX, DNS, TXT, NS, A etc. (required). List<DNSLookupOptions.RecordTypesEnum> recordTypes List of record types you wish to query such as MX, DNS, TXT, NS, A etc. (required). bool omitFinalDNSDot Optionally control whether to omit the final dot in full DNS name values. (required). Properties View Source Hostname List of record types you wish to query such as MX, DNS, TXT, NS, A etc. Declaration [DataMember(Name = \"hostname\", IsRequired = true, EmitDefaultValue = true)] public string Hostname { get; set; } Property Value Type Description string List of record types you wish to query such as MX, DNS, TXT, NS, A etc. View Source OmitFinalDNSDot Optionally control whether to omit the final dot in full DNS name values. Declaration [DataMember(Name = \"omitFinalDNSDot\", IsRequired = true, EmitDefaultValue = true)] public bool OmitFinalDNSDot { get; set; } Property Value Type Description bool Optionally control whether to omit the final dot in full DNS name values. View Source RecordTypes List of record types you wish to query such as MX, DNS, TXT, NS, A etc. Declaration [DataMember(Name = \"recordTypes\", IsRequired = true, EmitDefaultValue = true)] public List<DNSLookupOptions.RecordTypesEnum> RecordTypes { get; set; } Property Value Type Description List<DNSLookupOptions.RecordTypesEnum> List of record types you wish to query such as MX, DNS, TXT, NS, A etc. Methods View Source Equals(DNSLookupOptions) Returns true if DNSLookupOptions instances are equal Declaration public bool Equals(DNSLookupOptions input) Parameters Type Name Description DNSLookupOptions input Instance of DNSLookupOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.DNSLookupOptions.RecordTypesEnum.html": {
    "href": "api/mailslurp.Model.DNSLookupOptions.RecordTypesEnum.html",
    "title": "Enum DNSLookupOptions.RecordTypesEnum | MailSlurp",
    "keywords": "Enum DNSLookupOptions.RecordTypesEnum Domain Name Server Record Types Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum DNSLookupOptions.RecordTypesEnum Fields Name Description A Enum A for value: A A6 Enum A6 for value: A6 AAAA Enum AAAA for value: AAAA AFSDB Enum AFSDB for value: AFSDB AMTRELAY Enum AMTRELAY for value: AMTRELAY ANY Enum ANY for value: ANY APL Enum APL for value: APL ATMA Enum ATMA for value: ATMA AVC Enum AVC for value: AVC AXFR Enum AXFR for value: AXFR CAA Enum CAA for value: CAA CDNSKEY Enum CDNSKEY for value: CDNSKEY CDS Enum CDS for value: CDS CERT Enum CERT for value: CERT CNAME Enum CNAME for value: CNAME CSYNC Enum CSYNC for value: CSYNC DHCID Enum DHCID for value: DHCID DLV Enum DLV for value: DLV DNAME Enum DNAME for value: DNAME DNSKEY Enum DNSKEY for value: DNSKEY DOA Enum DOA for value: DOA DS Enum DS for value: DS EID Enum EID for value: EID EUI48 Enum EUI48 for value: EUI48 EUI64 Enum EUI64 for value: EUI64 GID Enum GID for value: GID GPOS Enum GPOS for value: GPOS HINFO Enum HINFO for value: HINFO HIP Enum HIP for value: HIP HTTPS Enum HTTPS for value: HTTPS IPSECKEY Enum IPSECKEY for value: IPSECKEY ISDN Enum ISDN for value: ISDN IXFR Enum IXFR for value: IXFR KEY Enum KEY for value: KEY KX Enum KX for value: KX L32 Enum L32 for value: L32 L64 Enum L64 for value: L64 LOC Enum LOC for value: LOC LP Enum LP for value: LP MAILA Enum MAILA for value: MAILA MAILB Enum MAILB for value: MAILB MB Enum MB for value: MB MD Enum MD for value: MD MF Enum MF for value: MF MG Enum MG for value: MG MINFO Enum MINFO for value: MINFO MR Enum MR for value: MR MX Enum MX for value: MX NAPTR Enum NAPTR for value: NAPTR NID Enum NID for value: NID NIMLOC Enum NIMLOC for value: NIMLOC NINFO Enum NINFO for value: NINFO NS Enum NS for value: NS NSAP Enum NSAP for value: NSAP NSAPPTR Enum NSAPPTR for value: NSAP_PTR NSEC Enum NSEC for value: NSEC NSEC3 Enum NSEC3 for value: NSEC3 NSEC3PARAM Enum NSEC3PARAM for value: NSEC3PARAM NULL Enum NULL for value: NULL NXT Enum NXT for value: NXT OPENPGPKEY Enum OPENPGPKEY for value: OPENPGPKEY OPT Enum OPT for value: OPT PTR Enum PTR for value: PTR PX Enum PX for value: PX RKEY Enum RKEY for value: RKEY RP Enum RP for value: RP RRSIG Enum RRSIG for value: RRSIG RT Enum RT for value: RT SIG Enum SIG for value: SIG SINK Enum SINK for value: SINK SMIMEA Enum SMIMEA for value: SMIMEA SOA Enum SOA for value: SOA SPF Enum SPF for value: SPF SRV Enum SRV for value: SRV SSHFP Enum SSHFP for value: SSHFP SVCB Enum SVCB for value: SVCB TA Enum TA for value: TA TALINK Enum TALINK for value: TALINK TKEY Enum TKEY for value: TKEY TLSA Enum TLSA for value: TLSA TSIG Enum TSIG for value: TSIG TXT Enum TXT for value: TXT UID Enum UID for value: UID UINFO Enum UINFO for value: UINFO UNSPEC Enum UNSPEC for value: UNSPEC URI Enum URI for value: URI WKS Enum WKS for value: WKS X25 Enum X25 for value: X25 ZONEMD Enum ZONEMD for value: ZONEMD"
  },
  "api/mailslurp.Model.DNSLookupResult.html": {
    "href": "api/mailslurp.Model.DNSLookupResult.html",
    "title": "Class DNSLookupResult | MailSlurp",
    "keywords": "Class DNSLookupResult DNS lookup result. Includes record type, time to live, raw response, and name value for the name server response. Inheritance object DNSLookupResult Implements IEquatable<DNSLookupResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"DNSLookupResult\")] public class DNSLookupResult : IEquatable<DNSLookupResult>, IValidatableObject Constructors View Source DNSLookupResult() Initializes a new instance of the DNSLookupResult class. Declaration [JsonConstructor] protected DNSLookupResult() View Source DNSLookupResult(RecordTypeEnum, long, List<string>, string) Initializes a new instance of the DNSLookupResult class. Declaration public DNSLookupResult(DNSLookupResult.RecordTypeEnum recordType = (DNSLookupResult.RecordTypeEnum)0, long ttl = 0, List<string> recordEntries = null, string name = null) Parameters Type Name Description DNSLookupResult.RecordTypeEnum recordType Domain Name Server Record Types (required). long ttl ttl (required). List<string> recordEntries recordEntries (required). string name name (required). Properties View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source RecordEntries Gets or Sets RecordEntries Declaration [DataMember(Name = \"recordEntries\", IsRequired = true, EmitDefaultValue = true)] public List<string> RecordEntries { get; set; } Property Value Type Description List<string> View Source RecordType Domain Name Server Record Types Declaration [DataMember(Name = \"recordType\", IsRequired = true, EmitDefaultValue = true)] public DNSLookupResult.RecordTypeEnum RecordType { get; set; } Property Value Type Description DNSLookupResult.RecordTypeEnum Domain Name Server Record Types View Source Ttl Gets or Sets Ttl Declaration [DataMember(Name = \"ttl\", IsRequired = true, EmitDefaultValue = true)] public long Ttl { get; set; } Property Value Type Description long Methods View Source Equals(DNSLookupResult) Returns true if DNSLookupResult instances are equal Declaration public bool Equals(DNSLookupResult input) Parameters Type Name Description DNSLookupResult input Instance of DNSLookupResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.DNSLookupResult.RecordTypeEnum.html": {
    "href": "api/mailslurp.Model.DNSLookupResult.RecordTypeEnum.html",
    "title": "Enum DNSLookupResult.RecordTypeEnum | MailSlurp",
    "keywords": "Enum DNSLookupResult.RecordTypeEnum Domain Name Server Record Types Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum DNSLookupResult.RecordTypeEnum Fields Name Description A Enum A for value: A A6 Enum A6 for value: A6 AAAA Enum AAAA for value: AAAA AFSDB Enum AFSDB for value: AFSDB AMTRELAY Enum AMTRELAY for value: AMTRELAY ANY Enum ANY for value: ANY APL Enum APL for value: APL ATMA Enum ATMA for value: ATMA AVC Enum AVC for value: AVC AXFR Enum AXFR for value: AXFR CAA Enum CAA for value: CAA CDNSKEY Enum CDNSKEY for value: CDNSKEY CDS Enum CDS for value: CDS CERT Enum CERT for value: CERT CNAME Enum CNAME for value: CNAME CSYNC Enum CSYNC for value: CSYNC DHCID Enum DHCID for value: DHCID DLV Enum DLV for value: DLV DNAME Enum DNAME for value: DNAME DNSKEY Enum DNSKEY for value: DNSKEY DOA Enum DOA for value: DOA DS Enum DS for value: DS EID Enum EID for value: EID EUI48 Enum EUI48 for value: EUI48 EUI64 Enum EUI64 for value: EUI64 GID Enum GID for value: GID GPOS Enum GPOS for value: GPOS HINFO Enum HINFO for value: HINFO HIP Enum HIP for value: HIP HTTPS Enum HTTPS for value: HTTPS IPSECKEY Enum IPSECKEY for value: IPSECKEY ISDN Enum ISDN for value: ISDN IXFR Enum IXFR for value: IXFR KEY Enum KEY for value: KEY KX Enum KX for value: KX L32 Enum L32 for value: L32 L64 Enum L64 for value: L64 LOC Enum LOC for value: LOC LP Enum LP for value: LP MAILA Enum MAILA for value: MAILA MAILB Enum MAILB for value: MAILB MB Enum MB for value: MB MD Enum MD for value: MD MF Enum MF for value: MF MG Enum MG for value: MG MINFO Enum MINFO for value: MINFO MR Enum MR for value: MR MX Enum MX for value: MX NAPTR Enum NAPTR for value: NAPTR NID Enum NID for value: NID NIMLOC Enum NIMLOC for value: NIMLOC NINFO Enum NINFO for value: NINFO NS Enum NS for value: NS NSAP Enum NSAP for value: NSAP NSAPPTR Enum NSAPPTR for value: NSAP_PTR NSEC Enum NSEC for value: NSEC NSEC3 Enum NSEC3 for value: NSEC3 NSEC3PARAM Enum NSEC3PARAM for value: NSEC3PARAM NULL Enum NULL for value: NULL NXT Enum NXT for value: NXT OPENPGPKEY Enum OPENPGPKEY for value: OPENPGPKEY OPT Enum OPT for value: OPT PTR Enum PTR for value: PTR PX Enum PX for value: PX RKEY Enum RKEY for value: RKEY RP Enum RP for value: RP RRSIG Enum RRSIG for value: RRSIG RT Enum RT for value: RT SIG Enum SIG for value: SIG SINK Enum SINK for value: SINK SMIMEA Enum SMIMEA for value: SMIMEA SOA Enum SOA for value: SOA SPF Enum SPF for value: SPF SRV Enum SRV for value: SRV SSHFP Enum SSHFP for value: SSHFP SVCB Enum SVCB for value: SVCB TA Enum TA for value: TA TALINK Enum TALINK for value: TALINK TKEY Enum TKEY for value: TKEY TLSA Enum TLSA for value: TLSA TSIG Enum TSIG for value: TSIG TXT Enum TXT for value: TXT UID Enum UID for value: UID UINFO Enum UINFO for value: UINFO UNSPEC Enum UNSPEC for value: UNSPEC URI Enum URI for value: URI WKS Enum WKS for value: WKS X25 Enum X25 for value: X25 ZONEMD Enum ZONEMD for value: ZONEMD"
  },
  "api/mailslurp.Model.DNSLookupResults.html": {
    "href": "api/mailslurp.Model.DNSLookupResults.html",
    "title": "Class DNSLookupResults | MailSlurp",
    "keywords": "Class DNSLookupResults Results of query on domain name servers Inheritance object DNSLookupResults Implements IEquatable<DNSLookupResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"DNSLookupResults\")] public class DNSLookupResults : IEquatable<DNSLookupResults>, IValidatableObject Constructors View Source DNSLookupResults() Initializes a new instance of the DNSLookupResults class. Declaration [JsonConstructor] protected DNSLookupResults() View Source DNSLookupResults(List<DNSLookupResult>) Initializes a new instance of the DNSLookupResults class. Declaration public DNSLookupResults(List<DNSLookupResult> results = null) Parameters Type Name Description List<DNSLookupResult> results results (required). Properties View Source Results Gets or Sets Results Declaration [DataMember(Name = \"results\", IsRequired = true, EmitDefaultValue = true)] public List<DNSLookupResult> Results { get; set; } Property Value Type Description List<DNSLookupResult> Methods View Source Equals(DNSLookupResults) Returns true if DNSLookupResults instances are equal Declaration public bool Equals(DNSLookupResults input) Parameters Type Name Description DNSLookupResults input Instance of DNSLookupResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.DomainDto.DomainTypeEnum.html": {
    "href": "api/mailslurp.Model.DomainDto.DomainTypeEnum.html",
    "title": "Enum DomainDto.DomainTypeEnum | MailSlurp",
    "keywords": "Enum DomainDto.DomainTypeEnum Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum DomainDto.DomainTypeEnum Fields Name Description HTTPINBOX Enum HTTPINBOX for value: HTTP_INBOX SMTPDOMAIN Enum SMTPDOMAIN for value: SMTP_DOMAIN"
  },
  "api/mailslurp.Model.DomainDto.html": {
    "href": "api/mailslurp.Model.DomainDto.html",
    "title": "Class DomainDto | MailSlurp",
    "keywords": "Class DomainDto Domain plus verification records and status Inheritance object DomainDto Implements IEquatable<DomainDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"DomainDto\")] public class DomainDto : IEquatable<DomainDto>, IValidatableObject Constructors View Source DomainDto() Initializes a new instance of the DomainDto class. Declaration [JsonConstructor] protected DomainDto() View Source DomainDto(Guid, Guid, string, string, List<string>, string, bool, bool, List<DomainNameRecord>, Guid?, DateTime, DateTime, DomainTypeEnum) Initializes a new instance of the DomainDto class. Declaration public DomainDto(Guid id = default, Guid userId = default, string domain = null, string verificationToken = null, List<string> dkimTokens = null, string missingRecordsMessage = null, bool hasMissingRecords = false, bool isVerified = false, List<DomainNameRecord> domainNameRecords = null, Guid? catchAllInboxId = null, DateTime createdAt = default, DateTime updatedAt = default, DomainDto.DomainTypeEnum domainType = (DomainDto.DomainTypeEnum)0) Parameters Type Name Description Guid id id (required). Guid userId userId (required). string domain Custom domain name (required). string verificationToken Verification tokens (required). List<string> dkimTokens Unique token DKIM tokens (required). string missingRecordsMessage If the domain is missing records then show which pairs are missing.. bool hasMissingRecords Whether the domain has missing required records. If true then see the domain in the dashboard app. (required). bool isVerified Whether domain has been verified or not. If the domain is not verified after 72 hours there is most likely an issue with the domains DNS records. (required). List<DomainNameRecord> domainNameRecords List of DNS domain name records (C, MX, TXT) etc that you must add to the DNS server associated with your domain provider. (required). Guid? catchAllInboxId The optional catch all inbox that will receive emails sent to the domain that cannot be matched.. DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). DomainDto.DomainTypeEnum domainType Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. (required). Properties View Source CatchAllInboxId The optional catch all inbox that will receive emails sent to the domain that cannot be matched. Declaration [DataMember(Name = \"catchAllInboxId\", EmitDefaultValue = true)] public Guid? CatchAllInboxId { get; set; } Property Value Type Description Guid? The optional catch all inbox that will receive emails sent to the domain that cannot be matched. View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source DkimTokens Unique token DKIM tokens Declaration [DataMember(Name = \"dkimTokens\", IsRequired = true, EmitDefaultValue = true)] public List<string> DkimTokens { get; set; } Property Value Type Description List<string> Unique token DKIM tokens View Source Domain Custom domain name Declaration [DataMember(Name = \"domain\", IsRequired = true, EmitDefaultValue = true)] public string Domain { get; set; } Property Value Type Description string Custom domain name View Source DomainNameRecords List of DNS domain name records (C, MX, TXT) etc that you must add to the DNS server associated with your domain provider. Declaration [DataMember(Name = \"domainNameRecords\", IsRequired = true, EmitDefaultValue = true)] public List<DomainNameRecord> DomainNameRecords { get; set; } Property Value Type Description List<DomainNameRecord> List of DNS domain name records (C, MX, TXT) etc that you must add to the DNS server associated with your domain provider. View Source DomainType Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. Declaration [DataMember(Name = \"domainType\", IsRequired = true, EmitDefaultValue = true)] public DomainDto.DomainTypeEnum DomainType { get; set; } Property Value Type Description DomainDto.DomainTypeEnum Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. View Source HasMissingRecords Whether the domain has missing required records. If true then see the domain in the dashboard app. Declaration [DataMember(Name = \"hasMissingRecords\", IsRequired = true, EmitDefaultValue = true)] public bool HasMissingRecords { get; set; } Property Value Type Description bool Whether the domain has missing required records. If true then see the domain in the dashboard app. View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source IsVerified Whether domain has been verified or not. If the domain is not verified after 72 hours there is most likely an issue with the domains DNS records. Declaration [DataMember(Name = \"isVerified\", IsRequired = true, EmitDefaultValue = true)] public bool IsVerified { get; set; } Property Value Type Description bool Whether domain has been verified or not. If the domain is not verified after 72 hours there is most likely an issue with the domains DNS records. View Source MissingRecordsMessage If the domain is missing records then show which pairs are missing. Declaration [DataMember(Name = \"missingRecordsMessage\", EmitDefaultValue = true)] public string MissingRecordsMessage { get; set; } Property Value Type Description string If the domain is missing records then show which pairs are missing. View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid View Source VerificationToken Verification tokens Declaration [DataMember(Name = \"verificationToken\", IsRequired = true, EmitDefaultValue = true)] public string VerificationToken { get; set; } Property Value Type Description string Verification tokens Methods View Source Equals(DomainDto) Returns true if DomainDto instances are equal Declaration public bool Equals(DomainDto input) Parameters Type Name Description DomainDto input Instance of DomainDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.DomainIssuesDto.html": {
    "href": "api/mailslurp.Model.DomainIssuesDto.html",
    "title": "Class DomainIssuesDto | MailSlurp",
    "keywords": "Class DomainIssuesDto DomainIssuesDto Inheritance object DomainIssuesDto Implements IEquatable<DomainIssuesDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"DomainIssuesDto\")] public class DomainIssuesDto : IEquatable<DomainIssuesDto>, IValidatableObject Constructors View Source DomainIssuesDto() Initializes a new instance of the DomainIssuesDto class. Declaration [JsonConstructor] protected DomainIssuesDto() View Source DomainIssuesDto(bool) Initializes a new instance of the DomainIssuesDto class. Declaration public DomainIssuesDto(bool hasIssues = false) Parameters Type Name Description bool hasIssues hasIssues (required). Properties View Source HasIssues Gets or Sets HasIssues Declaration [DataMember(Name = \"hasIssues\", IsRequired = true, EmitDefaultValue = true)] public bool HasIssues { get; set; } Property Value Type Description bool Methods View Source Equals(DomainIssuesDto) Returns true if DomainIssuesDto instances are equal Declaration public bool Equals(DomainIssuesDto input) Parameters Type Name Description DomainIssuesDto input Instance of DomainIssuesDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.DomainNameRecord.html": {
    "href": "api/mailslurp.Model.DomainNameRecord.html",
    "title": "Class DomainNameRecord | MailSlurp",
    "keywords": "Class DomainNameRecord DNS Record required for verification of a domain. Record vary depending on domain type. Inheritance object DomainNameRecord Implements IEquatable<DomainNameRecord> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"DomainNameRecord\")] public class DomainNameRecord : IEquatable<DomainNameRecord>, IValidatableObject Constructors View Source DomainNameRecord() Initializes a new instance of the DomainNameRecord class. Declaration [JsonConstructor] protected DomainNameRecord() View Source DomainNameRecord(LabelEnum, bool, RecordTypeEnum, string, List<string>, long) Initializes a new instance of the DomainNameRecord class. Declaration public DomainNameRecord(DomainNameRecord.LabelEnum label = (DomainNameRecord.LabelEnum)0, bool required = false, DomainNameRecord.RecordTypeEnum recordType = (DomainNameRecord.RecordTypeEnum)0, string name = null, List<string> recordEntries = null, long ttl = 0) Parameters Type Name Description DomainNameRecord.LabelEnum label Domain Name Server Record Label (required). bool required required (required). DomainNameRecord.RecordTypeEnum recordType Domain Name Server Record Types (required). string name name (required). List<string> recordEntries recordEntries (required). long ttl ttl (required). Properties View Source Label Domain Name Server Record Label Declaration [DataMember(Name = \"label\", IsRequired = true, EmitDefaultValue = true)] public DomainNameRecord.LabelEnum Label { get; set; } Property Value Type Description DomainNameRecord.LabelEnum Domain Name Server Record Label View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source RecordEntries Gets or Sets RecordEntries Declaration [DataMember(Name = \"recordEntries\", IsRequired = true, EmitDefaultValue = true)] public List<string> RecordEntries { get; set; } Property Value Type Description List<string> View Source RecordType Domain Name Server Record Types Declaration [DataMember(Name = \"recordType\", IsRequired = true, EmitDefaultValue = true)] public DomainNameRecord.RecordTypeEnum RecordType { get; set; } Property Value Type Description DomainNameRecord.RecordTypeEnum Domain Name Server Record Types View Source Required Gets or Sets Required Declaration [DataMember(Name = \"required\", IsRequired = true, EmitDefaultValue = true)] public bool Required { get; set; } Property Value Type Description bool View Source Ttl Gets or Sets Ttl Declaration [DataMember(Name = \"ttl\", IsRequired = true, EmitDefaultValue = true)] public long Ttl { get; set; } Property Value Type Description long Methods View Source Equals(DomainNameRecord) Returns true if DomainNameRecord instances are equal Declaration public bool Equals(DomainNameRecord input) Parameters Type Name Description DomainNameRecord input Instance of DomainNameRecord to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.DomainNameRecord.LabelEnum.html": {
    "href": "api/mailslurp.Model.DomainNameRecord.LabelEnum.html",
    "title": "Enum DomainNameRecord.LabelEnum | MailSlurp",
    "keywords": "Enum DomainNameRecord.LabelEnum Domain Name Server Record Label Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum DomainNameRecord.LabelEnum Fields Name Description DKIM Enum DKIM for value: DKIM DMARC Enum DMARC for value: DMARC MX Enum MX for value: MX SPF Enum SPF for value: SPF VERIFICATION Enum VERIFICATION for value: VERIFICATION"
  },
  "api/mailslurp.Model.DomainNameRecord.RecordTypeEnum.html": {
    "href": "api/mailslurp.Model.DomainNameRecord.RecordTypeEnum.html",
    "title": "Enum DomainNameRecord.RecordTypeEnum | MailSlurp",
    "keywords": "Enum DomainNameRecord.RecordTypeEnum Domain Name Server Record Types Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum DomainNameRecord.RecordTypeEnum Fields Name Description A Enum A for value: A A6 Enum A6 for value: A6 AAAA Enum AAAA for value: AAAA AFSDB Enum AFSDB for value: AFSDB AMTRELAY Enum AMTRELAY for value: AMTRELAY ANY Enum ANY for value: ANY APL Enum APL for value: APL ATMA Enum ATMA for value: ATMA AVC Enum AVC for value: AVC AXFR Enum AXFR for value: AXFR CAA Enum CAA for value: CAA CDNSKEY Enum CDNSKEY for value: CDNSKEY CDS Enum CDS for value: CDS CERT Enum CERT for value: CERT CNAME Enum CNAME for value: CNAME CSYNC Enum CSYNC for value: CSYNC DHCID Enum DHCID for value: DHCID DLV Enum DLV for value: DLV DNAME Enum DNAME for value: DNAME DNSKEY Enum DNSKEY for value: DNSKEY DOA Enum DOA for value: DOA DS Enum DS for value: DS EID Enum EID for value: EID EUI48 Enum EUI48 for value: EUI48 EUI64 Enum EUI64 for value: EUI64 GID Enum GID for value: GID GPOS Enum GPOS for value: GPOS HINFO Enum HINFO for value: HINFO HIP Enum HIP for value: HIP HTTPS Enum HTTPS for value: HTTPS IPSECKEY Enum IPSECKEY for value: IPSECKEY ISDN Enum ISDN for value: ISDN IXFR Enum IXFR for value: IXFR KEY Enum KEY for value: KEY KX Enum KX for value: KX L32 Enum L32 for value: L32 L64 Enum L64 for value: L64 LOC Enum LOC for value: LOC LP Enum LP for value: LP MAILA Enum MAILA for value: MAILA MAILB Enum MAILB for value: MAILB MB Enum MB for value: MB MD Enum MD for value: MD MF Enum MF for value: MF MG Enum MG for value: MG MINFO Enum MINFO for value: MINFO MR Enum MR for value: MR MX Enum MX for value: MX NAPTR Enum NAPTR for value: NAPTR NID Enum NID for value: NID NIMLOC Enum NIMLOC for value: NIMLOC NINFO Enum NINFO for value: NINFO NS Enum NS for value: NS NSAP Enum NSAP for value: NSAP NSAPPTR Enum NSAPPTR for value: NSAP_PTR NSEC Enum NSEC for value: NSEC NSEC3 Enum NSEC3 for value: NSEC3 NSEC3PARAM Enum NSEC3PARAM for value: NSEC3PARAM NULL Enum NULL for value: NULL NXT Enum NXT for value: NXT OPENPGPKEY Enum OPENPGPKEY for value: OPENPGPKEY OPT Enum OPT for value: OPT PTR Enum PTR for value: PTR PX Enum PX for value: PX RKEY Enum RKEY for value: RKEY RP Enum RP for value: RP RRSIG Enum RRSIG for value: RRSIG RT Enum RT for value: RT SIG Enum SIG for value: SIG SINK Enum SINK for value: SINK SMIMEA Enum SMIMEA for value: SMIMEA SOA Enum SOA for value: SOA SPF Enum SPF for value: SPF SRV Enum SRV for value: SRV SSHFP Enum SSHFP for value: SSHFP SVCB Enum SVCB for value: SVCB TA Enum TA for value: TA TALINK Enum TALINK for value: TALINK TKEY Enum TKEY for value: TKEY TLSA Enum TLSA for value: TLSA TSIG Enum TSIG for value: TSIG TXT Enum TXT for value: TXT UID Enum UID for value: UID UINFO Enum UINFO for value: UINFO UNSPEC Enum UNSPEC for value: UNSPEC URI Enum URI for value: URI WKS Enum WKS for value: WKS X25 Enum X25 for value: X25 ZONEMD Enum ZONEMD for value: ZONEMD"
  },
  "api/mailslurp.Model.DomainPreview.DomainTypeEnum.html": {
    "href": "api/mailslurp.Model.DomainPreview.DomainTypeEnum.html",
    "title": "Enum DomainPreview.DomainTypeEnum | MailSlurp",
    "keywords": "Enum DomainPreview.DomainTypeEnum Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum DomainPreview.DomainTypeEnum Fields Name Description HTTPINBOX Enum HTTPINBOX for value: HTTP_INBOX SMTPDOMAIN Enum SMTPDOMAIN for value: SMTP_DOMAIN"
  },
  "api/mailslurp.Model.DomainPreview.html": {
    "href": "api/mailslurp.Model.DomainPreview.html",
    "title": "Class DomainPreview | MailSlurp",
    "keywords": "Class DomainPreview Preview object for domain entity Inheritance object DomainPreview Implements IEquatable<DomainPreview> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"DomainPreview\")] public class DomainPreview : IEquatable<DomainPreview>, IValidatableObject Constructors View Source DomainPreview() Initializes a new instance of the DomainPreview class. Declaration [JsonConstructor] protected DomainPreview() View Source DomainPreview(Guid, string, Guid?, DateTime, DomainTypeEnum, bool, bool) Initializes a new instance of the DomainPreview class. Declaration public DomainPreview(Guid id = default, string domain = null, Guid? catchAllInboxId = null, DateTime createdAt = default, DomainPreview.DomainTypeEnum domainType = (DomainPreview.DomainTypeEnum)0, bool isVerified = false, bool hasMissingRecords = false) Parameters Type Name Description Guid id id (required). string domain domain (required). Guid? catchAllInboxId catchAllInboxId. DateTime createdAt createdAt (required). DomainPreview.DomainTypeEnum domainType Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. (required). bool isVerified isVerified (required). bool hasMissingRecords hasMissingRecords (required). Properties View Source CatchAllInboxId Gets or Sets CatchAllInboxId Declaration [DataMember(Name = \"catchAllInboxId\", EmitDefaultValue = true)] public Guid? CatchAllInboxId { get; set; } Property Value Type Description Guid? View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Domain Gets or Sets Domain Declaration [DataMember(Name = \"domain\", IsRequired = true, EmitDefaultValue = true)] public string Domain { get; set; } Property Value Type Description string View Source DomainType Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. Declaration [DataMember(Name = \"domainType\", IsRequired = true, EmitDefaultValue = true)] public DomainPreview.DomainTypeEnum DomainType { get; set; } Property Value Type Description DomainPreview.DomainTypeEnum Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. View Source HasMissingRecords Gets or Sets HasMissingRecords Declaration [DataMember(Name = \"hasMissingRecords\", IsRequired = true, EmitDefaultValue = true)] public bool HasMissingRecords { get; set; } Property Value Type Description bool View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source IsVerified Gets or Sets IsVerified Declaration [DataMember(Name = \"isVerified\", IsRequired = true, EmitDefaultValue = true)] public bool IsVerified { get; set; } Property Value Type Description bool Methods View Source Equals(DomainPreview) Returns true if DomainPreview instances are equal Declaration public bool Equals(DomainPreview input) Parameters Type Name Description DomainPreview input Instance of DomainPreview to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.DownloadAttachmentDto.html": {
    "href": "api/mailslurp.Model.DownloadAttachmentDto.html",
    "title": "Class DownloadAttachmentDto | MailSlurp",
    "keywords": "Class DownloadAttachmentDto Content of attachment Inheritance object DownloadAttachmentDto Implements IEquatable<DownloadAttachmentDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"DownloadAttachmentDto\")] public class DownloadAttachmentDto : IEquatable<DownloadAttachmentDto>, IValidatableObject Constructors View Source DownloadAttachmentDto() Initializes a new instance of the DownloadAttachmentDto class. Declaration [JsonConstructor] protected DownloadAttachmentDto() View Source DownloadAttachmentDto(string, string, long) Initializes a new instance of the DownloadAttachmentDto class. Declaration public DownloadAttachmentDto(string base64FileContents = null, string contentType = null, long sizeBytes = 0) Parameters Type Name Description string base64FileContents Base64 encoded string of attachment bytes. Decode the base64 encoded string to get the raw contents. If the file has a content type such as text/html you can read the contents directly by converting it to string using utf-8 encoding. (required). string contentType Content type of attachment. Examples are image/png, application/msword, text/csv etc. (required). long sizeBytes Size in bytes of attachment content (required). Properties View Source Base64FileContents Base64 encoded string of attachment bytes. Decode the base64 encoded string to get the raw contents. If the file has a content type such as text/html you can read the contents directly by converting it to string using utf-8 encoding. Declaration [DataMember(Name = \"base64FileContents\", IsRequired = true, EmitDefaultValue = true)] public string Base64FileContents { get; set; } Property Value Type Description string Base64 encoded string of attachment bytes. Decode the base64 encoded string to get the raw contents. If the file has a content type such as text/html you can read the contents directly by converting it to string using utf-8 encoding. View Source ContentType Content type of attachment. Examples are image/png, application/msword, text/csv etc. Declaration [DataMember(Name = \"contentType\", IsRequired = true, EmitDefaultValue = true)] public string ContentType { get; set; } Property Value Type Description string Content type of attachment. Examples are image/png, application/msword, text/csv etc. View Source SizeBytes Size in bytes of attachment content Declaration [DataMember(Name = \"sizeBytes\", IsRequired = true, EmitDefaultValue = true)] public long SizeBytes { get; set; } Property Value Type Description long Size in bytes of attachment content Methods View Source Equals(DownloadAttachmentDto) Returns true if DownloadAttachmentDto instances are equal Declaration public bool Equals(DownloadAttachmentDto input) Parameters Type Name Description DownloadAttachmentDto input Instance of DownloadAttachmentDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.Email.html": {
    "href": "api/mailslurp.Model.Email.html",
    "title": "Class Email | MailSlurp",
    "keywords": "Class Email Email entity (also known as EmailDto). When an SMTP email message is received by MailSlurp it is parsed. The body and attachments are written to disk and the fields such as to, from, subject etc are stored in a database. The body contains the email content. If you want the original SMTP message see the getRawEmail endpoints. The attachments can be fetched using the AttachmentController Inheritance object Email Implements IEquatable<Email> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"Email\")] public class Email : IEquatable<Email>, IValidatableObject Constructors View Source Email() Initializes a new instance of the Email class. Declaration [JsonConstructor] protected Email() View Source Email(Guid, Guid, Guid, Guid?, List<string>, string, Sender, EmailRecipients, string, List<string>, List<string>, Dictionary<string, string>, Dictionary<string, List<string>>, List<string>, string, string, string, string, string, bool?, string, EmailAnalysis, DateTime, DateTime, bool, bool, bool?, List<string>, bool, bool) Initializes a new instance of the Email class. Declaration public Email(Guid id = default, Guid userId = default, Guid inboxId = default, Guid? domainId = null, List<string> to = null, string from = null, Sender sender = null, EmailRecipients recipients = null, string replyTo = null, List<string> cc = null, List<string> bcc = null, Dictionary<string, string> headers = null, Dictionary<string, List<string>> headersMap = null, List<string> attachments = null, string subject = null, string body = null, string bodyExcerpt = null, string textExcerpt = null, string bodyMD5Hash = null, bool? isHTML = null, string charset = null, EmailAnalysis analysis = null, DateTime createdAt = default, DateTime updatedAt = default, bool read = false, bool teamAccess = false, bool? isXAmpHtml = null, List<string> bodyPartContentTypes = null, bool html = false, bool xampHtml = false) Parameters Type Name Description Guid id ID of the email entity (required). Guid userId ID of user that email belongs to (required). Guid inboxId ID of the inbox that received the email (required). Guid? domainId ID of the domain that received the email. List<string> to List of To recipient email addresses that the email was addressed to. See recipients object for names. (required). string from Who the email was sent from. An email address - see fromName for the sender name.. Sender sender sender. EmailRecipients recipients recipients. string replyTo The replyTo field on the received email message. List<string> cc List of CC recipients email addresses that the email was addressed to. See recipients object for names.. List<string> bcc List of BCC recipients email addresses that the email was addressed to. See recipients object for names.. Dictionary<string, string> headers Collection of SMTP headers attached to email. Dictionary<string, List<string>> headersMap Multi-value map of SMTP headers attached to email. List<string> attachments List of IDs of attachments found in the email. Use these IDs with the Inbox and Email Controllers to download attachments and attachment meta data such as filesize, name, extension.. string subject The subject line of the email message as specified by SMTP subject header. string body The body of the email message as text parsed from the SMTP message body (does not include attachments). Fetch the raw content to access the SMTP message and use the attachments property to access attachments. The body is stored separately to the email entity so the body is not returned in paginated results only in full single email or wait requests.. string bodyExcerpt An excerpt of the body of the email message for quick preview. Takes HTML content part if exists falls back to TEXT content part if not. string textExcerpt An excerpt of the body of the email message for quick preview. Takes TEXT content part if exists. string bodyMD5Hash A hash signature of the email message using MD5. Useful for comparing emails without fetching full body.. bool? isHTML Is the email body content type HTML?. string charset Detected character set of the email body such as UTF-8. EmailAnalysis analysis analysis. DateTime createdAt When was the email received by MailSlurp (required). DateTime updatedAt When was the email last updated (required). bool read Read flag. Has the email ever been viewed in the dashboard or fetched via the API with a hydrated body? If so the email is marked as read. Paginated results do not affect read status. Read status is different to email opened event as it depends on your own account accessing the email. Email opened is determined by tracking pixels sent to other uses if enable during sending. You can listened for both email read and email opened events using webhooks. (required). bool teamAccess Can the email be accessed by organization team members (required). bool? isXAmpHtml Is the email body content type x-amp-html Amp4Email?. List<string> bodyPartContentTypes A list of detected multipart mime message body part content types such as text/plain and text/html. Can be used with email bodyPart endpoints to fetch individual body parts.. bool html html. bool xampHtml xampHtml. Properties View Source Analysis Gets or Sets Analysis Declaration [DataMember(Name = \"analysis\", EmitDefaultValue = true)] public EmailAnalysis Analysis { get; set; } Property Value Type Description EmailAnalysis View Source Attachments List of IDs of attachments found in the email. Use these IDs with the Inbox and Email Controllers to download attachments and attachment meta data such as filesize, name, extension. Declaration [DataMember(Name = \"attachments\", EmitDefaultValue = true)] public List<string> Attachments { get; set; } Property Value Type Description List<string> List of IDs of attachments found in the email. Use these IDs with the Inbox and Email Controllers to download attachments and attachment meta data such as filesize, name, extension. View Source Bcc List of BCC recipients email addresses that the email was addressed to. See recipients object for names. Declaration [DataMember(Name = \"bcc\", EmitDefaultValue = true)] public List<string> Bcc { get; set; } Property Value Type Description List<string> List of BCC recipients email addresses that the email was addressed to. See recipients object for names. View Source Body The body of the email message as text parsed from the SMTP message body (does not include attachments). Fetch the raw content to access the SMTP message and use the attachments property to access attachments. The body is stored separately to the email entity so the body is not returned in paginated results only in full single email or wait requests. Declaration [DataMember(Name = \"body\", EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string The body of the email message as text parsed from the SMTP message body (does not include attachments). Fetch the raw content to access the SMTP message and use the attachments property to access attachments. The body is stored separately to the email entity so the body is not returned in paginated results only in full single email or wait requests. View Source BodyExcerpt An excerpt of the body of the email message for quick preview. Takes HTML content part if exists falls back to TEXT content part if not Declaration [DataMember(Name = \"bodyExcerpt\", EmitDefaultValue = true)] public string BodyExcerpt { get; set; } Property Value Type Description string An excerpt of the body of the email message for quick preview. Takes HTML content part if exists falls back to TEXT content part if not View Source BodyMD5Hash A hash signature of the email message using MD5. Useful for comparing emails without fetching full body. Declaration [DataMember(Name = \"bodyMD5Hash\", EmitDefaultValue = true)] public string BodyMD5Hash { get; set; } Property Value Type Description string A hash signature of the email message using MD5. Useful for comparing emails without fetching full body. View Source BodyPartContentTypes A list of detected multipart mime message body part content types such as text/plain and text/html. Can be used with email bodyPart endpoints to fetch individual body parts. Declaration [DataMember(Name = \"bodyPartContentTypes\", EmitDefaultValue = true)] public List<string> BodyPartContentTypes { get; set; } Property Value Type Description List<string> A list of detected multipart mime message body part content types such as text/plain and text/html. Can be used with email bodyPart endpoints to fetch individual body parts. View Source Cc List of CC recipients email addresses that the email was addressed to. See recipients object for names. Declaration [DataMember(Name = \"cc\", EmitDefaultValue = true)] public List<string> Cc { get; set; } Property Value Type Description List<string> List of CC recipients email addresses that the email was addressed to. See recipients object for names. View Source Charset Detected character set of the email body such as UTF-8 Declaration [DataMember(Name = \"charset\", EmitDefaultValue = true)] public string Charset { get; set; } Property Value Type Description string Detected character set of the email body such as UTF-8 View Source CreatedAt When was the email received by MailSlurp Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime When was the email received by MailSlurp View Source DomainId ID of the domain that received the email Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? ID of the domain that received the email View Source From Who the email was sent from. An email address - see fromName for the sender name. Declaration [DataMember(Name = \"from\", EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string Who the email was sent from. An email address - see fromName for the sender name. View Source Headers Collection of SMTP headers attached to email Declaration [DataMember(Name = \"headers\", EmitDefaultValue = true)] [Obsolete] public Dictionary<string, string> Headers { get; set; } Property Value Type Description Dictionary<string, string> Collection of SMTP headers attached to email View Source HeadersMap Multi-value map of SMTP headers attached to email Declaration [DataMember(Name = \"headersMap\", EmitDefaultValue = true)] public Dictionary<string, List<string>> HeadersMap { get; set; } Property Value Type Description Dictionary<string, List<string>> Multi-value map of SMTP headers attached to email View Source Html Gets or Sets Html Declaration [DataMember(Name = \"html\", EmitDefaultValue = true)] public bool Html { get; set; } Property Value Type Description bool View Source Id ID of the email entity Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid ID of the email entity View Source InboxId ID of the inbox that received the email Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid ID of the inbox that received the email View Source IsHTML Is the email body content type HTML? Declaration [DataMember(Name = \"isHTML\", EmitDefaultValue = true)] public bool? IsHTML { get; set; } Property Value Type Description bool? Is the email body content type HTML? View Source IsXAmpHtml Is the email body content type x-amp-html Amp4Email? Declaration [DataMember(Name = \"isXAmpHtml\", EmitDefaultValue = true)] public bool? IsXAmpHtml { get; set; } Property Value Type Description bool? Is the email body content type x-amp-html Amp4Email? View Source Read Read flag. Has the email ever been viewed in the dashboard or fetched via the API with a hydrated body? If so the email is marked as read. Paginated results do not affect read status. Read status is different to email opened event as it depends on your own account accessing the email. Email opened is determined by tracking pixels sent to other uses if enable during sending. You can listened for both email read and email opened events using webhooks. Declaration [DataMember(Name = \"read\", IsRequired = true, EmitDefaultValue = true)] public bool Read { get; set; } Property Value Type Description bool Read flag. Has the email ever been viewed in the dashboard or fetched via the API with a hydrated body? If so the email is marked as read. Paginated results do not affect read status. Read status is different to email opened event as it depends on your own account accessing the email. Email opened is determined by tracking pixels sent to other uses if enable during sending. You can listened for both email read and email opened events using webhooks. View Source Recipients Gets or Sets Recipients Declaration [DataMember(Name = \"recipients\", EmitDefaultValue = true)] public EmailRecipients Recipients { get; set; } Property Value Type Description EmailRecipients View Source ReplyTo The replyTo field on the received email message Declaration [DataMember(Name = \"replyTo\", EmitDefaultValue = true)] public string ReplyTo { get; set; } Property Value Type Description string The replyTo field on the received email message View Source Sender Gets or Sets Sender Declaration [DataMember(Name = \"sender\", EmitDefaultValue = true)] public Sender Sender { get; set; } Property Value Type Description Sender View Source Subject The subject line of the email message as specified by SMTP subject header Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string The subject line of the email message as specified by SMTP subject header View Source TeamAccess Can the email be accessed by organization team members Declaration [DataMember(Name = \"teamAccess\", IsRequired = true, EmitDefaultValue = true)] public bool TeamAccess { get; set; } Property Value Type Description bool Can the email be accessed by organization team members View Source TextExcerpt An excerpt of the body of the email message for quick preview. Takes TEXT content part if exists Declaration [DataMember(Name = \"textExcerpt\", EmitDefaultValue = true)] public string TextExcerpt { get; set; } Property Value Type Description string An excerpt of the body of the email message for quick preview. Takes TEXT content part if exists View Source To List of To recipient email addresses that the email was addressed to. See recipients object for names. Declaration [DataMember(Name = \"to\", IsRequired = true, EmitDefaultValue = true)] public List<string> To { get; set; } Property Value Type Description List<string> List of To recipient email addresses that the email was addressed to. See recipients object for names. View Source UpdatedAt When was the email last updated Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime When was the email last updated View Source UserId ID of user that email belongs to Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid ID of user that email belongs to View Source XampHtml Gets or Sets XampHtml Declaration [DataMember(Name = \"xampHtml\", EmitDefaultValue = true)] public bool XampHtml { get; set; } Property Value Type Description bool Methods View Source Equals(Email) Returns true if Email instances are equal Declaration public bool Equals(Email input) Parameters Type Name Description Email input Instance of Email to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailAnalysis.html": {
    "href": "api/mailslurp.Model.EmailAnalysis.html",
    "title": "Class EmailAnalysis | MailSlurp",
    "keywords": "Class EmailAnalysis Analysis result for email. Each verdict property is a string PASS|FAIL|GRAY or dynamic error message Inheritance object EmailAnalysis Implements IEquatable<EmailAnalysis> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailAnalysis\")] public class EmailAnalysis : IEquatable<EmailAnalysis>, IValidatableObject Constructors View Source EmailAnalysis(string, string, string, string, string) Initializes a new instance of the EmailAnalysis class. Declaration public EmailAnalysis(string spamVerdict = null, string virusVerdict = null, string spfVerdict = null, string dkimVerdict = null, string dmarcVerdict = null) Parameters Type Name Description string spamVerdict Verdict of spam ranking analysis. string virusVerdict Verdict of virus scan analysis. string spfVerdict Verdict of Send Policy Framework record spoofing analysis. string dkimVerdict Verdict of DomainKeys Identified Mail analysis. string dmarcVerdict Verdict of Domain-based Message Authentication Reporting and Conformance analysis. Properties View Source DkimVerdict Verdict of DomainKeys Identified Mail analysis Declaration [DataMember(Name = \"dkimVerdict\", EmitDefaultValue = true)] public string DkimVerdict { get; set; } Property Value Type Description string Verdict of DomainKeys Identified Mail analysis View Source DmarcVerdict Verdict of Domain-based Message Authentication Reporting and Conformance analysis Declaration [DataMember(Name = \"dmarcVerdict\", EmitDefaultValue = true)] public string DmarcVerdict { get; set; } Property Value Type Description string Verdict of Domain-based Message Authentication Reporting and Conformance analysis View Source SpamVerdict Verdict of spam ranking analysis Declaration [DataMember(Name = \"spamVerdict\", EmitDefaultValue = true)] public string SpamVerdict { get; set; } Property Value Type Description string Verdict of spam ranking analysis View Source SpfVerdict Verdict of Send Policy Framework record spoofing analysis Declaration [DataMember(Name = \"spfVerdict\", EmitDefaultValue = true)] public string SpfVerdict { get; set; } Property Value Type Description string Verdict of Send Policy Framework record spoofing analysis View Source VirusVerdict Verdict of virus scan analysis Declaration [DataMember(Name = \"virusVerdict\", EmitDefaultValue = true)] public string VirusVerdict { get; set; } Property Value Type Description string Verdict of virus scan analysis Methods View Source Equals(EmailAnalysis) Returns true if EmailAnalysis instances are equal Declaration public bool Equals(EmailAnalysis input) Parameters Type Name Description EmailAnalysis input Instance of EmailAnalysis to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailContentMatchResult.html": {
    "href": "api/mailslurp.Model.EmailContentMatchResult.html",
    "title": "Class EmailContentMatchResult | MailSlurp",
    "keywords": "Class EmailContentMatchResult Matches for the given pattern Inheritance object EmailContentMatchResult Implements IEquatable<EmailContentMatchResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailContentMatchResult\")] public class EmailContentMatchResult : IEquatable<EmailContentMatchResult>, IValidatableObject Constructors View Source EmailContentMatchResult() Initializes a new instance of the EmailContentMatchResult class. Declaration [JsonConstructor] protected EmailContentMatchResult() View Source EmailContentMatchResult(string, List<string>) Initializes a new instance of the EmailContentMatchResult class. Declaration public EmailContentMatchResult(string pattern = null, List<string> matches = null) Parameters Type Name Description string pattern pattern (required). List<string> matches matches (required). Properties View Source Matches Gets or Sets Matches Declaration [DataMember(Name = \"matches\", IsRequired = true, EmitDefaultValue = true)] public List<string> Matches { get; set; } Property Value Type Description List<string> View Source Pattern Gets or Sets Pattern Declaration [DataMember(Name = \"pattern\", IsRequired = true, EmitDefaultValue = true)] public string Pattern { get; set; } Property Value Type Description string Methods View Source Equals(EmailContentMatchResult) Returns true if EmailContentMatchResult instances are equal Declaration public bool Equals(EmailContentMatchResult input) Parameters Type Name Description EmailContentMatchResult input Instance of EmailContentMatchResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailContentPartResult.html": {
    "href": "api/mailslurp.Model.EmailContentPartResult.html",
    "title": "Class EmailContentPartResult | MailSlurp",
    "keywords": "Class EmailContentPartResult EmailContentPartResult Inheritance object EmailContentPartResult Implements IEquatable<EmailContentPartResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailContentPartResult\")] public class EmailContentPartResult : IEquatable<EmailContentPartResult>, IValidatableObject Constructors View Source EmailContentPartResult(string) Initializes a new instance of the EmailContentPartResult class. Declaration public EmailContentPartResult(string content = null) Parameters Type Name Description string content content. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = true)] public string Content { get; set; } Property Value Type Description string Methods View Source Equals(EmailContentPartResult) Returns true if EmailContentPartResult instances are equal Declaration public bool Equals(EmailContentPartResult input) Parameters Type Name Description EmailContentPartResult input Instance of EmailContentPartResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailFeatureCategoryName.html": {
    "href": "api/mailslurp.Model.EmailFeatureCategoryName.html",
    "title": "Class EmailFeatureCategoryName | MailSlurp",
    "keywords": "Class EmailFeatureCategoryName EmailFeatureCategoryName Inheritance object EmailFeatureCategoryName Implements IEquatable<EmailFeatureCategoryName> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailFeatureCategoryName\")] public class EmailFeatureCategoryName : IEquatable<EmailFeatureCategoryName>, IValidatableObject Constructors View Source EmailFeatureCategoryName() Initializes a new instance of the EmailFeatureCategoryName class. Declaration [JsonConstructor] protected EmailFeatureCategoryName() View Source EmailFeatureCategoryName(SlugEnum, string) Initializes a new instance of the EmailFeatureCategoryName class. Declaration public EmailFeatureCategoryName(EmailFeatureCategoryName.SlugEnum slug = (EmailFeatureCategoryName.SlugEnum)0, string name = null) Parameters Type Name Description EmailFeatureCategoryName.SlugEnum slug slug (required). string name name (required). Properties View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source Slug Gets or Sets Slug Declaration [DataMember(Name = \"slug\", IsRequired = true, EmitDefaultValue = true)] public EmailFeatureCategoryName.SlugEnum Slug { get; set; } Property Value Type Description EmailFeatureCategoryName.SlugEnum Methods View Source Equals(EmailFeatureCategoryName) Returns true if EmailFeatureCategoryName instances are equal Declaration public bool Equals(EmailFeatureCategoryName input) Parameters Type Name Description EmailFeatureCategoryName input Instance of EmailFeatureCategoryName to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailFeatureCategoryName.SlugEnum.html": {
    "href": "api/mailslurp.Model.EmailFeatureCategoryName.SlugEnum.html",
    "title": "Enum EmailFeatureCategoryName.SlugEnum | MailSlurp",
    "keywords": "Enum EmailFeatureCategoryName.SlugEnum Defines Slug Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmailFeatureCategoryName.SlugEnum Fields Name Description Css Enum Css for value: css Html Enum Html for value: html Image Enum Image for value: image Others Enum Others for value: others"
  },
  "api/mailslurp.Model.EmailFeatureFamilyName.html": {
    "href": "api/mailslurp.Model.EmailFeatureFamilyName.html",
    "title": "Class EmailFeatureFamilyName | MailSlurp",
    "keywords": "Class EmailFeatureFamilyName EmailFeatureFamilyName Inheritance object EmailFeatureFamilyName Implements IEquatable<EmailFeatureFamilyName> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailFeatureFamilyName\")] public class EmailFeatureFamilyName : IEquatable<EmailFeatureFamilyName>, IValidatableObject Constructors View Source EmailFeatureFamilyName() Initializes a new instance of the EmailFeatureFamilyName class. Declaration [JsonConstructor] protected EmailFeatureFamilyName() View Source EmailFeatureFamilyName(SlugEnum, string) Initializes a new instance of the EmailFeatureFamilyName class. Declaration public EmailFeatureFamilyName(EmailFeatureFamilyName.SlugEnum slug = (EmailFeatureFamilyName.SlugEnum)0, string name = null) Parameters Type Name Description EmailFeatureFamilyName.SlugEnum slug slug (required). string name name (required). Properties View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source Slug Gets or Sets Slug Declaration [DataMember(Name = \"slug\", IsRequired = true, EmitDefaultValue = true)] public EmailFeatureFamilyName.SlugEnum Slug { get; set; } Property Value Type Description EmailFeatureFamilyName.SlugEnum Methods View Source Equals(EmailFeatureFamilyName) Returns true if EmailFeatureFamilyName instances are equal Declaration public bool Equals(EmailFeatureFamilyName input) Parameters Type Name Description EmailFeatureFamilyName input Instance of EmailFeatureFamilyName to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailFeatureFamilyName.SlugEnum.html": {
    "href": "api/mailslurp.Model.EmailFeatureFamilyName.SlugEnum.html",
    "title": "Enum EmailFeatureFamilyName.SlugEnum | MailSlurp",
    "keywords": "Enum EmailFeatureFamilyName.SlugEnum Defines Slug Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmailFeatureFamilyName.SlugEnum Fields Name Description Aol Enum Aol for value: aol AppleMail Enum AppleMail for value: apple-mail Fastmail Enum Fastmail for value: fastmail FreeFr Enum FreeFr for value: free-fr Gmail Enum Gmail for value: gmail Gmx Enum Gmx for value: gmx Hey Enum Hey for value: hey Ionos1and1 Enum Ionos1and1 for value: ionos-1and1 Laposte Enum Laposte for value: laposte MailRu Enum MailRu for value: mail-ru Microsoft Enum Microsoft for value: microsoft Orange Enum Orange for value: orange Outlook Enum Outlook for value: outlook Protonmail Enum Protonmail for value: protonmail Rainloop Enum Rainloop for value: rainloop SamsungEmail Enum SamsungEmail for value: samsung-email Sfr Enum Sfr for value: sfr Thunderbird Enum Thunderbird for value: thunderbird TOnlineDe Enum TOnlineDe for value: t-online-de WebDe Enum WebDe for value: web-de Yahoo Enum Yahoo for value: yahoo"
  },
  "api/mailslurp.Model.EmailFeatureFamilyStatistics.FamilyEnum.html": {
    "href": "api/mailslurp.Model.EmailFeatureFamilyStatistics.FamilyEnum.html",
    "title": "Enum EmailFeatureFamilyStatistics.FamilyEnum | MailSlurp",
    "keywords": "Enum EmailFeatureFamilyStatistics.FamilyEnum Defines Family Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmailFeatureFamilyStatistics.FamilyEnum Fields Name Description Aol Enum Aol for value: aol AppleMail Enum AppleMail for value: apple-mail Fastmail Enum Fastmail for value: fastmail FreeFr Enum FreeFr for value: free-fr Gmail Enum Gmail for value: gmail Gmx Enum Gmx for value: gmx Hey Enum Hey for value: hey Ionos1and1 Enum Ionos1and1 for value: ionos-1and1 Laposte Enum Laposte for value: laposte MailRu Enum MailRu for value: mail-ru Microsoft Enum Microsoft for value: microsoft Orange Enum Orange for value: orange Outlook Enum Outlook for value: outlook Protonmail Enum Protonmail for value: protonmail Rainloop Enum Rainloop for value: rainloop SamsungEmail Enum SamsungEmail for value: samsung-email Sfr Enum Sfr for value: sfr Thunderbird Enum Thunderbird for value: thunderbird TOnlineDe Enum TOnlineDe for value: t-online-de WebDe Enum WebDe for value: web-de Yahoo Enum Yahoo for value: yahoo"
  },
  "api/mailslurp.Model.EmailFeatureFamilyStatistics.FeatureEnum.html": {
    "href": "api/mailslurp.Model.EmailFeatureFamilyStatistics.FeatureEnum.html",
    "title": "Enum EmailFeatureFamilyStatistics.FeatureEnum | MailSlurp",
    "keywords": "Enum EmailFeatureFamilyStatistics.FeatureEnum Defines Feature Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmailFeatureFamilyStatistics.FeatureEnum Fields Name Description Amp Enum Amp for value: amp CssAccentColor Enum CssAccentColor for value: css-accent-color CssAlignItems Enum CssAlignItems for value: css-align-items CssAnimation Enum CssAnimation for value: css-animation CssAspectRatio Enum CssAspectRatio for value: css-aspect-ratio CssAtFontFace Enum CssAtFontFace for value: css-at-font-face CssAtImport Enum CssAtImport for value: css-at-import CssAtKeyframes Enum CssAtKeyframes for value: css-at-keyframes CssAtMedia Enum CssAtMedia for value: css-at-media CssAtSupports Enum CssAtSupports for value: css-at-supports CssBackground Enum CssBackground for value: css-background CssBackgroundBlendMode Enum CssBackgroundBlendMode for value: css-background-blend-mode CssBackgroundClip Enum CssBackgroundClip for value: css-background-clip CssBackgroundColor Enum CssBackgroundColor for value: css-background-color CssBackgroundImage Enum CssBackgroundImage for value: css-background-image CssBackgroundOrigin Enum CssBackgroundOrigin for value: css-background-origin CssBackgroundPosition Enum CssBackgroundPosition for value: css-background-position CssBackgroundRepeat Enum CssBackgroundRepeat for value: css-background-repeat CssBackgroundSize Enum CssBackgroundSize for value: css-background-size CssBlockInlineSize Enum CssBlockInlineSize for value: css-block-inline-size CssBorder Enum CssBorder for value: css-border CssBorderImage Enum CssBorderImage for value: css-border-image CssBorderInlineBlock Enum CssBorderInlineBlock for value: css-border-inline-block CssBorderInlineBlockIndividual Enum CssBorderInlineBlockIndividual for value: css-border-inline-block-individual CssBorderInlineBlockLonghand Enum CssBorderInlineBlockLonghand for value: css-border-inline-block-longhand CssBorderRadius Enum CssBorderRadius for value: css-border-radius CssBorderRadiusLogical Enum CssBorderRadiusLogical for value: css-border-radius-logical CssBoxShadow Enum CssBoxShadow for value: css-box-shadow CssBoxSizing Enum CssBoxSizing for value: css-box-sizing CssCaptionSide Enum CssCaptionSide for value: css-caption-side CssClipPath Enum CssClipPath for value: css-clip-path CssColumnCount Enum CssColumnCount for value: css-column-count CssColumnLayoutProperties Enum CssColumnLayoutProperties for value: css-column-layout-properties CssDirection Enum CssDirection for value: css-direction CssDisplay Enum CssDisplay for value: css-display CssDisplayFlex Enum CssDisplayFlex for value: css-display-flex CssDisplayGrid Enum CssDisplayGrid for value: css-display-grid CssDisplayNone Enum CssDisplayNone for value: css-display-none CssFilter Enum CssFilter for value: css-filter CssFlexDirection Enum CssFlexDirection for value: css-flex-direction CssFlexWrap Enum CssFlexWrap for value: css-flex-wrap CssFloat Enum CssFloat for value: css-float CssFont Enum CssFont for value: css-font CssFontKerning Enum CssFontKerning for value: css-font-kerning CssFontWeight Enum CssFontWeight for value: css-font-weight CssGap Enum CssGap for value: css-gap CssGridTemplate Enum CssGridTemplate for value: css-grid-template CssHeight Enum CssHeight for value: css-height CssHyphens Enum CssHyphens for value: css-hyphens CssInlineSize Enum CssInlineSize for value: css-inline-size CssJustifyContent Enum CssJustifyContent for value: css-justify-content CssLeftRightTopBottom Enum CssLeftRightTopBottom for value: css-left-right-top-bottom CssLetterSpacing Enum CssLetterSpacing for value: css-letter-spacing CssLineHeight Enum CssLineHeight for value: css-line-height CssListStyle Enum CssListStyle for value: css-list-style CssListStyleImage Enum CssListStyleImage for value: css-list-style-image CssListStylePosition Enum CssListStylePosition for value: css-list-style-position CssListStyleType Enum CssListStyleType for value: css-list-style-type CssMargin Enum CssMargin for value: css-margin CssMarginBlockStartEnd Enum CssMarginBlockStartEnd for value: css-margin-block-start-end CssMarginInline Enum CssMarginInline for value: css-margin-inline CssMarginInlineBlock Enum CssMarginInlineBlock for value: css-margin-inline-block CssMarginInlineStartEnd Enum CssMarginInlineStartEnd for value: css-margin-inline-start-end CssMaxBlockSize Enum CssMaxBlockSize for value: css-max-block-size CssMaxHeight Enum CssMaxHeight for value: css-max-height CssMaxWidth Enum CssMaxWidth for value: css-max-width CssMinHeight Enum CssMinHeight for value: css-min-height CssMinInlineSize Enum CssMinInlineSize for value: css-min-inline-size CssMinWidth Enum CssMinWidth for value: css-min-width CssMixBlendMode Enum CssMixBlendMode for value: css-mix-blend-mode CssObjectFit Enum CssObjectFit for value: css-object-fit CssObjectPosition Enum CssObjectPosition for value: css-object-position CssOpacity Enum CssOpacity for value: css-opacity CssOutline Enum CssOutline for value: css-outline CssOutlineOffset Enum CssOutlineOffset for value: css-outline-offset CssOverflow Enum CssOverflow for value: css-overflow CssOverflowWrap Enum CssOverflowWrap for value: css-overflow-wrap CssPadding Enum CssPadding for value: css-padding CssPaddingBlockStartEnd Enum CssPaddingBlockStartEnd for value: css-padding-block-start-end CssPaddingInlineBlock Enum CssPaddingInlineBlock for value: css-padding-inline-block CssPaddingInlineStartEnd Enum CssPaddingInlineStartEnd for value: css-padding-inline-start-end CssPosition Enum CssPosition for value: css-position CssTableLayout Enum CssTableLayout for value: css-table-layout CssTabSize Enum CssTabSize for value: css-tab-size CssTextAlign Enum CssTextAlign for value: css-text-align CssTextAlignLast Enum CssTextAlignLast for value: css-text-align-last CssTextDecoration Enum CssTextDecoration for value: css-text-decoration CssTextDecorationColor Enum CssTextDecorationColor for value: css-text-decoration-color CssTextDecorationThickness Enum CssTextDecorationThickness for value: css-text-decoration-thickness CssTextEmphasis Enum CssTextEmphasis for value: css-text-emphasis CssTextEmphasisPosition Enum CssTextEmphasisPosition for value: css-text-emphasis-position CssTextIndent Enum CssTextIndent for value: css-text-indent CssTextOverflow Enum CssTextOverflow for value: css-text-overflow CssTextShadow Enum CssTextShadow for value: css-text-shadow CssTextTransform Enum CssTextTransform for value: css-text-transform CssTextUnderlineOffset Enum CssTextUnderlineOffset for value: css-text-underline-offset CssTransform Enum CssTransform for value: css-transform CssVerticalAlign Enum CssVerticalAlign for value: css-vertical-align CssVisibility Enum CssVisibility for value: css-visibility CssWhiteSpace Enum CssWhiteSpace for value: css-white-space CssWidth Enum CssWidth for value: css-width CssWordBreak Enum CssWordBreak for value: css-word-break CssWritingMode Enum CssWritingMode for value: css-writing-mode CssZIndex Enum CssZIndex for value: css-z-index HtmlAbbr Enum HtmlAbbr for value: html-abbr HtmlAddress Enum HtmlAddress for value: html-address HtmlAlign Enum HtmlAlign for value: html-align HtmlAnchorLinks Enum HtmlAnchorLinks for value: html-anchor-links HtmlAriaDescribedby Enum HtmlAriaDescribedby for value: html-aria-describedby HtmlAriaHidden Enum HtmlAriaHidden for value: html-aria-hidden HtmlAriaLabel Enum HtmlAriaLabel for value: html-aria-label HtmlAriaLabelledby Enum HtmlAriaLabelledby for value: html-aria-labelledby HtmlAriaLive Enum HtmlAriaLive for value: html-aria-live HtmlAudio Enum HtmlAudio for value: html-audio HtmlBackground Enum HtmlBackground for value: html-background HtmlBase Enum HtmlBase for value: html-base HtmlBlockquote Enum HtmlBlockquote for value: html-blockquote HtmlBody Enum HtmlBody for value: html-body HtmlButtonReset Enum HtmlButtonReset for value: html-button-reset HtmlButtonSubmit Enum HtmlButtonSubmit for value: html-button-submit HtmlCode Enum HtmlCode for value: html-code HtmlDel Enum HtmlDel for value: html-del HtmlDfn Enum HtmlDfn for value: html-dfn HtmlDialog Enum HtmlDialog for value: html-dialog HtmlDir Enum HtmlDir for value: html-dir HtmlDiv Enum HtmlDiv for value: html-div HtmlDoctype Enum HtmlDoctype for value: html-doctype HtmlForm Enum HtmlForm for value: html-form HtmlH1H6 Enum HtmlH1H6 for value: html-h1-h6 HtmlHeight Enum HtmlHeight for value: html-height HtmlImageMaps Enum HtmlImageMaps for value: html-image-maps HtmlInputCheckbox Enum HtmlInputCheckbox for value: html-input-checkbox HtmlInputHidden Enum HtmlInputHidden for value: html-input-hidden HtmlInputRadio Enum HtmlInputRadio for value: html-input-radio HtmlInputReset Enum HtmlInputReset for value: html-input-reset HtmlInputSubmit Enum HtmlInputSubmit for value: html-input-submit HtmlInputText Enum HtmlInputText for value: html-input-text HtmlLang Enum HtmlLang for value: html-lang HtmlLink Enum HtmlLink for value: html-link HtmlLists Enum HtmlLists for value: html-lists HtmlLoadingAttribute Enum HtmlLoadingAttribute for value: html-loading-attribute HtmlMailtoLinks Enum HtmlMailtoLinks for value: html-mailto-links HtmlMarquee Enum HtmlMarquee for value: html-marquee HtmlMeter Enum HtmlMeter for value: html-meter HtmlObject Enum HtmlObject for value: html-object HtmlP Enum HtmlP for value: html-p HtmlPicture Enum HtmlPicture for value: html-picture HtmlPre Enum HtmlPre for value: html-pre HtmlProgress Enum HtmlProgress for value: html-progress HtmlRequired Enum HtmlRequired for value: html-required HtmlRole Enum HtmlRole for value: html-role HtmlRp Enum HtmlRp for value: html-rp HtmlRt Enum HtmlRt for value: html-rt HtmlRuby Enum HtmlRuby for value: html-ruby HtmlSelect Enum HtmlSelect for value: html-select HtmlSemantics Enum HtmlSemantics for value: html-semantics HtmlSmall Enum HtmlSmall for value: html-small HtmlSpan Enum HtmlSpan for value: html-span HtmlSrcset Enum HtmlSrcset for value: html-srcset HtmlStrike Enum HtmlStrike for value: html-strike HtmlStrong Enum HtmlStrong for value: html-strong HtmlStyle Enum HtmlStyle for value: html-style HtmlSvg Enum HtmlSvg for value: html-svg HtmlTable Enum HtmlTable for value: html-table HtmlTarget Enum HtmlTarget for value: html-target HtmlTextarea Enum HtmlTextarea for value: html-textarea HtmlValign Enum HtmlValign for value: html-valign HtmlVideo Enum HtmlVideo for value: html-video HtmlWbr Enum HtmlWbr for value: html-wbr HtmlWidth Enum HtmlWidth for value: html-width ImageAvif Enum ImageAvif for value: image-avif ImageBase64 Enum ImageBase64 for value: image-base64 ImageBmp Enum ImageBmp for value: image-bmp ImageGif Enum ImageGif for value: image-gif ImageIco Enum ImageIco for value: image-ico ImageJpg Enum ImageJpg for value: image-jpg ImagePng Enum ImagePng for value: image-png ImageSvg Enum ImageSvg for value: image-svg ImageWebp Enum ImageWebp for value: image-webp Unsupported Enum Unsupported for value: unsupported"
  },
  "api/mailslurp.Model.EmailFeatureFamilyStatistics.html": {
    "href": "api/mailslurp.Model.EmailFeatureFamilyStatistics.html",
    "title": "Class EmailFeatureFamilyStatistics | MailSlurp",
    "keywords": "Class EmailFeatureFamilyStatistics EmailFeatureFamilyStatistics Inheritance object EmailFeatureFamilyStatistics Implements IEquatable<EmailFeatureFamilyStatistics> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailFeatureFamilyStatistics\")] public class EmailFeatureFamilyStatistics : IEquatable<EmailFeatureFamilyStatistics>, IValidatableObject Constructors View Source EmailFeatureFamilyStatistics() Initializes a new instance of the EmailFeatureFamilyStatistics class. Declaration [JsonConstructor] protected EmailFeatureFamilyStatistics() View Source EmailFeatureFamilyStatistics(FeatureEnum, FamilyEnum, List<EmailFeaturePlatformStatistics>) Initializes a new instance of the EmailFeatureFamilyStatistics class. Declaration public EmailFeatureFamilyStatistics(EmailFeatureFamilyStatistics.FeatureEnum feature = (EmailFeatureFamilyStatistics.FeatureEnum)0, EmailFeatureFamilyStatistics.FamilyEnum family = (EmailFeatureFamilyStatistics.FamilyEnum)0, List<EmailFeaturePlatformStatistics> platforms = null) Parameters Type Name Description EmailFeatureFamilyStatistics.FeatureEnum feature feature (required). EmailFeatureFamilyStatistics.FamilyEnum family family (required). List<EmailFeaturePlatformStatistics> platforms platforms (required). Properties View Source Family Gets or Sets Family Declaration [DataMember(Name = \"family\", IsRequired = true, EmitDefaultValue = true)] public EmailFeatureFamilyStatistics.FamilyEnum Family { get; set; } Property Value Type Description EmailFeatureFamilyStatistics.FamilyEnum View Source Feature Gets or Sets Feature Declaration [DataMember(Name = \"feature\", IsRequired = true, EmitDefaultValue = true)] public EmailFeatureFamilyStatistics.FeatureEnum Feature { get; set; } Property Value Type Description EmailFeatureFamilyStatistics.FeatureEnum View Source Platforms Gets or Sets Platforms Declaration [DataMember(Name = \"platforms\", IsRequired = true, EmitDefaultValue = true)] public List<EmailFeaturePlatformStatistics> Platforms { get; set; } Property Value Type Description List<EmailFeaturePlatformStatistics> Methods View Source Equals(EmailFeatureFamilyStatistics) Returns true if EmailFeatureFamilyStatistics instances are equal Declaration public bool Equals(EmailFeatureFamilyStatistics input) Parameters Type Name Description EmailFeatureFamilyStatistics input Instance of EmailFeatureFamilyStatistics to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailFeatureNames.html": {
    "href": "api/mailslurp.Model.EmailFeatureNames.html",
    "title": "Class EmailFeatureNames | MailSlurp",
    "keywords": "Class EmailFeatureNames EmailFeatureNames Inheritance object EmailFeatureNames Implements IEquatable<EmailFeatureNames> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailFeatureNames\")] public class EmailFeatureNames : IEquatable<EmailFeatureNames>, IValidatableObject Constructors View Source EmailFeatureNames() Initializes a new instance of the EmailFeatureNames class. Declaration [JsonConstructor] protected EmailFeatureNames() View Source EmailFeatureNames(List<EmailFeatureFamilyName>, List<EmailFeaturePlatformName>, List<EmailFeatureCategoryName>) Initializes a new instance of the EmailFeatureNames class. Declaration public EmailFeatureNames(List<EmailFeatureFamilyName> family = null, List<EmailFeaturePlatformName> platform = null, List<EmailFeatureCategoryName> category = null) Parameters Type Name Description List<EmailFeatureFamilyName> family family (required). List<EmailFeaturePlatformName> platform platform (required). List<EmailFeatureCategoryName> category category (required). Properties View Source Category Gets or Sets Category Declaration [DataMember(Name = \"category\", IsRequired = true, EmitDefaultValue = true)] public List<EmailFeatureCategoryName> Category { get; set; } Property Value Type Description List<EmailFeatureCategoryName> View Source Family Gets or Sets Family Declaration [DataMember(Name = \"family\", IsRequired = true, EmitDefaultValue = true)] public List<EmailFeatureFamilyName> Family { get; set; } Property Value Type Description List<EmailFeatureFamilyName> View Source Platform Gets or Sets Platform Declaration [DataMember(Name = \"platform\", IsRequired = true, EmitDefaultValue = true)] public List<EmailFeaturePlatformName> Platform { get; set; } Property Value Type Description List<EmailFeaturePlatformName> Methods View Source Equals(EmailFeatureNames) Returns true if EmailFeatureNames instances are equal Declaration public bool Equals(EmailFeatureNames input) Parameters Type Name Description EmailFeatureNames input Instance of EmailFeatureNames to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailFeatureOverview.CategoryEnum.html": {
    "href": "api/mailslurp.Model.EmailFeatureOverview.CategoryEnum.html",
    "title": "Enum EmailFeatureOverview.CategoryEnum | MailSlurp",
    "keywords": "Enum EmailFeatureOverview.CategoryEnum Defines Category Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmailFeatureOverview.CategoryEnum Fields Name Description Css Enum Css for value: css Html Enum Html for value: html Image Enum Image for value: image Others Enum Others for value: others"
  },
  "api/mailslurp.Model.EmailFeatureOverview.FeatureEnum.html": {
    "href": "api/mailslurp.Model.EmailFeatureOverview.FeatureEnum.html",
    "title": "Enum EmailFeatureOverview.FeatureEnum | MailSlurp",
    "keywords": "Enum EmailFeatureOverview.FeatureEnum Defines Feature Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmailFeatureOverview.FeatureEnum Fields Name Description Amp Enum Amp for value: amp CssAccentColor Enum CssAccentColor for value: css-accent-color CssAlignItems Enum CssAlignItems for value: css-align-items CssAnimation Enum CssAnimation for value: css-animation CssAspectRatio Enum CssAspectRatio for value: css-aspect-ratio CssAtFontFace Enum CssAtFontFace for value: css-at-font-face CssAtImport Enum CssAtImport for value: css-at-import CssAtKeyframes Enum CssAtKeyframes for value: css-at-keyframes CssAtMedia Enum CssAtMedia for value: css-at-media CssAtSupports Enum CssAtSupports for value: css-at-supports CssBackground Enum CssBackground for value: css-background CssBackgroundBlendMode Enum CssBackgroundBlendMode for value: css-background-blend-mode CssBackgroundClip Enum CssBackgroundClip for value: css-background-clip CssBackgroundColor Enum CssBackgroundColor for value: css-background-color CssBackgroundImage Enum CssBackgroundImage for value: css-background-image CssBackgroundOrigin Enum CssBackgroundOrigin for value: css-background-origin CssBackgroundPosition Enum CssBackgroundPosition for value: css-background-position CssBackgroundRepeat Enum CssBackgroundRepeat for value: css-background-repeat CssBackgroundSize Enum CssBackgroundSize for value: css-background-size CssBlockInlineSize Enum CssBlockInlineSize for value: css-block-inline-size CssBorder Enum CssBorder for value: css-border CssBorderImage Enum CssBorderImage for value: css-border-image CssBorderInlineBlock Enum CssBorderInlineBlock for value: css-border-inline-block CssBorderInlineBlockIndividual Enum CssBorderInlineBlockIndividual for value: css-border-inline-block-individual CssBorderInlineBlockLonghand Enum CssBorderInlineBlockLonghand for value: css-border-inline-block-longhand CssBorderRadius Enum CssBorderRadius for value: css-border-radius CssBorderRadiusLogical Enum CssBorderRadiusLogical for value: css-border-radius-logical CssBoxShadow Enum CssBoxShadow for value: css-box-shadow CssBoxSizing Enum CssBoxSizing for value: css-box-sizing CssCaptionSide Enum CssCaptionSide for value: css-caption-side CssClipPath Enum CssClipPath for value: css-clip-path CssColumnCount Enum CssColumnCount for value: css-column-count CssColumnLayoutProperties Enum CssColumnLayoutProperties for value: css-column-layout-properties CssDirection Enum CssDirection for value: css-direction CssDisplay Enum CssDisplay for value: css-display CssDisplayFlex Enum CssDisplayFlex for value: css-display-flex CssDisplayGrid Enum CssDisplayGrid for value: css-display-grid CssDisplayNone Enum CssDisplayNone for value: css-display-none CssFilter Enum CssFilter for value: css-filter CssFlexDirection Enum CssFlexDirection for value: css-flex-direction CssFlexWrap Enum CssFlexWrap for value: css-flex-wrap CssFloat Enum CssFloat for value: css-float CssFont Enum CssFont for value: css-font CssFontKerning Enum CssFontKerning for value: css-font-kerning CssFontWeight Enum CssFontWeight for value: css-font-weight CssGap Enum CssGap for value: css-gap CssGridTemplate Enum CssGridTemplate for value: css-grid-template CssHeight Enum CssHeight for value: css-height CssHyphens Enum CssHyphens for value: css-hyphens CssInlineSize Enum CssInlineSize for value: css-inline-size CssJustifyContent Enum CssJustifyContent for value: css-justify-content CssLeftRightTopBottom Enum CssLeftRightTopBottom for value: css-left-right-top-bottom CssLetterSpacing Enum CssLetterSpacing for value: css-letter-spacing CssLineHeight Enum CssLineHeight for value: css-line-height CssListStyle Enum CssListStyle for value: css-list-style CssListStyleImage Enum CssListStyleImage for value: css-list-style-image CssListStylePosition Enum CssListStylePosition for value: css-list-style-position CssListStyleType Enum CssListStyleType for value: css-list-style-type CssMargin Enum CssMargin for value: css-margin CssMarginBlockStartEnd Enum CssMarginBlockStartEnd for value: css-margin-block-start-end CssMarginInline Enum CssMarginInline for value: css-margin-inline CssMarginInlineBlock Enum CssMarginInlineBlock for value: css-margin-inline-block CssMarginInlineStartEnd Enum CssMarginInlineStartEnd for value: css-margin-inline-start-end CssMaxBlockSize Enum CssMaxBlockSize for value: css-max-block-size CssMaxHeight Enum CssMaxHeight for value: css-max-height CssMaxWidth Enum CssMaxWidth for value: css-max-width CssMinHeight Enum CssMinHeight for value: css-min-height CssMinInlineSize Enum CssMinInlineSize for value: css-min-inline-size CssMinWidth Enum CssMinWidth for value: css-min-width CssMixBlendMode Enum CssMixBlendMode for value: css-mix-blend-mode CssObjectFit Enum CssObjectFit for value: css-object-fit CssObjectPosition Enum CssObjectPosition for value: css-object-position CssOpacity Enum CssOpacity for value: css-opacity CssOutline Enum CssOutline for value: css-outline CssOutlineOffset Enum CssOutlineOffset for value: css-outline-offset CssOverflow Enum CssOverflow for value: css-overflow CssOverflowWrap Enum CssOverflowWrap for value: css-overflow-wrap CssPadding Enum CssPadding for value: css-padding CssPaddingBlockStartEnd Enum CssPaddingBlockStartEnd for value: css-padding-block-start-end CssPaddingInlineBlock Enum CssPaddingInlineBlock for value: css-padding-inline-block CssPaddingInlineStartEnd Enum CssPaddingInlineStartEnd for value: css-padding-inline-start-end CssPosition Enum CssPosition for value: css-position CssTableLayout Enum CssTableLayout for value: css-table-layout CssTabSize Enum CssTabSize for value: css-tab-size CssTextAlign Enum CssTextAlign for value: css-text-align CssTextAlignLast Enum CssTextAlignLast for value: css-text-align-last CssTextDecoration Enum CssTextDecoration for value: css-text-decoration CssTextDecorationColor Enum CssTextDecorationColor for value: css-text-decoration-color CssTextDecorationThickness Enum CssTextDecorationThickness for value: css-text-decoration-thickness CssTextEmphasis Enum CssTextEmphasis for value: css-text-emphasis CssTextEmphasisPosition Enum CssTextEmphasisPosition for value: css-text-emphasis-position CssTextIndent Enum CssTextIndent for value: css-text-indent CssTextOverflow Enum CssTextOverflow for value: css-text-overflow CssTextShadow Enum CssTextShadow for value: css-text-shadow CssTextTransform Enum CssTextTransform for value: css-text-transform CssTextUnderlineOffset Enum CssTextUnderlineOffset for value: css-text-underline-offset CssTransform Enum CssTransform for value: css-transform CssVerticalAlign Enum CssVerticalAlign for value: css-vertical-align CssVisibility Enum CssVisibility for value: css-visibility CssWhiteSpace Enum CssWhiteSpace for value: css-white-space CssWidth Enum CssWidth for value: css-width CssWordBreak Enum CssWordBreak for value: css-word-break CssWritingMode Enum CssWritingMode for value: css-writing-mode CssZIndex Enum CssZIndex for value: css-z-index HtmlAbbr Enum HtmlAbbr for value: html-abbr HtmlAddress Enum HtmlAddress for value: html-address HtmlAlign Enum HtmlAlign for value: html-align HtmlAnchorLinks Enum HtmlAnchorLinks for value: html-anchor-links HtmlAriaDescribedby Enum HtmlAriaDescribedby for value: html-aria-describedby HtmlAriaHidden Enum HtmlAriaHidden for value: html-aria-hidden HtmlAriaLabel Enum HtmlAriaLabel for value: html-aria-label HtmlAriaLabelledby Enum HtmlAriaLabelledby for value: html-aria-labelledby HtmlAriaLive Enum HtmlAriaLive for value: html-aria-live HtmlAudio Enum HtmlAudio for value: html-audio HtmlBackground Enum HtmlBackground for value: html-background HtmlBase Enum HtmlBase for value: html-base HtmlBlockquote Enum HtmlBlockquote for value: html-blockquote HtmlBody Enum HtmlBody for value: html-body HtmlButtonReset Enum HtmlButtonReset for value: html-button-reset HtmlButtonSubmit Enum HtmlButtonSubmit for value: html-button-submit HtmlCode Enum HtmlCode for value: html-code HtmlDel Enum HtmlDel for value: html-del HtmlDfn Enum HtmlDfn for value: html-dfn HtmlDialog Enum HtmlDialog for value: html-dialog HtmlDir Enum HtmlDir for value: html-dir HtmlDiv Enum HtmlDiv for value: html-div HtmlDoctype Enum HtmlDoctype for value: html-doctype HtmlForm Enum HtmlForm for value: html-form HtmlH1H6 Enum HtmlH1H6 for value: html-h1-h6 HtmlHeight Enum HtmlHeight for value: html-height HtmlImageMaps Enum HtmlImageMaps for value: html-image-maps HtmlInputCheckbox Enum HtmlInputCheckbox for value: html-input-checkbox HtmlInputHidden Enum HtmlInputHidden for value: html-input-hidden HtmlInputRadio Enum HtmlInputRadio for value: html-input-radio HtmlInputReset Enum HtmlInputReset for value: html-input-reset HtmlInputSubmit Enum HtmlInputSubmit for value: html-input-submit HtmlInputText Enum HtmlInputText for value: html-input-text HtmlLang Enum HtmlLang for value: html-lang HtmlLink Enum HtmlLink for value: html-link HtmlLists Enum HtmlLists for value: html-lists HtmlLoadingAttribute Enum HtmlLoadingAttribute for value: html-loading-attribute HtmlMailtoLinks Enum HtmlMailtoLinks for value: html-mailto-links HtmlMarquee Enum HtmlMarquee for value: html-marquee HtmlMeter Enum HtmlMeter for value: html-meter HtmlObject Enum HtmlObject for value: html-object HtmlP Enum HtmlP for value: html-p HtmlPicture Enum HtmlPicture for value: html-picture HtmlPre Enum HtmlPre for value: html-pre HtmlProgress Enum HtmlProgress for value: html-progress HtmlRequired Enum HtmlRequired for value: html-required HtmlRole Enum HtmlRole for value: html-role HtmlRp Enum HtmlRp for value: html-rp HtmlRt Enum HtmlRt for value: html-rt HtmlRuby Enum HtmlRuby for value: html-ruby HtmlSelect Enum HtmlSelect for value: html-select HtmlSemantics Enum HtmlSemantics for value: html-semantics HtmlSmall Enum HtmlSmall for value: html-small HtmlSpan Enum HtmlSpan for value: html-span HtmlSrcset Enum HtmlSrcset for value: html-srcset HtmlStrike Enum HtmlStrike for value: html-strike HtmlStrong Enum HtmlStrong for value: html-strong HtmlStyle Enum HtmlStyle for value: html-style HtmlSvg Enum HtmlSvg for value: html-svg HtmlTable Enum HtmlTable for value: html-table HtmlTarget Enum HtmlTarget for value: html-target HtmlTextarea Enum HtmlTextarea for value: html-textarea HtmlValign Enum HtmlValign for value: html-valign HtmlVideo Enum HtmlVideo for value: html-video HtmlWbr Enum HtmlWbr for value: html-wbr HtmlWidth Enum HtmlWidth for value: html-width ImageAvif Enum ImageAvif for value: image-avif ImageBase64 Enum ImageBase64 for value: image-base64 ImageBmp Enum ImageBmp for value: image-bmp ImageGif Enum ImageGif for value: image-gif ImageIco Enum ImageIco for value: image-ico ImageJpg Enum ImageJpg for value: image-jpg ImagePng Enum ImagePng for value: image-png ImageSvg Enum ImageSvg for value: image-svg ImageWebp Enum ImageWebp for value: image-webp Unsupported Enum Unsupported for value: unsupported"
  },
  "api/mailslurp.Model.EmailFeatureOverview.html": {
    "href": "api/mailslurp.Model.EmailFeatureOverview.html",
    "title": "Class EmailFeatureOverview | MailSlurp",
    "keywords": "Class EmailFeatureOverview EmailFeatureOverview Inheritance object EmailFeatureOverview Implements IEquatable<EmailFeatureOverview> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailFeatureOverview\")] public class EmailFeatureOverview : IEquatable<EmailFeatureOverview>, IValidatableObject Constructors View Source EmailFeatureOverview() Initializes a new instance of the EmailFeatureOverview class. Declaration [JsonConstructor] protected EmailFeatureOverview() View Source EmailFeatureOverview(FeatureEnum, string, string, CategoryEnum?, string, Dictionary<string, string>, List<EmailFeatureFamilyStatistics>, List<StatusesEnum>) Initializes a new instance of the EmailFeatureOverview class. Declaration public EmailFeatureOverview(EmailFeatureOverview.FeatureEnum feature = (EmailFeatureOverview.FeatureEnum)0, string title = null, string description = null, EmailFeatureOverview.CategoryEnum? category = null, string notes = null, Dictionary<string, string> notesNumbers = null, List<EmailFeatureFamilyStatistics> featureStatistics = null, List<EmailFeatureOverview.StatusesEnum> statuses = null) Parameters Type Name Description EmailFeatureOverview.FeatureEnum feature feature (required). string title title. string description description. EmailFeatureOverview.CategoryEnum? category category. string notes notes. Dictionary<string, string> notesNumbers notesNumbers. List<EmailFeatureFamilyStatistics> featureStatistics featureStatistics. List<EmailFeatureOverview.StatusesEnum> statuses statuses (required). Properties View Source Category Gets or Sets Category Declaration [DataMember(Name = \"category\", EmitDefaultValue = false)] public EmailFeatureOverview.CategoryEnum? Category { get; set; } Property Value Type Description EmailFeatureOverview.CategoryEnum? View Source Description Gets or Sets Description Declaration [DataMember(Name = \"description\", EmitDefaultValue = false)] public string Description { get; set; } Property Value Type Description string View Source Feature Gets or Sets Feature Declaration [DataMember(Name = \"feature\", IsRequired = true, EmitDefaultValue = true)] public EmailFeatureOverview.FeatureEnum Feature { get; set; } Property Value Type Description EmailFeatureOverview.FeatureEnum View Source FeatureStatistics Gets or Sets FeatureStatistics Declaration [DataMember(Name = \"featureStatistics\", EmitDefaultValue = false)] public List<EmailFeatureFamilyStatistics> FeatureStatistics { get; set; } Property Value Type Description List<EmailFeatureFamilyStatistics> View Source Notes Gets or Sets Notes Declaration [DataMember(Name = \"notes\", EmitDefaultValue = false)] public string Notes { get; set; } Property Value Type Description string View Source NotesNumbers Gets or Sets NotesNumbers Declaration [DataMember(Name = \"notesNumbers\", EmitDefaultValue = false)] public Dictionary<string, string> NotesNumbers { get; set; } Property Value Type Description Dictionary<string, string> View Source Statuses Gets or Sets Statuses Declaration [DataMember(Name = \"statuses\", IsRequired = true, EmitDefaultValue = true)] public List<EmailFeatureOverview.StatusesEnum> Statuses { get; set; } Property Value Type Description List<EmailFeatureOverview.StatusesEnum> View Source Title Gets or Sets Title Declaration [DataMember(Name = \"title\", EmitDefaultValue = false)] public string Title { get; set; } Property Value Type Description string Methods View Source Equals(EmailFeatureOverview) Returns true if EmailFeatureOverview instances are equal Declaration public bool Equals(EmailFeatureOverview input) Parameters Type Name Description EmailFeatureOverview input Instance of EmailFeatureOverview to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailFeatureOverview.StatusesEnum.html": {
    "href": "api/mailslurp.Model.EmailFeatureOverview.StatusesEnum.html",
    "title": "Enum EmailFeatureOverview.StatusesEnum | MailSlurp",
    "keywords": "Enum EmailFeatureOverview.StatusesEnum Defines Statuses Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmailFeatureOverview.StatusesEnum Fields Name Description NOTSUPPORTED Enum NOTSUPPORTED for value: NOT_SUPPORTED PARTIAL Enum PARTIAL for value: PARTIAL SUPPORTED Enum SUPPORTED for value: SUPPORTED UNKNOWN Enum UNKNOWN for value: UNKNOWN"
  },
  "api/mailslurp.Model.EmailFeaturePlatformName.html": {
    "href": "api/mailslurp.Model.EmailFeaturePlatformName.html",
    "title": "Class EmailFeaturePlatformName | MailSlurp",
    "keywords": "Class EmailFeaturePlatformName EmailFeaturePlatformName Inheritance object EmailFeaturePlatformName Implements IEquatable<EmailFeaturePlatformName> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailFeaturePlatformName\")] public class EmailFeaturePlatformName : IEquatable<EmailFeaturePlatformName>, IValidatableObject Constructors View Source EmailFeaturePlatformName() Initializes a new instance of the EmailFeaturePlatformName class. Declaration [JsonConstructor] protected EmailFeaturePlatformName() View Source EmailFeaturePlatformName(SlugEnum, string) Initializes a new instance of the EmailFeaturePlatformName class. Declaration public EmailFeaturePlatformName(EmailFeaturePlatformName.SlugEnum slug = (EmailFeaturePlatformName.SlugEnum)0, string name = null) Parameters Type Name Description EmailFeaturePlatformName.SlugEnum slug slug (required). string name name (required). Properties View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source Slug Gets or Sets Slug Declaration [DataMember(Name = \"slug\", IsRequired = true, EmitDefaultValue = true)] public EmailFeaturePlatformName.SlugEnum Slug { get; set; } Property Value Type Description EmailFeaturePlatformName.SlugEnum Methods View Source Equals(EmailFeaturePlatformName) Returns true if EmailFeaturePlatformName instances are equal Declaration public bool Equals(EmailFeaturePlatformName input) Parameters Type Name Description EmailFeaturePlatformName input Instance of EmailFeaturePlatformName to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailFeaturePlatformName.SlugEnum.html": {
    "href": "api/mailslurp.Model.EmailFeaturePlatformName.SlugEnum.html",
    "title": "Enum EmailFeaturePlatformName.SlugEnum | MailSlurp",
    "keywords": "Enum EmailFeaturePlatformName.SlugEnum Defines Slug Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmailFeaturePlatformName.SlugEnum Fields Name Description Android Enum Android for value: android DesktopApp Enum DesktopApp for value: desktop-app DesktopWebmail Enum DesktopWebmail for value: desktop-webmail Ios Enum Ios for value: ios Macos Enum Macos for value: macos MobileWebmail Enum MobileWebmail for value: mobile-webmail OutlookCom Enum OutlookCom for value: outlook-com Webmail Enum Webmail for value: webmail Windows Enum Windows for value: windows WindowsMail Enum WindowsMail for value: windows-mail"
  },
  "api/mailslurp.Model.EmailFeaturePlatformStatistics.html": {
    "href": "api/mailslurp.Model.EmailFeaturePlatformStatistics.html",
    "title": "Class EmailFeaturePlatformStatistics | MailSlurp",
    "keywords": "Class EmailFeaturePlatformStatistics EmailFeaturePlatformStatistics Inheritance object EmailFeaturePlatformStatistics Implements IEquatable<EmailFeaturePlatformStatistics> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailFeaturePlatformStatistics\")] public class EmailFeaturePlatformStatistics : IEquatable<EmailFeaturePlatformStatistics>, IValidatableObject Constructors View Source EmailFeaturePlatformStatistics() Initializes a new instance of the EmailFeaturePlatformStatistics class. Declaration [JsonConstructor] protected EmailFeaturePlatformStatistics() View Source EmailFeaturePlatformStatistics(PlatformEnum, List<EmailFeatureVersionStatistics>) Initializes a new instance of the EmailFeaturePlatformStatistics class. Declaration public EmailFeaturePlatformStatistics(EmailFeaturePlatformStatistics.PlatformEnum platform = (EmailFeaturePlatformStatistics.PlatformEnum)0, List<EmailFeatureVersionStatistics> versions = null) Parameters Type Name Description EmailFeaturePlatformStatistics.PlatformEnum platform platform (required). List<EmailFeatureVersionStatistics> versions versions (required). Properties View Source Platform Gets or Sets Platform Declaration [DataMember(Name = \"platform\", IsRequired = true, EmitDefaultValue = true)] public EmailFeaturePlatformStatistics.PlatformEnum Platform { get; set; } Property Value Type Description EmailFeaturePlatformStatistics.PlatformEnum View Source Versions Gets or Sets Versions Declaration [DataMember(Name = \"versions\", IsRequired = true, EmitDefaultValue = true)] public List<EmailFeatureVersionStatistics> Versions { get; set; } Property Value Type Description List<EmailFeatureVersionStatistics> Methods View Source Equals(EmailFeaturePlatformStatistics) Returns true if EmailFeaturePlatformStatistics instances are equal Declaration public bool Equals(EmailFeaturePlatformStatistics input) Parameters Type Name Description EmailFeaturePlatformStatistics input Instance of EmailFeaturePlatformStatistics to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailFeaturePlatformStatistics.PlatformEnum.html": {
    "href": "api/mailslurp.Model.EmailFeaturePlatformStatistics.PlatformEnum.html",
    "title": "Enum EmailFeaturePlatformStatistics.PlatformEnum | MailSlurp",
    "keywords": "Enum EmailFeaturePlatformStatistics.PlatformEnum Defines Platform Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmailFeaturePlatformStatistics.PlatformEnum Fields Name Description Android Enum Android for value: android DesktopApp Enum DesktopApp for value: desktop-app DesktopWebmail Enum DesktopWebmail for value: desktop-webmail Ios Enum Ios for value: ios Macos Enum Macos for value: macos MobileWebmail Enum MobileWebmail for value: mobile-webmail OutlookCom Enum OutlookCom for value: outlook-com Webmail Enum Webmail for value: webmail Windows Enum Windows for value: windows WindowsMail Enum WindowsMail for value: windows-mail"
  },
  "api/mailslurp.Model.EmailFeatureSupportFlags.html": {
    "href": "api/mailslurp.Model.EmailFeatureSupportFlags.html",
    "title": "Class EmailFeatureSupportFlags | MailSlurp",
    "keywords": "Class EmailFeatureSupportFlags EmailFeatureSupportFlags Inheritance object EmailFeatureSupportFlags Implements IEquatable<EmailFeatureSupportFlags> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailFeatureSupportFlags\")] public class EmailFeatureSupportFlags : IEquatable<EmailFeatureSupportFlags>, IValidatableObject Constructors View Source EmailFeatureSupportFlags() Initializes a new instance of the EmailFeatureSupportFlags class. Declaration [JsonConstructor] protected EmailFeatureSupportFlags() View Source EmailFeatureSupportFlags(StatusEnum, List<string>) Initializes a new instance of the EmailFeatureSupportFlags class. Declaration public EmailFeatureSupportFlags(EmailFeatureSupportFlags.StatusEnum status = (EmailFeatureSupportFlags.StatusEnum)0, List<string> notes = null) Parameters Type Name Description EmailFeatureSupportFlags.StatusEnum status status (required). List<string> notes notes. Properties View Source Notes Gets or Sets Notes Declaration [DataMember(Name = \"notes\", EmitDefaultValue = false)] public List<string> Notes { get; set; } Property Value Type Description List<string> View Source Status Gets or Sets Status Declaration [DataMember(Name = \"status\", IsRequired = true, EmitDefaultValue = true)] public EmailFeatureSupportFlags.StatusEnum Status { get; set; } Property Value Type Description EmailFeatureSupportFlags.StatusEnum Methods View Source Equals(EmailFeatureSupportFlags) Returns true if EmailFeatureSupportFlags instances are equal Declaration public bool Equals(EmailFeatureSupportFlags input) Parameters Type Name Description EmailFeatureSupportFlags input Instance of EmailFeatureSupportFlags to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailFeatureSupportFlags.StatusEnum.html": {
    "href": "api/mailslurp.Model.EmailFeatureSupportFlags.StatusEnum.html",
    "title": "Enum EmailFeatureSupportFlags.StatusEnum | MailSlurp",
    "keywords": "Enum EmailFeatureSupportFlags.StatusEnum Defines Status Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmailFeatureSupportFlags.StatusEnum Fields Name Description NOTSUPPORTED Enum NOTSUPPORTED for value: NOT_SUPPORTED PARTIAL Enum PARTIAL for value: PARTIAL SUPPORTED Enum SUPPORTED for value: SUPPORTED UNKNOWN Enum UNKNOWN for value: UNKNOWN"
  },
  "api/mailslurp.Model.EmailFeatureSupportResult.DetectedFeaturesEnum.html": {
    "href": "api/mailslurp.Model.EmailFeatureSupportResult.DetectedFeaturesEnum.html",
    "title": "Enum EmailFeatureSupportResult.DetectedFeaturesEnum | MailSlurp",
    "keywords": "Enum EmailFeatureSupportResult.DetectedFeaturesEnum Defines DetectedFeatures Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmailFeatureSupportResult.DetectedFeaturesEnum Fields Name Description Amp Enum Amp for value: amp CssAccentColor Enum CssAccentColor for value: css-accent-color CssAlignItems Enum CssAlignItems for value: css-align-items CssAnimation Enum CssAnimation for value: css-animation CssAspectRatio Enum CssAspectRatio for value: css-aspect-ratio CssAtFontFace Enum CssAtFontFace for value: css-at-font-face CssAtImport Enum CssAtImport for value: css-at-import CssAtKeyframes Enum CssAtKeyframes for value: css-at-keyframes CssAtMedia Enum CssAtMedia for value: css-at-media CssAtSupports Enum CssAtSupports for value: css-at-supports CssBackground Enum CssBackground for value: css-background CssBackgroundBlendMode Enum CssBackgroundBlendMode for value: css-background-blend-mode CssBackgroundClip Enum CssBackgroundClip for value: css-background-clip CssBackgroundColor Enum CssBackgroundColor for value: css-background-color CssBackgroundImage Enum CssBackgroundImage for value: css-background-image CssBackgroundOrigin Enum CssBackgroundOrigin for value: css-background-origin CssBackgroundPosition Enum CssBackgroundPosition for value: css-background-position CssBackgroundRepeat Enum CssBackgroundRepeat for value: css-background-repeat CssBackgroundSize Enum CssBackgroundSize for value: css-background-size CssBlockInlineSize Enum CssBlockInlineSize for value: css-block-inline-size CssBorder Enum CssBorder for value: css-border CssBorderImage Enum CssBorderImage for value: css-border-image CssBorderInlineBlock Enum CssBorderInlineBlock for value: css-border-inline-block CssBorderInlineBlockIndividual Enum CssBorderInlineBlockIndividual for value: css-border-inline-block-individual CssBorderInlineBlockLonghand Enum CssBorderInlineBlockLonghand for value: css-border-inline-block-longhand CssBorderRadius Enum CssBorderRadius for value: css-border-radius CssBorderRadiusLogical Enum CssBorderRadiusLogical for value: css-border-radius-logical CssBoxShadow Enum CssBoxShadow for value: css-box-shadow CssBoxSizing Enum CssBoxSizing for value: css-box-sizing CssCaptionSide Enum CssCaptionSide for value: css-caption-side CssClipPath Enum CssClipPath for value: css-clip-path CssColumnCount Enum CssColumnCount for value: css-column-count CssColumnLayoutProperties Enum CssColumnLayoutProperties for value: css-column-layout-properties CssDirection Enum CssDirection for value: css-direction CssDisplay Enum CssDisplay for value: css-display CssDisplayFlex Enum CssDisplayFlex for value: css-display-flex CssDisplayGrid Enum CssDisplayGrid for value: css-display-grid CssDisplayNone Enum CssDisplayNone for value: css-display-none CssFilter Enum CssFilter for value: css-filter CssFlexDirection Enum CssFlexDirection for value: css-flex-direction CssFlexWrap Enum CssFlexWrap for value: css-flex-wrap CssFloat Enum CssFloat for value: css-float CssFont Enum CssFont for value: css-font CssFontKerning Enum CssFontKerning for value: css-font-kerning CssFontWeight Enum CssFontWeight for value: css-font-weight CssGap Enum CssGap for value: css-gap CssGridTemplate Enum CssGridTemplate for value: css-grid-template CssHeight Enum CssHeight for value: css-height CssHyphens Enum CssHyphens for value: css-hyphens CssInlineSize Enum CssInlineSize for value: css-inline-size CssJustifyContent Enum CssJustifyContent for value: css-justify-content CssLeftRightTopBottom Enum CssLeftRightTopBottom for value: css-left-right-top-bottom CssLetterSpacing Enum CssLetterSpacing for value: css-letter-spacing CssLineHeight Enum CssLineHeight for value: css-line-height CssListStyle Enum CssListStyle for value: css-list-style CssListStyleImage Enum CssListStyleImage for value: css-list-style-image CssListStylePosition Enum CssListStylePosition for value: css-list-style-position CssListStyleType Enum CssListStyleType for value: css-list-style-type CssMargin Enum CssMargin for value: css-margin CssMarginBlockStartEnd Enum CssMarginBlockStartEnd for value: css-margin-block-start-end CssMarginInline Enum CssMarginInline for value: css-margin-inline CssMarginInlineBlock Enum CssMarginInlineBlock for value: css-margin-inline-block CssMarginInlineStartEnd Enum CssMarginInlineStartEnd for value: css-margin-inline-start-end CssMaxBlockSize Enum CssMaxBlockSize for value: css-max-block-size CssMaxHeight Enum CssMaxHeight for value: css-max-height CssMaxWidth Enum CssMaxWidth for value: css-max-width CssMinHeight Enum CssMinHeight for value: css-min-height CssMinInlineSize Enum CssMinInlineSize for value: css-min-inline-size CssMinWidth Enum CssMinWidth for value: css-min-width CssMixBlendMode Enum CssMixBlendMode for value: css-mix-blend-mode CssObjectFit Enum CssObjectFit for value: css-object-fit CssObjectPosition Enum CssObjectPosition for value: css-object-position CssOpacity Enum CssOpacity for value: css-opacity CssOutline Enum CssOutline for value: css-outline CssOutlineOffset Enum CssOutlineOffset for value: css-outline-offset CssOverflow Enum CssOverflow for value: css-overflow CssOverflowWrap Enum CssOverflowWrap for value: css-overflow-wrap CssPadding Enum CssPadding for value: css-padding CssPaddingBlockStartEnd Enum CssPaddingBlockStartEnd for value: css-padding-block-start-end CssPaddingInlineBlock Enum CssPaddingInlineBlock for value: css-padding-inline-block CssPaddingInlineStartEnd Enum CssPaddingInlineStartEnd for value: css-padding-inline-start-end CssPosition Enum CssPosition for value: css-position CssTableLayout Enum CssTableLayout for value: css-table-layout CssTabSize Enum CssTabSize for value: css-tab-size CssTextAlign Enum CssTextAlign for value: css-text-align CssTextAlignLast Enum CssTextAlignLast for value: css-text-align-last CssTextDecoration Enum CssTextDecoration for value: css-text-decoration CssTextDecorationColor Enum CssTextDecorationColor for value: css-text-decoration-color CssTextDecorationThickness Enum CssTextDecorationThickness for value: css-text-decoration-thickness CssTextEmphasis Enum CssTextEmphasis for value: css-text-emphasis CssTextEmphasisPosition Enum CssTextEmphasisPosition for value: css-text-emphasis-position CssTextIndent Enum CssTextIndent for value: css-text-indent CssTextOverflow Enum CssTextOverflow for value: css-text-overflow CssTextShadow Enum CssTextShadow for value: css-text-shadow CssTextTransform Enum CssTextTransform for value: css-text-transform CssTextUnderlineOffset Enum CssTextUnderlineOffset for value: css-text-underline-offset CssTransform Enum CssTransform for value: css-transform CssVerticalAlign Enum CssVerticalAlign for value: css-vertical-align CssVisibility Enum CssVisibility for value: css-visibility CssWhiteSpace Enum CssWhiteSpace for value: css-white-space CssWidth Enum CssWidth for value: css-width CssWordBreak Enum CssWordBreak for value: css-word-break CssWritingMode Enum CssWritingMode for value: css-writing-mode CssZIndex Enum CssZIndex for value: css-z-index HtmlAbbr Enum HtmlAbbr for value: html-abbr HtmlAddress Enum HtmlAddress for value: html-address HtmlAlign Enum HtmlAlign for value: html-align HtmlAnchorLinks Enum HtmlAnchorLinks for value: html-anchor-links HtmlAriaDescribedby Enum HtmlAriaDescribedby for value: html-aria-describedby HtmlAriaHidden Enum HtmlAriaHidden for value: html-aria-hidden HtmlAriaLabel Enum HtmlAriaLabel for value: html-aria-label HtmlAriaLabelledby Enum HtmlAriaLabelledby for value: html-aria-labelledby HtmlAriaLive Enum HtmlAriaLive for value: html-aria-live HtmlAudio Enum HtmlAudio for value: html-audio HtmlBackground Enum HtmlBackground for value: html-background HtmlBase Enum HtmlBase for value: html-base HtmlBlockquote Enum HtmlBlockquote for value: html-blockquote HtmlBody Enum HtmlBody for value: html-body HtmlButtonReset Enum HtmlButtonReset for value: html-button-reset HtmlButtonSubmit Enum HtmlButtonSubmit for value: html-button-submit HtmlCode Enum HtmlCode for value: html-code HtmlDel Enum HtmlDel for value: html-del HtmlDfn Enum HtmlDfn for value: html-dfn HtmlDialog Enum HtmlDialog for value: html-dialog HtmlDir Enum HtmlDir for value: html-dir HtmlDiv Enum HtmlDiv for value: html-div HtmlDoctype Enum HtmlDoctype for value: html-doctype HtmlForm Enum HtmlForm for value: html-form HtmlH1H6 Enum HtmlH1H6 for value: html-h1-h6 HtmlHeight Enum HtmlHeight for value: html-height HtmlImageMaps Enum HtmlImageMaps for value: html-image-maps HtmlInputCheckbox Enum HtmlInputCheckbox for value: html-input-checkbox HtmlInputHidden Enum HtmlInputHidden for value: html-input-hidden HtmlInputRadio Enum HtmlInputRadio for value: html-input-radio HtmlInputReset Enum HtmlInputReset for value: html-input-reset HtmlInputSubmit Enum HtmlInputSubmit for value: html-input-submit HtmlInputText Enum HtmlInputText for value: html-input-text HtmlLang Enum HtmlLang for value: html-lang HtmlLink Enum HtmlLink for value: html-link HtmlLists Enum HtmlLists for value: html-lists HtmlLoadingAttribute Enum HtmlLoadingAttribute for value: html-loading-attribute HtmlMailtoLinks Enum HtmlMailtoLinks for value: html-mailto-links HtmlMarquee Enum HtmlMarquee for value: html-marquee HtmlMeter Enum HtmlMeter for value: html-meter HtmlObject Enum HtmlObject for value: html-object HtmlP Enum HtmlP for value: html-p HtmlPicture Enum HtmlPicture for value: html-picture HtmlPre Enum HtmlPre for value: html-pre HtmlProgress Enum HtmlProgress for value: html-progress HtmlRequired Enum HtmlRequired for value: html-required HtmlRole Enum HtmlRole for value: html-role HtmlRp Enum HtmlRp for value: html-rp HtmlRt Enum HtmlRt for value: html-rt HtmlRuby Enum HtmlRuby for value: html-ruby HtmlSelect Enum HtmlSelect for value: html-select HtmlSemantics Enum HtmlSemantics for value: html-semantics HtmlSmall Enum HtmlSmall for value: html-small HtmlSpan Enum HtmlSpan for value: html-span HtmlSrcset Enum HtmlSrcset for value: html-srcset HtmlStrike Enum HtmlStrike for value: html-strike HtmlStrong Enum HtmlStrong for value: html-strong HtmlStyle Enum HtmlStyle for value: html-style HtmlSvg Enum HtmlSvg for value: html-svg HtmlTable Enum HtmlTable for value: html-table HtmlTarget Enum HtmlTarget for value: html-target HtmlTextarea Enum HtmlTextarea for value: html-textarea HtmlValign Enum HtmlValign for value: html-valign HtmlVideo Enum HtmlVideo for value: html-video HtmlWbr Enum HtmlWbr for value: html-wbr HtmlWidth Enum HtmlWidth for value: html-width ImageAvif Enum ImageAvif for value: image-avif ImageBase64 Enum ImageBase64 for value: image-base64 ImageBmp Enum ImageBmp for value: image-bmp ImageGif Enum ImageGif for value: image-gif ImageIco Enum ImageIco for value: image-ico ImageJpg Enum ImageJpg for value: image-jpg ImagePng Enum ImagePng for value: image-png ImageSvg Enum ImageSvg for value: image-svg ImageWebp Enum ImageWebp for value: image-webp Unsupported Enum Unsupported for value: unsupported"
  },
  "api/mailslurp.Model.EmailFeatureSupportResult.html": {
    "href": "api/mailslurp.Model.EmailFeatureSupportResult.html",
    "title": "Class EmailFeatureSupportResult | MailSlurp",
    "keywords": "Class EmailFeatureSupportResult EmailFeatureSupportResult Inheritance object EmailFeatureSupportResult Implements IEquatable<EmailFeatureSupportResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailFeatureSupportResult\")] public class EmailFeatureSupportResult : IEquatable<EmailFeatureSupportResult>, IValidatableObject Constructors View Source EmailFeatureSupportResult() Initializes a new instance of the EmailFeatureSupportResult class. Declaration [JsonConstructor] protected EmailFeatureSupportResult() View Source EmailFeatureSupportResult(EmailFeatureNames, List<DetectedFeaturesEnum>, List<EmailFeatureOverview>, List<EmailFeatureSupportStatusPercentage>) Initializes a new instance of the EmailFeatureSupportResult class. Declaration public EmailFeatureSupportResult(EmailFeatureNames names = null, List<EmailFeatureSupportResult.DetectedFeaturesEnum> detectedFeatures = null, List<EmailFeatureOverview> featureOverviews = null, List<EmailFeatureSupportStatusPercentage> featurePercentages = null) Parameters Type Name Description EmailFeatureNames names names (required). List<EmailFeatureSupportResult.DetectedFeaturesEnum> detectedFeatures detectedFeatures (required). List<EmailFeatureOverview> featureOverviews featureOverviews (required). List<EmailFeatureSupportStatusPercentage> featurePercentages featurePercentages (required). Properties View Source DetectedFeatures Gets or Sets DetectedFeatures Declaration [DataMember(Name = \"detectedFeatures\", IsRequired = true, EmitDefaultValue = true)] public List<EmailFeatureSupportResult.DetectedFeaturesEnum> DetectedFeatures { get; set; } Property Value Type Description List<EmailFeatureSupportResult.DetectedFeaturesEnum> View Source FeatureOverviews Gets or Sets FeatureOverviews Declaration [DataMember(Name = \"featureOverviews\", IsRequired = true, EmitDefaultValue = true)] public List<EmailFeatureOverview> FeatureOverviews { get; set; } Property Value Type Description List<EmailFeatureOverview> View Source FeaturePercentages Gets or Sets FeaturePercentages Declaration [DataMember(Name = \"featurePercentages\", IsRequired = true, EmitDefaultValue = true)] public List<EmailFeatureSupportStatusPercentage> FeaturePercentages { get; set; } Property Value Type Description List<EmailFeatureSupportStatusPercentage> View Source Names Gets or Sets Names Declaration [DataMember(Name = \"names\", IsRequired = true, EmitDefaultValue = true)] public EmailFeatureNames Names { get; set; } Property Value Type Description EmailFeatureNames Methods View Source Equals(EmailFeatureSupportResult) Returns true if EmailFeatureSupportResult instances are equal Declaration public bool Equals(EmailFeatureSupportResult input) Parameters Type Name Description EmailFeatureSupportResult input Instance of EmailFeatureSupportResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailFeatureSupportStatusPercentage.html": {
    "href": "api/mailslurp.Model.EmailFeatureSupportStatusPercentage.html",
    "title": "Class EmailFeatureSupportStatusPercentage | MailSlurp",
    "keywords": "Class EmailFeatureSupportStatusPercentage EmailFeatureSupportStatusPercentage Inheritance object EmailFeatureSupportStatusPercentage Implements IEquatable<EmailFeatureSupportStatusPercentage> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailFeatureSupportStatusPercentage\")] public class EmailFeatureSupportStatusPercentage : IEquatable<EmailFeatureSupportStatusPercentage>, IValidatableObject Constructors View Source EmailFeatureSupportStatusPercentage() Initializes a new instance of the EmailFeatureSupportStatusPercentage class. Declaration [JsonConstructor] protected EmailFeatureSupportStatusPercentage() View Source EmailFeatureSupportStatusPercentage(StatusEnum, float) Initializes a new instance of the EmailFeatureSupportStatusPercentage class. Declaration public EmailFeatureSupportStatusPercentage(EmailFeatureSupportStatusPercentage.StatusEnum status = (EmailFeatureSupportStatusPercentage.StatusEnum)0, float percentage = 0) Parameters Type Name Description EmailFeatureSupportStatusPercentage.StatusEnum status status (required). float percentage percentage (required). Properties View Source Percentage Gets or Sets Percentage Declaration [DataMember(Name = \"percentage\", IsRequired = true, EmitDefaultValue = true)] public float Percentage { get; set; } Property Value Type Description float View Source Status Gets or Sets Status Declaration [DataMember(Name = \"status\", IsRequired = true, EmitDefaultValue = true)] public EmailFeatureSupportStatusPercentage.StatusEnum Status { get; set; } Property Value Type Description EmailFeatureSupportStatusPercentage.StatusEnum Methods View Source Equals(EmailFeatureSupportStatusPercentage) Returns true if EmailFeatureSupportStatusPercentage instances are equal Declaration public bool Equals(EmailFeatureSupportStatusPercentage input) Parameters Type Name Description EmailFeatureSupportStatusPercentage input Instance of EmailFeatureSupportStatusPercentage to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailFeatureSupportStatusPercentage.StatusEnum.html": {
    "href": "api/mailslurp.Model.EmailFeatureSupportStatusPercentage.StatusEnum.html",
    "title": "Enum EmailFeatureSupportStatusPercentage.StatusEnum | MailSlurp",
    "keywords": "Enum EmailFeatureSupportStatusPercentage.StatusEnum Defines Status Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmailFeatureSupportStatusPercentage.StatusEnum Fields Name Description NOTSUPPORTED Enum NOTSUPPORTED for value: NOT_SUPPORTED PARTIAL Enum PARTIAL for value: PARTIAL SUPPORTED Enum SUPPORTED for value: SUPPORTED UNKNOWN Enum UNKNOWN for value: UNKNOWN"
  },
  "api/mailslurp.Model.EmailFeatureVersionStatistics.html": {
    "href": "api/mailslurp.Model.EmailFeatureVersionStatistics.html",
    "title": "Class EmailFeatureVersionStatistics | MailSlurp",
    "keywords": "Class EmailFeatureVersionStatistics EmailFeatureVersionStatistics Inheritance object EmailFeatureVersionStatistics Implements IEquatable<EmailFeatureVersionStatistics> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailFeatureVersionStatistics\")] public class EmailFeatureVersionStatistics : IEquatable<EmailFeatureVersionStatistics>, IValidatableObject Constructors View Source EmailFeatureVersionStatistics() Initializes a new instance of the EmailFeatureVersionStatistics class. Declaration [JsonConstructor] protected EmailFeatureVersionStatistics() View Source EmailFeatureVersionStatistics(string, EmailFeatureSupportFlags) Initializes a new instance of the EmailFeatureVersionStatistics class. Declaration public EmailFeatureVersionStatistics(string version = null, EmailFeatureSupportFlags supportFlags = null) Parameters Type Name Description string version version (required). EmailFeatureSupportFlags supportFlags supportFlags (required). Properties View Source _Version Gets or Sets _Version Declaration [DataMember(Name = \"version\", IsRequired = true, EmitDefaultValue = true)] public string _Version { get; set; } Property Value Type Description string View Source SupportFlags Gets or Sets SupportFlags Declaration [DataMember(Name = \"supportFlags\", IsRequired = true, EmitDefaultValue = true)] public EmailFeatureSupportFlags SupportFlags { get; set; } Property Value Type Description EmailFeatureSupportFlags Methods View Source Equals(EmailFeatureVersionStatistics) Returns true if EmailFeatureVersionStatistics instances are equal Declaration public bool Equals(EmailFeatureVersionStatistics input) Parameters Type Name Description EmailFeatureVersionStatistics input Instance of EmailFeatureVersionStatistics to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailHtmlDto.html": {
    "href": "api/mailslurp.Model.EmailHtmlDto.html",
    "title": "Class EmailHtmlDto | MailSlurp",
    "keywords": "Class EmailHtmlDto EmailHtmlDto Inheritance object EmailHtmlDto Implements IEquatable<EmailHtmlDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailHtmlDto\")] public class EmailHtmlDto : IEquatable<EmailHtmlDto>, IValidatableObject Constructors View Source EmailHtmlDto(string, string) Initializes a new instance of the EmailHtmlDto class. Declaration public EmailHtmlDto(string subject = null, string body = null) Parameters Type Name Description string subject subject. string body body. Properties View Source Body Gets or Sets Body Declaration [DataMember(Name = \"body\", EmitDefaultValue = false)] public string Body { get; set; } Property Value Type Description string View Source Subject Gets or Sets Subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = false)] public string Subject { get; set; } Property Value Type Description string Methods View Source Equals(EmailHtmlDto) Returns true if EmailHtmlDto instances are equal Declaration public bool Equals(EmailHtmlDto input) Parameters Type Name Description EmailHtmlDto input Instance of EmailHtmlDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailLinksResult.html": {
    "href": "api/mailslurp.Model.EmailLinksResult.html",
    "title": "Class EmailLinksResult | MailSlurp",
    "keywords": "Class EmailLinksResult Links found in HTML Inheritance object EmailLinksResult Implements IEquatable<EmailLinksResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailLinksResult\")] public class EmailLinksResult : IEquatable<EmailLinksResult>, IValidatableObject Constructors View Source EmailLinksResult() Initializes a new instance of the EmailLinksResult class. Declaration [JsonConstructor] protected EmailLinksResult() View Source EmailLinksResult(List<string>, string) Initializes a new instance of the EmailLinksResult class. Declaration public EmailLinksResult(List<string> links = null, string body = null) Parameters Type Name Description List<string> links links (required). string body body (required). Properties View Source Body Gets or Sets Body Declaration [DataMember(Name = \"body\", IsRequired = true, EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string View Source Links Gets or Sets Links Declaration [DataMember(Name = \"links\", IsRequired = true, EmitDefaultValue = true)] public List<string> Links { get; set; } Property Value Type Description List<string> Methods View Source Equals(EmailLinksResult) Returns true if EmailLinksResult instances are equal Declaration public bool Equals(EmailLinksResult input) Parameters Type Name Description EmailLinksResult input Instance of EmailLinksResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailPreview.html": {
    "href": "api/mailslurp.Model.EmailPreview.html",
    "title": "Class EmailPreview | MailSlurp",
    "keywords": "Class EmailPreview Preview of an email message. For full message (including body and attachments) call the getEmail or other email endpoints with the provided email ID. Inheritance object EmailPreview Implements IEquatable<EmailPreview> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailPreview\")] public class EmailPreview : IEquatable<EmailPreview>, IValidatableObject Constructors View Source EmailPreview() Initializes a new instance of the EmailPreview class. Declaration [JsonConstructor] protected EmailPreview() View Source EmailPreview(Guid, Guid?, string, List<string>, string, List<string>, List<string>, DateTime, bool, List<string>) Initializes a new instance of the EmailPreview class. Declaration public EmailPreview(Guid id = default, Guid? domainId = null, string subject = null, List<string> to = null, string from = null, List<string> bcc = null, List<string> cc = null, DateTime createdAt = default, bool read = false, List<string> attachments = null) Parameters Type Name Description Guid id ID of the email entity (required). Guid? domainId ID of the domain that received the email. string subject The subject line of the email message as specified by SMTP subject header. List<string> to List of To recipient email addresses that the email was addressed to. See recipients object for names. (required). string from Who the email was sent from. An email address - see fromName for the sender name.. List<string> bcc List of BCC recipients email addresses that the email was addressed to. See recipients object for names.. List<string> cc List of CC recipients email addresses that the email was addressed to. See recipients object for names.. DateTime createdAt When was the email received by MailSlurp (required). bool read Read flag. Has the email ever been viewed in the dashboard or fetched via the API with a hydrated body? If so the email is marked as read. Paginated results do not affect read status. Read status is different to email opened event as it depends on your own account accessing the email. Email opened is determined by tracking pixels sent to other uses if enable during sending. You can listened for both email read and email opened events using webhooks. (required). List<string> attachments List of IDs of attachments found in the email. Use these IDs with the Inbox and Email Controllers to download attachments and attachment meta data such as filesize, name, extension.. Properties View Source Attachments List of IDs of attachments found in the email. Use these IDs with the Inbox and Email Controllers to download attachments and attachment meta data such as filesize, name, extension. Declaration [DataMember(Name = \"attachments\", EmitDefaultValue = true)] public List<string> Attachments { get; set; } Property Value Type Description List<string> List of IDs of attachments found in the email. Use these IDs with the Inbox and Email Controllers to download attachments and attachment meta data such as filesize, name, extension. View Source Bcc List of BCC recipients email addresses that the email was addressed to. See recipients object for names. Declaration [DataMember(Name = \"bcc\", EmitDefaultValue = true)] public List<string> Bcc { get; set; } Property Value Type Description List<string> List of BCC recipients email addresses that the email was addressed to. See recipients object for names. View Source Cc List of CC recipients email addresses that the email was addressed to. See recipients object for names. Declaration [DataMember(Name = \"cc\", EmitDefaultValue = true)] public List<string> Cc { get; set; } Property Value Type Description List<string> List of CC recipients email addresses that the email was addressed to. See recipients object for names. View Source CreatedAt When was the email received by MailSlurp Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime When was the email received by MailSlurp View Source DomainId ID of the domain that received the email Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? ID of the domain that received the email View Source From Who the email was sent from. An email address - see fromName for the sender name. Declaration [DataMember(Name = \"from\", EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string Who the email was sent from. An email address - see fromName for the sender name. View Source Id ID of the email entity Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid ID of the email entity View Source Read Read flag. Has the email ever been viewed in the dashboard or fetched via the API with a hydrated body? If so the email is marked as read. Paginated results do not affect read status. Read status is different to email opened event as it depends on your own account accessing the email. Email opened is determined by tracking pixels sent to other uses if enable during sending. You can listened for both email read and email opened events using webhooks. Declaration [DataMember(Name = \"read\", IsRequired = true, EmitDefaultValue = true)] public bool Read { get; set; } Property Value Type Description bool Read flag. Has the email ever been viewed in the dashboard or fetched via the API with a hydrated body? If so the email is marked as read. Paginated results do not affect read status. Read status is different to email opened event as it depends on your own account accessing the email. Email opened is determined by tracking pixels sent to other uses if enable during sending. You can listened for both email read and email opened events using webhooks. View Source Subject The subject line of the email message as specified by SMTP subject header Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string The subject line of the email message as specified by SMTP subject header View Source To List of To recipient email addresses that the email was addressed to. See recipients object for names. Declaration [DataMember(Name = \"to\", IsRequired = true, EmitDefaultValue = true)] public List<string> To { get; set; } Property Value Type Description List<string> List of To recipient email addresses that the email was addressed to. See recipients object for names. Methods View Source Equals(EmailPreview) Returns true if EmailPreview instances are equal Declaration public bool Equals(EmailPreview input) Parameters Type Name Description EmailPreview input Instance of EmailPreview to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailPreviewUrls.html": {
    "href": "api/mailslurp.Model.EmailPreviewUrls.html",
    "title": "Class EmailPreviewUrls | MailSlurp",
    "keywords": "Class EmailPreviewUrls URLs for email body Inheritance object EmailPreviewUrls Implements IEquatable<EmailPreviewUrls> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailPreviewUrls\")] public class EmailPreviewUrls : IEquatable<EmailPreviewUrls>, IValidatableObject Constructors View Source EmailPreviewUrls() Initializes a new instance of the EmailPreviewUrls class. Declaration [JsonConstructor] protected EmailPreviewUrls() View Source EmailPreviewUrls(string, string) Initializes a new instance of the EmailPreviewUrls class. Declaration public EmailPreviewUrls(string rawSmtpMessageUrl = null, string plainHtmlBodyUrl = null) Parameters Type Name Description string rawSmtpMessageUrl rawSmtpMessageUrl (required). string plainHtmlBodyUrl plainHtmlBodyUrl (required). Properties View Source PlainHtmlBodyUrl Gets or Sets PlainHtmlBodyUrl Declaration [DataMember(Name = \"plainHtmlBodyUrl\", IsRequired = true, EmitDefaultValue = true)] public string PlainHtmlBodyUrl { get; set; } Property Value Type Description string View Source RawSmtpMessageUrl Gets or Sets RawSmtpMessageUrl Declaration [DataMember(Name = \"rawSmtpMessageUrl\", IsRequired = true, EmitDefaultValue = true)] public string RawSmtpMessageUrl { get; set; } Property Value Type Description string Methods View Source Equals(EmailPreviewUrls) Returns true if EmailPreviewUrls instances are equal Declaration public bool Equals(EmailPreviewUrls input) Parameters Type Name Description EmailPreviewUrls input Instance of EmailPreviewUrls to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailProjection.html": {
    "href": "api/mailslurp.Model.EmailProjection.html",
    "title": "Class EmailProjection | MailSlurp",
    "keywords": "Class EmailProjection A compact representation of a full email. Used in list endpoints to keep response sizes low. Body and attachments are not included. To get all fields of the email use the getEmail method with the email projection's ID. See EmailDto for documentation on projection properties. Inheritance object EmailProjection Implements IEquatable<EmailProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailProjection\")] public class EmailProjection : IEquatable<EmailProjection>, IValidatableObject Constructors View Source EmailProjection() Initializes a new instance of the EmailProjection class. Declaration [JsonConstructor] protected EmailProjection() View Source EmailProjection(DateTime, List<string>, Guid, List<string>, Guid?, List<string>, List<string>, bool, string, bool, string, string, string, Guid, string) Initializes a new instance of the EmailProjection class. Declaration public EmailProjection(DateTime createdAt = default, List<string> attachments = null, Guid inboxId = default, List<string> to = null, Guid? domainId = null, List<string> bcc = null, List<string> cc = null, bool read = false, string bodyExcerpt = null, bool teamAccess = false, string bodyMD5Hash = null, string textExcerpt = null, string subject = null, Guid id = default, string from = null) Parameters Type Name Description DateTime createdAt createdAt (required). List<string> attachments attachments. Guid inboxId inboxId (required). List<string> to to (required). Guid? domainId domainId. List<string> bcc bcc. List<string> cc cc. bool read read (required). string bodyExcerpt bodyExcerpt. bool teamAccess teamAccess (required). string bodyMD5Hash bodyMD5Hash. string textExcerpt textExcerpt. string subject subject. Guid id id (required). string from from. Properties View Source Attachments Gets or Sets Attachments Declaration [DataMember(Name = \"attachments\", EmitDefaultValue = true)] public List<string> Attachments { get; set; } Property Value Type Description List<string> View Source Bcc Gets or Sets Bcc Declaration [DataMember(Name = \"bcc\", EmitDefaultValue = true)] public List<string> Bcc { get; set; } Property Value Type Description List<string> View Source BodyExcerpt Gets or Sets BodyExcerpt Declaration [DataMember(Name = \"bodyExcerpt\", EmitDefaultValue = true)] public string BodyExcerpt { get; set; } Property Value Type Description string View Source BodyMD5Hash Gets or Sets BodyMD5Hash Declaration [DataMember(Name = \"bodyMD5Hash\", EmitDefaultValue = true)] public string BodyMD5Hash { get; set; } Property Value Type Description string View Source Cc Gets or Sets Cc Declaration [DataMember(Name = \"cc\", EmitDefaultValue = true)] public List<string> Cc { get; set; } Property Value Type Description List<string> View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source DomainId Gets or Sets DomainId Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? View Source From Gets or Sets From Declaration [DataMember(Name = \"from\", EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source Read Gets or Sets Read Declaration [DataMember(Name = \"read\", IsRequired = true, EmitDefaultValue = true)] public bool Read { get; set; } Property Value Type Description bool View Source Subject Gets or Sets Subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string View Source TeamAccess Gets or Sets TeamAccess Declaration [DataMember(Name = \"teamAccess\", IsRequired = true, EmitDefaultValue = true)] public bool TeamAccess { get; set; } Property Value Type Description bool View Source TextExcerpt Gets or Sets TextExcerpt Declaration [DataMember(Name = \"textExcerpt\", EmitDefaultValue = true)] public string TextExcerpt { get; set; } Property Value Type Description string View Source To Gets or Sets To Declaration [DataMember(Name = \"to\", IsRequired = true, EmitDefaultValue = true)] public List<string> To { get; set; } Property Value Type Description List<string> Methods View Source Equals(EmailProjection) Returns true if EmailProjection instances are equal Declaration public bool Equals(EmailProjection input) Parameters Type Name Description EmailProjection input Instance of EmailProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailRecipients.html": {
    "href": "api/mailslurp.Model.EmailRecipients.html",
    "title": "Class EmailRecipients | MailSlurp",
    "keywords": "Class EmailRecipients The To,CC,BCC recipients stored in object form with email address and name accessible. Inheritance object EmailRecipients Implements IEquatable<EmailRecipients> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailRecipients\")] public class EmailRecipients : IEquatable<EmailRecipients>, IValidatableObject Constructors View Source EmailRecipients(List<Recipient>, List<Recipient>, List<Recipient>) Initializes a new instance of the EmailRecipients class. Declaration public EmailRecipients(List<Recipient> to = null, List<Recipient> cc = null, List<Recipient> bcc = null) Parameters Type Name Description List<Recipient> to to. List<Recipient> cc cc. List<Recipient> bcc bcc. Properties View Source Bcc Gets or Sets Bcc Declaration [DataMember(Name = \"bcc\", EmitDefaultValue = false)] public List<Recipient> Bcc { get; set; } Property Value Type Description List<Recipient> View Source Cc Gets or Sets Cc Declaration [DataMember(Name = \"cc\", EmitDefaultValue = false)] public List<Recipient> Cc { get; set; } Property Value Type Description List<Recipient> View Source To Gets or Sets To Declaration [DataMember(Name = \"to\", EmitDefaultValue = false)] public List<Recipient> To { get; set; } Property Value Type Description List<Recipient> Methods View Source Equals(EmailRecipients) Returns true if EmailRecipients instances are equal Declaration public bool Equals(EmailRecipients input) Parameters Type Name Description EmailRecipients input Instance of EmailRecipients to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailTextLinesResult.html": {
    "href": "api/mailslurp.Model.EmailTextLinesResult.html",
    "title": "Class EmailTextLinesResult | MailSlurp",
    "keywords": "Class EmailTextLinesResult Parsed text of an email Inheritance object EmailTextLinesResult Implements IEquatable<EmailTextLinesResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailTextLinesResult\")] public class EmailTextLinesResult : IEquatable<EmailTextLinesResult>, IValidatableObject Constructors View Source EmailTextLinesResult() Initializes a new instance of the EmailTextLinesResult class. Declaration [JsonConstructor] protected EmailTextLinesResult() View Source EmailTextLinesResult(List<string>, string) Initializes a new instance of the EmailTextLinesResult class. Declaration public EmailTextLinesResult(List<string> lines = null, string body = null) Parameters Type Name Description List<string> lines lines (required). string body body (required). Properties View Source Body Gets or Sets Body Declaration [DataMember(Name = \"body\", IsRequired = true, EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string View Source Lines Gets or Sets Lines Declaration [DataMember(Name = \"lines\", IsRequired = true, EmitDefaultValue = true)] public List<string> Lines { get; set; } Property Value Type Description List<string> Methods View Source Equals(EmailTextLinesResult) Returns true if EmailTextLinesResult instances are equal Declaration public bool Equals(EmailTextLinesResult input) Parameters Type Name Description EmailTextLinesResult input Instance of EmailTextLinesResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailValidationRequestDto.html": {
    "href": "api/mailslurp.Model.EmailValidationRequestDto.html",
    "title": "Class EmailValidationRequestDto | MailSlurp",
    "keywords": "Class EmailValidationRequestDto Email validation request Inheritance object EmailValidationRequestDto Implements IEquatable<EmailValidationRequestDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailValidationRequestDto\")] public class EmailValidationRequestDto : IEquatable<EmailValidationRequestDto>, IValidatableObject Constructors View Source EmailValidationRequestDto() Initializes a new instance of the EmailValidationRequestDto class. Declaration [JsonConstructor] protected EmailValidationRequestDto() View Source EmailValidationRequestDto(Guid, Guid, string, bool, DateTime, DateTime) Initializes a new instance of the EmailValidationRequestDto class. Declaration public EmailValidationRequestDto(Guid id = default, Guid userId = default, string emailAddress = null, bool isValid = false, DateTime createdAt = default, DateTime updatedAt = default) Parameters Type Name Description Guid id id (required). Guid userId userId (required). string emailAddress emailAddress (required). bool isValid isValid (required). DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EmailAddress Gets or Sets EmailAddress Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source IsValid Gets or Sets IsValid Declaration [DataMember(Name = \"isValid\", IsRequired = true, EmitDefaultValue = true)] public bool IsValid { get; set; } Property Value Type Description bool View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(EmailValidationRequestDto) Returns true if EmailValidationRequestDto instances are equal Declaration public bool Equals(EmailValidationRequestDto input) Parameters Type Name Description EmailValidationRequestDto input Instance of EmailValidationRequestDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmailVerificationResult.html": {
    "href": "api/mailslurp.Model.EmailVerificationResult.html",
    "title": "Class EmailVerificationResult | MailSlurp",
    "keywords": "Class EmailVerificationResult Email verification result. Valid means email address exists according to response from mail server running at the domain and port given. Inheritance object EmailVerificationResult Implements IEquatable<EmailVerificationResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmailVerificationResult\")] public class EmailVerificationResult : IEquatable<EmailVerificationResult>, IValidatableObject Constructors View Source EmailVerificationResult() Initializes a new instance of the EmailVerificationResult class. Declaration [JsonConstructor] protected EmailVerificationResult() View Source EmailVerificationResult(string, int, string, bool, string) Initializes a new instance of the EmailVerificationResult class. Declaration public EmailVerificationResult(string domainName = null, int port = 0, string emailAddress = null, bool isValid = false, string error = null) Parameters Type Name Description string domainName domainName (required). int port port (required). string emailAddress emailAddress (required). bool isValid isValid (required). string error error. Properties View Source DomainName Gets or Sets DomainName Declaration [DataMember(Name = \"domainName\", IsRequired = true, EmitDefaultValue = true)] public string DomainName { get; set; } Property Value Type Description string View Source EmailAddress Gets or Sets EmailAddress Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = true)] public string Error { get; set; } Property Value Type Description string View Source IsValid Gets or Sets IsValid Declaration [DataMember(Name = \"isValid\", IsRequired = true, EmitDefaultValue = true)] public bool IsValid { get; set; } Property Value Type Description bool View Source Port Gets or Sets Port Declaration [DataMember(Name = \"port\", IsRequired = true, EmitDefaultValue = true)] public int Port { get; set; } Property Value Type Description int Methods View Source Equals(EmailVerificationResult) Returns true if EmailVerificationResult instances are equal Declaration public bool Equals(EmailVerificationResult input) Parameters Type Name Description EmailVerificationResult input Instance of EmailVerificationResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmergencyAddress.html": {
    "href": "api/mailslurp.Model.EmergencyAddress.html",
    "title": "Class EmergencyAddress | MailSlurp",
    "keywords": "Class EmergencyAddress EmergencyAddress Inheritance object EmergencyAddress Implements IEquatable<EmergencyAddress> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmergencyAddress\")] public class EmergencyAddress : IEquatable<EmergencyAddress>, IValidatableObject Constructors View Source EmergencyAddress() Initializes a new instance of the EmergencyAddress class. Declaration [JsonConstructor] protected EmergencyAddress() View Source EmergencyAddress(Guid, string, Guid, string, string, string, string, string, string, PhoneCountryEnum, string, DateTime, DateTime) Initializes a new instance of the EmergencyAddress class. Declaration public EmergencyAddress(Guid id = default, string sid = null, Guid userId = default, string displayName = null, string customerName = null, string address1 = null, string city = null, string region = null, string postalCode = null, EmergencyAddress.PhoneCountryEnum phoneCountry = (EmergencyAddress.PhoneCountryEnum)0, string accountSid = null, DateTime createdAt = default, DateTime updatedAt = default) Parameters Type Name Description Guid id id. string sid sid (required). Guid userId userId (required). string displayName displayName (required). string customerName customerName (required). string address1 address1 (required). string city city (required). string region region (required). string postalCode postalCode (required). EmergencyAddress.PhoneCountryEnum phoneCountry phoneCountry (required). string accountSid accountSid (required). DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Properties View Source AccountSid Gets or Sets AccountSid Declaration [DataMember(Name = \"accountSid\", IsRequired = true, EmitDefaultValue = true)] public string AccountSid { get; set; } Property Value Type Description string View Source Address1 Gets or Sets Address1 Declaration [DataMember(Name = \"address1\", IsRequired = true, EmitDefaultValue = true)] public string Address1 { get; set; } Property Value Type Description string View Source City Gets or Sets City Declaration [DataMember(Name = \"city\", IsRequired = true, EmitDefaultValue = true)] public string City { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source CustomerName Gets or Sets CustomerName Declaration [DataMember(Name = \"customerName\", IsRequired = true, EmitDefaultValue = true)] public string CustomerName { get; set; } Property Value Type Description string View Source DisplayName Gets or Sets DisplayName Declaration [DataMember(Name = \"displayName\", IsRequired = true, EmitDefaultValue = true)] public string DisplayName { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public Guid Id { get; set; } Property Value Type Description Guid View Source PhoneCountry Gets or Sets PhoneCountry Declaration [DataMember(Name = \"phoneCountry\", IsRequired = true, EmitDefaultValue = true)] public EmergencyAddress.PhoneCountryEnum PhoneCountry { get; set; } Property Value Type Description EmergencyAddress.PhoneCountryEnum View Source PostalCode Gets or Sets PostalCode Declaration [DataMember(Name = \"postalCode\", IsRequired = true, EmitDefaultValue = true)] public string PostalCode { get; set; } Property Value Type Description string View Source Region Gets or Sets Region Declaration [DataMember(Name = \"region\", IsRequired = true, EmitDefaultValue = true)] public string Region { get; set; } Property Value Type Description string View Source Sid Gets or Sets Sid Declaration [DataMember(Name = \"sid\", IsRequired = true, EmitDefaultValue = true)] public string Sid { get; set; } Property Value Type Description string View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(EmergencyAddress) Returns true if EmergencyAddress instances are equal Declaration public bool Equals(EmergencyAddress input) Parameters Type Name Description EmergencyAddress input Instance of EmergencyAddress to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmergencyAddress.PhoneCountryEnum.html": {
    "href": "api/mailslurp.Model.EmergencyAddress.PhoneCountryEnum.html",
    "title": "Enum EmergencyAddress.PhoneCountryEnum | MailSlurp",
    "keywords": "Enum EmergencyAddress.PhoneCountryEnum Defines PhoneCountry Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmergencyAddress.PhoneCountryEnum Fields Name Description AU Enum AU for value: AU GB Enum GB for value: GB US Enum US for value: US"
  },
  "api/mailslurp.Model.EmergencyAddressDto.html": {
    "href": "api/mailslurp.Model.EmergencyAddressDto.html",
    "title": "Class EmergencyAddressDto | MailSlurp",
    "keywords": "Class EmergencyAddressDto EmergencyAddressDto Inheritance object EmergencyAddressDto Implements IEquatable<EmergencyAddressDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmergencyAddressDto\")] public class EmergencyAddressDto : IEquatable<EmergencyAddressDto>, IValidatableObject Constructors View Source EmergencyAddressDto() Initializes a new instance of the EmergencyAddressDto class. Declaration [JsonConstructor] protected EmergencyAddressDto() View Source EmergencyAddressDto(Guid, string, PhoneCountryEnum) Initializes a new instance of the EmergencyAddressDto class. Declaration public EmergencyAddressDto(Guid id = default, string address1 = null, EmergencyAddressDto.PhoneCountryEnum phoneCountry = (EmergencyAddressDto.PhoneCountryEnum)0) Parameters Type Name Description Guid id id (required). string address1 address1 (required). EmergencyAddressDto.PhoneCountryEnum phoneCountry phoneCountry (required). Properties View Source Address1 Gets or Sets Address1 Declaration [DataMember(Name = \"address1\", IsRequired = true, EmitDefaultValue = true)] public string Address1 { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source PhoneCountry Gets or Sets PhoneCountry Declaration [DataMember(Name = \"phoneCountry\", IsRequired = true, EmitDefaultValue = true)] public EmergencyAddressDto.PhoneCountryEnum PhoneCountry { get; set; } Property Value Type Description EmergencyAddressDto.PhoneCountryEnum Methods View Source Equals(EmergencyAddressDto) Returns true if EmergencyAddressDto instances are equal Declaration public bool Equals(EmergencyAddressDto input) Parameters Type Name Description EmergencyAddressDto input Instance of EmergencyAddressDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.EmergencyAddressDto.PhoneCountryEnum.html": {
    "href": "api/mailslurp.Model.EmergencyAddressDto.PhoneCountryEnum.html",
    "title": "Enum EmergencyAddressDto.PhoneCountryEnum | MailSlurp",
    "keywords": "Enum EmergencyAddressDto.PhoneCountryEnum Defines PhoneCountry Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum EmergencyAddressDto.PhoneCountryEnum Fields Name Description AU Enum AU for value: AU GB Enum GB for value: GB US Enum US for value: US"
  },
  "api/mailslurp.Model.EmptyResponseDto.html": {
    "href": "api/mailslurp.Model.EmptyResponseDto.html",
    "title": "Class EmptyResponseDto | MailSlurp",
    "keywords": "Class EmptyResponseDto EmptyResponseDto Inheritance object EmptyResponseDto Implements IEquatable<EmptyResponseDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"EmptyResponseDto\")] public class EmptyResponseDto : IEquatable<EmptyResponseDto>, IValidatableObject Constructors View Source EmptyResponseDto(string) Initializes a new instance of the EmptyResponseDto class. Declaration public EmptyResponseDto(string message = null) Parameters Type Name Description string message message. Properties View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description string Methods View Source Equals(EmptyResponseDto) Returns true if EmptyResponseDto instances are equal Declaration public bool Equals(EmptyResponseDto input) Parameters Type Name Description EmptyResponseDto input Instance of EmptyResponseDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ExpirationDefaults.html": {
    "href": "api/mailslurp.Model.ExpirationDefaults.html",
    "title": "Class ExpirationDefaults | MailSlurp",
    "keywords": "Class ExpirationDefaults Expiration defaults for your account Inheritance object ExpirationDefaults Implements IEquatable<ExpirationDefaults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ExpirationDefaults\")] public class ExpirationDefaults : IEquatable<ExpirationDefaults>, IValidatableObject Constructors View Source ExpirationDefaults() Initializes a new instance of the ExpirationDefaults class. Declaration [JsonConstructor] protected ExpirationDefaults() View Source ExpirationDefaults(long?, long?, DateTime?, bool, bool) Initializes a new instance of the ExpirationDefaults class. Declaration public ExpirationDefaults(long? defaultExpirationMillis = null, long? maxExpirationMillis = null, DateTime? defaultExpiresAt = null, bool canPermanentInbox = false, bool nextInboxAllowsPermanent = false) Parameters Type Name Description long? defaultExpirationMillis defaultExpirationMillis. long? maxExpirationMillis maxExpirationMillis. DateTime? defaultExpiresAt defaultExpiresAt. bool canPermanentInbox canPermanentInbox (required). bool nextInboxAllowsPermanent nextInboxAllowsPermanent (required). Properties View Source CanPermanentInbox Gets or Sets CanPermanentInbox Declaration [DataMember(Name = \"canPermanentInbox\", IsRequired = true, EmitDefaultValue = true)] public bool CanPermanentInbox { get; set; } Property Value Type Description bool View Source DefaultExpirationMillis Gets or Sets DefaultExpirationMillis Declaration [DataMember(Name = \"defaultExpirationMillis\", EmitDefaultValue = true)] public long? DefaultExpirationMillis { get; set; } Property Value Type Description long? View Source DefaultExpiresAt Gets or Sets DefaultExpiresAt Declaration [DataMember(Name = \"defaultExpiresAt\", EmitDefaultValue = true)] public DateTime? DefaultExpiresAt { get; set; } Property Value Type Description DateTime? View Source MaxExpirationMillis Gets or Sets MaxExpirationMillis Declaration [DataMember(Name = \"maxExpirationMillis\", EmitDefaultValue = true)] public long? MaxExpirationMillis { get; set; } Property Value Type Description long? View Source NextInboxAllowsPermanent Gets or Sets NextInboxAllowsPermanent Declaration [DataMember(Name = \"nextInboxAllowsPermanent\", IsRequired = true, EmitDefaultValue = true)] public bool NextInboxAllowsPermanent { get; set; } Property Value Type Description bool Methods View Source Equals(ExpirationDefaults) Returns true if ExpirationDefaults instances are equal Declaration public bool Equals(ExpirationDefaults input) Parameters Type Name Description ExpirationDefaults input Instance of ExpirationDefaults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ExpiredInboxDto.html": {
    "href": "api/mailslurp.Model.ExpiredInboxDto.html",
    "title": "Class ExpiredInboxDto | MailSlurp",
    "keywords": "Class ExpiredInboxDto Expired inbox Inheritance object ExpiredInboxDto Implements IEquatable<ExpiredInboxDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ExpiredInboxDto\")] public class ExpiredInboxDto : IEquatable<ExpiredInboxDto>, IValidatableObject Constructors View Source ExpiredInboxDto() Initializes a new instance of the ExpiredInboxDto class. Declaration [JsonConstructor] protected ExpiredInboxDto() View Source ExpiredInboxDto(Guid, Guid, string) Initializes a new instance of the ExpiredInboxDto class. Declaration public ExpiredInboxDto(Guid id = default, Guid inboxId = default, string emailAddress = null) Parameters Type Name Description Guid id id (required). Guid inboxId inboxId (required). string emailAddress emailAddress (required). Properties View Source EmailAddress Gets or Sets EmailAddress Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid Methods View Source Equals(ExpiredInboxDto) Returns true if ExpiredInboxDto instances are equal Declaration public bool Equals(ExpiredInboxDto input) Parameters Type Name Description ExpiredInboxDto input Instance of ExpiredInboxDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ExpiredInboxRecordProjection.html": {
    "href": "api/mailslurp.Model.ExpiredInboxRecordProjection.html",
    "title": "Class ExpiredInboxRecordProjection | MailSlurp",
    "keywords": "Class ExpiredInboxRecordProjection Record of inbox expiration Inheritance object ExpiredInboxRecordProjection Implements IEquatable<ExpiredInboxRecordProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ExpiredInboxRecordProjection\")] public class ExpiredInboxRecordProjection : IEquatable<ExpiredInboxRecordProjection>, IValidatableObject Constructors View Source ExpiredInboxRecordProjection() Initializes a new instance of the ExpiredInboxRecordProjection class. Declaration [JsonConstructor] protected ExpiredInboxRecordProjection() View Source ExpiredInboxRecordProjection(DateTime, string, Guid, Guid) Initializes a new instance of the ExpiredInboxRecordProjection class. Declaration public ExpiredInboxRecordProjection(DateTime createdAt = default, string emailAddress = null, Guid userId = default, Guid id = default) Parameters Type Name Description DateTime createdAt createdAt (required). string emailAddress emailAddress (required). Guid userId userId (required). Guid id id (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EmailAddress Gets or Sets EmailAddress Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(ExpiredInboxRecordProjection) Returns true if ExpiredInboxRecordProjection instances are equal Declaration public bool Equals(ExpiredInboxRecordProjection input) Parameters Type Name Description ExpiredInboxRecordProjection input Instance of ExpiredInboxRecordProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ExportLink.html": {
    "href": "api/mailslurp.Model.ExportLink.html",
    "title": "Class ExportLink | MailSlurp",
    "keywords": "Class ExportLink Export download link Inheritance object ExportLink Implements IEquatable<ExportLink> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ExportLink\")] public class ExportLink : IEquatable<ExportLink>, IValidatableObject Constructors View Source ExportLink() Initializes a new instance of the ExportLink class. Declaration [JsonConstructor] protected ExportLink() View Source ExportLink(string) Initializes a new instance of the ExportLink class. Declaration public ExportLink(string downloadLink = null) Parameters Type Name Description string downloadLink downloadLink (required). Properties View Source DownloadLink Gets or Sets DownloadLink Declaration [DataMember(Name = \"downloadLink\", IsRequired = true, EmitDefaultValue = true)] public string DownloadLink { get; set; } Property Value Type Description string Methods View Source Equals(ExportLink) Returns true if ExportLink instances are equal Declaration public bool Equals(ExportLink input) Parameters Type Name Description ExportLink input Instance of ExportLink to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ExportOptions.html": {
    "href": "api/mailslurp.Model.ExportOptions.html",
    "title": "Class ExportOptions | MailSlurp",
    "keywords": "Class ExportOptions Options for exporting user data Inheritance object ExportOptions Implements IEquatable<ExportOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ExportOptions\")] public class ExportOptions : IEquatable<ExportOptions>, IValidatableObject Constructors View Source ExportOptions() Initializes a new instance of the ExportOptions class. Declaration [JsonConstructor] protected ExportOptions() View Source ExportOptions(OutputFormatEnum, bool?, DateTime?, DateTime?, string, string) Initializes a new instance of the ExportOptions class. Declaration public ExportOptions(ExportOptions.OutputFormatEnum outputFormat = (ExportOptions.OutputFormatEnum)0, bool? excludePreviouslyExported = null, DateTime? createdEarliestTime = null, DateTime? createdOldestTime = null, string filter = null, string listSeparatorToken = null) Parameters Type Name Description ExportOptions.OutputFormatEnum outputFormat outputFormat (required). bool? excludePreviouslyExported excludePreviouslyExported. DateTime? createdEarliestTime createdEarliestTime. DateTime? createdOldestTime createdOldestTime. string filter filter. string listSeparatorToken listSeparatorToken. Properties View Source CreatedEarliestTime Gets or Sets CreatedEarliestTime Declaration [DataMember(Name = \"createdEarliestTime\", EmitDefaultValue = true)] public DateTime? CreatedEarliestTime { get; set; } Property Value Type Description DateTime? View Source CreatedOldestTime Gets or Sets CreatedOldestTime Declaration [DataMember(Name = \"createdOldestTime\", EmitDefaultValue = true)] public DateTime? CreatedOldestTime { get; set; } Property Value Type Description DateTime? View Source ExcludePreviouslyExported Gets or Sets ExcludePreviouslyExported Declaration [DataMember(Name = \"excludePreviouslyExported\", EmitDefaultValue = true)] public bool? ExcludePreviouslyExported { get; set; } Property Value Type Description bool? View Source Filter Gets or Sets Filter Declaration [DataMember(Name = \"filter\", EmitDefaultValue = true)] public string Filter { get; set; } Property Value Type Description string View Source ListSeparatorToken Gets or Sets ListSeparatorToken Declaration [DataMember(Name = \"listSeparatorToken\", EmitDefaultValue = true)] public string ListSeparatorToken { get; set; } Property Value Type Description string View Source OutputFormat Gets or Sets OutputFormat Declaration [DataMember(Name = \"outputFormat\", IsRequired = true, EmitDefaultValue = true)] public ExportOptions.OutputFormatEnum OutputFormat { get; set; } Property Value Type Description ExportOptions.OutputFormatEnum Methods View Source Equals(ExportOptions) Returns true if ExportOptions instances are equal Declaration public bool Equals(ExportOptions input) Parameters Type Name Description ExportOptions input Instance of ExportOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ExportOptions.OutputFormatEnum.html": {
    "href": "api/mailslurp.Model.ExportOptions.OutputFormatEnum.html",
    "title": "Enum ExportOptions.OutputFormatEnum | MailSlurp",
    "keywords": "Enum ExportOptions.OutputFormatEnum Defines OutputFormat Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ExportOptions.OutputFormatEnum Fields Name Description DEFAULT Enum DEFAULT for value: CSV_DEFAULT EXCEL Enum EXCEL for value: CSV_EXCEL"
  },
  "api/mailslurp.Model.FilterBouncedRecipientsOptions.html": {
    "href": "api/mailslurp.Model.FilterBouncedRecipientsOptions.html",
    "title": "Class FilterBouncedRecipientsOptions | MailSlurp",
    "keywords": "Class FilterBouncedRecipientsOptions Options for filtering bounced email recipients Inheritance object FilterBouncedRecipientsOptions Implements IEquatable<FilterBouncedRecipientsOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"FilterBouncedRecipientsOptions\")] public class FilterBouncedRecipientsOptions : IEquatable<FilterBouncedRecipientsOptions>, IValidatableObject Constructors View Source FilterBouncedRecipientsOptions() Initializes a new instance of the FilterBouncedRecipientsOptions class. Declaration [JsonConstructor] protected FilterBouncedRecipientsOptions() View Source FilterBouncedRecipientsOptions(List<string>) Initializes a new instance of the FilterBouncedRecipientsOptions class. Declaration public FilterBouncedRecipientsOptions(List<string> emailRecipients = null) Parameters Type Name Description List<string> emailRecipients emailRecipients (required). Properties View Source EmailRecipients Gets or Sets EmailRecipients Declaration [DataMember(Name = \"emailRecipients\", IsRequired = true, EmitDefaultValue = true)] public List<string> EmailRecipients { get; set; } Property Value Type Description List<string> Methods View Source Equals(FilterBouncedRecipientsOptions) Returns true if FilterBouncedRecipientsOptions instances are equal Declaration public bool Equals(FilterBouncedRecipientsOptions input) Parameters Type Name Description FilterBouncedRecipientsOptions input Instance of FilterBouncedRecipientsOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.FilterBouncedRecipientsResult.html": {
    "href": "api/mailslurp.Model.FilterBouncedRecipientsResult.html",
    "title": "Class FilterBouncedRecipientsResult | MailSlurp",
    "keywords": "Class FilterBouncedRecipientsResult Remaining recipients that were filtered to remove bounced recipients Inheritance object FilterBouncedRecipientsResult Implements IEquatable<FilterBouncedRecipientsResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"FilterBouncedRecipientsResult\")] public class FilterBouncedRecipientsResult : IEquatable<FilterBouncedRecipientsResult>, IValidatableObject Constructors View Source FilterBouncedRecipientsResult() Initializes a new instance of the FilterBouncedRecipientsResult class. Declaration [JsonConstructor] protected FilterBouncedRecipientsResult() View Source FilterBouncedRecipientsResult(List<string>) Initializes a new instance of the FilterBouncedRecipientsResult class. Declaration public FilterBouncedRecipientsResult(List<string> filteredRecipients = null) Parameters Type Name Description List<string> filteredRecipients filteredRecipients (required). Properties View Source FilteredRecipients Gets or Sets FilteredRecipients Declaration [DataMember(Name = \"filteredRecipients\", IsRequired = true, EmitDefaultValue = true)] public List<string> FilteredRecipients { get; set; } Property Value Type Description List<string> Methods View Source Equals(FilterBouncedRecipientsResult) Returns true if FilterBouncedRecipientsResult instances are equal Declaration public bool Equals(FilterBouncedRecipientsResult input) Parameters Type Name Description FilterBouncedRecipientsResult input Instance of FilterBouncedRecipientsResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.FlushExpiredInboxesResult.html": {
    "href": "api/mailslurp.Model.FlushExpiredInboxesResult.html",
    "title": "Class FlushExpiredInboxesResult | MailSlurp",
    "keywords": "Class FlushExpiredInboxesResult Result from calling expire on any inboxes that have applicable expiration dates given current time. Inheritance object FlushExpiredInboxesResult Implements IEquatable<FlushExpiredInboxesResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"FlushExpiredInboxesResult\")] public class FlushExpiredInboxesResult : IEquatable<FlushExpiredInboxesResult>, IValidatableObject Constructors View Source FlushExpiredInboxesResult() Initializes a new instance of the FlushExpiredInboxesResult class. Declaration [JsonConstructor] protected FlushExpiredInboxesResult() View Source FlushExpiredInboxesResult(List<Guid>, DateTime) Initializes a new instance of the FlushExpiredInboxesResult class. Declaration public FlushExpiredInboxesResult(List<Guid> inboxIds = null, DateTime expireBefore = default) Parameters Type Name Description List<Guid> inboxIds Inbox IDs affected by expiration (required). DateTime expireBefore DateTime to filter inboxes so that those expiring before this time are expired (required). Properties View Source ExpireBefore DateTime to filter inboxes so that those expiring before this time are expired Declaration [DataMember(Name = \"expireBefore\", IsRequired = true, EmitDefaultValue = true)] public DateTime ExpireBefore { get; set; } Property Value Type Description DateTime DateTime to filter inboxes so that those expiring before this time are expired View Source InboxIds Inbox IDs affected by expiration Declaration [DataMember(Name = \"inboxIds\", IsRequired = true, EmitDefaultValue = true)] public List<Guid> InboxIds { get; set; } Property Value Type Description List<Guid> Inbox IDs affected by expiration Methods View Source Equals(FlushExpiredInboxesResult) Returns true if FlushExpiredInboxesResult instances are equal Declaration public bool Equals(FlushExpiredInboxesResult input) Parameters Type Name Description FlushExpiredInboxesResult input Instance of FlushExpiredInboxesResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ForwardEmailOptions.html": {
    "href": "api/mailslurp.Model.ForwardEmailOptions.html",
    "title": "Class ForwardEmailOptions | MailSlurp",
    "keywords": "Class ForwardEmailOptions Options for forwarding an email Inheritance object ForwardEmailOptions Implements IEquatable<ForwardEmailOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ForwardEmailOptions\")] public class ForwardEmailOptions : IEquatable<ForwardEmailOptions>, IValidatableObject Constructors View Source ForwardEmailOptions() Initializes a new instance of the ForwardEmailOptions class. Declaration [JsonConstructor] protected ForwardEmailOptions() View Source ForwardEmailOptions(List<string>, string, List<string>, List<string>, string, bool?, bool?) Initializes a new instance of the ForwardEmailOptions class. Declaration public ForwardEmailOptions(List<string> to = null, string subject = null, List<string> cc = null, List<string> bcc = null, string from = null, bool? useInboxName = null, bool? filterBouncedRecipients = null) Parameters Type Name Description List<string> to To recipients for forwarded email (required). string subject Subject for forwarded email. List<string> cc Optional cc recipients. List<string> bcc Optional bcc recipients. string from Optional from override. bool? useInboxName Optionally use inbox name as display name for sender email address. bool? filterBouncedRecipients Filter recipients to remove any bounced recipients from to, bcc, and cc before sending. Properties View Source Bcc Optional bcc recipients Declaration [DataMember(Name = \"bcc\", EmitDefaultValue = true)] public List<string> Bcc { get; set; } Property Value Type Description List<string> Optional bcc recipients View Source Cc Optional cc recipients Declaration [DataMember(Name = \"cc\", EmitDefaultValue = true)] public List<string> Cc { get; set; } Property Value Type Description List<string> Optional cc recipients View Source FilterBouncedRecipients Filter recipients to remove any bounced recipients from to, bcc, and cc before sending Declaration [DataMember(Name = \"filterBouncedRecipients\", EmitDefaultValue = true)] public bool? FilterBouncedRecipients { get; set; } Property Value Type Description bool? Filter recipients to remove any bounced recipients from to, bcc, and cc before sending View Source From Optional from override Declaration [DataMember(Name = \"from\", EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string Optional from override View Source Subject Subject for forwarded email Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string Subject for forwarded email View Source To To recipients for forwarded email Declaration [DataMember(Name = \"to\", IsRequired = true, EmitDefaultValue = true)] public List<string> To { get; set; } Property Value Type Description List<string> To recipients for forwarded email View Source UseInboxName Optionally use inbox name as display name for sender email address Declaration [DataMember(Name = \"useInboxName\", EmitDefaultValue = true)] public bool? UseInboxName { get; set; } Property Value Type Description bool? Optionally use inbox name as display name for sender email address Methods View Source Equals(ForwardEmailOptions) Returns true if ForwardEmailOptions instances are equal Declaration public bool Equals(ForwardEmailOptions input) Parameters Type Name Description ForwardEmailOptions input Instance of ForwardEmailOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.GenerateBimiRecordOptions.html": {
    "href": "api/mailslurp.Model.GenerateBimiRecordOptions.html",
    "title": "Class GenerateBimiRecordOptions | MailSlurp",
    "keywords": "Class GenerateBimiRecordOptions GenerateBimiRecordOptions Inheritance object GenerateBimiRecordOptions Implements IEquatable<GenerateBimiRecordOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"GenerateBimiRecordOptions\")] public class GenerateBimiRecordOptions : IEquatable<GenerateBimiRecordOptions>, IValidatableObject Constructors View Source GenerateBimiRecordOptions() Initializes a new instance of the GenerateBimiRecordOptions class. Declaration [JsonConstructor] protected GenerateBimiRecordOptions() View Source GenerateBimiRecordOptions(string, VersionEnum, string, string) Initializes a new instance of the GenerateBimiRecordOptions class. Declaration public GenerateBimiRecordOptions(string domain = null, GenerateBimiRecordOptions.VersionEnum version = (GenerateBimiRecordOptions.VersionEnum)0, string logoUrl = null, string vmcUrl = null) Parameters Type Name Description string domain domain (required). GenerateBimiRecordOptions.VersionEnum version version (required). string logoUrl logoUrl (required). string vmcUrl vmcUrl. Properties View Source _Version Gets or Sets _Version Declaration [DataMember(Name = \"version\", IsRequired = true, EmitDefaultValue = true)] public GenerateBimiRecordOptions.VersionEnum _Version { get; set; } Property Value Type Description GenerateBimiRecordOptions.VersionEnum View Source Domain Gets or Sets Domain Declaration [DataMember(Name = \"domain\", IsRequired = true, EmitDefaultValue = true)] public string Domain { get; set; } Property Value Type Description string View Source LogoUrl Gets or Sets LogoUrl Declaration [DataMember(Name = \"logoUrl\", IsRequired = true, EmitDefaultValue = true)] public string LogoUrl { get; set; } Property Value Type Description string View Source VmcUrl Gets or Sets VmcUrl Declaration [DataMember(Name = \"vmcUrl\", EmitDefaultValue = false)] public string VmcUrl { get; set; } Property Value Type Description string Methods View Source Equals(GenerateBimiRecordOptions) Returns true if GenerateBimiRecordOptions instances are equal Declaration public bool Equals(GenerateBimiRecordOptions input) Parameters Type Name Description GenerateBimiRecordOptions input Instance of GenerateBimiRecordOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.GenerateBimiRecordOptions.VersionEnum.html": {
    "href": "api/mailslurp.Model.GenerateBimiRecordOptions.VersionEnum.html",
    "title": "Enum GenerateBimiRecordOptions.VersionEnum | MailSlurp",
    "keywords": "Enum GenerateBimiRecordOptions.VersionEnum Defines _Version Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateBimiRecordOptions.VersionEnum Fields Name Description BIMI1 Enum BIMI1 for value: BIMI1"
  },
  "api/mailslurp.Model.GenerateBimiRecordResults.html": {
    "href": "api/mailslurp.Model.GenerateBimiRecordResults.html",
    "title": "Class GenerateBimiRecordResults | MailSlurp",
    "keywords": "Class GenerateBimiRecordResults GenerateBimiRecordResults Inheritance object GenerateBimiRecordResults Implements IEquatable<GenerateBimiRecordResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"GenerateBimiRecordResults\")] public class GenerateBimiRecordResults : IEquatable<GenerateBimiRecordResults>, IValidatableObject Constructors View Source GenerateBimiRecordResults() Initializes a new instance of the GenerateBimiRecordResults class. Declaration [JsonConstructor] protected GenerateBimiRecordResults() View Source GenerateBimiRecordResults(string, TypeEnum, int, string) Initializes a new instance of the GenerateBimiRecordResults class. Declaration public GenerateBimiRecordResults(string name = null, GenerateBimiRecordResults.TypeEnum type = (GenerateBimiRecordResults.TypeEnum)0, int ttl = 0, string value = null) Parameters Type Name Description string name name (required). GenerateBimiRecordResults.TypeEnum type Domain Name Server Record Types (required). int ttl ttl (required). string value value (required). Properties View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source Ttl Gets or Sets Ttl Declaration [DataMember(Name = \"ttl\", IsRequired = true, EmitDefaultValue = true)] public int Ttl { get; set; } Property Value Type Description int View Source Type Domain Name Server Record Types Declaration [DataMember(Name = \"type\", IsRequired = true, EmitDefaultValue = true)] public GenerateBimiRecordResults.TypeEnum Type { get; set; } Property Value Type Description GenerateBimiRecordResults.TypeEnum Domain Name Server Record Types View Source Value Gets or Sets Value Declaration [DataMember(Name = \"value\", IsRequired = true, EmitDefaultValue = true)] public string Value { get; set; } Property Value Type Description string Methods View Source Equals(GenerateBimiRecordResults) Returns true if GenerateBimiRecordResults instances are equal Declaration public bool Equals(GenerateBimiRecordResults input) Parameters Type Name Description GenerateBimiRecordResults input Instance of GenerateBimiRecordResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.GenerateBimiRecordResults.TypeEnum.html": {
    "href": "api/mailslurp.Model.GenerateBimiRecordResults.TypeEnum.html",
    "title": "Enum GenerateBimiRecordResults.TypeEnum | MailSlurp",
    "keywords": "Enum GenerateBimiRecordResults.TypeEnum Domain Name Server Record Types Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateBimiRecordResults.TypeEnum Fields Name Description A Enum A for value: A A6 Enum A6 for value: A6 AAAA Enum AAAA for value: AAAA AFSDB Enum AFSDB for value: AFSDB AMTRELAY Enum AMTRELAY for value: AMTRELAY ANY Enum ANY for value: ANY APL Enum APL for value: APL ATMA Enum ATMA for value: ATMA AVC Enum AVC for value: AVC AXFR Enum AXFR for value: AXFR CAA Enum CAA for value: CAA CDNSKEY Enum CDNSKEY for value: CDNSKEY CDS Enum CDS for value: CDS CERT Enum CERT for value: CERT CNAME Enum CNAME for value: CNAME CSYNC Enum CSYNC for value: CSYNC DHCID Enum DHCID for value: DHCID DLV Enum DLV for value: DLV DNAME Enum DNAME for value: DNAME DNSKEY Enum DNSKEY for value: DNSKEY DOA Enum DOA for value: DOA DS Enum DS for value: DS EID Enum EID for value: EID EUI48 Enum EUI48 for value: EUI48 EUI64 Enum EUI64 for value: EUI64 GID Enum GID for value: GID GPOS Enum GPOS for value: GPOS HINFO Enum HINFO for value: HINFO HIP Enum HIP for value: HIP HTTPS Enum HTTPS for value: HTTPS IPSECKEY Enum IPSECKEY for value: IPSECKEY ISDN Enum ISDN for value: ISDN IXFR Enum IXFR for value: IXFR KEY Enum KEY for value: KEY KX Enum KX for value: KX L32 Enum L32 for value: L32 L64 Enum L64 for value: L64 LOC Enum LOC for value: LOC LP Enum LP for value: LP MAILA Enum MAILA for value: MAILA MAILB Enum MAILB for value: MAILB MB Enum MB for value: MB MD Enum MD for value: MD MF Enum MF for value: MF MG Enum MG for value: MG MINFO Enum MINFO for value: MINFO MR Enum MR for value: MR MX Enum MX for value: MX NAPTR Enum NAPTR for value: NAPTR NID Enum NID for value: NID NIMLOC Enum NIMLOC for value: NIMLOC NINFO Enum NINFO for value: NINFO NS Enum NS for value: NS NSAP Enum NSAP for value: NSAP NSAPPTR Enum NSAPPTR for value: NSAP_PTR NSEC Enum NSEC for value: NSEC NSEC3 Enum NSEC3 for value: NSEC3 NSEC3PARAM Enum NSEC3PARAM for value: NSEC3PARAM NULL Enum NULL for value: NULL NXT Enum NXT for value: NXT OPENPGPKEY Enum OPENPGPKEY for value: OPENPGPKEY OPT Enum OPT for value: OPT PTR Enum PTR for value: PTR PX Enum PX for value: PX RKEY Enum RKEY for value: RKEY RP Enum RP for value: RP RRSIG Enum RRSIG for value: RRSIG RT Enum RT for value: RT SIG Enum SIG for value: SIG SINK Enum SINK for value: SINK SMIMEA Enum SMIMEA for value: SMIMEA SOA Enum SOA for value: SOA SPF Enum SPF for value: SPF SRV Enum SRV for value: SRV SSHFP Enum SSHFP for value: SSHFP SVCB Enum SVCB for value: SVCB TA Enum TA for value: TA TALINK Enum TALINK for value: TALINK TKEY Enum TKEY for value: TKEY TLSA Enum TLSA for value: TLSA TSIG Enum TSIG for value: TSIG TXT Enum TXT for value: TXT UID Enum UID for value: UID UINFO Enum UINFO for value: UINFO UNSPEC Enum UNSPEC for value: UNSPEC URI Enum URI for value: URI WKS Enum WKS for value: WKS X25 Enum X25 for value: X25 ZONEMD Enum ZONEMD for value: ZONEMD"
  },
  "api/mailslurp.Model.GenerateDmarcRecordOptions.AdkimEnum.html": {
    "href": "api/mailslurp.Model.GenerateDmarcRecordOptions.AdkimEnum.html",
    "title": "Enum GenerateDmarcRecordOptions.AdkimEnum | MailSlurp",
    "keywords": "Enum GenerateDmarcRecordOptions.AdkimEnum Defines Adkim Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateDmarcRecordOptions.AdkimEnum Fields Name Description RELAXED Enum RELAXED for value: RELAXED STRICT Enum STRICT for value: STRICT"
  },
  "api/mailslurp.Model.GenerateDmarcRecordOptions.AspfEnum.html": {
    "href": "api/mailslurp.Model.GenerateDmarcRecordOptions.AspfEnum.html",
    "title": "Enum GenerateDmarcRecordOptions.AspfEnum | MailSlurp",
    "keywords": "Enum GenerateDmarcRecordOptions.AspfEnum Defines Aspf Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateDmarcRecordOptions.AspfEnum Fields Name Description RELAXED Enum RELAXED for value: RELAXED STRICT Enum STRICT for value: STRICT"
  },
  "api/mailslurp.Model.GenerateDmarcRecordOptions.FoEnum.html": {
    "href": "api/mailslurp.Model.GenerateDmarcRecordOptions.FoEnum.html",
    "title": "Enum GenerateDmarcRecordOptions.FoEnum | MailSlurp",
    "keywords": "Enum GenerateDmarcRecordOptions.FoEnum Defines Fo Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateDmarcRecordOptions.FoEnum Fields Name Description _0 Enum _0 for value: FO_0 _1 Enum _1 for value: FO_1 D Enum D for value: FO_D S Enum S for value: FO_S"
  },
  "api/mailslurp.Model.GenerateDmarcRecordOptions.html": {
    "href": "api/mailslurp.Model.GenerateDmarcRecordOptions.html",
    "title": "Class GenerateDmarcRecordOptions | MailSlurp",
    "keywords": "Class GenerateDmarcRecordOptions GenerateDmarcRecordOptions Inheritance object GenerateDmarcRecordOptions Implements IEquatable<GenerateDmarcRecordOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"GenerateDmarcRecordOptions\")] public class GenerateDmarcRecordOptions : IEquatable<GenerateDmarcRecordOptions>, IValidatableObject Constructors View Source GenerateDmarcRecordOptions() Initializes a new instance of the GenerateDmarcRecordOptions class. Declaration [JsonConstructor] protected GenerateDmarcRecordOptions() View Source GenerateDmarcRecordOptions(string, VersionEnum, PolicyEnum, SubdomainPolicyEnum?, List<string>, List<string>, int, ReportFormatEnum?, int, AdkimEnum?, AspfEnum?, FoEnum?) Initializes a new instance of the GenerateDmarcRecordOptions class. Declaration public GenerateDmarcRecordOptions(string domain = null, GenerateDmarcRecordOptions.VersionEnum version = (GenerateDmarcRecordOptions.VersionEnum)0, GenerateDmarcRecordOptions.PolicyEnum policy = (GenerateDmarcRecordOptions.PolicyEnum)0, GenerateDmarcRecordOptions.SubdomainPolicyEnum? subdomainPolicy = null, List<string> reportEmailAddress = null, List<string> forensicEmailAddress = null, int percentage = 0, GenerateDmarcRecordOptions.ReportFormatEnum? reportFormat = null, int secondsBetweenReports = 0, GenerateDmarcRecordOptions.AdkimEnum? adkim = null, GenerateDmarcRecordOptions.AspfEnum? aspf = null, GenerateDmarcRecordOptions.FoEnum? fo = null) Parameters Type Name Description string domain domain (required). GenerateDmarcRecordOptions.VersionEnum version version (required). GenerateDmarcRecordOptions.PolicyEnum policy policy (required). GenerateDmarcRecordOptions.SubdomainPolicyEnum? subdomainPolicy subdomainPolicy. List<string> reportEmailAddress reportEmailAddress. List<string> forensicEmailAddress forensicEmailAddress. int percentage percentage. GenerateDmarcRecordOptions.ReportFormatEnum? reportFormat reportFormat. int secondsBetweenReports secondsBetweenReports. GenerateDmarcRecordOptions.AdkimEnum? adkim adkim. GenerateDmarcRecordOptions.AspfEnum? aspf aspf. GenerateDmarcRecordOptions.FoEnum? fo fo. Properties View Source _Version Gets or Sets _Version Declaration [DataMember(Name = \"version\", IsRequired = true, EmitDefaultValue = true)] public GenerateDmarcRecordOptions.VersionEnum _Version { get; set; } Property Value Type Description GenerateDmarcRecordOptions.VersionEnum View Source Adkim Gets or Sets Adkim Declaration [DataMember(Name = \"adkim\", EmitDefaultValue = false)] public GenerateDmarcRecordOptions.AdkimEnum? Adkim { get; set; } Property Value Type Description GenerateDmarcRecordOptions.AdkimEnum? View Source Aspf Gets or Sets Aspf Declaration [DataMember(Name = \"aspf\", EmitDefaultValue = false)] public GenerateDmarcRecordOptions.AspfEnum? Aspf { get; set; } Property Value Type Description GenerateDmarcRecordOptions.AspfEnum? View Source Domain Gets or Sets Domain Declaration [DataMember(Name = \"domain\", IsRequired = true, EmitDefaultValue = true)] public string Domain { get; set; } Property Value Type Description string View Source Fo Gets or Sets Fo Declaration [DataMember(Name = \"fo\", EmitDefaultValue = false)] public GenerateDmarcRecordOptions.FoEnum? Fo { get; set; } Property Value Type Description GenerateDmarcRecordOptions.FoEnum? View Source ForensicEmailAddress Gets or Sets ForensicEmailAddress Declaration [DataMember(Name = \"forensicEmailAddress\", EmitDefaultValue = false)] public List<string> ForensicEmailAddress { get; set; } Property Value Type Description List<string> View Source Percentage Gets or Sets Percentage Declaration [DataMember(Name = \"percentage\", EmitDefaultValue = false)] public int Percentage { get; set; } Property Value Type Description int View Source Policy Gets or Sets Policy Declaration [DataMember(Name = \"policy\", IsRequired = true, EmitDefaultValue = true)] public GenerateDmarcRecordOptions.PolicyEnum Policy { get; set; } Property Value Type Description GenerateDmarcRecordOptions.PolicyEnum View Source ReportEmailAddress Gets or Sets ReportEmailAddress Declaration [DataMember(Name = \"reportEmailAddress\", EmitDefaultValue = false)] public List<string> ReportEmailAddress { get; set; } Property Value Type Description List<string> View Source ReportFormat Gets or Sets ReportFormat Declaration [DataMember(Name = \"reportFormat\", EmitDefaultValue = false)] public GenerateDmarcRecordOptions.ReportFormatEnum? ReportFormat { get; set; } Property Value Type Description GenerateDmarcRecordOptions.ReportFormatEnum? View Source SecondsBetweenReports Gets or Sets SecondsBetweenReports Declaration [DataMember(Name = \"secondsBetweenReports\", EmitDefaultValue = false)] public int SecondsBetweenReports { get; set; } Property Value Type Description int View Source SubdomainPolicy Gets or Sets SubdomainPolicy Declaration [DataMember(Name = \"subdomainPolicy\", EmitDefaultValue = false)] public GenerateDmarcRecordOptions.SubdomainPolicyEnum? SubdomainPolicy { get; set; } Property Value Type Description GenerateDmarcRecordOptions.SubdomainPolicyEnum? Methods View Source Equals(GenerateDmarcRecordOptions) Returns true if GenerateDmarcRecordOptions instances are equal Declaration public bool Equals(GenerateDmarcRecordOptions input) Parameters Type Name Description GenerateDmarcRecordOptions input Instance of GenerateDmarcRecordOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.GenerateDmarcRecordOptions.PolicyEnum.html": {
    "href": "api/mailslurp.Model.GenerateDmarcRecordOptions.PolicyEnum.html",
    "title": "Enum GenerateDmarcRecordOptions.PolicyEnum | MailSlurp",
    "keywords": "Enum GenerateDmarcRecordOptions.PolicyEnum Defines Policy Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateDmarcRecordOptions.PolicyEnum Fields Name Description NONE Enum NONE for value: NONE QUARANTINE Enum QUARANTINE for value: QUARANTINE REJECT Enum REJECT for value: REJECT"
  },
  "api/mailslurp.Model.GenerateDmarcRecordOptions.ReportFormatEnum.html": {
    "href": "api/mailslurp.Model.GenerateDmarcRecordOptions.ReportFormatEnum.html",
    "title": "Enum GenerateDmarcRecordOptions.ReportFormatEnum | MailSlurp",
    "keywords": "Enum GenerateDmarcRecordOptions.ReportFormatEnum Defines ReportFormat Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateDmarcRecordOptions.ReportFormatEnum Fields Name Description AFRF Enum AFRF for value: AFRF"
  },
  "api/mailslurp.Model.GenerateDmarcRecordOptions.SubdomainPolicyEnum.html": {
    "href": "api/mailslurp.Model.GenerateDmarcRecordOptions.SubdomainPolicyEnum.html",
    "title": "Enum GenerateDmarcRecordOptions.SubdomainPolicyEnum | MailSlurp",
    "keywords": "Enum GenerateDmarcRecordOptions.SubdomainPolicyEnum Defines SubdomainPolicy Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateDmarcRecordOptions.SubdomainPolicyEnum Fields Name Description NONE Enum NONE for value: NONE QUARANTINE Enum QUARANTINE for value: QUARANTINE REJECT Enum REJECT for value: REJECT"
  },
  "api/mailslurp.Model.GenerateDmarcRecordOptions.VersionEnum.html": {
    "href": "api/mailslurp.Model.GenerateDmarcRecordOptions.VersionEnum.html",
    "title": "Enum GenerateDmarcRecordOptions.VersionEnum | MailSlurp",
    "keywords": "Enum GenerateDmarcRecordOptions.VersionEnum Defines _Version Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateDmarcRecordOptions.VersionEnum Fields Name Description DMARC1 Enum DMARC1 for value: DMARC1"
  },
  "api/mailslurp.Model.GenerateDmarcRecordResults.html": {
    "href": "api/mailslurp.Model.GenerateDmarcRecordResults.html",
    "title": "Class GenerateDmarcRecordResults | MailSlurp",
    "keywords": "Class GenerateDmarcRecordResults GenerateDmarcRecordResults Inheritance object GenerateDmarcRecordResults Implements IEquatable<GenerateDmarcRecordResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"GenerateDmarcRecordResults\")] public class GenerateDmarcRecordResults : IEquatable<GenerateDmarcRecordResults>, IValidatableObject Constructors View Source GenerateDmarcRecordResults() Initializes a new instance of the GenerateDmarcRecordResults class. Declaration [JsonConstructor] protected GenerateDmarcRecordResults() View Source GenerateDmarcRecordResults(string, TypeEnum, int, string) Initializes a new instance of the GenerateDmarcRecordResults class. Declaration public GenerateDmarcRecordResults(string name = null, GenerateDmarcRecordResults.TypeEnum type = (GenerateDmarcRecordResults.TypeEnum)0, int ttl = 0, string value = null) Parameters Type Name Description string name name (required). GenerateDmarcRecordResults.TypeEnum type Domain Name Server Record Types (required). int ttl ttl (required). string value value (required). Properties View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source Ttl Gets or Sets Ttl Declaration [DataMember(Name = \"ttl\", IsRequired = true, EmitDefaultValue = true)] public int Ttl { get; set; } Property Value Type Description int View Source Type Domain Name Server Record Types Declaration [DataMember(Name = \"type\", IsRequired = true, EmitDefaultValue = true)] public GenerateDmarcRecordResults.TypeEnum Type { get; set; } Property Value Type Description GenerateDmarcRecordResults.TypeEnum Domain Name Server Record Types View Source Value Gets or Sets Value Declaration [DataMember(Name = \"value\", IsRequired = true, EmitDefaultValue = true)] public string Value { get; set; } Property Value Type Description string Methods View Source Equals(GenerateDmarcRecordResults) Returns true if GenerateDmarcRecordResults instances are equal Declaration public bool Equals(GenerateDmarcRecordResults input) Parameters Type Name Description GenerateDmarcRecordResults input Instance of GenerateDmarcRecordResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.GenerateDmarcRecordResults.TypeEnum.html": {
    "href": "api/mailslurp.Model.GenerateDmarcRecordResults.TypeEnum.html",
    "title": "Enum GenerateDmarcRecordResults.TypeEnum | MailSlurp",
    "keywords": "Enum GenerateDmarcRecordResults.TypeEnum Domain Name Server Record Types Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateDmarcRecordResults.TypeEnum Fields Name Description A Enum A for value: A A6 Enum A6 for value: A6 AAAA Enum AAAA for value: AAAA AFSDB Enum AFSDB for value: AFSDB AMTRELAY Enum AMTRELAY for value: AMTRELAY ANY Enum ANY for value: ANY APL Enum APL for value: APL ATMA Enum ATMA for value: ATMA AVC Enum AVC for value: AVC AXFR Enum AXFR for value: AXFR CAA Enum CAA for value: CAA CDNSKEY Enum CDNSKEY for value: CDNSKEY CDS Enum CDS for value: CDS CERT Enum CERT for value: CERT CNAME Enum CNAME for value: CNAME CSYNC Enum CSYNC for value: CSYNC DHCID Enum DHCID for value: DHCID DLV Enum DLV for value: DLV DNAME Enum DNAME for value: DNAME DNSKEY Enum DNSKEY for value: DNSKEY DOA Enum DOA for value: DOA DS Enum DS for value: DS EID Enum EID for value: EID EUI48 Enum EUI48 for value: EUI48 EUI64 Enum EUI64 for value: EUI64 GID Enum GID for value: GID GPOS Enum GPOS for value: GPOS HINFO Enum HINFO for value: HINFO HIP Enum HIP for value: HIP HTTPS Enum HTTPS for value: HTTPS IPSECKEY Enum IPSECKEY for value: IPSECKEY ISDN Enum ISDN for value: ISDN IXFR Enum IXFR for value: IXFR KEY Enum KEY for value: KEY KX Enum KX for value: KX L32 Enum L32 for value: L32 L64 Enum L64 for value: L64 LOC Enum LOC for value: LOC LP Enum LP for value: LP MAILA Enum MAILA for value: MAILA MAILB Enum MAILB for value: MAILB MB Enum MB for value: MB MD Enum MD for value: MD MF Enum MF for value: MF MG Enum MG for value: MG MINFO Enum MINFO for value: MINFO MR Enum MR for value: MR MX Enum MX for value: MX NAPTR Enum NAPTR for value: NAPTR NID Enum NID for value: NID NIMLOC Enum NIMLOC for value: NIMLOC NINFO Enum NINFO for value: NINFO NS Enum NS for value: NS NSAP Enum NSAP for value: NSAP NSAPPTR Enum NSAPPTR for value: NSAP_PTR NSEC Enum NSEC for value: NSEC NSEC3 Enum NSEC3 for value: NSEC3 NSEC3PARAM Enum NSEC3PARAM for value: NSEC3PARAM NULL Enum NULL for value: NULL NXT Enum NXT for value: NXT OPENPGPKEY Enum OPENPGPKEY for value: OPENPGPKEY OPT Enum OPT for value: OPT PTR Enum PTR for value: PTR PX Enum PX for value: PX RKEY Enum RKEY for value: RKEY RP Enum RP for value: RP RRSIG Enum RRSIG for value: RRSIG RT Enum RT for value: RT SIG Enum SIG for value: SIG SINK Enum SINK for value: SINK SMIMEA Enum SMIMEA for value: SMIMEA SOA Enum SOA for value: SOA SPF Enum SPF for value: SPF SRV Enum SRV for value: SRV SSHFP Enum SSHFP for value: SSHFP SVCB Enum SVCB for value: SVCB TA Enum TA for value: TA TALINK Enum TALINK for value: TALINK TKEY Enum TKEY for value: TKEY TLSA Enum TLSA for value: TLSA TSIG Enum TSIG for value: TSIG TXT Enum TXT for value: TXT UID Enum UID for value: UID UINFO Enum UINFO for value: UINFO UNSPEC Enum UNSPEC for value: UNSPEC URI Enum URI for value: URI WKS Enum WKS for value: WKS X25 Enum X25 for value: X25 ZONEMD Enum ZONEMD for value: ZONEMD"
  },
  "api/mailslurp.Model.GenerateMtaStsRecordOptions.html": {
    "href": "api/mailslurp.Model.GenerateMtaStsRecordOptions.html",
    "title": "Class GenerateMtaStsRecordOptions | MailSlurp",
    "keywords": "Class GenerateMtaStsRecordOptions GenerateMtaStsRecordOptions Inheritance object GenerateMtaStsRecordOptions Implements IEquatable<GenerateMtaStsRecordOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"GenerateMtaStsRecordOptions\")] public class GenerateMtaStsRecordOptions : IEquatable<GenerateMtaStsRecordOptions>, IValidatableObject Constructors View Source GenerateMtaStsRecordOptions() Initializes a new instance of the GenerateMtaStsRecordOptions class. Declaration [JsonConstructor] protected GenerateMtaStsRecordOptions() View Source GenerateMtaStsRecordOptions(string, VersionEnum, ModeEnum, int, int, List<string>) Initializes a new instance of the GenerateMtaStsRecordOptions class. Declaration public GenerateMtaStsRecordOptions(string host = null, GenerateMtaStsRecordOptions.VersionEnum version = (GenerateMtaStsRecordOptions.VersionEnum)0, GenerateMtaStsRecordOptions.ModeEnum mode = (GenerateMtaStsRecordOptions.ModeEnum)0, int ttl = 0, int maxAgeSeconds = 0, List<string> mxRecords = null) Parameters Type Name Description string host host (required). GenerateMtaStsRecordOptions.VersionEnum version version (required). GenerateMtaStsRecordOptions.ModeEnum mode mode (required). int ttl ttl (required). int maxAgeSeconds maxAgeSeconds (required). List<string> mxRecords mxRecords (required). Properties View Source _Version Gets or Sets _Version Declaration [DataMember(Name = \"version\", IsRequired = true, EmitDefaultValue = true)] public GenerateMtaStsRecordOptions.VersionEnum _Version { get; set; } Property Value Type Description GenerateMtaStsRecordOptions.VersionEnum View Source Host Gets or Sets Host Declaration [DataMember(Name = \"host\", IsRequired = true, EmitDefaultValue = true)] public string Host { get; set; } Property Value Type Description string View Source MaxAgeSeconds Gets or Sets MaxAgeSeconds Declaration [DataMember(Name = \"maxAgeSeconds\", IsRequired = true, EmitDefaultValue = true)] public int MaxAgeSeconds { get; set; } Property Value Type Description int View Source Mode Gets or Sets Mode Declaration [DataMember(Name = \"mode\", IsRequired = true, EmitDefaultValue = true)] public GenerateMtaStsRecordOptions.ModeEnum Mode { get; set; } Property Value Type Description GenerateMtaStsRecordOptions.ModeEnum View Source MxRecords Gets or Sets MxRecords Declaration [DataMember(Name = \"mxRecords\", IsRequired = true, EmitDefaultValue = true)] public List<string> MxRecords { get; set; } Property Value Type Description List<string> View Source Ttl Gets or Sets Ttl Declaration [DataMember(Name = \"ttl\", IsRequired = true, EmitDefaultValue = true)] public int Ttl { get; set; } Property Value Type Description int Methods View Source Equals(GenerateMtaStsRecordOptions) Returns true if GenerateMtaStsRecordOptions instances are equal Declaration public bool Equals(GenerateMtaStsRecordOptions input) Parameters Type Name Description GenerateMtaStsRecordOptions input Instance of GenerateMtaStsRecordOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.GenerateMtaStsRecordOptions.ModeEnum.html": {
    "href": "api/mailslurp.Model.GenerateMtaStsRecordOptions.ModeEnum.html",
    "title": "Enum GenerateMtaStsRecordOptions.ModeEnum | MailSlurp",
    "keywords": "Enum GenerateMtaStsRecordOptions.ModeEnum Defines Mode Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateMtaStsRecordOptions.ModeEnum Fields Name Description ENFORCE Enum ENFORCE for value: ENFORCE NONE Enum NONE for value: NONE TESTING Enum TESTING for value: TESTING"
  },
  "api/mailslurp.Model.GenerateMtaStsRecordOptions.VersionEnum.html": {
    "href": "api/mailslurp.Model.GenerateMtaStsRecordOptions.VersionEnum.html",
    "title": "Enum GenerateMtaStsRecordOptions.VersionEnum | MailSlurp",
    "keywords": "Enum GenerateMtaStsRecordOptions.VersionEnum Defines _Version Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateMtaStsRecordOptions.VersionEnum Fields Name Description STSv1 Enum STSv1 for value: STSv1"
  },
  "api/mailslurp.Model.GenerateMtaStsRecordResults.html": {
    "href": "api/mailslurp.Model.GenerateMtaStsRecordResults.html",
    "title": "Class GenerateMtaStsRecordResults | MailSlurp",
    "keywords": "Class GenerateMtaStsRecordResults GenerateMtaStsRecordResults Inheritance object GenerateMtaStsRecordResults Implements IEquatable<GenerateMtaStsRecordResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"GenerateMtaStsRecordResults\")] public class GenerateMtaStsRecordResults : IEquatable<GenerateMtaStsRecordResults>, IValidatableObject Constructors View Source GenerateMtaStsRecordResults() Initializes a new instance of the GenerateMtaStsRecordResults class. Declaration [JsonConstructor] protected GenerateMtaStsRecordResults() View Source GenerateMtaStsRecordResults(string, TypeEnum, int, string, string, string) Initializes a new instance of the GenerateMtaStsRecordResults class. Declaration public GenerateMtaStsRecordResults(string name = null, GenerateMtaStsRecordResults.TypeEnum type = (GenerateMtaStsRecordResults.TypeEnum)0, int ttl = 0, string value = null, string wellKnownValue = null, string wellKnownUrl = null) Parameters Type Name Description string name name (required). GenerateMtaStsRecordResults.TypeEnum type Domain Name Server Record Types (required). int ttl ttl (required). string value value (required). string wellKnownValue wellKnownValue (required). string wellKnownUrl wellKnownUrl (required). Properties View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source Ttl Gets or Sets Ttl Declaration [DataMember(Name = \"ttl\", IsRequired = true, EmitDefaultValue = true)] public int Ttl { get; set; } Property Value Type Description int View Source Type Domain Name Server Record Types Declaration [DataMember(Name = \"type\", IsRequired = true, EmitDefaultValue = true)] public GenerateMtaStsRecordResults.TypeEnum Type { get; set; } Property Value Type Description GenerateMtaStsRecordResults.TypeEnum Domain Name Server Record Types View Source Value Gets or Sets Value Declaration [DataMember(Name = \"value\", IsRequired = true, EmitDefaultValue = true)] public string Value { get; set; } Property Value Type Description string View Source WellKnownUrl Gets or Sets WellKnownUrl Declaration [DataMember(Name = \"wellKnownUrl\", IsRequired = true, EmitDefaultValue = true)] public string WellKnownUrl { get; set; } Property Value Type Description string View Source WellKnownValue Gets or Sets WellKnownValue Declaration [DataMember(Name = \"wellKnownValue\", IsRequired = true, EmitDefaultValue = true)] public string WellKnownValue { get; set; } Property Value Type Description string Methods View Source Equals(GenerateMtaStsRecordResults) Returns true if GenerateMtaStsRecordResults instances are equal Declaration public bool Equals(GenerateMtaStsRecordResults input) Parameters Type Name Description GenerateMtaStsRecordResults input Instance of GenerateMtaStsRecordResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.GenerateMtaStsRecordResults.TypeEnum.html": {
    "href": "api/mailslurp.Model.GenerateMtaStsRecordResults.TypeEnum.html",
    "title": "Enum GenerateMtaStsRecordResults.TypeEnum | MailSlurp",
    "keywords": "Enum GenerateMtaStsRecordResults.TypeEnum Domain Name Server Record Types Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateMtaStsRecordResults.TypeEnum Fields Name Description A Enum A for value: A A6 Enum A6 for value: A6 AAAA Enum AAAA for value: AAAA AFSDB Enum AFSDB for value: AFSDB AMTRELAY Enum AMTRELAY for value: AMTRELAY ANY Enum ANY for value: ANY APL Enum APL for value: APL ATMA Enum ATMA for value: ATMA AVC Enum AVC for value: AVC AXFR Enum AXFR for value: AXFR CAA Enum CAA for value: CAA CDNSKEY Enum CDNSKEY for value: CDNSKEY CDS Enum CDS for value: CDS CERT Enum CERT for value: CERT CNAME Enum CNAME for value: CNAME CSYNC Enum CSYNC for value: CSYNC DHCID Enum DHCID for value: DHCID DLV Enum DLV for value: DLV DNAME Enum DNAME for value: DNAME DNSKEY Enum DNSKEY for value: DNSKEY DOA Enum DOA for value: DOA DS Enum DS for value: DS EID Enum EID for value: EID EUI48 Enum EUI48 for value: EUI48 EUI64 Enum EUI64 for value: EUI64 GID Enum GID for value: GID GPOS Enum GPOS for value: GPOS HINFO Enum HINFO for value: HINFO HIP Enum HIP for value: HIP HTTPS Enum HTTPS for value: HTTPS IPSECKEY Enum IPSECKEY for value: IPSECKEY ISDN Enum ISDN for value: ISDN IXFR Enum IXFR for value: IXFR KEY Enum KEY for value: KEY KX Enum KX for value: KX L32 Enum L32 for value: L32 L64 Enum L64 for value: L64 LOC Enum LOC for value: LOC LP Enum LP for value: LP MAILA Enum MAILA for value: MAILA MAILB Enum MAILB for value: MAILB MB Enum MB for value: MB MD Enum MD for value: MD MF Enum MF for value: MF MG Enum MG for value: MG MINFO Enum MINFO for value: MINFO MR Enum MR for value: MR MX Enum MX for value: MX NAPTR Enum NAPTR for value: NAPTR NID Enum NID for value: NID NIMLOC Enum NIMLOC for value: NIMLOC NINFO Enum NINFO for value: NINFO NS Enum NS for value: NS NSAP Enum NSAP for value: NSAP NSAPPTR Enum NSAPPTR for value: NSAP_PTR NSEC Enum NSEC for value: NSEC NSEC3 Enum NSEC3 for value: NSEC3 NSEC3PARAM Enum NSEC3PARAM for value: NSEC3PARAM NULL Enum NULL for value: NULL NXT Enum NXT for value: NXT OPENPGPKEY Enum OPENPGPKEY for value: OPENPGPKEY OPT Enum OPT for value: OPT PTR Enum PTR for value: PTR PX Enum PX for value: PX RKEY Enum RKEY for value: RKEY RP Enum RP for value: RP RRSIG Enum RRSIG for value: RRSIG RT Enum RT for value: RT SIG Enum SIG for value: SIG SINK Enum SINK for value: SINK SMIMEA Enum SMIMEA for value: SMIMEA SOA Enum SOA for value: SOA SPF Enum SPF for value: SPF SRV Enum SRV for value: SRV SSHFP Enum SSHFP for value: SSHFP SVCB Enum SVCB for value: SVCB TA Enum TA for value: TA TALINK Enum TALINK for value: TALINK TKEY Enum TKEY for value: TKEY TLSA Enum TLSA for value: TLSA TSIG Enum TSIG for value: TSIG TXT Enum TXT for value: TXT UID Enum UID for value: UID UINFO Enum UINFO for value: UINFO UNSPEC Enum UNSPEC for value: UNSPEC URI Enum URI for value: URI WKS Enum WKS for value: WKS X25 Enum X25 for value: X25 ZONEMD Enum ZONEMD for value: ZONEMD"
  },
  "api/mailslurp.Model.GenerateTlsReportingRecordOptions.html": {
    "href": "api/mailslurp.Model.GenerateTlsReportingRecordOptions.html",
    "title": "Class GenerateTlsReportingRecordOptions | MailSlurp",
    "keywords": "Class GenerateTlsReportingRecordOptions GenerateTlsReportingRecordOptions Inheritance object GenerateTlsReportingRecordOptions Implements IEquatable<GenerateTlsReportingRecordOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"GenerateTlsReportingRecordOptions\")] public class GenerateTlsReportingRecordOptions : IEquatable<GenerateTlsReportingRecordOptions>, IValidatableObject Constructors View Source GenerateTlsReportingRecordOptions() Initializes a new instance of the GenerateTlsReportingRecordOptions class. Declaration [JsonConstructor] protected GenerateTlsReportingRecordOptions() View Source GenerateTlsReportingRecordOptions(List<string>, string, string, VersionEnum, int) Initializes a new instance of the GenerateTlsReportingRecordOptions class. Declaration public GenerateTlsReportingRecordOptions(List<string> reportingAddresses = null, string reportingUrl = null, string host = null, GenerateTlsReportingRecordOptions.VersionEnum version = (GenerateTlsReportingRecordOptions.VersionEnum)0, int ttl = 0) Parameters Type Name Description List<string> reportingAddresses reportingAddresses (required). string reportingUrl reportingUrl. string host host (required). GenerateTlsReportingRecordOptions.VersionEnum version version (required). int ttl ttl (required). Properties View Source _Version Gets or Sets _Version Declaration [DataMember(Name = \"version\", IsRequired = true, EmitDefaultValue = true)] public GenerateTlsReportingRecordOptions.VersionEnum _Version { get; set; } Property Value Type Description GenerateTlsReportingRecordOptions.VersionEnum View Source Host Gets or Sets Host Declaration [DataMember(Name = \"host\", IsRequired = true, EmitDefaultValue = true)] public string Host { get; set; } Property Value Type Description string View Source ReportingAddresses Gets or Sets ReportingAddresses Declaration [DataMember(Name = \"reportingAddresses\", IsRequired = true, EmitDefaultValue = true)] public List<string> ReportingAddresses { get; set; } Property Value Type Description List<string> View Source ReportingUrl Gets or Sets ReportingUrl Declaration [DataMember(Name = \"reportingUrl\", EmitDefaultValue = false)] public string ReportingUrl { get; set; } Property Value Type Description string View Source Ttl Gets or Sets Ttl Declaration [DataMember(Name = \"ttl\", IsRequired = true, EmitDefaultValue = true)] public int Ttl { get; set; } Property Value Type Description int Methods View Source Equals(GenerateTlsReportingRecordOptions) Returns true if GenerateTlsReportingRecordOptions instances are equal Declaration public bool Equals(GenerateTlsReportingRecordOptions input) Parameters Type Name Description GenerateTlsReportingRecordOptions input Instance of GenerateTlsReportingRecordOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.GenerateTlsReportingRecordOptions.VersionEnum.html": {
    "href": "api/mailslurp.Model.GenerateTlsReportingRecordOptions.VersionEnum.html",
    "title": "Enum GenerateTlsReportingRecordOptions.VersionEnum | MailSlurp",
    "keywords": "Enum GenerateTlsReportingRecordOptions.VersionEnum Defines _Version Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateTlsReportingRecordOptions.VersionEnum Fields Name Description TLSRPTv1 Enum TLSRPTv1 for value: TLSRPTv1"
  },
  "api/mailslurp.Model.GenerateTlsReportingRecordResults.html": {
    "href": "api/mailslurp.Model.GenerateTlsReportingRecordResults.html",
    "title": "Class GenerateTlsReportingRecordResults | MailSlurp",
    "keywords": "Class GenerateTlsReportingRecordResults GenerateTlsReportingRecordResults Inheritance object GenerateTlsReportingRecordResults Implements IEquatable<GenerateTlsReportingRecordResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"GenerateTlsReportingRecordResults\")] public class GenerateTlsReportingRecordResults : IEquatable<GenerateTlsReportingRecordResults>, IValidatableObject Constructors View Source GenerateTlsReportingRecordResults() Initializes a new instance of the GenerateTlsReportingRecordResults class. Declaration [JsonConstructor] protected GenerateTlsReportingRecordResults() View Source GenerateTlsReportingRecordResults(string, TypeEnum, int, string) Initializes a new instance of the GenerateTlsReportingRecordResults class. Declaration public GenerateTlsReportingRecordResults(string name = null, GenerateTlsReportingRecordResults.TypeEnum type = (GenerateTlsReportingRecordResults.TypeEnum)0, int ttl = 0, string value = null) Parameters Type Name Description string name name (required). GenerateTlsReportingRecordResults.TypeEnum type Domain Name Server Record Types (required). int ttl ttl (required). string value value (required). Properties View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source Ttl Gets or Sets Ttl Declaration [DataMember(Name = \"ttl\", IsRequired = true, EmitDefaultValue = true)] public int Ttl { get; set; } Property Value Type Description int View Source Type Domain Name Server Record Types Declaration [DataMember(Name = \"type\", IsRequired = true, EmitDefaultValue = true)] public GenerateTlsReportingRecordResults.TypeEnum Type { get; set; } Property Value Type Description GenerateTlsReportingRecordResults.TypeEnum Domain Name Server Record Types View Source Value Gets or Sets Value Declaration [DataMember(Name = \"value\", IsRequired = true, EmitDefaultValue = true)] public string Value { get; set; } Property Value Type Description string Methods View Source Equals(GenerateTlsReportingRecordResults) Returns true if GenerateTlsReportingRecordResults instances are equal Declaration public bool Equals(GenerateTlsReportingRecordResults input) Parameters Type Name Description GenerateTlsReportingRecordResults input Instance of GenerateTlsReportingRecordResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.GenerateTlsReportingRecordResults.TypeEnum.html": {
    "href": "api/mailslurp.Model.GenerateTlsReportingRecordResults.TypeEnum.html",
    "title": "Enum GenerateTlsReportingRecordResults.TypeEnum | MailSlurp",
    "keywords": "Enum GenerateTlsReportingRecordResults.TypeEnum Domain Name Server Record Types Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum GenerateTlsReportingRecordResults.TypeEnum Fields Name Description A Enum A for value: A A6 Enum A6 for value: A6 AAAA Enum AAAA for value: AAAA AFSDB Enum AFSDB for value: AFSDB AMTRELAY Enum AMTRELAY for value: AMTRELAY ANY Enum ANY for value: ANY APL Enum APL for value: APL ATMA Enum ATMA for value: ATMA AVC Enum AVC for value: AVC AXFR Enum AXFR for value: AXFR CAA Enum CAA for value: CAA CDNSKEY Enum CDNSKEY for value: CDNSKEY CDS Enum CDS for value: CDS CERT Enum CERT for value: CERT CNAME Enum CNAME for value: CNAME CSYNC Enum CSYNC for value: CSYNC DHCID Enum DHCID for value: DHCID DLV Enum DLV for value: DLV DNAME Enum DNAME for value: DNAME DNSKEY Enum DNSKEY for value: DNSKEY DOA Enum DOA for value: DOA DS Enum DS for value: DS EID Enum EID for value: EID EUI48 Enum EUI48 for value: EUI48 EUI64 Enum EUI64 for value: EUI64 GID Enum GID for value: GID GPOS Enum GPOS for value: GPOS HINFO Enum HINFO for value: HINFO HIP Enum HIP for value: HIP HTTPS Enum HTTPS for value: HTTPS IPSECKEY Enum IPSECKEY for value: IPSECKEY ISDN Enum ISDN for value: ISDN IXFR Enum IXFR for value: IXFR KEY Enum KEY for value: KEY KX Enum KX for value: KX L32 Enum L32 for value: L32 L64 Enum L64 for value: L64 LOC Enum LOC for value: LOC LP Enum LP for value: LP MAILA Enum MAILA for value: MAILA MAILB Enum MAILB for value: MAILB MB Enum MB for value: MB MD Enum MD for value: MD MF Enum MF for value: MF MG Enum MG for value: MG MINFO Enum MINFO for value: MINFO MR Enum MR for value: MR MX Enum MX for value: MX NAPTR Enum NAPTR for value: NAPTR NID Enum NID for value: NID NIMLOC Enum NIMLOC for value: NIMLOC NINFO Enum NINFO for value: NINFO NS Enum NS for value: NS NSAP Enum NSAP for value: NSAP NSAPPTR Enum NSAPPTR for value: NSAP_PTR NSEC Enum NSEC for value: NSEC NSEC3 Enum NSEC3 for value: NSEC3 NSEC3PARAM Enum NSEC3PARAM for value: NSEC3PARAM NULL Enum NULL for value: NULL NXT Enum NXT for value: NXT OPENPGPKEY Enum OPENPGPKEY for value: OPENPGPKEY OPT Enum OPT for value: OPT PTR Enum PTR for value: PTR PX Enum PX for value: PX RKEY Enum RKEY for value: RKEY RP Enum RP for value: RP RRSIG Enum RRSIG for value: RRSIG RT Enum RT for value: RT SIG Enum SIG for value: SIG SINK Enum SINK for value: SINK SMIMEA Enum SMIMEA for value: SMIMEA SOA Enum SOA for value: SOA SPF Enum SPF for value: SPF SRV Enum SRV for value: SRV SSHFP Enum SSHFP for value: SSHFP SVCB Enum SVCB for value: SVCB TA Enum TA for value: TA TALINK Enum TALINK for value: TALINK TKEY Enum TKEY for value: TKEY TLSA Enum TLSA for value: TLSA TSIG Enum TSIG for value: TSIG TXT Enum TXT for value: TXT UID Enum UID for value: UID UINFO Enum UINFO for value: UINFO UNSPEC Enum UNSPEC for value: UNSPEC URI Enum URI for value: URI WKS Enum WKS for value: WKS X25 Enum X25 for value: X25 ZONEMD Enum ZONEMD for value: ZONEMD"
  },
  "api/mailslurp.Model.GravatarUrl.html": {
    "href": "api/mailslurp.Model.GravatarUrl.html",
    "title": "Class GravatarUrl | MailSlurp",
    "keywords": "Class GravatarUrl User image Inheritance object GravatarUrl Implements IEquatable<GravatarUrl> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"GravatarUrl\")] public class GravatarUrl : IEquatable<GravatarUrl>, IValidatableObject Constructors View Source GravatarUrl() Initializes a new instance of the GravatarUrl class. Declaration [JsonConstructor] protected GravatarUrl() View Source GravatarUrl(string, string) Initializes a new instance of the GravatarUrl class. Declaration public GravatarUrl(string url = null, string hash = null) Parameters Type Name Description string url url (required). string hash hash (required). Properties View Source Hash Gets or Sets Hash Declaration [DataMember(Name = \"hash\", IsRequired = true, EmitDefaultValue = true)] public string Hash { get; set; } Property Value Type Description string View Source Url Gets or Sets Url Declaration [DataMember(Name = \"url\", IsRequired = true, EmitDefaultValue = true)] public string Url { get; set; } Property Value Type Description string Methods View Source Equals(GravatarUrl) Returns true if GravatarUrl instances are equal Declaration public bool Equals(GravatarUrl input) Parameters Type Name Description GravatarUrl input Instance of GravatarUrl to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.GroupContactsDto.html": {
    "href": "api/mailslurp.Model.GroupContactsDto.html",
    "title": "Class GroupContactsDto | MailSlurp",
    "keywords": "Class GroupContactsDto Describes contacts attached to a contact group Inheritance object GroupContactsDto Implements IEquatable<GroupContactsDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"GroupContactsDto\")] public class GroupContactsDto : IEquatable<GroupContactsDto>, IValidatableObject Constructors View Source GroupContactsDto() Initializes a new instance of the GroupContactsDto class. Declaration [JsonConstructor] protected GroupContactsDto() View Source GroupContactsDto(GroupDto, List<ContactDto>) Initializes a new instance of the GroupContactsDto class. Declaration public GroupContactsDto(GroupDto group = null, List<ContactDto> contacts = null) Parameters Type Name Description GroupDto group group (required). List<ContactDto> contacts contacts (required). Properties View Source Contacts Gets or Sets Contacts Declaration [DataMember(Name = \"contacts\", IsRequired = true, EmitDefaultValue = true)] public List<ContactDto> Contacts { get; set; } Property Value Type Description List<ContactDto> View Source Group Gets or Sets Group Declaration [DataMember(Name = \"group\", IsRequired = true, EmitDefaultValue = true)] public GroupDto Group { get; set; } Property Value Type Description GroupDto Methods View Source Equals(GroupContactsDto) Returns true if GroupContactsDto instances are equal Declaration public bool Equals(GroupContactsDto input) Parameters Type Name Description GroupContactsDto input Instance of GroupContactsDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.GroupDto.html": {
    "href": "api/mailslurp.Model.GroupDto.html",
    "title": "Class GroupDto | MailSlurp",
    "keywords": "Class GroupDto Contact group data Inheritance object GroupDto Implements IEquatable<GroupDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"GroupDto\")] public class GroupDto : IEquatable<GroupDto>, IValidatableObject Constructors View Source GroupDto() Initializes a new instance of the GroupDto class. Declaration [JsonConstructor] protected GroupDto() View Source GroupDto(Guid, string, string, DateTime) Initializes a new instance of the GroupDto class. Declaration public GroupDto(Guid id = default, string name = null, string description = null, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). string name name (required). string description description. DateTime createdAt createdAt (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Description Gets or Sets Description Declaration [DataMember(Name = \"description\", EmitDefaultValue = true)] public string Description { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Methods View Source Equals(GroupDto) Returns true if GroupDto instances are equal Declaration public bool Equals(GroupDto input) Parameters Type Name Description GroupDto input Instance of GroupDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.GroupProjection.html": {
    "href": "api/mailslurp.Model.GroupProjection.html",
    "title": "Class GroupProjection | MailSlurp",
    "keywords": "Class GroupProjection Data for contact group Inheritance object GroupProjection Implements IEquatable<GroupProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"GroupProjection\")] public class GroupProjection : IEquatable<GroupProjection>, IValidatableObject Constructors View Source GroupProjection() Initializes a new instance of the GroupProjection class. Declaration [JsonConstructor] protected GroupProjection() View Source GroupProjection(DateTime, string, Guid, string) Initializes a new instance of the GroupProjection class. Declaration public GroupProjection(DateTime createdAt = default, string name = null, Guid id = default, string description = null) Parameters Type Name Description DateTime createdAt createdAt (required). string name name (required). Guid id id (required). string description description. Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Description Gets or Sets Description Declaration [DataMember(Name = \"description\", EmitDefaultValue = true)] public string Description { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Methods View Source Equals(GroupProjection) Returns true if GroupProjection instances are equal Declaration public bool Equals(GroupProjection input) Parameters Type Name Description GroupProjection input Instance of GroupProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.html": {
    "href": "api/mailslurp.Model.html",
    "title": "Namespace mailslurp.Model | MailSlurp",
    "keywords": "Namespace mailslurp.Model Classes AbstractOpenAPISchema Abstract base class for oneOf, anyOf schemas in the OpenAPI specification AbstractWebhookPayload Abstract webhook payload. Use the correct payload type for your webhook event type in order to access all the specific properties for that event. See the NEW_EMAIL,NEW_CONTACT, NEW_ATTACHMENT and EMAIL_OPENED payloads for the properties available for those events. AccountBounceBlockDto AccountBounceBlockDto AliasDto Email alias representation AliasProjection Representation of a alias AttachmentEntity AttachmentEntity AttachmentMetaData Meta data associated with an attachment. Attachments are stored as byte blobs so the meta data is stored separately. AttachmentProjection Email attachment data BasicAuthOptions Basic Authentication options for webhooks. Will be used is present when calling webhook endpoints. BouncedEmailDto Bounced email BouncedRecipientDto Bounced recipient BounceProjection Bounced email event BounceRecipientProjection Bounced recipient BulkSendEmailOptions Options for bulk sending an email from multiple addresses. See regular sendEmail methods for more information. CanSendEmailResults CanSendEmailResults CheckEmailBodyFeatureSupportResults CheckEmailBodyFeatureSupportResults CheckEmailClientSupportOptions Options for the email to be validated CheckEmailClientSupportResults CheckEmailClientSupportResults CheckEmailFeaturesClientSupportOptions CheckEmailFeaturesClientSupportOptions CheckEmailFeaturesClientSupportResults CheckEmailFeaturesClientSupportResults Complaint Complaint ConditionOption Options for matching emails in an inbox based on a condition such as HAS_ATTACHMENTS=TRUE ConnectorDto ConnectorDto ConnectorProjection Connector ConnectorSyncEventDto ConnectorSyncEventDto ConnectorSyncEventProjection ConnectorSyncEventProjection ConnectorSyncRequestResult ConnectorSyncRequestResult ConnectorSyncRequestResultException ConnectorSyncRequestResultException ConnectorSyncRequestResultExceptionCause ConnectorSyncRequestResultExceptionCause ConnectorSyncRequestResultExceptionCauseStackTraceInner ConnectorSyncRequestResultExceptionCauseStackTraceInner ConnectorSyncResult ConnectorSyncResult ContactDto Contact object. For saving a user in contact book. ContactProjection Email contact for address book ContentMatchOptions Options for matching content using regex patterns based on Java Pattern syntax CountDto Number of elements CreateAliasOptions Create email alias options. Email aliases can be used to mask real email addresses behind an ID. You can also attach an inbox to an alias so that any email received by the inbox email address if forwarded to the alias email address. CreateConnectorImapFetchOptions CreateConnectorImapFetchOptions CreateConnectorImapOptions CreateConnectorImapOptions CreateConnectorOptions CreateConnectorOptions CreateContactOptions Options for creating an email contact in address book CreateDomainOptions Options for creating a domain to use with MailSlurp. You must have ownership access to this domain in order to verify it. Domains will not function correctly until the domain has been verified. See https://www.mailslurp.com/guides/custom-domains for help. Domains can be either HTTP or SMTP type. The type of domain determines which inboxes can be used with it. SMTP inboxes use a mail server running mx.mailslurp.com while HTTP inboxes are handled by AWS SES. CreateEmergencyAddressOptions CreateEmergencyAddressOptions CreateGroupOptions Create contact group options CreateInboxDto Options for creating an inbox. An inbox has a real email address that can send and receive emails. Inboxes can be permanent or expire at a given time. Inboxes are either SMTP or HTTP mailboxes. SMTP inboxes are processed by a mail server running at mailslurp.mx while HTTP inboxes are processed by AWS SES backed mailservers. An inbox email address is randomly assigned by default ending in either mailslurp.com or (if useDomainPool is enabled) ending in a similar domain such as mailslurp.xyz (selected at random). To specify an address use a custom domain: either pass the emailAddress options with &lt;your-recipient>@&lt;your-domain>. To create a randomized address for your domain set the domainName to the domain you have verified or pass the domainId. Virtual inboxes prevent outbound sending and instead trap mail. CreateInboxForwarderOptions Options for creating an inbox forwarder CreateInboxReplierOptions Options for creating an inbox replier. Repliers can be attached to inboxes and send automated responses when an inbound email matches given criteria. CreateInboxRulesetOptions Options for creating inbox rulesets. Inbox rulesets can be used to block, allow, filter, or forward emails when sending or receiving using the inbox. CreateTemplateOptions Create template options CreateTrackingPixelOptions Options for creating a tracking pixel for email open tracking CreateWebhookOptions Options for creating a webhook. Webhooks can be attached to inboxes and MailSlurp will POST a webhook payload to the URL specified whenever the webhook's event is triggered. Webhooks are great for processing many inbound emails and responding to other events at scale. Customize the payload sent to your endpoint by setting the requestBodyTemplate property to a string with moustache style variables. Property names from the standard payload model for the given event are available as variables. DeliveryStatusDto DeliveryStatusDto DescribeDomainOptions Domain record description DescribeMailServerDomainResult Name Server lookup result DNSLookupOptions Options for DNS query. DNSLookupResult DNS lookup result. Includes record type, time to live, raw response, and name value for the name server response. DNSLookupResults Results of query on domain name servers DomainDto Domain plus verification records and status DomainIssuesDto DomainIssuesDto DomainNameRecord DNS Record required for verification of a domain. Record vary depending on domain type. DomainPreview Preview object for domain entity DownloadAttachmentDto Content of attachment Email Email entity (also known as EmailDto). When an SMTP email message is received by MailSlurp it is parsed. The body and attachments are written to disk and the fields such as to, from, subject etc are stored in a database. The body contains the email content. If you want the original SMTP message see the getRawEmail endpoints. The attachments can be fetched using the AttachmentController EmailAnalysis Analysis result for email. Each verdict property is a string PASS|FAIL|GRAY or dynamic error message EmailContentMatchResult Matches for the given pattern EmailContentPartResult EmailContentPartResult EmailFeatureCategoryName EmailFeatureCategoryName EmailFeatureFamilyName EmailFeatureFamilyName EmailFeatureFamilyStatistics EmailFeatureFamilyStatistics EmailFeatureNames EmailFeatureNames EmailFeatureOverview EmailFeatureOverview EmailFeaturePlatformName EmailFeaturePlatformName EmailFeaturePlatformStatistics EmailFeaturePlatformStatistics EmailFeatureSupportFlags EmailFeatureSupportFlags EmailFeatureSupportResult EmailFeatureSupportResult EmailFeatureSupportStatusPercentage EmailFeatureSupportStatusPercentage EmailFeatureVersionStatistics EmailFeatureVersionStatistics EmailHtmlDto EmailHtmlDto EmailLinksResult Links found in HTML EmailPreview Preview of an email message. For full message (including body and attachments) call the getEmail or other email endpoints with the provided email ID. EmailPreviewUrls URLs for email body EmailProjection A compact representation of a full email. Used in list endpoints to keep response sizes low. Body and attachments are not included. To get all fields of the email use the getEmail method with the email projection's ID. See EmailDto for documentation on projection properties. EmailRecipients The To,CC,BCC recipients stored in object form with email address and name accessible. EmailTextLinesResult Parsed text of an email EmailValidationRequestDto Email validation request EmailVerificationResult Email verification result. Valid means email address exists according to response from mail server running at the domain and port given. EmergencyAddress EmergencyAddress EmergencyAddressDto EmergencyAddressDto EmptyResponseDto EmptyResponseDto ExpirationDefaults Expiration defaults for your account ExpiredInboxDto Expired inbox ExpiredInboxRecordProjection Record of inbox expiration ExportLink Export download link ExportOptions Options for exporting user data FilterBouncedRecipientsOptions Options for filtering bounced email recipients FilterBouncedRecipientsResult Remaining recipients that were filtered to remove bounced recipients FlushExpiredInboxesResult Result from calling expire on any inboxes that have applicable expiration dates given current time. ForwardEmailOptions Options for forwarding an email GenerateBimiRecordOptions GenerateBimiRecordOptions GenerateBimiRecordResults GenerateBimiRecordResults GenerateDmarcRecordOptions GenerateDmarcRecordOptions GenerateDmarcRecordResults GenerateDmarcRecordResults GenerateMtaStsRecordOptions GenerateMtaStsRecordOptions GenerateMtaStsRecordResults GenerateMtaStsRecordResults GenerateTlsReportingRecordOptions GenerateTlsReportingRecordOptions GenerateTlsReportingRecordResults GenerateTlsReportingRecordResults GravatarUrl User image GroupContactsDto Describes contacts attached to a contact group GroupDto Contact group data GroupProjection Data for contact group HTMLValidationResult HTML Validation Results ImapFlagOperationOptions IMAP operation flags ImapSmtpAccessDetails Access details for inbox using SMTP or IMAP InboxByEmailAddressResult Result of search for inbox by email address InboxByNameResult Result of search for inbox by name InboxDto Representation of a MailSlurp inbox. An inbox has an ID and a real email address. Emails can be sent to or from this email address. Inboxes are either SMTP or HTTP mailboxes. The default, HTTP inboxes, use AWS SES to process emails and are best suited as test email accounts and do not support IMAP or POP3. SMTP inboxes use a custom mail server at mx.mailslurp.com and support SMTP login, IMAP and POP3. Use the EmailController or the InboxController methods to send and receive emails and attachments. Inboxes may have a description, name, and tags for display purposes. You can also favourite an inbox for easier searching. InboxExistsDto Result of email exists query InboxForwarderDto Inbox forwarder. Describes how an inbox will forward matching emails to designated recipients. InboxForwarderEventDto Inbox forwarder event. Describes how an email was handled by an inbox forwarder. InboxForwarderEventProjection Inbox forwarder event InboxForwarderTestOptions Options for testing an inbox forwarder against a value InboxForwarderTestResult Results of inbox forwarder test InboxIdItem Inbox ID and email address pair InboxIdsResult List of inbox IDs and email addresses InboxPreview Inbox data preview element. InboxReplierDto Inbox replier. Will automatically reply to inbound emails that match given field for an inbox. InboxReplierEventProjection Inbox replier event InboxRulesetDto Rules for inbox InboxRulesetTestOptions Test options for inbox ruleset InboxRulesetTestResult Result of test of inbox ruleset IPAddressResult IP Address look up result for a given domain / hostname JSONSchemaDto JSONSchema for payload ListUnsubscribeRecipientProjection List unsubscribe recipient LookupBimiDomainOptions LookupBimiDomainOptions LookupBimiDomainResults LookupBimiDomainResults LookupDmarcDomainOptions LookupDmarcDomainOptions LookupDmarcDomainResults LookupDmarcDomainResults LookupMtaStsDomainOptions LookupMtaStsDomainOptions LookupMtaStsDomainResults LookupMtaStsDomainResults LookupTlsReportingDomainOptions LookupTlsReportingDomainOptions LookupTlsReportingDomainResults LookupTlsReportingDomainResults MatchOption Options for matching emails in an inbox. Each match option object contains a field, should and value property. Together they form logical conditions such as SUBJECT should CONTAIN value. MatchOptions Optional filter for matching emails based on fields. For instance filter results to only include emails whose SUBJECT value does CONTAIN given match value. An example payload would be { matches: [{ field: &apos;SUBJECT&apos;, should: &apos;CONTAIN&apos;, value: &apos;Welcome&apos; }] }. You can also pass conditions such as HAS_ATTACHMENT. If you wish to extract regex matches inside the email content see the getEmailContentMatch method in the EmailController. MissedEmailDto Missed email MissedEmailProjection Missed email data NameServerRecord Name Server Record OrganizationInboxProjection Organization team inbox PageableObject PageableObject PageAlias Paginated email alias results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageAttachmentEntity Paginated attachment entity results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageBouncedEmail Paginated bounced email. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageBouncedRecipients Paginated bounced recipients. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageComplaint Paginated complaint email. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageConnector Paginated inbox connectors. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageConnectorSyncEvents Paginated inbox connector sync events. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageContactProjection Paginated contact results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageDeliveryStatus Paginated delivery status results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageEmailPreview Paginated email preview results. EmailProjections and EmailPreviews are essentially the same but have legacy naming issues. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. For emails there are several methods for fetching message bodies and attachments. PageEmailProjection Paginated email projection results. EmailProjections and EmailPreviews are essentially the same but have legacy naming issues. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full email entity use the projection ID with individual method calls. For emails there are several methods for fetching message bodies and attachments. PageEmailValidationRequest Paginated email validation request records. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageExpiredInboxRecordProjection Paginated expired inbox results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageGroupProjection Paginated missed email results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageInboxForwarderDto Paginated inbox forwarder results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageInboxForwarderEvents Paginated inbox forwarder events. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageInboxProjection Paginated inbox results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageInboxReplierDto Paginated inbox replier results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageInboxReplierEvents Paginated inbox replier events. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageInboxRulesetDto Paginated inbox ruleset results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageListUnsubscribeRecipients Paginated list unsubscribe recipients. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageMissedEmailProjection Paginated MissedEmail results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageOrganizationInboxProjection Paginated organization inbox results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PagePhoneNumberProjection Paginated phone numbers. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageScheduledJobs Paginated scheduled jobs results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageSentEmailProjection Paginated sent email results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full sent email entity use the projection ID with individual method calls. PageSentEmailWithQueueProjection Paginated sent email results for emails sent with queue. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full sent email entity use the projection ID with individual method calls. PageSmsProjection Paginated SMS messages. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageTemplateProjection Paginated email template results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageThreadProjection Paginated email projection results. EmailProjections and EmailPreviews are essentially the same but have legacy naming issues. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full email entity use the projection ID with individual method calls. For emails there are several methods for fetching message bodies and attachments. PageTrackingPixelProjection Paginated TrackingPixel results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageUnknownMissedEmailProjection Paginated unknown MissedEmail results. Unknown missed emails are emails that were sent to MailSlurp /Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageWebhookProjection Paginated webhook entity. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PageWebhookResult Paginated webhook results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. PhoneNumberDto PhoneNumberDto PhoneNumberProjection Phone number projection PhonePlanDto PhonePlanDto RawEmailJson Content in raw format Recipient Email recipient ReplyForSms ReplyForSms ReplyToAliasEmailOptions Options for replying to an alias email using the alias inbox ReplyToEmailOptions Options for replying to email with API ScheduledJob ScheduledJob ScheduledJobDto ScheduledJobDto SearchEmailsOptions SearchEmailsOptions SearchInboxesOptions SearchInboxesOptions SendEmailBodyPart Email body content parts for multipart mime message. Will override body. SendEmailOptions Options for the email to be sent Sender Sender object containing from email address and from personal name if provided in address SendSMTPEnvelopeOptions Options for the email envelope SendWithQueueResult SendWithQueueResult SentEmailDto Sent email details SentEmailProjection SentEmailProjection SentSmsDto SentSmsDto SetInboxFavouritedOptions Options for setting inbox favourite state SimpleSendEmailOptions Simplified send email options SmsDto SmsDto SmsMatchOption Options for matching SMS messages in a phone number. Each match option object contains a field, should and value property. Together they form logical conditions such as BODY should CONTAIN value. SmsPreview SmsPreview SmsProjection SMS projection SmsReplyOptions SmsReplyOptions SortObject SortObject TemplateDto Email template TemplatePreview TemplatePreview TemplateProjection Email template data TemplateVariable Variable for use with email template TestInboxRulesetReceivingOptions Test options for inbox ruleset receiving test TestInboxRulesetReceivingResult TestInboxRulesetReceivingResult TestInboxRulesetSendingOptions Test options for inbox ruleset sending test TestInboxRulesetSendingResult TestInboxRulesetSendingResult TestNewInboxForwarderOptions Options for testing new inbox forwarder rules TestNewInboxRulesetOptions Test inbox ruleset options TestPhoneNumberOptions TestPhoneNumberOptions ThreadProjection A thread is a message thread created for a message received by an alias TrackingPixelDto Tracking pixel TrackingPixelProjection Tracking pixel data UnknownMissedEmailProjection Unknown missed email projection UnreadCount Number of unread entities UnseenErrorCountDto Number of unseen errors UpdateAliasOptions Update an email alias UpdateDomainOptions Options for creating a domain to use with MailSlurp. You must have ownership access to this domain in order to verify it. Domains will not functionally currently until the domain has been verified. See https://www.mailslurp.com/guides/custom-domains for help. UpdateGroupContacts Update group contacts options. Pass a list of contact ids to replace existing group contacts. UpdateInboxOptions Options for updating inbox properties UpdateInboxReplierOptions Options for updating an inbox replier UploadAttachmentOptions Options for uploading files for attachments. When sending emails with the API that require attachments first upload each attachment. Then use the returned attachment ID in your SendEmailOptions when sending an email. This way you can use attachments multiple times once they have been uploaded. UploadMultipartFormRequest UploadMultipartFormRequest UserInfoDto UserInfoDto ValidateEmailAddressListOptions Options for validating a list of email addresses ValidateEmailAddressListResult Result of validating a list of email addresses ValidationDto Response object for email validation operation ValidationMessage Optional warnings resulting from HTML validation VerifyEmailAddressOptions Options for verifying that an email address exists at a remote mail server. VerifyWebhookSignatureOptions VerifyWebhookSignatureOptions VerifyWebhookSignatureResults VerifyWebhookSignatureResults WaitForConditions Conditions to apply to emails that you are waiting for WaitForSingleSmsOptions WaitForSingleSmsOptions WaitForSmsConditions Conditions to apply to emails that you are waiting for WebhookBouncePayload BOUNCE webhook payload. Sent to your webhook url endpoint via HTTP POST when an email bounced or was rejected by a recipient. Save the recipients to a ban list on your server and avoid emailing them again. It is recommended you also listen to the BOUNCE_RECIPIENT payload. WebhookBounceRecipientPayload BOUNCE_RECIPIENT webhook payload. Sent to your webhook url endpoint via HTTP POST when an email caused a bounce to occur for a recipient. Save the recipient to a ban list of your server and avoid email them again. WebhookDeliveryStatusPayload DELIVERY_STATUS webhook payload. Sent to your webhook url endpoint via HTTP POST when an email delivery status is created. This could be a successful delivery or a delivery failure. WebhookDto Representation of a webhook for an inbox. The URL specified will be using by MailSlurp whenever an email is received by the attached inbox. A webhook entity should have a URL that points to your server. Your server should accept HTTP/S POST requests and return a success 200. MailSlurp will retry your webhooks if they fail. See https://csharp.api.mailslurp.com/schemas/webhook-payload for the payload schema. WebhookEmailOpenedPayload EMAIL_OPENED webhook payload. Sent to your webhook url endpoint via HTTP POST when an email containing a tracking pixel is opened and the pixel image is loaded by a reader. WebhookEmailReadPayload EMAIL_READ webhook payload. Sent to your webhook url endpoint via HTTP POST when an email is read. This happens when an email is requested in full from the API or a user views the email in the dashboard. WebhookHeaderNameValue Name value pair for webhook header WebhookHeaders Webhook HTTP headers to include with each request from MailSlurp to your server WebhookNewAttachmentPayload NEW_ATTACHMENT webhook payload. Sent to your webhook url endpoint via HTTP POST when an email is received by the inbox that your webhook is attached to that contains an attachment. You can use the attachmentId to download the attachment. WebhookNewContactPayload NEW_CONTACT webhook payload. Sent to your webhook url endpoint via HTTP POST when an email is received by the inbox that your webhook is attached to that contains a recipient that has not been saved as a contact. WebhookNewEmailPayload NEW_EMAIL webhook payload. Sent to your webhook url endpoint via HTTP POST when an email is received by the inbox that your webhook is attached to. Use the email ID to fetch the full email body or attachments. WebhookNewSmsPayload NEW_SMS webhook payload. Sent to your webhook url endpoint via HTTP POST when an sms is received by the phone number that your webhook is attached to. Use the SMS ID to fetch the full SMS details. WebhookProjection Representation of a webhook WebhookRedriveAllResult Result of retrying all failed webhook WebhookRedriveResult Result of retrying webhook WebhookResultDto Result of a webhook notification WebhookTestRequest Result of webhook test request WebhookTestResponse Response from webhook test request WebhookTestResult Results of testing a webhook Enums AbstractWebhookPayload.EventNameEnum Defines EventName ConditionOption.ConditionEnum Condition of an email object that can be used to filter results ConditionOption.ValueEnum Expected condition value ConnectorDto.ConnectorAuthTypeEnum Defines ConnectorAuthType ConnectorDto.ConnectorTypeEnum Defines ConnectorType ConnectorDto.SyncScheduleTypeEnum Defines SyncScheduleType ConnectorProjection.ConnectorTypeEnum Defines ConnectorType ConnectorProjection.SyncScheduleTypeEnum Defines SyncScheduleType ConnectorSyncEventDto.SyncStatusEnum Defines SyncStatus ConnectorSyncEventProjection.SyncStatusEnum Defines SyncStatus CreateConnectorOptions.ConnectorAuthTypeEnum Defines ConnectorAuthType CreateConnectorOptions.ConnectorTypeEnum Defines ConnectorType CreateConnectorOptions.SyncScheduleTypeEnum Defines SyncScheduleType CreateDomainOptions.DomainTypeEnum Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. CreateEmergencyAddressOptions.IsoCountryCodeEnum Defines IsoCountryCode CreateInboxDto.InboxTypeEnum Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). CreateInboxForwarderOptions.FieldEnum Field to match against to trigger inbox forwarding for inbound email CreateInboxReplierOptions.FieldEnum Field to match against to trigger inbox replier for inbound email CreateInboxRulesetOptions.ActionEnum Action to be taken when the ruleset matches an email for the given scope. For example: BLOCK action with target * and scope SENDING_EMAILS blocks sending to all recipients. Note ALLOW takes precedent over BLOCK. FILTER_REMOVE is like block but will remove offending email addresses during a send or receive event instead of blocking the action. CreateInboxRulesetOptions.ScopeEnum What type of emails actions to apply ruleset to. Either SENDING_EMAILS or RECEIVING_EMAILS will apply action and target to any sending or receiving of emails respectively. CreateWebhookOptions.EventNameEnum Optional webhook event name. Default is EMAIL_RECEIVED and is triggered when an email is received by the inbox associated with the webhook. Payload differ according to the webhook event name. DNSLookupOptions.RecordTypesEnum Domain Name Server Record Types DNSLookupResult.RecordTypeEnum Domain Name Server Record Types DomainDto.DomainTypeEnum Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. DomainNameRecord.LabelEnum Domain Name Server Record Label DomainNameRecord.RecordTypeEnum Domain Name Server Record Types DomainPreview.DomainTypeEnum Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails. EmailFeatureCategoryName.SlugEnum Defines Slug EmailFeatureFamilyName.SlugEnum Defines Slug EmailFeatureFamilyStatistics.FamilyEnum Defines Family EmailFeatureFamilyStatistics.FeatureEnum Defines Feature EmailFeatureOverview.CategoryEnum Defines Category EmailFeatureOverview.FeatureEnum Defines Feature EmailFeatureOverview.StatusesEnum Defines Statuses EmailFeaturePlatformName.SlugEnum Defines Slug EmailFeaturePlatformStatistics.PlatformEnum Defines Platform EmailFeatureSupportFlags.StatusEnum Defines Status EmailFeatureSupportResult.DetectedFeaturesEnum Defines DetectedFeatures EmailFeatureSupportStatusPercentage.StatusEnum Defines Status EmergencyAddress.PhoneCountryEnum Defines PhoneCountry EmergencyAddressDto.PhoneCountryEnum Defines PhoneCountry ExportOptions.OutputFormatEnum Defines OutputFormat GenerateBimiRecordOptions.VersionEnum Defines _Version GenerateBimiRecordResults.TypeEnum Domain Name Server Record Types GenerateDmarcRecordOptions.AdkimEnum Defines Adkim GenerateDmarcRecordOptions.AspfEnum Defines Aspf GenerateDmarcRecordOptions.FoEnum Defines Fo GenerateDmarcRecordOptions.PolicyEnum Defines Policy GenerateDmarcRecordOptions.ReportFormatEnum Defines ReportFormat GenerateDmarcRecordOptions.SubdomainPolicyEnum Defines SubdomainPolicy GenerateDmarcRecordOptions.VersionEnum Defines _Version GenerateDmarcRecordResults.TypeEnum Domain Name Server Record Types GenerateMtaStsRecordOptions.ModeEnum Defines Mode GenerateMtaStsRecordOptions.VersionEnum Defines _Version GenerateMtaStsRecordResults.TypeEnum Domain Name Server Record Types GenerateTlsReportingRecordOptions.VersionEnum Defines _Version GenerateTlsReportingRecordResults.TypeEnum Domain Name Server Record Types ImapFlagOperationOptions.FlagOperationEnum Defines FlagOperation InboxDto.FunctionsAsEnum Inbox function if used as a primitive for another system. InboxDto.InboxTypeEnum Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). InboxForwarderDto.FieldEnum Which field to match against InboxForwarderEventDto.StatusEnum Defines Status InboxForwarderEventProjection.StatusEnum Defines Status InboxPreview.FunctionsAsEnum Inbox function if used as a primitive for another system. InboxPreview.InboxTypeEnum Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). InboxReplierDto.FieldEnum Defines Field InboxReplierEventProjection.StatusEnum Defines Status InboxRulesetDto.ActionEnum Defines Action InboxRulesetDto.HandlerEnum Defines Handler InboxRulesetDto.ScopeEnum Defines Scope MatchOption.FieldEnum Fields of an email object that can be used to filter results MatchOption.ShouldEnum How the value of the email field specified should be compared to the value given in the match options. OrganizationInboxProjection.FunctionsAsEnum Inbox function if used as a primitive for another system. OrganizationInboxProjection.InboxTypeEnum Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). PhoneNumberDto.PhoneCountryEnum Defines PhoneCountry PhoneNumberProjection.PhoneCountryEnum Defines PhoneCountry PhonePlanDto.PhoneCountryEnum Defines PhoneCountry ReplyToAliasEmailOptions.SendStrategyEnum How an email should be sent based on its recipients ReplyToEmailOptions.SendStrategyEnum How an email should be sent based on its recipients ScheduledJob.StatusEnum Defines Status ScheduledJobDto.StatusEnum Defines Status SearchEmailsOptions.SortDirectionEnum Optional createdAt sort direction ASC or DESC SearchInboxesOptions.InboxFunctionEnum Optional filter by inbox function SearchInboxesOptions.InboxTypeEnum Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). SearchInboxesOptions.SortDirectionEnum Optional createdAt sort direction ASC or DESC SendEmailOptions.SendStrategyEnum How an email should be sent based on its recipients SendEmailOptions.ValidateEmailAddressesEnum Validate recipient email addresses before sending SmsMatchOption.FieldEnum Fields of an SMS object that can be used to filter results SmsMatchOption.ShouldEnum How the value of the email field specified should be compared to the value given in the match options. TemplateVariable.VariableTypeEnum The type of variable UpdateInboxReplierOptions.FieldEnum Field to match against to trigger inbox replier for inbound email UserInfoDto.AccountStateEnum Defines AccountState UserInfoDto.AccountTypeEnum Defines AccountType UserInfoDto.SubscriptionTypeEnum Defines SubscriptionType WaitForConditions.CountTypeEnum How result size should be compared with the expected size. Exactly or at-least matching result? WaitForConditions.SortDirectionEnum Direction to sort matching emails by created time WaitForSingleSmsOptions.SortDirectionEnum Defines SortDirection WaitForSmsConditions.CountTypeEnum How result size should be compared with the expected size. Exactly or at-least matching result? WaitForSmsConditions.SortDirectionEnum Direction to sort matching SMSs by created time WebhookBouncePayload.EventNameEnum Name of the event type webhook is being triggered for. WebhookBounceRecipientPayload.EventNameEnum Name of the event type webhook is being triggered for. WebhookDeliveryStatusPayload.EventNameEnum Name of the event type webhook is being triggered for. WebhookDto.EventNameEnum Webhook trigger event name WebhookDto.MethodEnum HTTP method that your server endpoint must listen for WebhookEmailOpenedPayload.EventNameEnum Name of the event type webhook is being triggered for. WebhookEmailReadPayload.EventNameEnum Name of the event type webhook is being triggered for. WebhookNewAttachmentPayload.EventNameEnum Name of the event type webhook is being triggered for. WebhookNewContactPayload.EventNameEnum Name of the event type webhook is being triggered for. WebhookNewEmailPayload.EventNameEnum Name of the event type webhook is being triggered for. WebhookNewSmsPayload.EventNameEnum Name of the event type webhook is being triggered for. WebhookProjection.EventNameEnum Defines EventName WebhookResultDto.HttpMethodEnum Defines HttpMethod WebhookResultDto.ResultTypeEnum Defines ResultType WebhookResultDto.WebhookEventEnum Defines WebhookEvent WebhookTestRequest.MethodEnum Defines Method"
  },
  "api/mailslurp.Model.HTMLValidationResult.html": {
    "href": "api/mailslurp.Model.HTMLValidationResult.html",
    "title": "Class HTMLValidationResult | MailSlurp",
    "keywords": "Class HTMLValidationResult HTML Validation Results Inheritance object HTMLValidationResult Implements IEquatable<HTMLValidationResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"HTMLValidationResult\")] public class HTMLValidationResult : IEquatable<HTMLValidationResult>, IValidatableObject Constructors View Source HTMLValidationResult() Initializes a new instance of the HTMLValidationResult class. Declaration [JsonConstructor] protected HTMLValidationResult() View Source HTMLValidationResult(bool, List<ValidationMessage>, List<ValidationMessage>, List<ValidationMessage>) Initializes a new instance of the HTMLValidationResult class. Declaration public HTMLValidationResult(bool isValid = false, List<ValidationMessage> infos = null, List<ValidationMessage> errors = null, List<ValidationMessage> warnings = null) Parameters Type Name Description bool isValid Is HTML validation result valid (required). List<ValidationMessage> infos Optional infos resulting from HTML validation (required). List<ValidationMessage> errors Optional errors resulting from HTML validation (required). List<ValidationMessage> warnings Optional warnings resulting from HTML validation (required). Properties View Source Errors Optional errors resulting from HTML validation Declaration [DataMember(Name = \"errors\", IsRequired = true, EmitDefaultValue = true)] public List<ValidationMessage> Errors { get; set; } Property Value Type Description List<ValidationMessage> Optional errors resulting from HTML validation View Source Infos Optional infos resulting from HTML validation Declaration [DataMember(Name = \"infos\", IsRequired = true, EmitDefaultValue = true)] public List<ValidationMessage> Infos { get; set; } Property Value Type Description List<ValidationMessage> Optional infos resulting from HTML validation View Source IsValid Is HTML validation result valid Declaration [DataMember(Name = \"isValid\", IsRequired = true, EmitDefaultValue = true)] public bool IsValid { get; set; } Property Value Type Description bool Is HTML validation result valid View Source Warnings Optional warnings resulting from HTML validation Declaration [DataMember(Name = \"warnings\", IsRequired = true, EmitDefaultValue = true)] public List<ValidationMessage> Warnings { get; set; } Property Value Type Description List<ValidationMessage> Optional warnings resulting from HTML validation Methods View Source Equals(HTMLValidationResult) Returns true if HTMLValidationResult instances are equal Declaration public bool Equals(HTMLValidationResult input) Parameters Type Name Description HTMLValidationResult input Instance of HTMLValidationResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ImapFlagOperationOptions.FlagOperationEnum.html": {
    "href": "api/mailslurp.Model.ImapFlagOperationOptions.FlagOperationEnum.html",
    "title": "Enum ImapFlagOperationOptions.FlagOperationEnum | MailSlurp",
    "keywords": "Enum ImapFlagOperationOptions.FlagOperationEnum Defines FlagOperation Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ImapFlagOperationOptions.FlagOperationEnum Fields Name Description ADDFLAGS Enum ADDFLAGS for value: ADD_FLAGS REMOVEFLAGS Enum REMOVEFLAGS for value: REMOVE_FLAGS SETFLAGS Enum SETFLAGS for value: SET_FLAGS"
  },
  "api/mailslurp.Model.ImapFlagOperationOptions.html": {
    "href": "api/mailslurp.Model.ImapFlagOperationOptions.html",
    "title": "Class ImapFlagOperationOptions | MailSlurp",
    "keywords": "Class ImapFlagOperationOptions IMAP operation flags Inheritance object ImapFlagOperationOptions Implements IEquatable<ImapFlagOperationOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ImapFlagOperationOptions\")] public class ImapFlagOperationOptions : IEquatable<ImapFlagOperationOptions>, IValidatableObject Constructors View Source ImapFlagOperationOptions() Initializes a new instance of the ImapFlagOperationOptions class. Declaration [JsonConstructor] protected ImapFlagOperationOptions() View Source ImapFlagOperationOptions(FlagOperationEnum, List<string>) Initializes a new instance of the ImapFlagOperationOptions class. Declaration public ImapFlagOperationOptions(ImapFlagOperationOptions.FlagOperationEnum flagOperation = (ImapFlagOperationOptions.FlagOperationEnum)0, List<string> flags = null) Parameters Type Name Description ImapFlagOperationOptions.FlagOperationEnum flagOperation flagOperation (required). List<string> flags flags (required). Properties View Source FlagOperation Gets or Sets FlagOperation Declaration [DataMember(Name = \"flagOperation\", IsRequired = true, EmitDefaultValue = true)] public ImapFlagOperationOptions.FlagOperationEnum FlagOperation { get; set; } Property Value Type Description ImapFlagOperationOptions.FlagOperationEnum View Source Flags Gets or Sets Flags Declaration [DataMember(Name = \"flags\", IsRequired = true, EmitDefaultValue = true)] public List<string> Flags { get; set; } Property Value Type Description List<string> Methods View Source Equals(ImapFlagOperationOptions) Returns true if ImapFlagOperationOptions instances are equal Declaration public bool Equals(ImapFlagOperationOptions input) Parameters Type Name Description ImapFlagOperationOptions input Instance of ImapFlagOperationOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ImapSmtpAccessDetails.html": {
    "href": "api/mailslurp.Model.ImapSmtpAccessDetails.html",
    "title": "Class ImapSmtpAccessDetails | MailSlurp",
    "keywords": "Class ImapSmtpAccessDetails Access details for inbox using SMTP or IMAP Inheritance object ImapSmtpAccessDetails Implements IEquatable<ImapSmtpAccessDetails> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ImapSmtpAccessDetails\")] public class ImapSmtpAccessDetails : IEquatable<ImapSmtpAccessDetails>, IValidatableObject Constructors View Source ImapSmtpAccessDetails() Initializes a new instance of the ImapSmtpAccessDetails class. Declaration [JsonConstructor] protected ImapSmtpAccessDetails() View Source ImapSmtpAccessDetails(string, int, string, string, string, int, string, string, string, int, string, string) Initializes a new instance of the ImapSmtpAccessDetails class. Declaration public ImapSmtpAccessDetails(string secureSmtpServerHost = null, int secureSmtpServerPort = 0, string secureSmtpUsername = null, string secureSmtpPassword = null, string smtpServerHost = null, int smtpServerPort = 0, string smtpUsername = null, string smtpPassword = null, string imapServerHost = null, int imapServerPort = 0, string imapUsername = null, string imapPassword = null) Parameters Type Name Description string secureSmtpServerHost Secure TLS SMTP server host domain (required). int secureSmtpServerPort Secure TLS SMTP server host port (required). string secureSmtpUsername Secure TLS SMTP username for login (required). string secureSmtpPassword Secure TLS SMTP password for login (required). string smtpServerHost SMTP server host domain (required). int smtpServerPort SMTP server host port (required). string smtpUsername SMTP username for login (required). string smtpPassword SMTP password for login (required). string imapServerHost IMAP server host domain (required). int imapServerPort IMAP server host port (required). string imapUsername IMAP username for login (required). string imapPassword IMAP password for login (required). Properties View Source ImapPassword IMAP password for login Declaration [DataMember(Name = \"imapPassword\", IsRequired = true, EmitDefaultValue = true)] public string ImapPassword { get; set; } Property Value Type Description string IMAP password for login View Source ImapServerHost IMAP server host domain Declaration [DataMember(Name = \"imapServerHost\", IsRequired = true, EmitDefaultValue = true)] public string ImapServerHost { get; set; } Property Value Type Description string IMAP server host domain View Source ImapServerPort IMAP server host port Declaration [DataMember(Name = \"imapServerPort\", IsRequired = true, EmitDefaultValue = true)] public int ImapServerPort { get; set; } Property Value Type Description int IMAP server host port View Source ImapUsername IMAP username for login Declaration [DataMember(Name = \"imapUsername\", IsRequired = true, EmitDefaultValue = true)] public string ImapUsername { get; set; } Property Value Type Description string IMAP username for login View Source SecureSmtpPassword Secure TLS SMTP password for login Declaration [DataMember(Name = \"secureSmtpPassword\", IsRequired = true, EmitDefaultValue = true)] public string SecureSmtpPassword { get; set; } Property Value Type Description string Secure TLS SMTP password for login View Source SecureSmtpServerHost Secure TLS SMTP server host domain Declaration [DataMember(Name = \"secureSmtpServerHost\", IsRequired = true, EmitDefaultValue = true)] public string SecureSmtpServerHost { get; set; } Property Value Type Description string Secure TLS SMTP server host domain View Source SecureSmtpServerPort Secure TLS SMTP server host port Declaration [DataMember(Name = \"secureSmtpServerPort\", IsRequired = true, EmitDefaultValue = true)] public int SecureSmtpServerPort { get; set; } Property Value Type Description int Secure TLS SMTP server host port View Source SecureSmtpUsername Secure TLS SMTP username for login Declaration [DataMember(Name = \"secureSmtpUsername\", IsRequired = true, EmitDefaultValue = true)] public string SecureSmtpUsername { get; set; } Property Value Type Description string Secure TLS SMTP username for login View Source SmtpPassword SMTP password for login Declaration [DataMember(Name = \"smtpPassword\", IsRequired = true, EmitDefaultValue = true)] public string SmtpPassword { get; set; } Property Value Type Description string SMTP password for login View Source SmtpServerHost SMTP server host domain Declaration [DataMember(Name = \"smtpServerHost\", IsRequired = true, EmitDefaultValue = true)] public string SmtpServerHost { get; set; } Property Value Type Description string SMTP server host domain View Source SmtpServerPort SMTP server host port Declaration [DataMember(Name = \"smtpServerPort\", IsRequired = true, EmitDefaultValue = true)] public int SmtpServerPort { get; set; } Property Value Type Description int SMTP server host port View Source SmtpUsername SMTP username for login Declaration [DataMember(Name = \"smtpUsername\", IsRequired = true, EmitDefaultValue = true)] public string SmtpUsername { get; set; } Property Value Type Description string SMTP username for login Methods View Source Equals(ImapSmtpAccessDetails) Returns true if ImapSmtpAccessDetails instances are equal Declaration public bool Equals(ImapSmtpAccessDetails input) Parameters Type Name Description ImapSmtpAccessDetails input Instance of ImapSmtpAccessDetails to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxByEmailAddressResult.html": {
    "href": "api/mailslurp.Model.InboxByEmailAddressResult.html",
    "title": "Class InboxByEmailAddressResult | MailSlurp",
    "keywords": "Class InboxByEmailAddressResult Result of search for inbox by email address Inheritance object InboxByEmailAddressResult Implements IEquatable<InboxByEmailAddressResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxByEmailAddressResult\")] public class InboxByEmailAddressResult : IEquatable<InboxByEmailAddressResult>, IValidatableObject Constructors View Source InboxByEmailAddressResult() Initializes a new instance of the InboxByEmailAddressResult class. Declaration [JsonConstructor] protected InboxByEmailAddressResult() View Source InboxByEmailAddressResult(Guid?, bool) Initializes a new instance of the InboxByEmailAddressResult class. Declaration public InboxByEmailAddressResult(Guid? inboxId = null, bool exists = false) Parameters Type Name Description Guid? inboxId inboxId. bool exists exists (required). Properties View Source Exists Gets or Sets Exists Declaration [DataMember(Name = \"exists\", IsRequired = true, EmitDefaultValue = true)] public bool Exists { get; set; } Property Value Type Description bool View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = true)] public Guid? InboxId { get; set; } Property Value Type Description Guid? Methods View Source Equals(InboxByEmailAddressResult) Returns true if InboxByEmailAddressResult instances are equal Declaration public bool Equals(InboxByEmailAddressResult input) Parameters Type Name Description InboxByEmailAddressResult input Instance of InboxByEmailAddressResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxByNameResult.html": {
    "href": "api/mailslurp.Model.InboxByNameResult.html",
    "title": "Class InboxByNameResult | MailSlurp",
    "keywords": "Class InboxByNameResult Result of search for inbox by name Inheritance object InboxByNameResult Implements IEquatable<InboxByNameResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxByNameResult\")] public class InboxByNameResult : IEquatable<InboxByNameResult>, IValidatableObject Constructors View Source InboxByNameResult() Initializes a new instance of the InboxByNameResult class. Declaration [JsonConstructor] protected InboxByNameResult() View Source InboxByNameResult(Guid?, bool) Initializes a new instance of the InboxByNameResult class. Declaration public InboxByNameResult(Guid? inboxId = null, bool exists = false) Parameters Type Name Description Guid? inboxId inboxId. bool exists exists (required). Properties View Source Exists Gets or Sets Exists Declaration [DataMember(Name = \"exists\", IsRequired = true, EmitDefaultValue = true)] public bool Exists { get; set; } Property Value Type Description bool View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = true)] public Guid? InboxId { get; set; } Property Value Type Description Guid? Methods View Source Equals(InboxByNameResult) Returns true if InboxByNameResult instances are equal Declaration public bool Equals(InboxByNameResult input) Parameters Type Name Description InboxByNameResult input Instance of InboxByNameResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxDto.FunctionsAsEnum.html": {
    "href": "api/mailslurp.Model.InboxDto.FunctionsAsEnum.html",
    "title": "Enum InboxDto.FunctionsAsEnum | MailSlurp",
    "keywords": "Enum InboxDto.FunctionsAsEnum Inbox function if used as a primitive for another system. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum InboxDto.FunctionsAsEnum Fields Name Description ALIAS Enum ALIAS for value: ALIAS CATCHALL Enum CATCHALL for value: CATCH_ALL CONNECTOR Enum CONNECTOR for value: CONNECTOR THREAD Enum THREAD for value: THREAD"
  },
  "api/mailslurp.Model.InboxDto.html": {
    "href": "api/mailslurp.Model.InboxDto.html",
    "title": "Class InboxDto | MailSlurp",
    "keywords": "Class InboxDto Representation of a MailSlurp inbox. An inbox has an ID and a real email address. Emails can be sent to or from this email address. Inboxes are either SMTP or HTTP mailboxes. The default, HTTP inboxes, use AWS SES to process emails and are best suited as test email accounts and do not support IMAP or POP3. SMTP inboxes use a custom mail server at mx.mailslurp.com and support SMTP login, IMAP and POP3. Use the EmailController or the InboxController methods to send and receive emails and attachments. Inboxes may have a description, name, and tags for display purposes. You can also favourite an inbox for easier searching. Inheritance object InboxDto Implements IEquatable<InboxDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxDto\")] public class InboxDto : IEquatable<InboxDto>, IValidatableObject Constructors View Source InboxDto() Initializes a new instance of the InboxDto class. Declaration [JsonConstructor] protected InboxDto() View Source InboxDto(Guid, Guid?, DateTime, string, Guid?, string, string, string, bool, List<string>, InboxTypeEnum?, bool, bool, FunctionsAsEnum?) Initializes a new instance of the InboxDto class. Declaration public InboxDto(Guid id = default, Guid? userId = null, DateTime createdAt = default, string name = null, Guid? domainId = null, string description = null, string emailAddress = null, string expiresAt = null, bool favourite = false, List<string> tags = null, InboxDto.InboxTypeEnum? inboxType = null, bool readOnly = false, bool virtualInbox = false, InboxDto.FunctionsAsEnum? functionsAs = null) Parameters Type Name Description Guid id ID of the inbox. The ID is a UUID-V4 format string. Use the inboxId for calls to Inbox and Email Controller endpoints. See the emailAddress property for the email address or the inbox. To get emails in an inbox use the WaitFor and Inbox Controller methods waitForLatestEmail and getEmails methods respectively. Inboxes can be used with aliases to forward emails automatically. (required). Guid? userId ID of user that inbox belongs to. DateTime createdAt When the inbox was created. Time stamps are in ISO DateTime Format yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX e.g. 2000-10-31T01:30:00.000-05:00. (required). string name Name of the inbox and used as the sender name when sending emails .Displayed in the dashboard for easier search. Guid? domainId ID of custom domain used by the inbox if any. string description Description of an inbox for labelling and searching purposes. string emailAddress The inbox's email address. Inbox projections and previews may not include the email address. To view the email address fetch the inbox entity directly. Send an email to this address and the inbox will receive and store it for you. Note the email address in MailSlurp match characters exactly and are case sensitive so +123 additions are considered different addresses. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. (required). string expiresAt Inbox expiration time. When, if ever, the inbox should expire and be deleted. If null then this inbox is permanent and the emails in it won't be deleted. This is the default behavior unless expiration date is set. If an expiration date is set and the time is reached MailSlurp will expire the inbox and move it to an expired inbox entity. You can still access the emails belonging to it but it can no longer send or receive email.. bool favourite Is the inbox a favorite inbox. Make an inbox a favorite is typically done in the dashboard for quick access or filtering (required). List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI.. InboxDto.InboxTypeEnum? inboxType Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send).. bool readOnly Is the inbox readOnly for the caller. Read only means can not be deleted or modified. This flag is present when using team accounts and shared inboxes. (required). bool virtualInbox Virtual inbox can receive email but will not send emails to real recipients. Will save sent email record but never send an actual email. Perfect for testing mail server actions. (required). InboxDto.FunctionsAsEnum? functionsAs Inbox function if used as a primitive for another system.. Properties View Source CreatedAt When the inbox was created. Time stamps are in ISO DateTime Format yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX e.g. 2000-10-31T01:30:00.000-05:00. Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime When the inbox was created. Time stamps are in ISO DateTime Format yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX e.g. 2000-10-31T01:30:00.000-05:00. View Source Description Description of an inbox for labelling and searching purposes Declaration [DataMember(Name = \"description\", EmitDefaultValue = true)] public string Description { get; set; } Property Value Type Description string Description of an inbox for labelling and searching purposes View Source DomainId ID of custom domain used by the inbox if any Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? ID of custom domain used by the inbox if any View Source EmailAddress The inbox's email address. Inbox projections and previews may not include the email address. To view the email address fetch the inbox entity directly. Send an email to this address and the inbox will receive and store it for you. Note the email address in MailSlurp match characters exactly and are case sensitive so +123 additions are considered different addresses. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string The inbox's email address. Inbox projections and previews may not include the email address. To view the email address fetch the inbox entity directly. Send an email to this address and the inbox will receive and store it for you. Note the email address in MailSlurp match characters exactly and are case sensitive so +123 additions are considered different addresses. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. View Source ExpiresAt Inbox expiration time. When, if ever, the inbox should expire and be deleted. If null then this inbox is permanent and the emails in it won't be deleted. This is the default behavior unless expiration date is set. If an expiration date is set and the time is reached MailSlurp will expire the inbox and move it to an expired inbox entity. You can still access the emails belonging to it but it can no longer send or receive email. Declaration [DataMember(Name = \"expiresAt\", EmitDefaultValue = true)] public string ExpiresAt { get; set; } Property Value Type Description string Inbox expiration time. When, if ever, the inbox should expire and be deleted. If null then this inbox is permanent and the emails in it won't be deleted. This is the default behavior unless expiration date is set. If an expiration date is set and the time is reached MailSlurp will expire the inbox and move it to an expired inbox entity. You can still access the emails belonging to it but it can no longer send or receive email. View Source Favourite Is the inbox a favorite inbox. Make an inbox a favorite is typically done in the dashboard for quick access or filtering Declaration [DataMember(Name = \"favourite\", IsRequired = true, EmitDefaultValue = true)] public bool Favourite { get; set; } Property Value Type Description bool Is the inbox a favorite inbox. Make an inbox a favorite is typically done in the dashboard for quick access or filtering View Source FunctionsAs Inbox function if used as a primitive for another system. Declaration [DataMember(Name = \"functionsAs\", EmitDefaultValue = true)] public InboxDto.FunctionsAsEnum? FunctionsAs { get; set; } Property Value Type Description InboxDto.FunctionsAsEnum? Inbox function if used as a primitive for another system. View Source Id ID of the inbox. The ID is a UUID-V4 format string. Use the inboxId for calls to Inbox and Email Controller endpoints. See the emailAddress property for the email address or the inbox. To get emails in an inbox use the WaitFor and Inbox Controller methods waitForLatestEmail and getEmails methods respectively. Inboxes can be used with aliases to forward emails automatically. Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid ID of the inbox. The ID is a UUID-V4 format string. Use the inboxId for calls to Inbox and Email Controller endpoints. See the emailAddress property for the email address or the inbox. To get emails in an inbox use the WaitFor and Inbox Controller methods waitForLatestEmail and getEmails methods respectively. Inboxes can be used with aliases to forward emails automatically. View Source InboxType Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). Declaration [DataMember(Name = \"inboxType\", EmitDefaultValue = true)] public InboxDto.InboxTypeEnum? InboxType { get; set; } Property Value Type Description InboxDto.InboxTypeEnum? Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). View Source Name Name of the inbox and used as the sender name when sending emails .Displayed in the dashboard for easier search Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Name of the inbox and used as the sender name when sending emails .Displayed in the dashboard for easier search View Source ReadOnly Is the inbox readOnly for the caller. Read only means can not be deleted or modified. This flag is present when using team accounts and shared inboxes. Declaration [DataMember(Name = \"readOnly\", IsRequired = true, EmitDefaultValue = true)] public bool ReadOnly { get; set; } Property Value Type Description bool Is the inbox readOnly for the caller. Read only means can not be deleted or modified. This flag is present when using team accounts and shared inboxes. View Source Tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. Declaration [DataMember(Name = \"tags\", EmitDefaultValue = true)] public List<string> Tags { get; set; } Property Value Type Description List<string> Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. View Source UserId ID of user that inbox belongs to Declaration [DataMember(Name = \"userId\", EmitDefaultValue = true)] public Guid? UserId { get; set; } Property Value Type Description Guid? ID of user that inbox belongs to View Source VirtualInbox Virtual inbox can receive email but will not send emails to real recipients. Will save sent email record but never send an actual email. Perfect for testing mail server actions. Declaration [DataMember(Name = \"virtualInbox\", IsRequired = true, EmitDefaultValue = true)] public bool VirtualInbox { get; set; } Property Value Type Description bool Virtual inbox can receive email but will not send emails to real recipients. Will save sent email record but never send an actual email. Perfect for testing mail server actions. Methods View Source Equals(InboxDto) Returns true if InboxDto instances are equal Declaration public bool Equals(InboxDto input) Parameters Type Name Description InboxDto input Instance of InboxDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxDto.InboxTypeEnum.html": {
    "href": "api/mailslurp.Model.InboxDto.InboxTypeEnum.html",
    "title": "Enum InboxDto.InboxTypeEnum | MailSlurp",
    "keywords": "Enum InboxDto.InboxTypeEnum Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum InboxDto.InboxTypeEnum Fields Name Description HTTPINBOX Enum HTTPINBOX for value: HTTP_INBOX SMTPINBOX Enum SMTPINBOX for value: SMTP_INBOX"
  },
  "api/mailslurp.Model.InboxExistsDto.html": {
    "href": "api/mailslurp.Model.InboxExistsDto.html",
    "title": "Class InboxExistsDto | MailSlurp",
    "keywords": "Class InboxExistsDto Result of email exists query Inheritance object InboxExistsDto Implements IEquatable<InboxExistsDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxExistsDto\")] public class InboxExistsDto : IEquatable<InboxExistsDto>, IValidatableObject Constructors View Source InboxExistsDto() Initializes a new instance of the InboxExistsDto class. Declaration [JsonConstructor] protected InboxExistsDto() View Source InboxExistsDto(bool) Initializes a new instance of the InboxExistsDto class. Declaration public InboxExistsDto(bool exists = false) Parameters Type Name Description bool exists exists (required). Properties View Source Exists Gets or Sets Exists Declaration [DataMember(Name = \"exists\", IsRequired = true, EmitDefaultValue = true)] public bool Exists { get; set; } Property Value Type Description bool Methods View Source Equals(InboxExistsDto) Returns true if InboxExistsDto instances are equal Declaration public bool Equals(InboxExistsDto input) Parameters Type Name Description InboxExistsDto input Instance of InboxExistsDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxForwarderDto.FieldEnum.html": {
    "href": "api/mailslurp.Model.InboxForwarderDto.FieldEnum.html",
    "title": "Enum InboxForwarderDto.FieldEnum | MailSlurp",
    "keywords": "Enum InboxForwarderDto.FieldEnum Which field to match against Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum InboxForwarderDto.FieldEnum Fields Name Description ATTACHMENTS Enum ATTACHMENTS for value: ATTACHMENTS RECIPIENTS Enum RECIPIENTS for value: RECIPIENTS SENDER Enum SENDER for value: SENDER SUBJECT Enum SUBJECT for value: SUBJECT"
  },
  "api/mailslurp.Model.InboxForwarderDto.html": {
    "href": "api/mailslurp.Model.InboxForwarderDto.html",
    "title": "Class InboxForwarderDto | MailSlurp",
    "keywords": "Class InboxForwarderDto Inbox forwarder. Describes how an inbox will forward matching emails to designated recipients. Inheritance object InboxForwarderDto Implements IEquatable<InboxForwarderDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxForwarderDto\")] public class InboxForwarderDto : IEquatable<InboxForwarderDto>, IValidatableObject Constructors View Source InboxForwarderDto() Initializes a new instance of the InboxForwarderDto class. Declaration [JsonConstructor] protected InboxForwarderDto() View Source InboxForwarderDto(Guid, Guid, string, FieldEnum, string, List<string>, DateTime) Initializes a new instance of the InboxForwarderDto class. Declaration public InboxForwarderDto(Guid id = default, Guid inboxId = default, string name = null, InboxForwarderDto.FieldEnum field = (InboxForwarderDto.FieldEnum)0, string match = null, List<string> forwardToRecipients = null, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). Guid inboxId inboxId (required). string name Name of inbox forwarder. InboxForwarderDto.FieldEnum field Which field to match against (required). string match Wild-card type pattern to apply to field (required). List<string> forwardToRecipients Who to send forwarded email to (required). DateTime createdAt createdAt (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Field Which field to match against Declaration [DataMember(Name = \"field\", IsRequired = true, EmitDefaultValue = true)] public InboxForwarderDto.FieldEnum Field { get; set; } Property Value Type Description InboxForwarderDto.FieldEnum Which field to match against View Source ForwardToRecipients Who to send forwarded email to Declaration [DataMember(Name = \"forwardToRecipients\", IsRequired = true, EmitDefaultValue = true)] public List<string> ForwardToRecipients { get; set; } Property Value Type Description List<string> Who to send forwarded email to View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source Match Wild-card type pattern to apply to field Declaration [DataMember(Name = \"match\", IsRequired = true, EmitDefaultValue = true)] public string Match { get; set; } Property Value Type Description string Wild-card type pattern to apply to field View Source Name Name of inbox forwarder Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Name of inbox forwarder Methods View Source Equals(InboxForwarderDto) Returns true if InboxForwarderDto instances are equal Declaration public bool Equals(InboxForwarderDto input) Parameters Type Name Description InboxForwarderDto input Instance of InboxForwarderDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxForwarderEventDto.html": {
    "href": "api/mailslurp.Model.InboxForwarderEventDto.html",
    "title": "Class InboxForwarderEventDto | MailSlurp",
    "keywords": "Class InboxForwarderEventDto Inbox forwarder event. Describes how an email was handled by an inbox forwarder. Inheritance object InboxForwarderEventDto Implements IEquatable<InboxForwarderEventDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxForwarderEventDto\")] public class InboxForwarderEventDto : IEquatable<InboxForwarderEventDto>, IValidatableObject Constructors View Source InboxForwarderEventDto() Initializes a new instance of the InboxForwarderEventDto class. Declaration [JsonConstructor] protected InboxForwarderEventDto() View Source InboxForwarderEventDto(Guid?, Guid?, Guid?, Guid?, Guid?, string, StatusEnum?, DateTime) Initializes a new instance of the InboxForwarderEventDto class. Declaration public InboxForwarderEventDto(Guid? id = null, Guid? inboxId = null, Guid? emailId = null, Guid? userId = null, Guid? forwarderId = null, string message = null, InboxForwarderEventDto.StatusEnum? status = null, DateTime createdAt = default) Parameters Type Name Description Guid? id id. Guid? inboxId inboxId. Guid? emailId emailId. Guid? userId userId. Guid? forwarderId forwarderId. string message message. InboxForwarderEventDto.StatusEnum? status status. DateTime createdAt createdAt (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EmailId Gets or Sets EmailId Declaration [DataMember(Name = \"emailId\", EmitDefaultValue = true)] public Guid? EmailId { get; set; } Property Value Type Description Guid? View Source ForwarderId Gets or Sets ForwarderId Declaration [DataMember(Name = \"forwarderId\", EmitDefaultValue = true)] public Guid? ForwarderId { get; set; } Property Value Type Description Guid? View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", EmitDefaultValue = true)] public Guid? Id { get; set; } Property Value Type Description Guid? View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = true)] public Guid? InboxId { get; set; } Property Value Type Description Guid? View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = true)] public string Message { get; set; } Property Value Type Description string View Source Status Gets or Sets Status Declaration [DataMember(Name = \"status\", EmitDefaultValue = true)] public InboxForwarderEventDto.StatusEnum? Status { get; set; } Property Value Type Description InboxForwarderEventDto.StatusEnum? View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", EmitDefaultValue = true)] public Guid? UserId { get; set; } Property Value Type Description Guid? Methods View Source Equals(InboxForwarderEventDto) Returns true if InboxForwarderEventDto instances are equal Declaration public bool Equals(InboxForwarderEventDto input) Parameters Type Name Description InboxForwarderEventDto input Instance of InboxForwarderEventDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxForwarderEventDto.StatusEnum.html": {
    "href": "api/mailslurp.Model.InboxForwarderEventDto.StatusEnum.html",
    "title": "Enum InboxForwarderEventDto.StatusEnum | MailSlurp",
    "keywords": "Enum InboxForwarderEventDto.StatusEnum Defines Status Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum InboxForwarderEventDto.StatusEnum Fields Name Description FAILURE Enum FAILURE for value: FAILURE SUCCESS Enum SUCCESS for value: SUCCESS"
  },
  "api/mailslurp.Model.InboxForwarderEventProjection.html": {
    "href": "api/mailslurp.Model.InboxForwarderEventProjection.html",
    "title": "Class InboxForwarderEventProjection | MailSlurp",
    "keywords": "Class InboxForwarderEventProjection Inbox forwarder event Inheritance object InboxForwarderEventProjection Implements IEquatable<InboxForwarderEventProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxForwarderEventProjection\")] public class InboxForwarderEventProjection : IEquatable<InboxForwarderEventProjection>, IValidatableObject Constructors View Source InboxForwarderEventProjection() Initializes a new instance of the InboxForwarderEventProjection class. Declaration [JsonConstructor] protected InboxForwarderEventProjection() View Source InboxForwarderEventProjection(DateTime, Guid?, Guid?, Guid?, Guid?, string, Guid?, StatusEnum?) Initializes a new instance of the InboxForwarderEventProjection class. Declaration public InboxForwarderEventProjection(DateTime createdAt = default, Guid? userId = null, Guid? emailId = null, Guid? inboxId = null, Guid? forwarderId = null, string message = null, Guid? id = null, InboxForwarderEventProjection.StatusEnum? status = null) Parameters Type Name Description DateTime createdAt createdAt (required). Guid? userId userId. Guid? emailId emailId. Guid? inboxId inboxId. Guid? forwarderId forwarderId. string message message. Guid? id id. InboxForwarderEventProjection.StatusEnum? status status. Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EmailId Gets or Sets EmailId Declaration [DataMember(Name = \"emailId\", EmitDefaultValue = true)] public Guid? EmailId { get; set; } Property Value Type Description Guid? View Source ForwarderId Gets or Sets ForwarderId Declaration [DataMember(Name = \"forwarderId\", EmitDefaultValue = true)] public Guid? ForwarderId { get; set; } Property Value Type Description Guid? View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", EmitDefaultValue = true)] public Guid? Id { get; set; } Property Value Type Description Guid? View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = true)] public Guid? InboxId { get; set; } Property Value Type Description Guid? View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = true)] public string Message { get; set; } Property Value Type Description string View Source Status Gets or Sets Status Declaration [DataMember(Name = \"status\", EmitDefaultValue = true)] public InboxForwarderEventProjection.StatusEnum? Status { get; set; } Property Value Type Description InboxForwarderEventProjection.StatusEnum? View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", EmitDefaultValue = true)] public Guid? UserId { get; set; } Property Value Type Description Guid? Methods View Source Equals(InboxForwarderEventProjection) Returns true if InboxForwarderEventProjection instances are equal Declaration public bool Equals(InboxForwarderEventProjection input) Parameters Type Name Description InboxForwarderEventProjection input Instance of InboxForwarderEventProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxForwarderEventProjection.StatusEnum.html": {
    "href": "api/mailslurp.Model.InboxForwarderEventProjection.StatusEnum.html",
    "title": "Enum InboxForwarderEventProjection.StatusEnum | MailSlurp",
    "keywords": "Enum InboxForwarderEventProjection.StatusEnum Defines Status Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum InboxForwarderEventProjection.StatusEnum Fields Name Description FAILURE Enum FAILURE for value: FAILURE SUCCESS Enum SUCCESS for value: SUCCESS"
  },
  "api/mailslurp.Model.InboxForwarderTestOptions.html": {
    "href": "api/mailslurp.Model.InboxForwarderTestOptions.html",
    "title": "Class InboxForwarderTestOptions | MailSlurp",
    "keywords": "Class InboxForwarderTestOptions Options for testing an inbox forwarder against a value Inheritance object InboxForwarderTestOptions Implements IEquatable<InboxForwarderTestOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxForwarderTestOptions\")] public class InboxForwarderTestOptions : IEquatable<InboxForwarderTestOptions>, IValidatableObject Constructors View Source InboxForwarderTestOptions() Initializes a new instance of the InboxForwarderTestOptions class. Declaration [JsonConstructor] protected InboxForwarderTestOptions() View Source InboxForwarderTestOptions(string) Initializes a new instance of the InboxForwarderTestOptions class. Declaration public InboxForwarderTestOptions(string testValue = null) Parameters Type Name Description string testValue testValue (required). Properties View Source TestValue Gets or Sets TestValue Declaration [DataMember(Name = \"testValue\", IsRequired = true, EmitDefaultValue = true)] public string TestValue { get; set; } Property Value Type Description string Methods View Source Equals(InboxForwarderTestOptions) Returns true if InboxForwarderTestOptions instances are equal Declaration public bool Equals(InboxForwarderTestOptions input) Parameters Type Name Description InboxForwarderTestOptions input Instance of InboxForwarderTestOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxForwarderTestResult.html": {
    "href": "api/mailslurp.Model.InboxForwarderTestResult.html",
    "title": "Class InboxForwarderTestResult | MailSlurp",
    "keywords": "Class InboxForwarderTestResult Results of inbox forwarder test Inheritance object InboxForwarderTestResult Implements IEquatable<InboxForwarderTestResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxForwarderTestResult\")] public class InboxForwarderTestResult : IEquatable<InboxForwarderTestResult>, IValidatableObject Constructors View Source InboxForwarderTestResult() Initializes a new instance of the InboxForwarderTestResult class. Declaration [JsonConstructor] protected InboxForwarderTestResult() View Source InboxForwarderTestResult(Dictionary<string, bool>, bool) Initializes a new instance of the InboxForwarderTestResult class. Declaration public InboxForwarderTestResult(Dictionary<string, bool> matches = null, bool doesMatch = false) Parameters Type Name Description Dictionary<string, bool> matches matches (required). bool doesMatch doesMatch (required). Properties View Source DoesMatch Gets or Sets DoesMatch Declaration [DataMember(Name = \"doesMatch\", IsRequired = true, EmitDefaultValue = true)] public bool DoesMatch { get; set; } Property Value Type Description bool View Source Matches Gets or Sets Matches Declaration [DataMember(Name = \"matches\", IsRequired = true, EmitDefaultValue = true)] public Dictionary<string, bool> Matches { get; set; } Property Value Type Description Dictionary<string, bool> Methods View Source Equals(InboxForwarderTestResult) Returns true if InboxForwarderTestResult instances are equal Declaration public bool Equals(InboxForwarderTestResult input) Parameters Type Name Description InboxForwarderTestResult input Instance of InboxForwarderTestResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxIdItem.html": {
    "href": "api/mailslurp.Model.InboxIdItem.html",
    "title": "Class InboxIdItem | MailSlurp",
    "keywords": "Class InboxIdItem Inbox ID and email address pair Inheritance object InboxIdItem Implements IEquatable<InboxIdItem> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxIdItem\")] public class InboxIdItem : IEquatable<InboxIdItem>, IValidatableObject Constructors View Source InboxIdItem() Initializes a new instance of the InboxIdItem class. Declaration [JsonConstructor] protected InboxIdItem() View Source InboxIdItem(Guid, string) Initializes a new instance of the InboxIdItem class. Declaration public InboxIdItem(Guid id = default, string emailAddress = null) Parameters Type Name Description Guid id id (required). string emailAddress emailAddress (required). Properties View Source EmailAddress Gets or Sets EmailAddress Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid Methods View Source Equals(InboxIdItem) Returns true if InboxIdItem instances are equal Declaration public bool Equals(InboxIdItem input) Parameters Type Name Description InboxIdItem input Instance of InboxIdItem to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxIdsResult.html": {
    "href": "api/mailslurp.Model.InboxIdsResult.html",
    "title": "Class InboxIdsResult | MailSlurp",
    "keywords": "Class InboxIdsResult List of inbox IDs and email addresses Inheritance object InboxIdsResult Implements IEquatable<InboxIdsResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxIdsResult\")] public class InboxIdsResult : IEquatable<InboxIdsResult>, IValidatableObject Constructors View Source InboxIdsResult() Initializes a new instance of the InboxIdsResult class. Declaration [JsonConstructor] protected InboxIdsResult() View Source InboxIdsResult(List<InboxIdItem>) Initializes a new instance of the InboxIdsResult class. Declaration public InboxIdsResult(List<InboxIdItem> inboxIds = null) Parameters Type Name Description List<InboxIdItem> inboxIds inboxIds (required). Properties View Source InboxIds Gets or Sets InboxIds Declaration [DataMember(Name = \"inboxIds\", IsRequired = true, EmitDefaultValue = true)] public List<InboxIdItem> InboxIds { get; set; } Property Value Type Description List<InboxIdItem> Methods View Source Equals(InboxIdsResult) Returns true if InboxIdsResult instances are equal Declaration public bool Equals(InboxIdsResult input) Parameters Type Name Description InboxIdsResult input Instance of InboxIdsResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxPreview.FunctionsAsEnum.html": {
    "href": "api/mailslurp.Model.InboxPreview.FunctionsAsEnum.html",
    "title": "Enum InboxPreview.FunctionsAsEnum | MailSlurp",
    "keywords": "Enum InboxPreview.FunctionsAsEnum Inbox function if used as a primitive for another system. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum InboxPreview.FunctionsAsEnum Fields Name Description ALIAS Enum ALIAS for value: ALIAS CATCHALL Enum CATCHALL for value: CATCH_ALL CONNECTOR Enum CONNECTOR for value: CONNECTOR THREAD Enum THREAD for value: THREAD"
  },
  "api/mailslurp.Model.InboxPreview.html": {
    "href": "api/mailslurp.Model.InboxPreview.html",
    "title": "Class InboxPreview | MailSlurp",
    "keywords": "Class InboxPreview Inbox data preview element. Inheritance object InboxPreview Implements IEquatable<InboxPreview> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxPreview\")] public class InboxPreview : IEquatable<InboxPreview>, IValidatableObject Constructors View Source InboxPreview() Initializes a new instance of the InboxPreview class. Declaration [JsonConstructor] protected InboxPreview() View Source InboxPreview(Guid, Guid?, string, DateTime, bool, string, List<string>, bool, InboxTypeEnum?, bool, string, FunctionsAsEnum?) Initializes a new instance of the InboxPreview class. Declaration public InboxPreview(Guid id = default, Guid? domainId = null, string emailAddress = null, DateTime createdAt = default, bool favourite = false, string name = null, List<string> tags = null, bool teamAccess = false, InboxPreview.InboxTypeEnum? inboxType = null, bool virtualInbox = false, string expiresAt = null, InboxPreview.FunctionsAsEnum? functionsAs = null) Parameters Type Name Description Guid id ID of the inbox. The ID is a UUID-V4 format string. Use the inboxId for calls to Inbox and Email Controller endpoints. See the emailAddress property for the email address or the inbox. To get emails in an inbox use the WaitFor and Inbox Controller methods waitForLatestEmail and getEmails methods respectively. Inboxes can be used with aliases to forward emails automatically. (required). Guid? domainId ID of custom domain used by the inbox if any. string emailAddress The inbox's email address. Inbox projections and previews may not include the email address. To view the email address fetch the inbox entity directly. Send an email to this address and the inbox will receive and store it for you. Note the email address in MailSlurp match characters exactly and are case sensitive so +123 additions are considered different addresses. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID.. DateTime createdAt When the inbox was created. Time stamps are in ISO DateTime Format yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX e.g. 2000-10-31T01:30:00.000-05:00. (required). bool favourite Is the inbox a favorite inbox. Make an inbox a favorite is typically done in the dashboard for quick access or filtering (required). string name Name of the inbox and used as the sender name when sending emails .Displayed in the dashboard for easier search. List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI.. bool teamAccess Does inbox permit team access for organization team members. If so team users can use inbox and emails associated with it. See the team access guide at https://www.mailslurp.com/guides/team-email-account-sharing/ (required). InboxPreview.InboxTypeEnum? inboxType Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send).. bool virtualInbox Virtual inbox can receive email but will not send emails to real recipients. Will save sent email record but never send an actual email. Perfect for testing mail server actions. (required). string expiresAt Inbox expiration time. When, if ever, the inbox should expire and be deleted. If null then this inbox is permanent and the emails in it won't be deleted. This is the default behavior unless expiration date is set. If an expiration date is set and the time is reached MailSlurp will expire the inbox and move it to an expired inbox entity. You can still access the emails belonging to it but it can no longer send or receive email.. InboxPreview.FunctionsAsEnum? functionsAs Inbox function if used as a primitive for another system.. Properties View Source CreatedAt When the inbox was created. Time stamps are in ISO DateTime Format yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX e.g. 2000-10-31T01:30:00.000-05:00. Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime When the inbox was created. Time stamps are in ISO DateTime Format yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX e.g. 2000-10-31T01:30:00.000-05:00. View Source DomainId ID of custom domain used by the inbox if any Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? ID of custom domain used by the inbox if any View Source EmailAddress The inbox's email address. Inbox projections and previews may not include the email address. To view the email address fetch the inbox entity directly. Send an email to this address and the inbox will receive and store it for you. Note the email address in MailSlurp match characters exactly and are case sensitive so +123 additions are considered different addresses. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. Declaration [DataMember(Name = \"emailAddress\", EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string The inbox's email address. Inbox projections and previews may not include the email address. To view the email address fetch the inbox entity directly. Send an email to this address and the inbox will receive and store it for you. Note the email address in MailSlurp match characters exactly and are case sensitive so +123 additions are considered different addresses. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. View Source ExpiresAt Inbox expiration time. When, if ever, the inbox should expire and be deleted. If null then this inbox is permanent and the emails in it won't be deleted. This is the default behavior unless expiration date is set. If an expiration date is set and the time is reached MailSlurp will expire the inbox and move it to an expired inbox entity. You can still access the emails belonging to it but it can no longer send or receive email. Declaration [DataMember(Name = \"expiresAt\", EmitDefaultValue = true)] public string ExpiresAt { get; set; } Property Value Type Description string Inbox expiration time. When, if ever, the inbox should expire and be deleted. If null then this inbox is permanent and the emails in it won't be deleted. This is the default behavior unless expiration date is set. If an expiration date is set and the time is reached MailSlurp will expire the inbox and move it to an expired inbox entity. You can still access the emails belonging to it but it can no longer send or receive email. View Source Favourite Is the inbox a favorite inbox. Make an inbox a favorite is typically done in the dashboard for quick access or filtering Declaration [DataMember(Name = \"favourite\", IsRequired = true, EmitDefaultValue = true)] public bool Favourite { get; set; } Property Value Type Description bool Is the inbox a favorite inbox. Make an inbox a favorite is typically done in the dashboard for quick access or filtering View Source FunctionsAs Inbox function if used as a primitive for another system. Declaration [DataMember(Name = \"functionsAs\", EmitDefaultValue = true)] public InboxPreview.FunctionsAsEnum? FunctionsAs { get; set; } Property Value Type Description InboxPreview.FunctionsAsEnum? Inbox function if used as a primitive for another system. View Source Id ID of the inbox. The ID is a UUID-V4 format string. Use the inboxId for calls to Inbox and Email Controller endpoints. See the emailAddress property for the email address or the inbox. To get emails in an inbox use the WaitFor and Inbox Controller methods waitForLatestEmail and getEmails methods respectively. Inboxes can be used with aliases to forward emails automatically. Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid ID of the inbox. The ID is a UUID-V4 format string. Use the inboxId for calls to Inbox and Email Controller endpoints. See the emailAddress property for the email address or the inbox. To get emails in an inbox use the WaitFor and Inbox Controller methods waitForLatestEmail and getEmails methods respectively. Inboxes can be used with aliases to forward emails automatically. View Source InboxType Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). Declaration [DataMember(Name = \"inboxType\", EmitDefaultValue = true)] public InboxPreview.InboxTypeEnum? InboxType { get; set; } Property Value Type Description InboxPreview.InboxTypeEnum? Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). View Source Name Name of the inbox and used as the sender name when sending emails .Displayed in the dashboard for easier search Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Name of the inbox and used as the sender name when sending emails .Displayed in the dashboard for easier search View Source Tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. Declaration [DataMember(Name = \"tags\", EmitDefaultValue = true)] public List<string> Tags { get; set; } Property Value Type Description List<string> Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. View Source TeamAccess Does inbox permit team access for organization team members. If so team users can use inbox and emails associated with it. See the team access guide at https://www.mailslurp.com/guides/team-email-account-sharing/ Declaration [DataMember(Name = \"teamAccess\", IsRequired = true, EmitDefaultValue = true)] public bool TeamAccess { get; set; } Property Value Type Description bool Does inbox permit team access for organization team members. If so team users can use inbox and emails associated with it. See the team access guide at https://www.mailslurp.com/guides/team-email-account-sharing/ View Source VirtualInbox Virtual inbox can receive email but will not send emails to real recipients. Will save sent email record but never send an actual email. Perfect for testing mail server actions. Declaration [DataMember(Name = \"virtualInbox\", IsRequired = true, EmitDefaultValue = true)] public bool VirtualInbox { get; set; } Property Value Type Description bool Virtual inbox can receive email but will not send emails to real recipients. Will save sent email record but never send an actual email. Perfect for testing mail server actions. Methods View Source Equals(InboxPreview) Returns true if InboxPreview instances are equal Declaration public bool Equals(InboxPreview input) Parameters Type Name Description InboxPreview input Instance of InboxPreview to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxPreview.InboxTypeEnum.html": {
    "href": "api/mailslurp.Model.InboxPreview.InboxTypeEnum.html",
    "title": "Enum InboxPreview.InboxTypeEnum | MailSlurp",
    "keywords": "Enum InboxPreview.InboxTypeEnum Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum InboxPreview.InboxTypeEnum Fields Name Description HTTPINBOX Enum HTTPINBOX for value: HTTP_INBOX SMTPINBOX Enum SMTPINBOX for value: SMTP_INBOX"
  },
  "api/mailslurp.Model.InboxReplierDto.FieldEnum.html": {
    "href": "api/mailslurp.Model.InboxReplierDto.FieldEnum.html",
    "title": "Enum InboxReplierDto.FieldEnum | MailSlurp",
    "keywords": "Enum InboxReplierDto.FieldEnum Defines Field Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum InboxReplierDto.FieldEnum Fields Name Description ATTACHMENTS Enum ATTACHMENTS for value: ATTACHMENTS RECIPIENTS Enum RECIPIENTS for value: RECIPIENTS SENDER Enum SENDER for value: SENDER SUBJECT Enum SUBJECT for value: SUBJECT"
  },
  "api/mailslurp.Model.InboxReplierDto.html": {
    "href": "api/mailslurp.Model.InboxReplierDto.html",
    "title": "Class InboxReplierDto | MailSlurp",
    "keywords": "Class InboxReplierDto Inbox replier. Will automatically reply to inbound emails that match given field for an inbox. Inheritance object InboxReplierDto Implements IEquatable<InboxReplierDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxReplierDto\")] public class InboxReplierDto : IEquatable<InboxReplierDto>, IValidatableObject Constructors View Source InboxReplierDto() Initializes a new instance of the InboxReplierDto class. Declaration [JsonConstructor] protected InboxReplierDto() View Source InboxReplierDto(Guid, Guid, string, FieldEnum, string, string, string, string, string, bool, Guid?, Dictionary<string, object>, bool, DateTime) Initializes a new instance of the InboxReplierDto class. Declaration public InboxReplierDto(Guid id = default, Guid inboxId = default, string name = null, InboxReplierDto.FieldEnum field = (InboxReplierDto.FieldEnum)0, string match = null, string replyTo = null, string subject = null, string from = null, string charset = null, bool isHTML = false, Guid? templateId = null, Dictionary<string, object> templateVariables = null, bool ignoreReplyTo = false, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). Guid inboxId inboxId (required). string name name. InboxReplierDto.FieldEnum field field (required). string match match (required). string replyTo replyTo. string subject subject. string from from. string charset charset. bool isHTML isHTML (required). Guid? templateId templateId. Dictionary<string, object> templateVariables templateVariables. bool ignoreReplyTo ignoreReplyTo (required). DateTime createdAt createdAt (required). Properties View Source Charset Gets or Sets Charset Declaration [DataMember(Name = \"charset\", EmitDefaultValue = true)] public string Charset { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Field Gets or Sets Field Declaration [DataMember(Name = \"field\", IsRequired = true, EmitDefaultValue = true)] public InboxReplierDto.FieldEnum Field { get; set; } Property Value Type Description InboxReplierDto.FieldEnum View Source From Gets or Sets From Declaration [DataMember(Name = \"from\", EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source IgnoreReplyTo Gets or Sets IgnoreReplyTo Declaration [DataMember(Name = \"ignoreReplyTo\", IsRequired = true, EmitDefaultValue = true)] public bool IgnoreReplyTo { get; set; } Property Value Type Description bool View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source IsHTML Gets or Sets IsHTML Declaration [DataMember(Name = \"isHTML\", IsRequired = true, EmitDefaultValue = true)] public bool IsHTML { get; set; } Property Value Type Description bool View Source Match Gets or Sets Match Declaration [DataMember(Name = \"match\", IsRequired = true, EmitDefaultValue = true)] public string Match { get; set; } Property Value Type Description string View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source ReplyTo Gets or Sets ReplyTo Declaration [DataMember(Name = \"replyTo\", EmitDefaultValue = true)] public string ReplyTo { get; set; } Property Value Type Description string View Source Subject Gets or Sets Subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string View Source TemplateId Gets or Sets TemplateId Declaration [DataMember(Name = \"templateId\", EmitDefaultValue = true)] public Guid? TemplateId { get; set; } Property Value Type Description Guid? View Source TemplateVariables Gets or Sets TemplateVariables Declaration [DataMember(Name = \"templateVariables\", EmitDefaultValue = true)] public Dictionary<string, object> TemplateVariables { get; set; } Property Value Type Description Dictionary<string, object> Methods View Source Equals(InboxReplierDto) Returns true if InboxReplierDto instances are equal Declaration public bool Equals(InboxReplierDto input) Parameters Type Name Description InboxReplierDto input Instance of InboxReplierDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxReplierEventProjection.html": {
    "href": "api/mailslurp.Model.InboxReplierEventProjection.html",
    "title": "Class InboxReplierEventProjection | MailSlurp",
    "keywords": "Class InboxReplierEventProjection Inbox replier event Inheritance object InboxReplierEventProjection Implements IEquatable<InboxReplierEventProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxReplierEventProjection\")] public class InboxReplierEventProjection : IEquatable<InboxReplierEventProjection>, IValidatableObject Constructors View Source InboxReplierEventProjection() Initializes a new instance of the InboxReplierEventProjection class. Declaration [JsonConstructor] protected InboxReplierEventProjection() View Source InboxReplierEventProjection(DateTime, List<string>, Guid?, Guid?, Guid?, Guid?, Guid?, string, Guid?, StatusEnum?) Initializes a new instance of the InboxReplierEventProjection class. Declaration public InboxReplierEventProjection(DateTime createdAt = default, List<string> recipients = null, Guid? userId = null, Guid? emailId = null, Guid? inboxId = null, Guid? sentId = null, Guid? replierId = null, string message = null, Guid? id = null, InboxReplierEventProjection.StatusEnum? status = null) Parameters Type Name Description DateTime createdAt createdAt (required). List<string> recipients recipients. Guid? userId userId. Guid? emailId emailId. Guid? inboxId inboxId. Guid? sentId sentId. Guid? replierId replierId. string message message. Guid? id id. InboxReplierEventProjection.StatusEnum? status status. Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EmailId Gets or Sets EmailId Declaration [DataMember(Name = \"emailId\", EmitDefaultValue = true)] public Guid? EmailId { get; set; } Property Value Type Description Guid? View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", EmitDefaultValue = true)] public Guid? Id { get; set; } Property Value Type Description Guid? View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = true)] public Guid? InboxId { get; set; } Property Value Type Description Guid? View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = true)] public string Message { get; set; } Property Value Type Description string View Source Recipients Gets or Sets Recipients Declaration [DataMember(Name = \"recipients\", EmitDefaultValue = true)] public List<string> Recipients { get; set; } Property Value Type Description List<string> View Source ReplierId Gets or Sets ReplierId Declaration [DataMember(Name = \"replierId\", EmitDefaultValue = true)] public Guid? ReplierId { get; set; } Property Value Type Description Guid? View Source SentId Gets or Sets SentId Declaration [DataMember(Name = \"sentId\", EmitDefaultValue = true)] public Guid? SentId { get; set; } Property Value Type Description Guid? View Source Status Gets or Sets Status Declaration [DataMember(Name = \"status\", EmitDefaultValue = true)] public InboxReplierEventProjection.StatusEnum? Status { get; set; } Property Value Type Description InboxReplierEventProjection.StatusEnum? View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", EmitDefaultValue = true)] public Guid? UserId { get; set; } Property Value Type Description Guid? Methods View Source Equals(InboxReplierEventProjection) Returns true if InboxReplierEventProjection instances are equal Declaration public bool Equals(InboxReplierEventProjection input) Parameters Type Name Description InboxReplierEventProjection input Instance of InboxReplierEventProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxReplierEventProjection.StatusEnum.html": {
    "href": "api/mailslurp.Model.InboxReplierEventProjection.StatusEnum.html",
    "title": "Enum InboxReplierEventProjection.StatusEnum | MailSlurp",
    "keywords": "Enum InboxReplierEventProjection.StatusEnum Defines Status Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum InboxReplierEventProjection.StatusEnum Fields Name Description FAILURE Enum FAILURE for value: FAILURE SUCCESS Enum SUCCESS for value: SUCCESS"
  },
  "api/mailslurp.Model.InboxRulesetDto.ActionEnum.html": {
    "href": "api/mailslurp.Model.InboxRulesetDto.ActionEnum.html",
    "title": "Enum InboxRulesetDto.ActionEnum | MailSlurp",
    "keywords": "Enum InboxRulesetDto.ActionEnum Defines Action Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum InboxRulesetDto.ActionEnum Fields Name Description ALLOW Enum ALLOW for value: ALLOW BLOCK Enum BLOCK for value: BLOCK FILTERREMOVE Enum FILTERREMOVE for value: FILTER_REMOVE"
  },
  "api/mailslurp.Model.InboxRulesetDto.HandlerEnum.html": {
    "href": "api/mailslurp.Model.InboxRulesetDto.HandlerEnum.html",
    "title": "Enum InboxRulesetDto.HandlerEnum | MailSlurp",
    "keywords": "Enum InboxRulesetDto.HandlerEnum Defines Handler Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum InboxRulesetDto.HandlerEnum Fields Name Description EXCEPTION Enum EXCEPTION for value: EXCEPTION"
  },
  "api/mailslurp.Model.InboxRulesetDto.html": {
    "href": "api/mailslurp.Model.InboxRulesetDto.html",
    "title": "Class InboxRulesetDto | MailSlurp",
    "keywords": "Class InboxRulesetDto Rules for inbox Inheritance object InboxRulesetDto Implements IEquatable<InboxRulesetDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxRulesetDto\")] public class InboxRulesetDto : IEquatable<InboxRulesetDto>, IValidatableObject Constructors View Source InboxRulesetDto() Initializes a new instance of the InboxRulesetDto class. Declaration [JsonConstructor] protected InboxRulesetDto() View Source InboxRulesetDto(Guid, Guid?, ScopeEnum, ActionEnum, string, HandlerEnum, DateTime) Initializes a new instance of the InboxRulesetDto class. Declaration public InboxRulesetDto(Guid id = default, Guid? inboxId = null, InboxRulesetDto.ScopeEnum scope = (InboxRulesetDto.ScopeEnum)0, InboxRulesetDto.ActionEnum action = (InboxRulesetDto.ActionEnum)0, string target = null, InboxRulesetDto.HandlerEnum handler = (InboxRulesetDto.HandlerEnum)0, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). Guid? inboxId inboxId. InboxRulesetDto.ScopeEnum scope scope (required). InboxRulesetDto.ActionEnum action action (required). string target target (required). InboxRulesetDto.HandlerEnum handler handler (required). DateTime createdAt createdAt (required). Properties View Source Action Gets or Sets Action Declaration [DataMember(Name = \"action\", IsRequired = true, EmitDefaultValue = true)] public InboxRulesetDto.ActionEnum Action { get; set; } Property Value Type Description InboxRulesetDto.ActionEnum View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Handler Gets or Sets Handler Declaration [DataMember(Name = \"handler\", IsRequired = true, EmitDefaultValue = true)] public InboxRulesetDto.HandlerEnum Handler { get; set; } Property Value Type Description InboxRulesetDto.HandlerEnum View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = true)] public Guid? InboxId { get; set; } Property Value Type Description Guid? View Source Scope Gets or Sets Scope Declaration [DataMember(Name = \"scope\", IsRequired = true, EmitDefaultValue = true)] public InboxRulesetDto.ScopeEnum Scope { get; set; } Property Value Type Description InboxRulesetDto.ScopeEnum View Source Target Gets or Sets Target Declaration [DataMember(Name = \"target\", IsRequired = true, EmitDefaultValue = true)] public string Target { get; set; } Property Value Type Description string Methods View Source Equals(InboxRulesetDto) Returns true if InboxRulesetDto instances are equal Declaration public bool Equals(InboxRulesetDto input) Parameters Type Name Description InboxRulesetDto input Instance of InboxRulesetDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxRulesetDto.ScopeEnum.html": {
    "href": "api/mailslurp.Model.InboxRulesetDto.ScopeEnum.html",
    "title": "Enum InboxRulesetDto.ScopeEnum | MailSlurp",
    "keywords": "Enum InboxRulesetDto.ScopeEnum Defines Scope Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum InboxRulesetDto.ScopeEnum Fields Name Description RECEIVINGEMAILS Enum RECEIVINGEMAILS for value: RECEIVING_EMAILS SENDINGEMAILS Enum SENDINGEMAILS for value: SENDING_EMAILS"
  },
  "api/mailslurp.Model.InboxRulesetTestOptions.html": {
    "href": "api/mailslurp.Model.InboxRulesetTestOptions.html",
    "title": "Class InboxRulesetTestOptions | MailSlurp",
    "keywords": "Class InboxRulesetTestOptions Test options for inbox ruleset Inheritance object InboxRulesetTestOptions Implements IEquatable<InboxRulesetTestOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxRulesetTestOptions\")] public class InboxRulesetTestOptions : IEquatable<InboxRulesetTestOptions>, IValidatableObject Constructors View Source InboxRulesetTestOptions() Initializes a new instance of the InboxRulesetTestOptions class. Declaration [JsonConstructor] protected InboxRulesetTestOptions() View Source InboxRulesetTestOptions(string) Initializes a new instance of the InboxRulesetTestOptions class. Declaration public InboxRulesetTestOptions(string testTarget = null) Parameters Type Name Description string testTarget testTarget (required). Properties View Source TestTarget Gets or Sets TestTarget Declaration [DataMember(Name = \"testTarget\", IsRequired = true, EmitDefaultValue = true)] public string TestTarget { get; set; } Property Value Type Description string Methods View Source Equals(InboxRulesetTestOptions) Returns true if InboxRulesetTestOptions instances are equal Declaration public bool Equals(InboxRulesetTestOptions input) Parameters Type Name Description InboxRulesetTestOptions input Instance of InboxRulesetTestOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.InboxRulesetTestResult.html": {
    "href": "api/mailslurp.Model.InboxRulesetTestResult.html",
    "title": "Class InboxRulesetTestResult | MailSlurp",
    "keywords": "Class InboxRulesetTestResult Result of test of inbox ruleset Inheritance object InboxRulesetTestResult Implements IEquatable<InboxRulesetTestResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"InboxRulesetTestResult\")] public class InboxRulesetTestResult : IEquatable<InboxRulesetTestResult>, IValidatableObject Constructors View Source InboxRulesetTestResult() Initializes a new instance of the InboxRulesetTestResult class. Declaration [JsonConstructor] protected InboxRulesetTestResult() View Source InboxRulesetTestResult(Dictionary<string, bool>, bool) Initializes a new instance of the InboxRulesetTestResult class. Declaration public InboxRulesetTestResult(Dictionary<string, bool> rulesetMatches = null, bool matches = false) Parameters Type Name Description Dictionary<string, bool> rulesetMatches Map of inbox ruleset ID to boolean of if target matches (required). bool matches matches (required). Properties View Source Matches Gets or Sets Matches Declaration [DataMember(Name = \"matches\", IsRequired = true, EmitDefaultValue = true)] public bool Matches { get; set; } Property Value Type Description bool View Source RulesetMatches Map of inbox ruleset ID to boolean of if target matches Declaration [DataMember(Name = \"rulesetMatches\", IsRequired = true, EmitDefaultValue = true)] public Dictionary<string, bool> RulesetMatches { get; set; } Property Value Type Description Dictionary<string, bool> Map of inbox ruleset ID to boolean of if target matches Methods View Source Equals(InboxRulesetTestResult) Returns true if InboxRulesetTestResult instances are equal Declaration public bool Equals(InboxRulesetTestResult input) Parameters Type Name Description InboxRulesetTestResult input Instance of InboxRulesetTestResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.IPAddressResult.html": {
    "href": "api/mailslurp.Model.IPAddressResult.html",
    "title": "Class IPAddressResult | MailSlurp",
    "keywords": "Class IPAddressResult IP Address look up result for a given domain / hostname Inheritance object IPAddressResult Implements IEquatable<IPAddressResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"IPAddressResult\")] public class IPAddressResult : IEquatable<IPAddressResult>, IValidatableObject Constructors View Source IPAddressResult() Initializes a new instance of the IPAddressResult class. Declaration [JsonConstructor] protected IPAddressResult() View Source IPAddressResult(string, string) Initializes a new instance of the IPAddressResult class. Declaration public IPAddressResult(string address = null, string hostname = null) Parameters Type Name Description string address address (required). string hostname hostname (required). Properties View Source Address Gets or Sets Address Declaration [DataMember(Name = \"address\", IsRequired = true, EmitDefaultValue = true)] public string Address { get; set; } Property Value Type Description string View Source Hostname Gets or Sets Hostname Declaration [DataMember(Name = \"hostname\", IsRequired = true, EmitDefaultValue = true)] public string Hostname { get; set; } Property Value Type Description string Methods View Source Equals(IPAddressResult) Returns true if IPAddressResult instances are equal Declaration public bool Equals(IPAddressResult input) Parameters Type Name Description IPAddressResult input Instance of IPAddressResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.JSONSchemaDto.html": {
    "href": "api/mailslurp.Model.JSONSchemaDto.html",
    "title": "Class JSONSchemaDto | MailSlurp",
    "keywords": "Class JSONSchemaDto JSONSchema for payload Inheritance object JSONSchemaDto Implements IEquatable<JSONSchemaDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"JSONSchemaDto\")] public class JSONSchemaDto : IEquatable<JSONSchemaDto>, IValidatableObject Constructors View Source JSONSchemaDto() Initializes a new instance of the JSONSchemaDto class. Declaration [JsonConstructor] protected JSONSchemaDto() View Source JSONSchemaDto(string) Initializes a new instance of the JSONSchemaDto class. Declaration public JSONSchemaDto(string value = null) Parameters Type Name Description string value value (required). Properties View Source Value Gets or Sets Value Declaration [DataMember(Name = \"value\", IsRequired = true, EmitDefaultValue = true)] public string Value { get; set; } Property Value Type Description string Methods View Source Equals(JSONSchemaDto) Returns true if JSONSchemaDto instances are equal Declaration public bool Equals(JSONSchemaDto input) Parameters Type Name Description JSONSchemaDto input Instance of JSONSchemaDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ListUnsubscribeRecipientProjection.html": {
    "href": "api/mailslurp.Model.ListUnsubscribeRecipientProjection.html",
    "title": "Class ListUnsubscribeRecipientProjection | MailSlurp",
    "keywords": "Class ListUnsubscribeRecipientProjection List unsubscribe recipient Inheritance object ListUnsubscribeRecipientProjection Implements IEquatable<ListUnsubscribeRecipientProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ListUnsubscribeRecipientProjection\")] public class ListUnsubscribeRecipientProjection : IEquatable<ListUnsubscribeRecipientProjection>, IValidatableObject Constructors View Source ListUnsubscribeRecipientProjection() Initializes a new instance of the ListUnsubscribeRecipientProjection class. Declaration [JsonConstructor] protected ListUnsubscribeRecipientProjection() View Source ListUnsubscribeRecipientProjection(DateTime, string, Guid?, Guid) Initializes a new instance of the ListUnsubscribeRecipientProjection class. Declaration public ListUnsubscribeRecipientProjection(DateTime createdAt = default, string emailAddress = null, Guid? domainId = null, Guid id = default) Parameters Type Name Description DateTime createdAt createdAt (required). string emailAddress emailAddress (required). Guid? domainId domainId. Guid id id (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source DomainId Gets or Sets DomainId Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? View Source EmailAddress Gets or Sets EmailAddress Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid Methods View Source Equals(ListUnsubscribeRecipientProjection) Returns true if ListUnsubscribeRecipientProjection instances are equal Declaration public bool Equals(ListUnsubscribeRecipientProjection input) Parameters Type Name Description ListUnsubscribeRecipientProjection input Instance of ListUnsubscribeRecipientProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.LookupBimiDomainOptions.html": {
    "href": "api/mailslurp.Model.LookupBimiDomainOptions.html",
    "title": "Class LookupBimiDomainOptions | MailSlurp",
    "keywords": "Class LookupBimiDomainOptions LookupBimiDomainOptions Inheritance object LookupBimiDomainOptions Implements IEquatable<LookupBimiDomainOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"LookupBimiDomainOptions\")] public class LookupBimiDomainOptions : IEquatable<LookupBimiDomainOptions>, IValidatableObject Constructors View Source LookupBimiDomainOptions() Initializes a new instance of the LookupBimiDomainOptions class. Declaration [JsonConstructor] protected LookupBimiDomainOptions() View Source LookupBimiDomainOptions(string) Initializes a new instance of the LookupBimiDomainOptions class. Declaration public LookupBimiDomainOptions(string host = null) Parameters Type Name Description string host host (required). Properties View Source Host Gets or Sets Host Declaration [DataMember(Name = \"host\", IsRequired = true, EmitDefaultValue = true)] public string Host { get; set; } Property Value Type Description string Methods View Source Equals(LookupBimiDomainOptions) Returns true if LookupBimiDomainOptions instances are equal Declaration public bool Equals(LookupBimiDomainOptions input) Parameters Type Name Description LookupBimiDomainOptions input Instance of LookupBimiDomainOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.LookupBimiDomainResults.html": {
    "href": "api/mailslurp.Model.LookupBimiDomainResults.html",
    "title": "Class LookupBimiDomainResults | MailSlurp",
    "keywords": "Class LookupBimiDomainResults LookupBimiDomainResults Inheritance object LookupBimiDomainResults Implements IEquatable<LookupBimiDomainResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"LookupBimiDomainResults\")] public class LookupBimiDomainResults : IEquatable<LookupBimiDomainResults>, IValidatableObject Constructors View Source LookupBimiDomainResults() Initializes a new instance of the LookupBimiDomainResults class. Declaration [JsonConstructor] protected LookupBimiDomainResults() View Source LookupBimiDomainResults(bool, DNSLookupOptions, List<DNSLookupResult>, List<string>, List<string>) Initializes a new instance of the LookupBimiDomainResults class. Declaration public LookupBimiDomainResults(bool valid = false, DNSLookupOptions query = null, List<DNSLookupResult> records = null, List<string> errors = null, List<string> warnings = null) Parameters Type Name Description bool valid valid (required). DNSLookupOptions query query (required). List<DNSLookupResult> records records (required). List<string> errors errors (required). List<string> warnings warnings (required). Properties View Source Errors Gets or Sets Errors Declaration [DataMember(Name = \"errors\", IsRequired = true, EmitDefaultValue = true)] public List<string> Errors { get; set; } Property Value Type Description List<string> View Source Query Gets or Sets Query Declaration [DataMember(Name = \"query\", IsRequired = true, EmitDefaultValue = true)] public DNSLookupOptions Query { get; set; } Property Value Type Description DNSLookupOptions View Source Records Gets or Sets Records Declaration [DataMember(Name = \"records\", IsRequired = true, EmitDefaultValue = true)] public List<DNSLookupResult> Records { get; set; } Property Value Type Description List<DNSLookupResult> View Source Valid Gets or Sets Valid Declaration [DataMember(Name = \"valid\", IsRequired = true, EmitDefaultValue = true)] public bool Valid { get; set; } Property Value Type Description bool View Source Warnings Gets or Sets Warnings Declaration [DataMember(Name = \"warnings\", IsRequired = true, EmitDefaultValue = true)] public List<string> Warnings { get; set; } Property Value Type Description List<string> Methods View Source Equals(LookupBimiDomainResults) Returns true if LookupBimiDomainResults instances are equal Declaration public bool Equals(LookupBimiDomainResults input) Parameters Type Name Description LookupBimiDomainResults input Instance of LookupBimiDomainResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.LookupDmarcDomainOptions.html": {
    "href": "api/mailslurp.Model.LookupDmarcDomainOptions.html",
    "title": "Class LookupDmarcDomainOptions | MailSlurp",
    "keywords": "Class LookupDmarcDomainOptions LookupDmarcDomainOptions Inheritance object LookupDmarcDomainOptions Implements IEquatable<LookupDmarcDomainOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"LookupDmarcDomainOptions\")] public class LookupDmarcDomainOptions : IEquatable<LookupDmarcDomainOptions>, IValidatableObject Constructors View Source LookupDmarcDomainOptions() Initializes a new instance of the LookupDmarcDomainOptions class. Declaration [JsonConstructor] protected LookupDmarcDomainOptions() View Source LookupDmarcDomainOptions(string) Initializes a new instance of the LookupDmarcDomainOptions class. Declaration public LookupDmarcDomainOptions(string host = null) Parameters Type Name Description string host host (required). Properties View Source Host Gets or Sets Host Declaration [DataMember(Name = \"host\", IsRequired = true, EmitDefaultValue = true)] public string Host { get; set; } Property Value Type Description string Methods View Source Equals(LookupDmarcDomainOptions) Returns true if LookupDmarcDomainOptions instances are equal Declaration public bool Equals(LookupDmarcDomainOptions input) Parameters Type Name Description LookupDmarcDomainOptions input Instance of LookupDmarcDomainOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.LookupDmarcDomainResults.html": {
    "href": "api/mailslurp.Model.LookupDmarcDomainResults.html",
    "title": "Class LookupDmarcDomainResults | MailSlurp",
    "keywords": "Class LookupDmarcDomainResults LookupDmarcDomainResults Inheritance object LookupDmarcDomainResults Implements IEquatable<LookupDmarcDomainResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"LookupDmarcDomainResults\")] public class LookupDmarcDomainResults : IEquatable<LookupDmarcDomainResults>, IValidatableObject Constructors View Source LookupDmarcDomainResults() Initializes a new instance of the LookupDmarcDomainResults class. Declaration [JsonConstructor] protected LookupDmarcDomainResults() View Source LookupDmarcDomainResults(bool, DNSLookupOptions, List<DNSLookupResult>, List<string>, List<string>) Initializes a new instance of the LookupDmarcDomainResults class. Declaration public LookupDmarcDomainResults(bool valid = false, DNSLookupOptions query = null, List<DNSLookupResult> records = null, List<string> errors = null, List<string> warnings = null) Parameters Type Name Description bool valid valid (required). DNSLookupOptions query query (required). List<DNSLookupResult> records records (required). List<string> errors errors (required). List<string> warnings warnings (required). Properties View Source Errors Gets or Sets Errors Declaration [DataMember(Name = \"errors\", IsRequired = true, EmitDefaultValue = true)] public List<string> Errors { get; set; } Property Value Type Description List<string> View Source Query Gets or Sets Query Declaration [DataMember(Name = \"query\", IsRequired = true, EmitDefaultValue = true)] public DNSLookupOptions Query { get; set; } Property Value Type Description DNSLookupOptions View Source Records Gets or Sets Records Declaration [DataMember(Name = \"records\", IsRequired = true, EmitDefaultValue = true)] public List<DNSLookupResult> Records { get; set; } Property Value Type Description List<DNSLookupResult> View Source Valid Gets or Sets Valid Declaration [DataMember(Name = \"valid\", IsRequired = true, EmitDefaultValue = true)] public bool Valid { get; set; } Property Value Type Description bool View Source Warnings Gets or Sets Warnings Declaration [DataMember(Name = \"warnings\", IsRequired = true, EmitDefaultValue = true)] public List<string> Warnings { get; set; } Property Value Type Description List<string> Methods View Source Equals(LookupDmarcDomainResults) Returns true if LookupDmarcDomainResults instances are equal Declaration public bool Equals(LookupDmarcDomainResults input) Parameters Type Name Description LookupDmarcDomainResults input Instance of LookupDmarcDomainResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.LookupMtaStsDomainOptions.html": {
    "href": "api/mailslurp.Model.LookupMtaStsDomainOptions.html",
    "title": "Class LookupMtaStsDomainOptions | MailSlurp",
    "keywords": "Class LookupMtaStsDomainOptions LookupMtaStsDomainOptions Inheritance object LookupMtaStsDomainOptions Implements IEquatable<LookupMtaStsDomainOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"LookupMtaStsDomainOptions\")] public class LookupMtaStsDomainOptions : IEquatable<LookupMtaStsDomainOptions>, IValidatableObject Constructors View Source LookupMtaStsDomainOptions() Initializes a new instance of the LookupMtaStsDomainOptions class. Declaration [JsonConstructor] protected LookupMtaStsDomainOptions() View Source LookupMtaStsDomainOptions(string) Initializes a new instance of the LookupMtaStsDomainOptions class. Declaration public LookupMtaStsDomainOptions(string host = null) Parameters Type Name Description string host host (required). Properties View Source Host Gets or Sets Host Declaration [DataMember(Name = \"host\", IsRequired = true, EmitDefaultValue = true)] public string Host { get; set; } Property Value Type Description string Methods View Source Equals(LookupMtaStsDomainOptions) Returns true if LookupMtaStsDomainOptions instances are equal Declaration public bool Equals(LookupMtaStsDomainOptions input) Parameters Type Name Description LookupMtaStsDomainOptions input Instance of LookupMtaStsDomainOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.LookupMtaStsDomainResults.html": {
    "href": "api/mailslurp.Model.LookupMtaStsDomainResults.html",
    "title": "Class LookupMtaStsDomainResults | MailSlurp",
    "keywords": "Class LookupMtaStsDomainResults LookupMtaStsDomainResults Inheritance object LookupMtaStsDomainResults Implements IEquatable<LookupMtaStsDomainResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"LookupMtaStsDomainResults\")] public class LookupMtaStsDomainResults : IEquatable<LookupMtaStsDomainResults>, IValidatableObject Constructors View Source LookupMtaStsDomainResults() Initializes a new instance of the LookupMtaStsDomainResults class. Declaration [JsonConstructor] protected LookupMtaStsDomainResults() View Source LookupMtaStsDomainResults(bool, DNSLookupOptions, List<DNSLookupResult>, string, bool, string, List<string>, List<string>) Initializes a new instance of the LookupMtaStsDomainResults class. Declaration public LookupMtaStsDomainResults(bool valid = false, DNSLookupOptions query = null, List<DNSLookupResult> records = null, string wellKnownQuery = null, bool wellKnownPresent = false, string wellKnownValue = null, List<string> errors = null, List<string> warnings = null) Parameters Type Name Description bool valid valid (required). DNSLookupOptions query query (required). List<DNSLookupResult> records records (required). string wellKnownQuery wellKnownQuery (required). bool wellKnownPresent wellKnownPresent (required). string wellKnownValue wellKnownValue (required). List<string> errors errors (required). List<string> warnings warnings (required). Properties View Source Errors Gets or Sets Errors Declaration [DataMember(Name = \"errors\", IsRequired = true, EmitDefaultValue = true)] public List<string> Errors { get; set; } Property Value Type Description List<string> View Source Query Gets or Sets Query Declaration [DataMember(Name = \"query\", IsRequired = true, EmitDefaultValue = true)] public DNSLookupOptions Query { get; set; } Property Value Type Description DNSLookupOptions View Source Records Gets or Sets Records Declaration [DataMember(Name = \"records\", IsRequired = true, EmitDefaultValue = true)] public List<DNSLookupResult> Records { get; set; } Property Value Type Description List<DNSLookupResult> View Source Valid Gets or Sets Valid Declaration [DataMember(Name = \"valid\", IsRequired = true, EmitDefaultValue = true)] public bool Valid { get; set; } Property Value Type Description bool View Source Warnings Gets or Sets Warnings Declaration [DataMember(Name = \"warnings\", IsRequired = true, EmitDefaultValue = true)] public List<string> Warnings { get; set; } Property Value Type Description List<string> View Source WellKnownPresent Gets or Sets WellKnownPresent Declaration [DataMember(Name = \"wellKnownPresent\", IsRequired = true, EmitDefaultValue = true)] public bool WellKnownPresent { get; set; } Property Value Type Description bool View Source WellKnownQuery Gets or Sets WellKnownQuery Declaration [DataMember(Name = \"wellKnownQuery\", IsRequired = true, EmitDefaultValue = true)] public string WellKnownQuery { get; set; } Property Value Type Description string View Source WellKnownValue Gets or Sets WellKnownValue Declaration [DataMember(Name = \"wellKnownValue\", IsRequired = true, EmitDefaultValue = true)] public string WellKnownValue { get; set; } Property Value Type Description string Methods View Source Equals(LookupMtaStsDomainResults) Returns true if LookupMtaStsDomainResults instances are equal Declaration public bool Equals(LookupMtaStsDomainResults input) Parameters Type Name Description LookupMtaStsDomainResults input Instance of LookupMtaStsDomainResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.LookupTlsReportingDomainOptions.html": {
    "href": "api/mailslurp.Model.LookupTlsReportingDomainOptions.html",
    "title": "Class LookupTlsReportingDomainOptions | MailSlurp",
    "keywords": "Class LookupTlsReportingDomainOptions LookupTlsReportingDomainOptions Inheritance object LookupTlsReportingDomainOptions Implements IEquatable<LookupTlsReportingDomainOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"LookupTlsReportingDomainOptions\")] public class LookupTlsReportingDomainOptions : IEquatable<LookupTlsReportingDomainOptions>, IValidatableObject Constructors View Source LookupTlsReportingDomainOptions() Initializes a new instance of the LookupTlsReportingDomainOptions class. Declaration [JsonConstructor] protected LookupTlsReportingDomainOptions() View Source LookupTlsReportingDomainOptions(string) Initializes a new instance of the LookupTlsReportingDomainOptions class. Declaration public LookupTlsReportingDomainOptions(string host = null) Parameters Type Name Description string host host (required). Properties View Source Host Gets or Sets Host Declaration [DataMember(Name = \"host\", IsRequired = true, EmitDefaultValue = true)] public string Host { get; set; } Property Value Type Description string Methods View Source Equals(LookupTlsReportingDomainOptions) Returns true if LookupTlsReportingDomainOptions instances are equal Declaration public bool Equals(LookupTlsReportingDomainOptions input) Parameters Type Name Description LookupTlsReportingDomainOptions input Instance of LookupTlsReportingDomainOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.LookupTlsReportingDomainResults.html": {
    "href": "api/mailslurp.Model.LookupTlsReportingDomainResults.html",
    "title": "Class LookupTlsReportingDomainResults | MailSlurp",
    "keywords": "Class LookupTlsReportingDomainResults LookupTlsReportingDomainResults Inheritance object LookupTlsReportingDomainResults Implements IEquatable<LookupTlsReportingDomainResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"LookupTlsReportingDomainResults\")] public class LookupTlsReportingDomainResults : IEquatable<LookupTlsReportingDomainResults>, IValidatableObject Constructors View Source LookupTlsReportingDomainResults() Initializes a new instance of the LookupTlsReportingDomainResults class. Declaration [JsonConstructor] protected LookupTlsReportingDomainResults() View Source LookupTlsReportingDomainResults(bool, DNSLookupOptions, List<DNSLookupResult>, List<string>, List<string>) Initializes a new instance of the LookupTlsReportingDomainResults class. Declaration public LookupTlsReportingDomainResults(bool valid = false, DNSLookupOptions query = null, List<DNSLookupResult> records = null, List<string> errors = null, List<string> warnings = null) Parameters Type Name Description bool valid valid (required). DNSLookupOptions query query (required). List<DNSLookupResult> records records (required). List<string> errors errors (required). List<string> warnings warnings (required). Properties View Source Errors Gets or Sets Errors Declaration [DataMember(Name = \"errors\", IsRequired = true, EmitDefaultValue = true)] public List<string> Errors { get; set; } Property Value Type Description List<string> View Source Query Gets or Sets Query Declaration [DataMember(Name = \"query\", IsRequired = true, EmitDefaultValue = true)] public DNSLookupOptions Query { get; set; } Property Value Type Description DNSLookupOptions View Source Records Gets or Sets Records Declaration [DataMember(Name = \"records\", IsRequired = true, EmitDefaultValue = true)] public List<DNSLookupResult> Records { get; set; } Property Value Type Description List<DNSLookupResult> View Source Valid Gets or Sets Valid Declaration [DataMember(Name = \"valid\", IsRequired = true, EmitDefaultValue = true)] public bool Valid { get; set; } Property Value Type Description bool View Source Warnings Gets or Sets Warnings Declaration [DataMember(Name = \"warnings\", IsRequired = true, EmitDefaultValue = true)] public List<string> Warnings { get; set; } Property Value Type Description List<string> Methods View Source Equals(LookupTlsReportingDomainResults) Returns true if LookupTlsReportingDomainResults instances are equal Declaration public bool Equals(LookupTlsReportingDomainResults input) Parameters Type Name Description LookupTlsReportingDomainResults input Instance of LookupTlsReportingDomainResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.MatchOption.FieldEnum.html": {
    "href": "api/mailslurp.Model.MatchOption.FieldEnum.html",
    "title": "Enum MatchOption.FieldEnum | MailSlurp",
    "keywords": "Enum MatchOption.FieldEnum Fields of an email object that can be used to filter results Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum MatchOption.FieldEnum Fields Name Description BCC Enum BCC for value: BCC CC Enum CC for value: CC FROM Enum FROM for value: FROM SUBJECT Enum SUBJECT for value: SUBJECT TO Enum TO for value: TO"
  },
  "api/mailslurp.Model.MatchOption.html": {
    "href": "api/mailslurp.Model.MatchOption.html",
    "title": "Class MatchOption | MailSlurp",
    "keywords": "Class MatchOption Options for matching emails in an inbox. Each match option object contains a field, should and value property. Together they form logical conditions such as SUBJECT should CONTAIN value. Inheritance object MatchOption Implements IEquatable<MatchOption> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"MatchOption\")] public class MatchOption : IEquatable<MatchOption>, IValidatableObject Constructors View Source MatchOption() Initializes a new instance of the MatchOption class. Declaration [JsonConstructor] protected MatchOption() View Source MatchOption(FieldEnum, ShouldEnum, string) Initializes a new instance of the MatchOption class. Declaration public MatchOption(MatchOption.FieldEnum field = (MatchOption.FieldEnum)0, MatchOption.ShouldEnum should = (MatchOption.ShouldEnum)0, string value = null) Parameters Type Name Description MatchOption.FieldEnum field Fields of an email object that can be used to filter results (required). MatchOption.ShouldEnum should How the value of the email field specified should be compared to the value given in the match options. (required). string value The value you wish to compare with the value of the field specified using the should value passed. For example BODY should CONTAIN a value passed. (required). Properties View Source Field Fields of an email object that can be used to filter results Declaration [DataMember(Name = \"field\", IsRequired = true, EmitDefaultValue = true)] public MatchOption.FieldEnum Field { get; set; } Property Value Type Description MatchOption.FieldEnum Fields of an email object that can be used to filter results View Source Should How the value of the email field specified should be compared to the value given in the match options. Declaration [DataMember(Name = \"should\", IsRequired = true, EmitDefaultValue = true)] public MatchOption.ShouldEnum Should { get; set; } Property Value Type Description MatchOption.ShouldEnum How the value of the email field specified should be compared to the value given in the match options. View Source Value The value you wish to compare with the value of the field specified using the should value passed. For example BODY should CONTAIN a value passed. Declaration [DataMember(Name = \"value\", IsRequired = true, EmitDefaultValue = true)] public string Value { get; set; } Property Value Type Description string The value you wish to compare with the value of the field specified using the should value passed. For example BODY should CONTAIN a value passed. Methods View Source Equals(MatchOption) Returns true if MatchOption instances are equal Declaration public bool Equals(MatchOption input) Parameters Type Name Description MatchOption input Instance of MatchOption to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.MatchOption.ShouldEnum.html": {
    "href": "api/mailslurp.Model.MatchOption.ShouldEnum.html",
    "title": "Enum MatchOption.ShouldEnum | MailSlurp",
    "keywords": "Enum MatchOption.ShouldEnum How the value of the email field specified should be compared to the value given in the match options. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum MatchOption.ShouldEnum Fields Name Description CONTAIN Enum CONTAIN for value: CONTAIN EQUAL Enum EQUAL for value: EQUAL"
  },
  "api/mailslurp.Model.MatchOptions.html": {
    "href": "api/mailslurp.Model.MatchOptions.html",
    "title": "Class MatchOptions | MailSlurp",
    "keywords": "Class MatchOptions Optional filter for matching emails based on fields. For instance filter results to only include emails whose SUBJECT value does CONTAIN given match value. An example payload would be { matches: [{ field: &apos;SUBJECT&apos;, should: &apos;CONTAIN&apos;, value: &apos;Welcome&apos; }] }. You can also pass conditions such as HAS_ATTACHMENT. If you wish to extract regex matches inside the email content see the getEmailContentMatch method in the EmailController. Inheritance object MatchOptions Implements IEquatable<MatchOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"MatchOptions\")] public class MatchOptions : IEquatable<MatchOptions>, IValidatableObject Constructors View Source MatchOptions(List<MatchOption>, List<ConditionOption>) Initializes a new instance of the MatchOptions class. Declaration public MatchOptions(List<MatchOption> matches = null, List<ConditionOption> conditions = null) Parameters Type Name Description List<MatchOption> matches Zero or more match options such as { field: &apos;SUBJECT&apos;, should: &apos;CONTAIN&apos;, value: &apos;Welcome&apos; }. Options are additive so if one does not match the email is excluded from results. List<ConditionOption> conditions Zero or more conditions such as { condition: &apos;HAS_ATTACHMENTS&apos;, value: &apos;TRUE&apos; }. Note the values are the strings TRUE|FALSE not booleans.. Properties View Source Conditions Zero or more conditions such as { condition: &apos;HAS_ATTACHMENTS&apos;, value: &apos;TRUE&apos; }. Note the values are the strings TRUE|FALSE not booleans. Declaration [DataMember(Name = \"conditions\", EmitDefaultValue = true)] public List<ConditionOption> Conditions { get; set; } Property Value Type Description List<ConditionOption> Zero or more conditions such as { condition: &apos;HAS_ATTACHMENTS&apos;, value: &apos;TRUE&apos; }. Note the values are the strings TRUE|FALSE not booleans. View Source Matches Zero or more match options such as { field: &apos;SUBJECT&apos;, should: &apos;CONTAIN&apos;, value: &apos;Welcome&apos; }. Options are additive so if one does not match the email is excluded from results Declaration [DataMember(Name = \"matches\", EmitDefaultValue = true)] public List<MatchOption> Matches { get; set; } Property Value Type Description List<MatchOption> Zero or more match options such as { field: &apos;SUBJECT&apos;, should: &apos;CONTAIN&apos;, value: &apos;Welcome&apos; }. Options are additive so if one does not match the email is excluded from results Methods View Source Equals(MatchOptions) Returns true if MatchOptions instances are equal Declaration public bool Equals(MatchOptions input) Parameters Type Name Description MatchOptions input Instance of MatchOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.MissedEmailDto.html": {
    "href": "api/mailslurp.Model.MissedEmailDto.html",
    "title": "Class MissedEmailDto | MailSlurp",
    "keywords": "Class MissedEmailDto Missed email Inheritance object MissedEmailDto Implements IEquatable<MissedEmailDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"MissedEmailDto\")] public class MissedEmailDto : IEquatable<MissedEmailDto>, IValidatableObject Constructors View Source MissedEmailDto() Initializes a new instance of the MissedEmailDto class. Declaration [JsonConstructor] protected MissedEmailDto() View Source MissedEmailDto(Guid, Guid?, string, string, int, string, string, string, string, bool?, List<string>, List<string>, List<string>, List<Guid>, DateTime, DateTime) Initializes a new instance of the MissedEmailDto class. Declaration public MissedEmailDto(Guid id = default, Guid? userId = null, string subject = null, string bodyExcerpt = null, int attachmentCount = 0, string from = null, string rawUrl = null, string rawKey = null, string rawBucket = null, bool? canRestore = null, List<string> to = null, List<string> cc = null, List<string> bcc = null, List<Guid> inboxIds = null, DateTime createdAt = default, DateTime updatedAt = default) Parameters Type Name Description Guid id id (required). Guid? userId userId. string subject subject. string bodyExcerpt bodyExcerpt. int attachmentCount attachmentCount (required). string from from. string rawUrl rawUrl. string rawKey rawKey. string rawBucket rawBucket. bool? canRestore canRestore. List<string> to to (required). List<string> cc cc (required). List<string> bcc bcc (required). List<Guid> inboxIds inboxIds (required). DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Properties View Source AttachmentCount Gets or Sets AttachmentCount Declaration [DataMember(Name = \"attachmentCount\", IsRequired = true, EmitDefaultValue = true)] public int AttachmentCount { get; set; } Property Value Type Description int View Source Bcc Gets or Sets Bcc Declaration [DataMember(Name = \"bcc\", IsRequired = true, EmitDefaultValue = true)] public List<string> Bcc { get; set; } Property Value Type Description List<string> View Source BodyExcerpt Gets or Sets BodyExcerpt Declaration [DataMember(Name = \"bodyExcerpt\", EmitDefaultValue = true)] public string BodyExcerpt { get; set; } Property Value Type Description string View Source CanRestore Gets or Sets CanRestore Declaration [DataMember(Name = \"canRestore\", EmitDefaultValue = true)] public bool? CanRestore { get; set; } Property Value Type Description bool? View Source Cc Gets or Sets Cc Declaration [DataMember(Name = \"cc\", IsRequired = true, EmitDefaultValue = true)] public List<string> Cc { get; set; } Property Value Type Description List<string> View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source From Gets or Sets From Declaration [DataMember(Name = \"from\", EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxIds Gets or Sets InboxIds Declaration [DataMember(Name = \"inboxIds\", IsRequired = true, EmitDefaultValue = true)] public List<Guid> InboxIds { get; set; } Property Value Type Description List<Guid> View Source RawBucket Gets or Sets RawBucket Declaration [DataMember(Name = \"rawBucket\", EmitDefaultValue = true)] public string RawBucket { get; set; } Property Value Type Description string View Source RawKey Gets or Sets RawKey Declaration [DataMember(Name = \"rawKey\", EmitDefaultValue = true)] public string RawKey { get; set; } Property Value Type Description string View Source RawUrl Gets or Sets RawUrl Declaration [DataMember(Name = \"rawUrl\", EmitDefaultValue = true)] public string RawUrl { get; set; } Property Value Type Description string View Source Subject Gets or Sets Subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string View Source To Gets or Sets To Declaration [DataMember(Name = \"to\", IsRequired = true, EmitDefaultValue = true)] public List<string> To { get; set; } Property Value Type Description List<string> View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", EmitDefaultValue = true)] public Guid? UserId { get; set; } Property Value Type Description Guid? Methods View Source Equals(MissedEmailDto) Returns true if MissedEmailDto instances are equal Declaration public bool Equals(MissedEmailDto input) Parameters Type Name Description MissedEmailDto input Instance of MissedEmailDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.MissedEmailProjection.html": {
    "href": "api/mailslurp.Model.MissedEmailProjection.html",
    "title": "Class MissedEmailProjection | MailSlurp",
    "keywords": "Class MissedEmailProjection Missed email data Inheritance object MissedEmailProjection Implements IEquatable<MissedEmailProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"MissedEmailProjection\")] public class MissedEmailProjection : IEquatable<MissedEmailProjection>, IValidatableObject Constructors View Source MissedEmailProjection() Initializes a new instance of the MissedEmailProjection class. Declaration [JsonConstructor] protected MissedEmailProjection() View Source MissedEmailProjection(DateTime, Guid?, string, Guid, string) Initializes a new instance of the MissedEmailProjection class. Declaration public MissedEmailProjection(DateTime createdAt = default, Guid? userId = null, string subject = null, Guid id = default, string from = null) Parameters Type Name Description DateTime createdAt createdAt (required). Guid? userId userId. string subject subject. Guid id id (required). string from from. Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source From Gets or Sets From Declaration [DataMember(Name = \"from\", EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source Subject Gets or Sets Subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", EmitDefaultValue = true)] public Guid? UserId { get; set; } Property Value Type Description Guid? Methods View Source Equals(MissedEmailProjection) Returns true if MissedEmailProjection instances are equal Declaration public bool Equals(MissedEmailProjection input) Parameters Type Name Description MissedEmailProjection input Instance of MissedEmailProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.NameServerRecord.html": {
    "href": "api/mailslurp.Model.NameServerRecord.html",
    "title": "Class NameServerRecord | MailSlurp",
    "keywords": "Class NameServerRecord Name Server Record Inheritance object NameServerRecord Implements IEquatable<NameServerRecord> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"NameServerRecord\")] public class NameServerRecord : IEquatable<NameServerRecord>, IValidatableObject Constructors View Source NameServerRecord() Initializes a new instance of the NameServerRecord class. Declaration [JsonConstructor] protected NameServerRecord() View Source NameServerRecord(string, string, string, string) Initializes a new instance of the NameServerRecord class. Declaration public NameServerRecord(string raw = null, string recordType = null, string priority = null, string value = null) Parameters Type Name Description string raw raw (required). string recordType recordType (required). string priority priority (required). string value value (required). Properties View Source Priority Gets or Sets Priority Declaration [DataMember(Name = \"priority\", IsRequired = true, EmitDefaultValue = true)] public string Priority { get; set; } Property Value Type Description string View Source Raw Gets or Sets Raw Declaration [DataMember(Name = \"raw\", IsRequired = true, EmitDefaultValue = true)] public string Raw { get; set; } Property Value Type Description string View Source RecordType Gets or Sets RecordType Declaration [DataMember(Name = \"recordType\", IsRequired = true, EmitDefaultValue = true)] public string RecordType { get; set; } Property Value Type Description string View Source Value Gets or Sets Value Declaration [DataMember(Name = \"value\", IsRequired = true, EmitDefaultValue = true)] public string Value { get; set; } Property Value Type Description string Methods View Source Equals(NameServerRecord) Returns true if NameServerRecord instances are equal Declaration public bool Equals(NameServerRecord input) Parameters Type Name Description NameServerRecord input Instance of NameServerRecord to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.OrganizationInboxProjection.FunctionsAsEnum.html": {
    "href": "api/mailslurp.Model.OrganizationInboxProjection.FunctionsAsEnum.html",
    "title": "Enum OrganizationInboxProjection.FunctionsAsEnum | MailSlurp",
    "keywords": "Enum OrganizationInboxProjection.FunctionsAsEnum Inbox function if used as a primitive for another system. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum OrganizationInboxProjection.FunctionsAsEnum Fields Name Description ALIAS Enum ALIAS for value: ALIAS CATCHALL Enum CATCHALL for value: CATCH_ALL CONNECTOR Enum CONNECTOR for value: CONNECTOR THREAD Enum THREAD for value: THREAD"
  },
  "api/mailslurp.Model.OrganizationInboxProjection.html": {
    "href": "api/mailslurp.Model.OrganizationInboxProjection.html",
    "title": "Class OrganizationInboxProjection | MailSlurp",
    "keywords": "Class OrganizationInboxProjection Organization team inbox Inheritance object OrganizationInboxProjection Implements IEquatable<OrganizationInboxProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"OrganizationInboxProjection\")] public class OrganizationInboxProjection : IEquatable<OrganizationInboxProjection>, IValidatableObject Constructors View Source OrganizationInboxProjection() Initializes a new instance of the OrganizationInboxProjection class. Declaration [JsonConstructor] protected OrganizationInboxProjection() View Source OrganizationInboxProjection(Guid, Guid?, DateTime, string, string, bool, List<string>, bool, InboxTypeEnum?, bool, bool, FunctionsAsEnum?) Initializes a new instance of the OrganizationInboxProjection class. Declaration public OrganizationInboxProjection(Guid id = default, Guid? domainId = null, DateTime createdAt = default, string name = null, string emailAddress = null, bool favourite = false, List<string> tags = null, bool teamAccess = false, OrganizationInboxProjection.InboxTypeEnum? inboxType = null, bool readOnly = false, bool virtualInbox = false, OrganizationInboxProjection.FunctionsAsEnum? functionsAs = null) Parameters Type Name Description Guid id ID of the inbox. The ID is a UUID-V4 format string. Use the inboxId for calls to Inbox and Email Controller endpoints. See the emailAddress property for the email address or the inbox. To get emails in an inbox use the WaitFor and Inbox Controller methods waitForLatestEmail and getEmails methods respectively. Inboxes can be used with aliases to forward emails automatically. (required). Guid? domainId ID of custom domain used by the inbox if any. DateTime createdAt When the inbox was created. Time stamps are in ISO DateTime Format yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX e.g. 2000-10-31T01:30:00.000-05:00. (required). string name Name of the inbox and used as the sender name when sending emails .Displayed in the dashboard for easier search. string emailAddress The inbox's email address. Inbox projections and previews may not include the email address. To view the email address fetch the inbox entity directly. Send an email to this address and the inbox will receive and store it for you. Note the email address in MailSlurp match characters exactly and are case sensitive so +123 additions are considered different addresses. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID.. bool favourite Is the inbox a favorite inbox. Make an inbox a favorite is typically done in the dashboard for quick access or filtering (required). List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI.. bool teamAccess Does inbox permit team access for organization team members. If so team users can use inbox and emails associated with it. See the team access guide at https://www.mailslurp.com/guides/team-email-account-sharing/ (required). OrganizationInboxProjection.InboxTypeEnum? inboxType Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send).. bool readOnly Is the inbox readOnly for the caller. Read only means can not be deleted or modified. This flag is present when using team accounts and shared inboxes. (required). bool virtualInbox Virtual inbox can receive email but will not send emails to real recipients. Will save sent email record but never send an actual email. Perfect for testing mail server actions. (required). OrganizationInboxProjection.FunctionsAsEnum? functionsAs Inbox function if used as a primitive for another system.. Properties View Source CreatedAt When the inbox was created. Time stamps are in ISO DateTime Format yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX e.g. 2000-10-31T01:30:00.000-05:00. Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime When the inbox was created. Time stamps are in ISO DateTime Format yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSXXX e.g. 2000-10-31T01:30:00.000-05:00. View Source DomainId ID of custom domain used by the inbox if any Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? ID of custom domain used by the inbox if any View Source EmailAddress The inbox's email address. Inbox projections and previews may not include the email address. To view the email address fetch the inbox entity directly. Send an email to this address and the inbox will receive and store it for you. Note the email address in MailSlurp match characters exactly and are case sensitive so +123 additions are considered different addresses. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. Declaration [DataMember(Name = \"emailAddress\", EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string The inbox's email address. Inbox projections and previews may not include the email address. To view the email address fetch the inbox entity directly. Send an email to this address and the inbox will receive and store it for you. Note the email address in MailSlurp match characters exactly and are case sensitive so +123 additions are considered different addresses. To retrieve the email use the Inbox and Email Controller endpoints with the inbox ID. View Source Favourite Is the inbox a favorite inbox. Make an inbox a favorite is typically done in the dashboard for quick access or filtering Declaration [DataMember(Name = \"favourite\", IsRequired = true, EmitDefaultValue = true)] public bool Favourite { get; set; } Property Value Type Description bool Is the inbox a favorite inbox. Make an inbox a favorite is typically done in the dashboard for quick access or filtering View Source FunctionsAs Inbox function if used as a primitive for another system. Declaration [DataMember(Name = \"functionsAs\", EmitDefaultValue = true)] public OrganizationInboxProjection.FunctionsAsEnum? FunctionsAs { get; set; } Property Value Type Description OrganizationInboxProjection.FunctionsAsEnum? Inbox function if used as a primitive for another system. View Source Id ID of the inbox. The ID is a UUID-V4 format string. Use the inboxId for calls to Inbox and Email Controller endpoints. See the emailAddress property for the email address or the inbox. To get emails in an inbox use the WaitFor and Inbox Controller methods waitForLatestEmail and getEmails methods respectively. Inboxes can be used with aliases to forward emails automatically. Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid ID of the inbox. The ID is a UUID-V4 format string. Use the inboxId for calls to Inbox and Email Controller endpoints. See the emailAddress property for the email address or the inbox. To get emails in an inbox use the WaitFor and Inbox Controller methods waitForLatestEmail and getEmails methods respectively. Inboxes can be used with aliases to forward emails automatically. View Source InboxType Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). Declaration [DataMember(Name = \"inboxType\", EmitDefaultValue = true)] public OrganizationInboxProjection.InboxTypeEnum? InboxType { get; set; } Property Value Type Description OrganizationInboxProjection.InboxTypeEnum? Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). View Source Name Name of the inbox and used as the sender name when sending emails .Displayed in the dashboard for easier search Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Name of the inbox and used as the sender name when sending emails .Displayed in the dashboard for easier search View Source ReadOnly Is the inbox readOnly for the caller. Read only means can not be deleted or modified. This flag is present when using team accounts and shared inboxes. Declaration [DataMember(Name = \"readOnly\", IsRequired = true, EmitDefaultValue = true)] public bool ReadOnly { get; set; } Property Value Type Description bool Is the inbox readOnly for the caller. Read only means can not be deleted or modified. This flag is present when using team accounts and shared inboxes. View Source Tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. Declaration [DataMember(Name = \"tags\", EmitDefaultValue = true)] public List<string> Tags { get; set; } Property Value Type Description List<string> Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. View Source TeamAccess Does inbox permit team access for organization team members. If so team users can use inbox and emails associated with it. See the team access guide at https://www.mailslurp.com/guides/team-email-account-sharing/ Declaration [DataMember(Name = \"teamAccess\", IsRequired = true, EmitDefaultValue = true)] public bool TeamAccess { get; set; } Property Value Type Description bool Does inbox permit team access for organization team members. If so team users can use inbox and emails associated with it. See the team access guide at https://www.mailslurp.com/guides/team-email-account-sharing/ View Source VirtualInbox Virtual inbox can receive email but will not send emails to real recipients. Will save sent email record but never send an actual email. Perfect for testing mail server actions. Declaration [DataMember(Name = \"virtualInbox\", IsRequired = true, EmitDefaultValue = true)] public bool VirtualInbox { get; set; } Property Value Type Description bool Virtual inbox can receive email but will not send emails to real recipients. Will save sent email record but never send an actual email. Perfect for testing mail server actions. Methods View Source Equals(OrganizationInboxProjection) Returns true if OrganizationInboxProjection instances are equal Declaration public bool Equals(OrganizationInboxProjection input) Parameters Type Name Description OrganizationInboxProjection input Instance of OrganizationInboxProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.OrganizationInboxProjection.InboxTypeEnum.html": {
    "href": "api/mailslurp.Model.OrganizationInboxProjection.InboxTypeEnum.html",
    "title": "Enum OrganizationInboxProjection.InboxTypeEnum | MailSlurp",
    "keywords": "Enum OrganizationInboxProjection.InboxTypeEnum Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum OrganizationInboxProjection.InboxTypeEnum Fields Name Description HTTPINBOX Enum HTTPINBOX for value: HTTP_INBOX SMTPINBOX Enum SMTPINBOX for value: SMTP_INBOX"
  },
  "api/mailslurp.Model.PageableObject.html": {
    "href": "api/mailslurp.Model.PageableObject.html",
    "title": "Class PageableObject | MailSlurp",
    "keywords": "Class PageableObject PageableObject Inheritance object PageableObject Implements IEquatable<PageableObject> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageableObject\")] public class PageableObject : IEquatable<PageableObject>, IValidatableObject Constructors View Source PageableObject(int, int, bool, bool, long, SortObject) Initializes a new instance of the PageableObject class. Declaration public PageableObject(int pageNumber = 0, int pageSize = 0, bool paged = false, bool unpaged = false, long offset = 0, SortObject sort = null) Parameters Type Name Description int pageNumber pageNumber. int pageSize pageSize. bool paged paged. bool unpaged unpaged. long offset offset. SortObject sort sort. Properties View Source Offset Gets or Sets Offset Declaration [DataMember(Name = \"offset\", EmitDefaultValue = false)] public long Offset { get; set; } Property Value Type Description long View Source Paged Gets or Sets Paged Declaration [DataMember(Name = \"paged\", EmitDefaultValue = true)] public bool Paged { get; set; } Property Value Type Description bool View Source PageNumber Gets or Sets PageNumber Declaration [DataMember(Name = \"pageNumber\", EmitDefaultValue = false)] public int PageNumber { get; set; } Property Value Type Description int View Source PageSize Gets or Sets PageSize Declaration [DataMember(Name = \"pageSize\", EmitDefaultValue = false)] public int PageSize { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source Unpaged Gets or Sets Unpaged Declaration [DataMember(Name = \"unpaged\", EmitDefaultValue = true)] public bool Unpaged { get; set; } Property Value Type Description bool Methods View Source Equals(PageableObject) Returns true if PageableObject instances are equal Declaration public bool Equals(PageableObject input) Parameters Type Name Description PageableObject input Instance of PageableObject to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageAlias.html": {
    "href": "api/mailslurp.Model.PageAlias.html",
    "title": "Class PageAlias | MailSlurp",
    "keywords": "Class PageAlias Paginated email alias results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageAlias Implements IEquatable<PageAlias> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageAlias\")] public class PageAlias : IEquatable<PageAlias>, IValidatableObject Constructors View Source PageAlias() Initializes a new instance of the PageAlias class. Declaration [JsonConstructor] protected PageAlias() View Source PageAlias(List<AliasProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageAlias class. Declaration public PageAlias(List<AliasProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<AliasProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<AliasProjection> Content { get; set; } Property Value Type Description List<AliasProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageAlias) Returns true if PageAlias instances are equal Declaration public bool Equals(PageAlias input) Parameters Type Name Description PageAlias input Instance of PageAlias to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageAttachmentEntity.html": {
    "href": "api/mailslurp.Model.PageAttachmentEntity.html",
    "title": "Class PageAttachmentEntity | MailSlurp",
    "keywords": "Class PageAttachmentEntity Paginated attachment entity results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageAttachmentEntity Implements IEquatable<PageAttachmentEntity> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageAttachmentEntity\")] public class PageAttachmentEntity : IEquatable<PageAttachmentEntity>, IValidatableObject Constructors View Source PageAttachmentEntity() Initializes a new instance of the PageAttachmentEntity class. Declaration [JsonConstructor] protected PageAttachmentEntity() View Source PageAttachmentEntity(List<AttachmentProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageAttachmentEntity class. Declaration public PageAttachmentEntity(List<AttachmentProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<AttachmentProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<AttachmentProjection> Content { get; set; } Property Value Type Description List<AttachmentProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageAttachmentEntity) Returns true if PageAttachmentEntity instances are equal Declaration public bool Equals(PageAttachmentEntity input) Parameters Type Name Description PageAttachmentEntity input Instance of PageAttachmentEntity to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageBouncedEmail.html": {
    "href": "api/mailslurp.Model.PageBouncedEmail.html",
    "title": "Class PageBouncedEmail | MailSlurp",
    "keywords": "Class PageBouncedEmail Paginated bounced email. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageBouncedEmail Implements IEquatable<PageBouncedEmail> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageBouncedEmail\")] public class PageBouncedEmail : IEquatable<PageBouncedEmail>, IValidatableObject Constructors View Source PageBouncedEmail() Initializes a new instance of the PageBouncedEmail class. Declaration [JsonConstructor] protected PageBouncedEmail() View Source PageBouncedEmail(List<BounceProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageBouncedEmail class. Declaration public PageBouncedEmail(List<BounceProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<BounceProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<BounceProjection> Content { get; set; } Property Value Type Description List<BounceProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageBouncedEmail) Returns true if PageBouncedEmail instances are equal Declaration public bool Equals(PageBouncedEmail input) Parameters Type Name Description PageBouncedEmail input Instance of PageBouncedEmail to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageBouncedRecipients.html": {
    "href": "api/mailslurp.Model.PageBouncedRecipients.html",
    "title": "Class PageBouncedRecipients | MailSlurp",
    "keywords": "Class PageBouncedRecipients Paginated bounced recipients. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageBouncedRecipients Implements IEquatable<PageBouncedRecipients> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageBouncedRecipients\")] public class PageBouncedRecipients : IEquatable<PageBouncedRecipients>, IValidatableObject Constructors View Source PageBouncedRecipients() Initializes a new instance of the PageBouncedRecipients class. Declaration [JsonConstructor] protected PageBouncedRecipients() View Source PageBouncedRecipients(List<BounceRecipientProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageBouncedRecipients class. Declaration public PageBouncedRecipients(List<BounceRecipientProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<BounceRecipientProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<BounceRecipientProjection> Content { get; set; } Property Value Type Description List<BounceRecipientProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageBouncedRecipients) Returns true if PageBouncedRecipients instances are equal Declaration public bool Equals(PageBouncedRecipients input) Parameters Type Name Description PageBouncedRecipients input Instance of PageBouncedRecipients to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageComplaint.html": {
    "href": "api/mailslurp.Model.PageComplaint.html",
    "title": "Class PageComplaint | MailSlurp",
    "keywords": "Class PageComplaint Paginated complaint email. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageComplaint Implements IEquatable<PageComplaint> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageComplaint\")] public class PageComplaint : IEquatable<PageComplaint>, IValidatableObject Constructors View Source PageComplaint() Initializes a new instance of the PageComplaint class. Declaration [JsonConstructor] protected PageComplaint() View Source PageComplaint(List<Complaint>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageComplaint class. Declaration public PageComplaint(List<Complaint> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<Complaint> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<Complaint> Content { get; set; } Property Value Type Description List<Complaint> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageComplaint) Returns true if PageComplaint instances are equal Declaration public bool Equals(PageComplaint input) Parameters Type Name Description PageComplaint input Instance of PageComplaint to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageConnector.html": {
    "href": "api/mailslurp.Model.PageConnector.html",
    "title": "Class PageConnector | MailSlurp",
    "keywords": "Class PageConnector Paginated inbox connectors. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageConnector Implements IEquatable<PageConnector> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageConnector\")] public class PageConnector : IEquatable<PageConnector>, IValidatableObject Constructors View Source PageConnector() Initializes a new instance of the PageConnector class. Declaration [JsonConstructor] protected PageConnector() View Source PageConnector(List<ConnectorProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageConnector class. Declaration public PageConnector(List<ConnectorProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<ConnectorProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<ConnectorProjection> Content { get; set; } Property Value Type Description List<ConnectorProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageConnector) Returns true if PageConnector instances are equal Declaration public bool Equals(PageConnector input) Parameters Type Name Description PageConnector input Instance of PageConnector to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageConnectorSyncEvents.html": {
    "href": "api/mailslurp.Model.PageConnectorSyncEvents.html",
    "title": "Class PageConnectorSyncEvents | MailSlurp",
    "keywords": "Class PageConnectorSyncEvents Paginated inbox connector sync events. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageConnectorSyncEvents Implements IEquatable<PageConnectorSyncEvents> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageConnectorSyncEvents\")] public class PageConnectorSyncEvents : IEquatable<PageConnectorSyncEvents>, IValidatableObject Constructors View Source PageConnectorSyncEvents() Initializes a new instance of the PageConnectorSyncEvents class. Declaration [JsonConstructor] protected PageConnectorSyncEvents() View Source PageConnectorSyncEvents(List<ConnectorSyncEventProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageConnectorSyncEvents class. Declaration public PageConnectorSyncEvents(List<ConnectorSyncEventProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<ConnectorSyncEventProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<ConnectorSyncEventProjection> Content { get; set; } Property Value Type Description List<ConnectorSyncEventProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageConnectorSyncEvents) Returns true if PageConnectorSyncEvents instances are equal Declaration public bool Equals(PageConnectorSyncEvents input) Parameters Type Name Description PageConnectorSyncEvents input Instance of PageConnectorSyncEvents to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageContactProjection.html": {
    "href": "api/mailslurp.Model.PageContactProjection.html",
    "title": "Class PageContactProjection | MailSlurp",
    "keywords": "Class PageContactProjection Paginated contact results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageContactProjection Implements IEquatable<PageContactProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageContactProjection\")] public class PageContactProjection : IEquatable<PageContactProjection>, IValidatableObject Constructors View Source PageContactProjection() Initializes a new instance of the PageContactProjection class. Declaration [JsonConstructor] protected PageContactProjection() View Source PageContactProjection(List<ContactProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageContactProjection class. Declaration public PageContactProjection(List<ContactProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<ContactProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<ContactProjection> Content { get; set; } Property Value Type Description List<ContactProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageContactProjection) Returns true if PageContactProjection instances are equal Declaration public bool Equals(PageContactProjection input) Parameters Type Name Description PageContactProjection input Instance of PageContactProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageDeliveryStatus.html": {
    "href": "api/mailslurp.Model.PageDeliveryStatus.html",
    "title": "Class PageDeliveryStatus | MailSlurp",
    "keywords": "Class PageDeliveryStatus Paginated delivery status results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageDeliveryStatus Implements IEquatable<PageDeliveryStatus> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageDeliveryStatus\")] public class PageDeliveryStatus : IEquatable<PageDeliveryStatus>, IValidatableObject Constructors View Source PageDeliveryStatus() Initializes a new instance of the PageDeliveryStatus class. Declaration [JsonConstructor] protected PageDeliveryStatus() View Source PageDeliveryStatus(List<DeliveryStatusDto>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageDeliveryStatus class. Declaration public PageDeliveryStatus(List<DeliveryStatusDto> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<DeliveryStatusDto> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<DeliveryStatusDto> Content { get; set; } Property Value Type Description List<DeliveryStatusDto> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageDeliveryStatus) Returns true if PageDeliveryStatus instances are equal Declaration public bool Equals(PageDeliveryStatus input) Parameters Type Name Description PageDeliveryStatus input Instance of PageDeliveryStatus to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageEmailPreview.html": {
    "href": "api/mailslurp.Model.PageEmailPreview.html",
    "title": "Class PageEmailPreview | MailSlurp",
    "keywords": "Class PageEmailPreview Paginated email preview results. EmailProjections and EmailPreviews are essentially the same but have legacy naming issues. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. For emails there are several methods for fetching message bodies and attachments. Inheritance object PageEmailPreview Implements IEquatable<PageEmailPreview> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageEmailPreview\")] public class PageEmailPreview : IEquatable<PageEmailPreview>, IValidatableObject Constructors View Source PageEmailPreview() Initializes a new instance of the PageEmailPreview class. Declaration [JsonConstructor] protected PageEmailPreview() View Source PageEmailPreview(List<EmailPreview>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageEmailPreview class. Declaration public PageEmailPreview(List<EmailPreview> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<EmailPreview> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<EmailPreview> Content { get; set; } Property Value Type Description List<EmailPreview> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageEmailPreview) Returns true if PageEmailPreview instances are equal Declaration public bool Equals(PageEmailPreview input) Parameters Type Name Description PageEmailPreview input Instance of PageEmailPreview to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageEmailProjection.html": {
    "href": "api/mailslurp.Model.PageEmailProjection.html",
    "title": "Class PageEmailProjection | MailSlurp",
    "keywords": "Class PageEmailProjection Paginated email projection results. EmailProjections and EmailPreviews are essentially the same but have legacy naming issues. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full email entity use the projection ID with individual method calls. For emails there are several methods for fetching message bodies and attachments. Inheritance object PageEmailProjection Implements IEquatable<PageEmailProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageEmailProjection\")] public class PageEmailProjection : IEquatable<PageEmailProjection>, IValidatableObject Constructors View Source PageEmailProjection() Initializes a new instance of the PageEmailProjection class. Declaration [JsonConstructor] protected PageEmailProjection() View Source PageEmailProjection(List<EmailProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageEmailProjection class. Declaration public PageEmailProjection(List<EmailProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<EmailProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<EmailProjection> Content { get; set; } Property Value Type Description List<EmailProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageEmailProjection) Returns true if PageEmailProjection instances are equal Declaration public bool Equals(PageEmailProjection input) Parameters Type Name Description PageEmailProjection input Instance of PageEmailProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageEmailValidationRequest.html": {
    "href": "api/mailslurp.Model.PageEmailValidationRequest.html",
    "title": "Class PageEmailValidationRequest | MailSlurp",
    "keywords": "Class PageEmailValidationRequest Paginated email validation request records. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageEmailValidationRequest Implements IEquatable<PageEmailValidationRequest> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageEmailValidationRequest\")] public class PageEmailValidationRequest : IEquatable<PageEmailValidationRequest>, IValidatableObject Constructors View Source PageEmailValidationRequest() Initializes a new instance of the PageEmailValidationRequest class. Declaration [JsonConstructor] protected PageEmailValidationRequest() View Source PageEmailValidationRequest(List<EmailValidationRequestDto>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageEmailValidationRequest class. Declaration public PageEmailValidationRequest(List<EmailValidationRequestDto> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<EmailValidationRequestDto> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<EmailValidationRequestDto> Content { get; set; } Property Value Type Description List<EmailValidationRequestDto> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageEmailValidationRequest) Returns true if PageEmailValidationRequest instances are equal Declaration public bool Equals(PageEmailValidationRequest input) Parameters Type Name Description PageEmailValidationRequest input Instance of PageEmailValidationRequest to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageExpiredInboxRecordProjection.html": {
    "href": "api/mailslurp.Model.PageExpiredInboxRecordProjection.html",
    "title": "Class PageExpiredInboxRecordProjection | MailSlurp",
    "keywords": "Class PageExpiredInboxRecordProjection Paginated expired inbox results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageExpiredInboxRecordProjection Implements IEquatable<PageExpiredInboxRecordProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageExpiredInboxRecordProjection\")] public class PageExpiredInboxRecordProjection : IEquatable<PageExpiredInboxRecordProjection>, IValidatableObject Constructors View Source PageExpiredInboxRecordProjection() Initializes a new instance of the PageExpiredInboxRecordProjection class. Declaration [JsonConstructor] protected PageExpiredInboxRecordProjection() View Source PageExpiredInboxRecordProjection(List<ExpiredInboxRecordProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageExpiredInboxRecordProjection class. Declaration public PageExpiredInboxRecordProjection(List<ExpiredInboxRecordProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<ExpiredInboxRecordProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<ExpiredInboxRecordProjection> Content { get; set; } Property Value Type Description List<ExpiredInboxRecordProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageExpiredInboxRecordProjection) Returns true if PageExpiredInboxRecordProjection instances are equal Declaration public bool Equals(PageExpiredInboxRecordProjection input) Parameters Type Name Description PageExpiredInboxRecordProjection input Instance of PageExpiredInboxRecordProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageGroupProjection.html": {
    "href": "api/mailslurp.Model.PageGroupProjection.html",
    "title": "Class PageGroupProjection | MailSlurp",
    "keywords": "Class PageGroupProjection Paginated missed email results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageGroupProjection Implements IEquatable<PageGroupProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageGroupProjection\")] public class PageGroupProjection : IEquatable<PageGroupProjection>, IValidatableObject Constructors View Source PageGroupProjection() Initializes a new instance of the PageGroupProjection class. Declaration [JsonConstructor] protected PageGroupProjection() View Source PageGroupProjection(List<GroupProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageGroupProjection class. Declaration public PageGroupProjection(List<GroupProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<GroupProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<GroupProjection> Content { get; set; } Property Value Type Description List<GroupProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageGroupProjection) Returns true if PageGroupProjection instances are equal Declaration public bool Equals(PageGroupProjection input) Parameters Type Name Description PageGroupProjection input Instance of PageGroupProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageInboxForwarderDto.html": {
    "href": "api/mailslurp.Model.PageInboxForwarderDto.html",
    "title": "Class PageInboxForwarderDto | MailSlurp",
    "keywords": "Class PageInboxForwarderDto Paginated inbox forwarder results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageInboxForwarderDto Implements IEquatable<PageInboxForwarderDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageInboxForwarderDto\")] public class PageInboxForwarderDto : IEquatable<PageInboxForwarderDto>, IValidatableObject Constructors View Source PageInboxForwarderDto() Initializes a new instance of the PageInboxForwarderDto class. Declaration [JsonConstructor] protected PageInboxForwarderDto() View Source PageInboxForwarderDto(List<InboxForwarderDto>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageInboxForwarderDto class. Declaration public PageInboxForwarderDto(List<InboxForwarderDto> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<InboxForwarderDto> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<InboxForwarderDto> Content { get; set; } Property Value Type Description List<InboxForwarderDto> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageInboxForwarderDto) Returns true if PageInboxForwarderDto instances are equal Declaration public bool Equals(PageInboxForwarderDto input) Parameters Type Name Description PageInboxForwarderDto input Instance of PageInboxForwarderDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageInboxForwarderEvents.html": {
    "href": "api/mailslurp.Model.PageInboxForwarderEvents.html",
    "title": "Class PageInboxForwarderEvents | MailSlurp",
    "keywords": "Class PageInboxForwarderEvents Paginated inbox forwarder events. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageInboxForwarderEvents Implements IEquatable<PageInboxForwarderEvents> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageInboxForwarderEvents\")] public class PageInboxForwarderEvents : IEquatable<PageInboxForwarderEvents>, IValidatableObject Constructors View Source PageInboxForwarderEvents() Initializes a new instance of the PageInboxForwarderEvents class. Declaration [JsonConstructor] protected PageInboxForwarderEvents() View Source PageInboxForwarderEvents(List<InboxForwarderEventProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageInboxForwarderEvents class. Declaration public PageInboxForwarderEvents(List<InboxForwarderEventProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<InboxForwarderEventProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<InboxForwarderEventProjection> Content { get; set; } Property Value Type Description List<InboxForwarderEventProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageInboxForwarderEvents) Returns true if PageInboxForwarderEvents instances are equal Declaration public bool Equals(PageInboxForwarderEvents input) Parameters Type Name Description PageInboxForwarderEvents input Instance of PageInboxForwarderEvents to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageInboxProjection.html": {
    "href": "api/mailslurp.Model.PageInboxProjection.html",
    "title": "Class PageInboxProjection | MailSlurp",
    "keywords": "Class PageInboxProjection Paginated inbox results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageInboxProjection Implements IEquatable<PageInboxProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageInboxProjection\")] public class PageInboxProjection : IEquatable<PageInboxProjection>, IValidatableObject Constructors View Source PageInboxProjection() Initializes a new instance of the PageInboxProjection class. Declaration [JsonConstructor] protected PageInboxProjection() View Source PageInboxProjection(List<InboxPreview>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageInboxProjection class. Declaration public PageInboxProjection(List<InboxPreview> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<InboxPreview> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<InboxPreview> Content { get; set; } Property Value Type Description List<InboxPreview> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageInboxProjection) Returns true if PageInboxProjection instances are equal Declaration public bool Equals(PageInboxProjection input) Parameters Type Name Description PageInboxProjection input Instance of PageInboxProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageInboxReplierDto.html": {
    "href": "api/mailslurp.Model.PageInboxReplierDto.html",
    "title": "Class PageInboxReplierDto | MailSlurp",
    "keywords": "Class PageInboxReplierDto Paginated inbox replier results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageInboxReplierDto Implements IEquatable<PageInboxReplierDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageInboxReplierDto\")] public class PageInboxReplierDto : IEquatable<PageInboxReplierDto>, IValidatableObject Constructors View Source PageInboxReplierDto() Initializes a new instance of the PageInboxReplierDto class. Declaration [JsonConstructor] protected PageInboxReplierDto() View Source PageInboxReplierDto(List<InboxReplierDto>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageInboxReplierDto class. Declaration public PageInboxReplierDto(List<InboxReplierDto> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<InboxReplierDto> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<InboxReplierDto> Content { get; set; } Property Value Type Description List<InboxReplierDto> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageInboxReplierDto) Returns true if PageInboxReplierDto instances are equal Declaration public bool Equals(PageInboxReplierDto input) Parameters Type Name Description PageInboxReplierDto input Instance of PageInboxReplierDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageInboxReplierEvents.html": {
    "href": "api/mailslurp.Model.PageInboxReplierEvents.html",
    "title": "Class PageInboxReplierEvents | MailSlurp",
    "keywords": "Class PageInboxReplierEvents Paginated inbox replier events. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageInboxReplierEvents Implements IEquatable<PageInboxReplierEvents> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageInboxReplierEvents\")] public class PageInboxReplierEvents : IEquatable<PageInboxReplierEvents>, IValidatableObject Constructors View Source PageInboxReplierEvents() Initializes a new instance of the PageInboxReplierEvents class. Declaration [JsonConstructor] protected PageInboxReplierEvents() View Source PageInboxReplierEvents(List<InboxReplierEventProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageInboxReplierEvents class. Declaration public PageInboxReplierEvents(List<InboxReplierEventProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<InboxReplierEventProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<InboxReplierEventProjection> Content { get; set; } Property Value Type Description List<InboxReplierEventProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageInboxReplierEvents) Returns true if PageInboxReplierEvents instances are equal Declaration public bool Equals(PageInboxReplierEvents input) Parameters Type Name Description PageInboxReplierEvents input Instance of PageInboxReplierEvents to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageInboxRulesetDto.html": {
    "href": "api/mailslurp.Model.PageInboxRulesetDto.html",
    "title": "Class PageInboxRulesetDto | MailSlurp",
    "keywords": "Class PageInboxRulesetDto Paginated inbox ruleset results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageInboxRulesetDto Implements IEquatable<PageInboxRulesetDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageInboxRulesetDto\")] public class PageInboxRulesetDto : IEquatable<PageInboxRulesetDto>, IValidatableObject Constructors View Source PageInboxRulesetDto() Initializes a new instance of the PageInboxRulesetDto class. Declaration [JsonConstructor] protected PageInboxRulesetDto() View Source PageInboxRulesetDto(List<InboxRulesetDto>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageInboxRulesetDto class. Declaration public PageInboxRulesetDto(List<InboxRulesetDto> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<InboxRulesetDto> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<InboxRulesetDto> Content { get; set; } Property Value Type Description List<InboxRulesetDto> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageInboxRulesetDto) Returns true if PageInboxRulesetDto instances are equal Declaration public bool Equals(PageInboxRulesetDto input) Parameters Type Name Description PageInboxRulesetDto input Instance of PageInboxRulesetDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageListUnsubscribeRecipients.html": {
    "href": "api/mailslurp.Model.PageListUnsubscribeRecipients.html",
    "title": "Class PageListUnsubscribeRecipients | MailSlurp",
    "keywords": "Class PageListUnsubscribeRecipients Paginated list unsubscribe recipients. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageListUnsubscribeRecipients Implements IEquatable<PageListUnsubscribeRecipients> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageListUnsubscribeRecipients\")] public class PageListUnsubscribeRecipients : IEquatable<PageListUnsubscribeRecipients>, IValidatableObject Constructors View Source PageListUnsubscribeRecipients() Initializes a new instance of the PageListUnsubscribeRecipients class. Declaration [JsonConstructor] protected PageListUnsubscribeRecipients() View Source PageListUnsubscribeRecipients(List<ListUnsubscribeRecipientProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageListUnsubscribeRecipients class. Declaration public PageListUnsubscribeRecipients(List<ListUnsubscribeRecipientProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<ListUnsubscribeRecipientProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<ListUnsubscribeRecipientProjection> Content { get; set; } Property Value Type Description List<ListUnsubscribeRecipientProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageListUnsubscribeRecipients) Returns true if PageListUnsubscribeRecipients instances are equal Declaration public bool Equals(PageListUnsubscribeRecipients input) Parameters Type Name Description PageListUnsubscribeRecipients input Instance of PageListUnsubscribeRecipients to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageMissedEmailProjection.html": {
    "href": "api/mailslurp.Model.PageMissedEmailProjection.html",
    "title": "Class PageMissedEmailProjection | MailSlurp",
    "keywords": "Class PageMissedEmailProjection Paginated MissedEmail results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageMissedEmailProjection Implements IEquatable<PageMissedEmailProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageMissedEmailProjection\")] public class PageMissedEmailProjection : IEquatable<PageMissedEmailProjection>, IValidatableObject Constructors View Source PageMissedEmailProjection() Initializes a new instance of the PageMissedEmailProjection class. Declaration [JsonConstructor] protected PageMissedEmailProjection() View Source PageMissedEmailProjection(List<MissedEmailProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageMissedEmailProjection class. Declaration public PageMissedEmailProjection(List<MissedEmailProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<MissedEmailProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<MissedEmailProjection> Content { get; set; } Property Value Type Description List<MissedEmailProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageMissedEmailProjection) Returns true if PageMissedEmailProjection instances are equal Declaration public bool Equals(PageMissedEmailProjection input) Parameters Type Name Description PageMissedEmailProjection input Instance of PageMissedEmailProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageOrganizationInboxProjection.html": {
    "href": "api/mailslurp.Model.PageOrganizationInboxProjection.html",
    "title": "Class PageOrganizationInboxProjection | MailSlurp",
    "keywords": "Class PageOrganizationInboxProjection Paginated organization inbox results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageOrganizationInboxProjection Implements IEquatable<PageOrganizationInboxProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageOrganizationInboxProjection\")] public class PageOrganizationInboxProjection : IEquatable<PageOrganizationInboxProjection>, IValidatableObject Constructors View Source PageOrganizationInboxProjection() Initializes a new instance of the PageOrganizationInboxProjection class. Declaration [JsonConstructor] protected PageOrganizationInboxProjection() View Source PageOrganizationInboxProjection(List<OrganizationInboxProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageOrganizationInboxProjection class. Declaration public PageOrganizationInboxProjection(List<OrganizationInboxProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<OrganizationInboxProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<OrganizationInboxProjection> Content { get; set; } Property Value Type Description List<OrganizationInboxProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageOrganizationInboxProjection) Returns true if PageOrganizationInboxProjection instances are equal Declaration public bool Equals(PageOrganizationInboxProjection input) Parameters Type Name Description PageOrganizationInboxProjection input Instance of PageOrganizationInboxProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PagePhoneNumberProjection.html": {
    "href": "api/mailslurp.Model.PagePhoneNumberProjection.html",
    "title": "Class PagePhoneNumberProjection | MailSlurp",
    "keywords": "Class PagePhoneNumberProjection Paginated phone numbers. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PagePhoneNumberProjection Implements IEquatable<PagePhoneNumberProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PagePhoneNumberProjection\")] public class PagePhoneNumberProjection : IEquatable<PagePhoneNumberProjection>, IValidatableObject Constructors View Source PagePhoneNumberProjection() Initializes a new instance of the PagePhoneNumberProjection class. Declaration [JsonConstructor] protected PagePhoneNumberProjection() View Source PagePhoneNumberProjection(List<PhoneNumberProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PagePhoneNumberProjection class. Declaration public PagePhoneNumberProjection(List<PhoneNumberProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<PhoneNumberProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<PhoneNumberProjection> Content { get; set; } Property Value Type Description List<PhoneNumberProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PagePhoneNumberProjection) Returns true if PagePhoneNumberProjection instances are equal Declaration public bool Equals(PagePhoneNumberProjection input) Parameters Type Name Description PagePhoneNumberProjection input Instance of PagePhoneNumberProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageScheduledJobs.html": {
    "href": "api/mailslurp.Model.PageScheduledJobs.html",
    "title": "Class PageScheduledJobs | MailSlurp",
    "keywords": "Class PageScheduledJobs Paginated scheduled jobs results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageScheduledJobs Implements IEquatable<PageScheduledJobs> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageScheduledJobs\")] public class PageScheduledJobs : IEquatable<PageScheduledJobs>, IValidatableObject Constructors View Source PageScheduledJobs() Initializes a new instance of the PageScheduledJobs class. Declaration [JsonConstructor] protected PageScheduledJobs() View Source PageScheduledJobs(List<ScheduledJob>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageScheduledJobs class. Declaration public PageScheduledJobs(List<ScheduledJob> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<ScheduledJob> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<ScheduledJob> Content { get; set; } Property Value Type Description List<ScheduledJob> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageScheduledJobs) Returns true if PageScheduledJobs instances are equal Declaration public bool Equals(PageScheduledJobs input) Parameters Type Name Description PageScheduledJobs input Instance of PageScheduledJobs to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageSentEmailProjection.html": {
    "href": "api/mailslurp.Model.PageSentEmailProjection.html",
    "title": "Class PageSentEmailProjection | MailSlurp",
    "keywords": "Class PageSentEmailProjection Paginated sent email results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full sent email entity use the projection ID with individual method calls. Inheritance object PageSentEmailProjection Implements IEquatable<PageSentEmailProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageSentEmailProjection\")] public class PageSentEmailProjection : IEquatable<PageSentEmailProjection>, IValidatableObject Constructors View Source PageSentEmailProjection() Initializes a new instance of the PageSentEmailProjection class. Declaration [JsonConstructor] protected PageSentEmailProjection() View Source PageSentEmailProjection(List<SentEmailProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageSentEmailProjection class. Declaration public PageSentEmailProjection(List<SentEmailProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<SentEmailProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<SentEmailProjection> Content { get; set; } Property Value Type Description List<SentEmailProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageSentEmailProjection) Returns true if PageSentEmailProjection instances are equal Declaration public bool Equals(PageSentEmailProjection input) Parameters Type Name Description PageSentEmailProjection input Instance of PageSentEmailProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageSentEmailWithQueueProjection.html": {
    "href": "api/mailslurp.Model.PageSentEmailWithQueueProjection.html",
    "title": "Class PageSentEmailWithQueueProjection | MailSlurp",
    "keywords": "Class PageSentEmailWithQueueProjection Paginated sent email results for emails sent with queue. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full sent email entity use the projection ID with individual method calls. Inheritance object PageSentEmailWithQueueProjection Implements IEquatable<PageSentEmailWithQueueProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageSentEmailWithQueueProjection\")] public class PageSentEmailWithQueueProjection : IEquatable<PageSentEmailWithQueueProjection>, IValidatableObject Constructors View Source PageSentEmailWithQueueProjection() Initializes a new instance of the PageSentEmailWithQueueProjection class. Declaration [JsonConstructor] protected PageSentEmailWithQueueProjection() View Source PageSentEmailWithQueueProjection(List<SendWithQueueResult>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageSentEmailWithQueueProjection class. Declaration public PageSentEmailWithQueueProjection(List<SendWithQueueResult> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<SendWithQueueResult> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<SendWithQueueResult> Content { get; set; } Property Value Type Description List<SendWithQueueResult> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageSentEmailWithQueueProjection) Returns true if PageSentEmailWithQueueProjection instances are equal Declaration public bool Equals(PageSentEmailWithQueueProjection input) Parameters Type Name Description PageSentEmailWithQueueProjection input Instance of PageSentEmailWithQueueProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageSmsProjection.html": {
    "href": "api/mailslurp.Model.PageSmsProjection.html",
    "title": "Class PageSmsProjection | MailSlurp",
    "keywords": "Class PageSmsProjection Paginated SMS messages. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageSmsProjection Implements IEquatable<PageSmsProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageSmsProjection\")] public class PageSmsProjection : IEquatable<PageSmsProjection>, IValidatableObject Constructors View Source PageSmsProjection() Initializes a new instance of the PageSmsProjection class. Declaration [JsonConstructor] protected PageSmsProjection() View Source PageSmsProjection(List<SmsProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageSmsProjection class. Declaration public PageSmsProjection(List<SmsProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<SmsProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<SmsProjection> Content { get; set; } Property Value Type Description List<SmsProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageSmsProjection) Returns true if PageSmsProjection instances are equal Declaration public bool Equals(PageSmsProjection input) Parameters Type Name Description PageSmsProjection input Instance of PageSmsProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageTemplateProjection.html": {
    "href": "api/mailslurp.Model.PageTemplateProjection.html",
    "title": "Class PageTemplateProjection | MailSlurp",
    "keywords": "Class PageTemplateProjection Paginated email template results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageTemplateProjection Implements IEquatable<PageTemplateProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageTemplateProjection\")] public class PageTemplateProjection : IEquatable<PageTemplateProjection>, IValidatableObject Constructors View Source PageTemplateProjection() Initializes a new instance of the PageTemplateProjection class. Declaration [JsonConstructor] protected PageTemplateProjection() View Source PageTemplateProjection(List<TemplateProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageTemplateProjection class. Declaration public PageTemplateProjection(List<TemplateProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<TemplateProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<TemplateProjection> Content { get; set; } Property Value Type Description List<TemplateProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageTemplateProjection) Returns true if PageTemplateProjection instances are equal Declaration public bool Equals(PageTemplateProjection input) Parameters Type Name Description PageTemplateProjection input Instance of PageTemplateProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageThreadProjection.html": {
    "href": "api/mailslurp.Model.PageThreadProjection.html",
    "title": "Class PageThreadProjection | MailSlurp",
    "keywords": "Class PageThreadProjection Paginated email projection results. EmailProjections and EmailPreviews are essentially the same but have legacy naming issues. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full email entity use the projection ID with individual method calls. For emails there are several methods for fetching message bodies and attachments. Inheritance object PageThreadProjection Implements IEquatable<PageThreadProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageThreadProjection\")] public class PageThreadProjection : IEquatable<PageThreadProjection>, IValidatableObject Constructors View Source PageThreadProjection() Initializes a new instance of the PageThreadProjection class. Declaration [JsonConstructor] protected PageThreadProjection() View Source PageThreadProjection(List<ThreadProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageThreadProjection class. Declaration public PageThreadProjection(List<ThreadProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<ThreadProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<ThreadProjection> Content { get; set; } Property Value Type Description List<ThreadProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageThreadProjection) Returns true if PageThreadProjection instances are equal Declaration public bool Equals(PageThreadProjection input) Parameters Type Name Description PageThreadProjection input Instance of PageThreadProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageTrackingPixelProjection.html": {
    "href": "api/mailslurp.Model.PageTrackingPixelProjection.html",
    "title": "Class PageTrackingPixelProjection | MailSlurp",
    "keywords": "Class PageTrackingPixelProjection Paginated TrackingPixel results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageTrackingPixelProjection Implements IEquatable<PageTrackingPixelProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageTrackingPixelProjection\")] public class PageTrackingPixelProjection : IEquatable<PageTrackingPixelProjection>, IValidatableObject Constructors View Source PageTrackingPixelProjection() Initializes a new instance of the PageTrackingPixelProjection class. Declaration [JsonConstructor] protected PageTrackingPixelProjection() View Source PageTrackingPixelProjection(List<TrackingPixelProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageTrackingPixelProjection class. Declaration public PageTrackingPixelProjection(List<TrackingPixelProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<TrackingPixelProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<TrackingPixelProjection> Content { get; set; } Property Value Type Description List<TrackingPixelProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageTrackingPixelProjection) Returns true if PageTrackingPixelProjection instances are equal Declaration public bool Equals(PageTrackingPixelProjection input) Parameters Type Name Description PageTrackingPixelProjection input Instance of PageTrackingPixelProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageUnknownMissedEmailProjection.html": {
    "href": "api/mailslurp.Model.PageUnknownMissedEmailProjection.html",
    "title": "Class PageUnknownMissedEmailProjection | MailSlurp",
    "keywords": "Class PageUnknownMissedEmailProjection Paginated unknown MissedEmail results. Unknown missed emails are emails that were sent to MailSlurp /Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageUnknownMissedEmailProjection Implements IEquatable<PageUnknownMissedEmailProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageUnknownMissedEmailProjection\")] public class PageUnknownMissedEmailProjection : IEquatable<PageUnknownMissedEmailProjection>, IValidatableObject Constructors View Source PageUnknownMissedEmailProjection() Initializes a new instance of the PageUnknownMissedEmailProjection class. Declaration [JsonConstructor] protected PageUnknownMissedEmailProjection() View Source PageUnknownMissedEmailProjection(List<UnknownMissedEmailProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageUnknownMissedEmailProjection class. Declaration public PageUnknownMissedEmailProjection(List<UnknownMissedEmailProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<UnknownMissedEmailProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<UnknownMissedEmailProjection> Content { get; set; } Property Value Type Description List<UnknownMissedEmailProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageUnknownMissedEmailProjection) Returns true if PageUnknownMissedEmailProjection instances are equal Declaration public bool Equals(PageUnknownMissedEmailProjection input) Parameters Type Name Description PageUnknownMissedEmailProjection input Instance of PageUnknownMissedEmailProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageWebhookProjection.html": {
    "href": "api/mailslurp.Model.PageWebhookProjection.html",
    "title": "Class PageWebhookProjection | MailSlurp",
    "keywords": "Class PageWebhookProjection Paginated webhook entity. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageWebhookProjection Implements IEquatable<PageWebhookProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageWebhookProjection\")] public class PageWebhookProjection : IEquatable<PageWebhookProjection>, IValidatableObject Constructors View Source PageWebhookProjection() Initializes a new instance of the PageWebhookProjection class. Declaration [JsonConstructor] protected PageWebhookProjection() View Source PageWebhookProjection(List<WebhookProjection>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageWebhookProjection class. Declaration public PageWebhookProjection(List<WebhookProjection> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<WebhookProjection> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<WebhookProjection> Content { get; set; } Property Value Type Description List<WebhookProjection> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageWebhookProjection) Returns true if PageWebhookProjection instances are equal Declaration public bool Equals(PageWebhookProjection input) Parameters Type Name Description PageWebhookProjection input Instance of PageWebhookProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PageWebhookResult.html": {
    "href": "api/mailslurp.Model.PageWebhookResult.html",
    "title": "Class PageWebhookResult | MailSlurp",
    "keywords": "Class PageWebhookResult Paginated webhook results. Page index starts at zero. Projection results may omit larger entity fields. For fetching a full entity use the projection ID with individual method calls. Inheritance object PageWebhookResult Implements IEquatable<PageWebhookResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PageWebhookResult\")] public class PageWebhookResult : IEquatable<PageWebhookResult>, IValidatableObject Constructors View Source PageWebhookResult() Initializes a new instance of the PageWebhookResult class. Declaration [JsonConstructor] protected PageWebhookResult() View Source PageWebhookResult(List<WebhookResultDto>, PageableObject, int, long, bool, int, bool, int, int, SortObject, bool) Initializes a new instance of the PageWebhookResult class. Declaration public PageWebhookResult(List<WebhookResultDto> content = null, PageableObject pageable = null, int totalPages = 0, long totalElements = 0, bool last = false, int numberOfElements = 0, bool first = false, int size = 0, int number = 0, SortObject sort = null, bool empty = false) Parameters Type Name Description List<WebhookResultDto> content content. PageableObject pageable pageable. int totalPages totalPages (required). long totalElements totalElements (required). bool last last. int numberOfElements numberOfElements. bool first first. int size size. int number number. SortObject sort sort. bool empty empty. Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", EmitDefaultValue = false)] public List<WebhookResultDto> Content { get; set; } Property Value Type Description List<WebhookResultDto> View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source First Gets or Sets First Declaration [DataMember(Name = \"first\", EmitDefaultValue = true)] public bool First { get; set; } Property Value Type Description bool View Source Last Gets or Sets Last Declaration [DataMember(Name = \"last\", EmitDefaultValue = true)] public bool Last { get; set; } Property Value Type Description bool View Source Number Gets or Sets Number Declaration [DataMember(Name = \"number\", EmitDefaultValue = false)] public int Number { get; set; } Property Value Type Description int View Source NumberOfElements Gets or Sets NumberOfElements Declaration [DataMember(Name = \"numberOfElements\", EmitDefaultValue = false)] public int NumberOfElements { get; set; } Property Value Type Description int View Source Pageable Gets or Sets Pageable Declaration [DataMember(Name = \"pageable\", EmitDefaultValue = false)] public PageableObject Pageable { get; set; } Property Value Type Description PageableObject View Source Size Gets or Sets Size Declaration [DataMember(Name = \"size\", EmitDefaultValue = false)] public int Size { get; set; } Property Value Type Description int View Source Sort Gets or Sets Sort Declaration [DataMember(Name = \"sort\", EmitDefaultValue = false)] public SortObject Sort { get; set; } Property Value Type Description SortObject View Source TotalElements Gets or Sets TotalElements Declaration [DataMember(Name = \"totalElements\", IsRequired = true, EmitDefaultValue = true)] public long TotalElements { get; set; } Property Value Type Description long View Source TotalPages Gets or Sets TotalPages Declaration [DataMember(Name = \"totalPages\", IsRequired = true, EmitDefaultValue = true)] public int TotalPages { get; set; } Property Value Type Description int Methods View Source Equals(PageWebhookResult) Returns true if PageWebhookResult instances are equal Declaration public bool Equals(PageWebhookResult input) Parameters Type Name Description PageWebhookResult input Instance of PageWebhookResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PhoneNumberDto.html": {
    "href": "api/mailslurp.Model.PhoneNumberDto.html",
    "title": "Class PhoneNumberDto | MailSlurp",
    "keywords": "Class PhoneNumberDto PhoneNumberDto Inheritance object PhoneNumberDto Implements IEquatable<PhoneNumberDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PhoneNumberDto\")] public class PhoneNumberDto : IEquatable<PhoneNumberDto>, IValidatableObject Constructors View Source PhoneNumberDto() Initializes a new instance of the PhoneNumberDto class. Declaration [JsonConstructor] protected PhoneNumberDto() View Source PhoneNumberDto(Guid, Guid, Guid, Guid, string, PhoneCountryEnum, Guid, DateTime, DateTime) Initializes a new instance of the PhoneNumberDto class. Declaration public PhoneNumberDto(Guid id = default, Guid userId = default, Guid complianceAddress = default, Guid emergencyAddress = default, string phoneNumber = null, PhoneNumberDto.PhoneCountryEnum phoneCountry = (PhoneNumberDto.PhoneCountryEnum)0, Guid phonePlan = default, DateTime createdAt = default, DateTime updatedAt = default) Parameters Type Name Description Guid id id (required). Guid userId userId (required). Guid complianceAddress complianceAddress. Guid emergencyAddress emergencyAddress. string phoneNumber phoneNumber (required). PhoneNumberDto.PhoneCountryEnum phoneCountry phoneCountry (required). Guid phonePlan phonePlan (required). DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Properties View Source ComplianceAddress Gets or Sets ComplianceAddress Declaration [DataMember(Name = \"complianceAddress\", EmitDefaultValue = false)] public Guid ComplianceAddress { get; set; } Property Value Type Description Guid View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EmergencyAddress Gets or Sets EmergencyAddress Declaration [DataMember(Name = \"emergencyAddress\", EmitDefaultValue = false)] public Guid EmergencyAddress { get; set; } Property Value Type Description Guid View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source PhoneCountry Gets or Sets PhoneCountry Declaration [DataMember(Name = \"phoneCountry\", IsRequired = true, EmitDefaultValue = true)] public PhoneNumberDto.PhoneCountryEnum PhoneCountry { get; set; } Property Value Type Description PhoneNumberDto.PhoneCountryEnum View Source PhoneNumber Gets or Sets PhoneNumber Declaration [DataMember(Name = \"phoneNumber\", IsRequired = true, EmitDefaultValue = true)] public string PhoneNumber { get; set; } Property Value Type Description string View Source PhonePlan Gets or Sets PhonePlan Declaration [DataMember(Name = \"phonePlan\", IsRequired = true, EmitDefaultValue = true)] public Guid PhonePlan { get; set; } Property Value Type Description Guid View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(PhoneNumberDto) Returns true if PhoneNumberDto instances are equal Declaration public bool Equals(PhoneNumberDto input) Parameters Type Name Description PhoneNumberDto input Instance of PhoneNumberDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PhoneNumberDto.PhoneCountryEnum.html": {
    "href": "api/mailslurp.Model.PhoneNumberDto.PhoneCountryEnum.html",
    "title": "Enum PhoneNumberDto.PhoneCountryEnum | MailSlurp",
    "keywords": "Enum PhoneNumberDto.PhoneCountryEnum Defines PhoneCountry Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum PhoneNumberDto.PhoneCountryEnum Fields Name Description AU Enum AU for value: AU GB Enum GB for value: GB US Enum US for value: US"
  },
  "api/mailslurp.Model.PhoneNumberProjection.html": {
    "href": "api/mailslurp.Model.PhoneNumberProjection.html",
    "title": "Class PhoneNumberProjection | MailSlurp",
    "keywords": "Class PhoneNumberProjection Phone number projection Inheritance object PhoneNumberProjection Implements IEquatable<PhoneNumberProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PhoneNumberProjection\")] public class PhoneNumberProjection : IEquatable<PhoneNumberProjection>, IValidatableObject Constructors View Source PhoneNumberProjection() Initializes a new instance of the PhoneNumberProjection class. Declaration [JsonConstructor] protected PhoneNumberProjection() View Source PhoneNumberProjection(DateTime, Guid, string, PhoneCountryEnum, Guid) Initializes a new instance of the PhoneNumberProjection class. Declaration public PhoneNumberProjection(DateTime createdAt = default, Guid userId = default, string phoneNumber = null, PhoneNumberProjection.PhoneCountryEnum phoneCountry = (PhoneNumberProjection.PhoneCountryEnum)0, Guid id = default) Parameters Type Name Description DateTime createdAt createdAt (required). Guid userId userId (required). string phoneNumber phoneNumber (required). PhoneNumberProjection.PhoneCountryEnum phoneCountry phoneCountry (required). Guid id id (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source PhoneCountry Gets or Sets PhoneCountry Declaration [DataMember(Name = \"phoneCountry\", IsRequired = true, EmitDefaultValue = true)] public PhoneNumberProjection.PhoneCountryEnum PhoneCountry { get; set; } Property Value Type Description PhoneNumberProjection.PhoneCountryEnum View Source PhoneNumber Gets or Sets PhoneNumber Declaration [DataMember(Name = \"phoneNumber\", IsRequired = true, EmitDefaultValue = true)] public string PhoneNumber { get; set; } Property Value Type Description string View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(PhoneNumberProjection) Returns true if PhoneNumberProjection instances are equal Declaration public bool Equals(PhoneNumberProjection input) Parameters Type Name Description PhoneNumberProjection input Instance of PhoneNumberProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PhoneNumberProjection.PhoneCountryEnum.html": {
    "href": "api/mailslurp.Model.PhoneNumberProjection.PhoneCountryEnum.html",
    "title": "Enum PhoneNumberProjection.PhoneCountryEnum | MailSlurp",
    "keywords": "Enum PhoneNumberProjection.PhoneCountryEnum Defines PhoneCountry Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum PhoneNumberProjection.PhoneCountryEnum Fields Name Description AU Enum AU for value: AU GB Enum GB for value: GB US Enum US for value: US"
  },
  "api/mailslurp.Model.PhonePlanDto.html": {
    "href": "api/mailslurp.Model.PhonePlanDto.html",
    "title": "Class PhonePlanDto | MailSlurp",
    "keywords": "Class PhonePlanDto PhonePlanDto Inheritance object PhonePlanDto Implements IEquatable<PhonePlanDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"PhonePlanDto\")] public class PhonePlanDto : IEquatable<PhonePlanDto>, IValidatableObject Constructors View Source PhonePlanDto() Initializes a new instance of the PhonePlanDto class. Declaration [JsonConstructor] protected PhonePlanDto() View Source PhonePlanDto(Guid, Guid, PhoneCountryEnum, DateTime) Initializes a new instance of the PhonePlanDto class. Declaration public PhonePlanDto(Guid id = default, Guid userId = default, PhonePlanDto.PhoneCountryEnum phoneCountry = (PhonePlanDto.PhoneCountryEnum)0, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). Guid userId userId (required). PhonePlanDto.PhoneCountryEnum phoneCountry phoneCountry (required). DateTime createdAt createdAt (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source PhoneCountry Gets or Sets PhoneCountry Declaration [DataMember(Name = \"phoneCountry\", IsRequired = true, EmitDefaultValue = true)] public PhonePlanDto.PhoneCountryEnum PhoneCountry { get; set; } Property Value Type Description PhonePlanDto.PhoneCountryEnum View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(PhonePlanDto) Returns true if PhonePlanDto instances are equal Declaration public bool Equals(PhonePlanDto input) Parameters Type Name Description PhonePlanDto input Instance of PhonePlanDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.PhonePlanDto.PhoneCountryEnum.html": {
    "href": "api/mailslurp.Model.PhonePlanDto.PhoneCountryEnum.html",
    "title": "Enum PhonePlanDto.PhoneCountryEnum | MailSlurp",
    "keywords": "Enum PhonePlanDto.PhoneCountryEnum Defines PhoneCountry Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum PhonePlanDto.PhoneCountryEnum Fields Name Description AU Enum AU for value: AU GB Enum GB for value: GB US Enum US for value: US"
  },
  "api/mailslurp.Model.RawEmailJson.html": {
    "href": "api/mailslurp.Model.RawEmailJson.html",
    "title": "Class RawEmailJson | MailSlurp",
    "keywords": "Class RawEmailJson Content in raw format Inheritance object RawEmailJson Implements IEquatable<RawEmailJson> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"RawEmailJson\")] public class RawEmailJson : IEquatable<RawEmailJson>, IValidatableObject Constructors View Source RawEmailJson() Initializes a new instance of the RawEmailJson class. Declaration [JsonConstructor] protected RawEmailJson() View Source RawEmailJson(string) Initializes a new instance of the RawEmailJson class. Declaration public RawEmailJson(string content = null) Parameters Type Name Description string content content (required). Properties View Source Content Gets or Sets Content Declaration [DataMember(Name = \"content\", IsRequired = true, EmitDefaultValue = true)] public string Content { get; set; } Property Value Type Description string Methods View Source Equals(RawEmailJson) Returns true if RawEmailJson instances are equal Declaration public bool Equals(RawEmailJson input) Parameters Type Name Description RawEmailJson input Instance of RawEmailJson to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.Recipient.html": {
    "href": "api/mailslurp.Model.Recipient.html",
    "title": "Class Recipient | MailSlurp",
    "keywords": "Class Recipient Email recipient Inheritance object Recipient Implements IEquatable<Recipient> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"Recipient\")] public class Recipient : IEquatable<Recipient>, IValidatableObject Constructors View Source Recipient() Initializes a new instance of the Recipient class. Declaration [JsonConstructor] protected Recipient() View Source Recipient(string, string, string) Initializes a new instance of the Recipient class. Declaration public Recipient(string rawValue = null, string emailAddress = null, string name = null) Parameters Type Name Description string rawValue rawValue (required). string emailAddress emailAddress (required). string name name. Properties View Source EmailAddress Gets or Sets EmailAddress Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source RawValue Gets or Sets RawValue Declaration [DataMember(Name = \"rawValue\", IsRequired = true, EmitDefaultValue = true)] public string RawValue { get; set; } Property Value Type Description string Methods View Source Equals(Recipient) Returns true if Recipient instances are equal Declaration public bool Equals(Recipient input) Parameters Type Name Description Recipient input Instance of Recipient to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ReplyForSms.html": {
    "href": "api/mailslurp.Model.ReplyForSms.html",
    "title": "Class ReplyForSms | MailSlurp",
    "keywords": "Class ReplyForSms ReplyForSms Inheritance object ReplyForSms Implements IEquatable<ReplyForSms> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ReplyForSms\")] public class ReplyForSms : IEquatable<ReplyForSms>, IValidatableObject Constructors View Source ReplyForSms(SentSmsDto) Initializes a new instance of the ReplyForSms class. Declaration public ReplyForSms(SentSmsDto reply = null) Parameters Type Name Description SentSmsDto reply reply. Properties View Source Reply Gets or Sets Reply Declaration [DataMember(Name = \"reply\", EmitDefaultValue = false)] public SentSmsDto Reply { get; set; } Property Value Type Description SentSmsDto Methods View Source Equals(ReplyForSms) Returns true if ReplyForSms instances are equal Declaration public bool Equals(ReplyForSms input) Parameters Type Name Description ReplyForSms input Instance of ReplyForSms to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ReplyToAliasEmailOptions.html": {
    "href": "api/mailslurp.Model.ReplyToAliasEmailOptions.html",
    "title": "Class ReplyToAliasEmailOptions | MailSlurp",
    "keywords": "Class ReplyToAliasEmailOptions Options for replying to an alias email using the alias inbox Inheritance object ReplyToAliasEmailOptions Implements IEquatable<ReplyToAliasEmailOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ReplyToAliasEmailOptions\")] public class ReplyToAliasEmailOptions : IEquatable<ReplyToAliasEmailOptions>, IValidatableObject Constructors View Source ReplyToAliasEmailOptions() Initializes a new instance of the ReplyToAliasEmailOptions class. Declaration [JsonConstructor] protected ReplyToAliasEmailOptions() View Source ReplyToAliasEmailOptions(string, bool, string, List<string>, Dictionary<string, object>, Guid?, SendStrategyEnum?, Dictionary<string, string>, bool?, bool) Initializes a new instance of the ReplyToAliasEmailOptions class. Declaration public ReplyToAliasEmailOptions(string body = null, bool isHTML = false, string charset = null, List<string> attachments = null, Dictionary<string, object> templateVariables = null, Guid? template = null, ReplyToAliasEmailOptions.SendStrategyEnum? sendStrategy = null, Dictionary<string, string> customHeaders = null, bool? useInboxName = null, bool html = false) Parameters Type Name Description string body Body of the reply email you want to send (required). bool isHTML Is the reply HTML (required). string charset The charset that your message should be sent with. Optional. Default is UTF-8. List<string> attachments List of uploaded attachments to send with the reply. Optional.. Dictionary<string, object> templateVariables Template variables if using a template. Guid? template Template ID to use instead of body. Will use template variable map to fill defined variable slots.. ReplyToAliasEmailOptions.SendStrategyEnum? sendStrategy How an email should be sent based on its recipients. Dictionary<string, string> customHeaders Optional custom headers. bool? useInboxName Optionally use inbox name as display name for sender email address. bool html html. Properties View Source Attachments List of uploaded attachments to send with the reply. Optional. Declaration [DataMember(Name = \"attachments\", EmitDefaultValue = true)] public List<string> Attachments { get; set; } Property Value Type Description List<string> List of uploaded attachments to send with the reply. Optional. View Source Body Body of the reply email you want to send Declaration [DataMember(Name = \"body\", IsRequired = true, EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string Body of the reply email you want to send View Source Charset The charset that your message should be sent with. Optional. Default is UTF-8 Declaration [DataMember(Name = \"charset\", EmitDefaultValue = true)] public string Charset { get; set; } Property Value Type Description string The charset that your message should be sent with. Optional. Default is UTF-8 View Source CustomHeaders Optional custom headers Declaration [DataMember(Name = \"customHeaders\", EmitDefaultValue = true)] public Dictionary<string, string> CustomHeaders { get; set; } Property Value Type Description Dictionary<string, string> Optional custom headers View Source Html Gets or Sets Html Declaration [DataMember(Name = \"html\", EmitDefaultValue = true)] public bool Html { get; set; } Property Value Type Description bool View Source IsHTML Is the reply HTML Declaration [DataMember(Name = \"isHTML\", IsRequired = true, EmitDefaultValue = true)] public bool IsHTML { get; set; } Property Value Type Description bool Is the reply HTML View Source SendStrategy How an email should be sent based on its recipients Declaration [DataMember(Name = \"sendStrategy\", EmitDefaultValue = true)] public ReplyToAliasEmailOptions.SendStrategyEnum? SendStrategy { get; set; } Property Value Type Description ReplyToAliasEmailOptions.SendStrategyEnum? How an email should be sent based on its recipients View Source Template Template ID to use instead of body. Will use template variable map to fill defined variable slots. Declaration [DataMember(Name = \"template\", EmitDefaultValue = true)] public Guid? Template { get; set; } Property Value Type Description Guid? Template ID to use instead of body. Will use template variable map to fill defined variable slots. View Source TemplateVariables Template variables if using a template Declaration [DataMember(Name = \"templateVariables\", EmitDefaultValue = true)] public Dictionary<string, object> TemplateVariables { get; set; } Property Value Type Description Dictionary<string, object> Template variables if using a template View Source UseInboxName Optionally use inbox name as display name for sender email address Declaration [DataMember(Name = \"useInboxName\", EmitDefaultValue = true)] public bool? UseInboxName { get; set; } Property Value Type Description bool? Optionally use inbox name as display name for sender email address Methods View Source Equals(ReplyToAliasEmailOptions) Returns true if ReplyToAliasEmailOptions instances are equal Declaration public bool Equals(ReplyToAliasEmailOptions input) Parameters Type Name Description ReplyToAliasEmailOptions input Instance of ReplyToAliasEmailOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ReplyToAliasEmailOptions.SendStrategyEnum.html": {
    "href": "api/mailslurp.Model.ReplyToAliasEmailOptions.SendStrategyEnum.html",
    "title": "Enum ReplyToAliasEmailOptions.SendStrategyEnum | MailSlurp",
    "keywords": "Enum ReplyToAliasEmailOptions.SendStrategyEnum How an email should be sent based on its recipients Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ReplyToAliasEmailOptions.SendStrategyEnum Fields Name Description SINGLEMESSAGE Enum SINGLEMESSAGE for value: SINGLE_MESSAGE"
  },
  "api/mailslurp.Model.ReplyToEmailOptions.html": {
    "href": "api/mailslurp.Model.ReplyToEmailOptions.html",
    "title": "Class ReplyToEmailOptions | MailSlurp",
    "keywords": "Class ReplyToEmailOptions Options for replying to email with API Inheritance object ReplyToEmailOptions Implements IEquatable<ReplyToEmailOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ReplyToEmailOptions\")] public class ReplyToEmailOptions : IEquatable<ReplyToEmailOptions>, IValidatableObject Constructors View Source ReplyToEmailOptions() Initializes a new instance of the ReplyToEmailOptions class. Declaration [JsonConstructor] protected ReplyToEmailOptions() View Source ReplyToEmailOptions(string, bool, string, string, Dictionary<string, string>, string, List<string>, Dictionary<string, object>, Guid?, SendStrategyEnum?, bool?, bool) Initializes a new instance of the ReplyToEmailOptions class. Declaration public ReplyToEmailOptions(string body = null, bool isHTML = false, string from = null, string replyTo = null, Dictionary<string, string> customHeaders = null, string charset = null, List<string> attachments = null, Dictionary<string, object> templateVariables = null, Guid? template = null, ReplyToEmailOptions.SendStrategyEnum? sendStrategy = null, bool? useInboxName = null, bool html = false) Parameters Type Name Description string body Body of the reply email you want to send (required). bool isHTML Is the reply HTML (required). string from The from header that should be used. Optional. string replyTo The replyTo header that should be used. Optional. Dictionary<string, string> customHeaders Optional custom headers. string charset The charset that your message should be sent with. Optional. Default is UTF-8. List<string> attachments List of uploaded attachments to send with the reply. Optional.. Dictionary<string, object> templateVariables Template variables if using a template. Guid? template Template ID to use instead of body. Will use template variable map to fill defined variable slots.. ReplyToEmailOptions.SendStrategyEnum? sendStrategy How an email should be sent based on its recipients. bool? useInboxName Optionally use inbox name as display name for sender email address. bool html html. Properties View Source Attachments List of uploaded attachments to send with the reply. Optional. Declaration [DataMember(Name = \"attachments\", EmitDefaultValue = true)] public List<string> Attachments { get; set; } Property Value Type Description List<string> List of uploaded attachments to send with the reply. Optional. View Source Body Body of the reply email you want to send Declaration [DataMember(Name = \"body\", IsRequired = true, EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string Body of the reply email you want to send View Source Charset The charset that your message should be sent with. Optional. Default is UTF-8 Declaration [DataMember(Name = \"charset\", EmitDefaultValue = true)] public string Charset { get; set; } Property Value Type Description string The charset that your message should be sent with. Optional. Default is UTF-8 View Source CustomHeaders Optional custom headers Declaration [DataMember(Name = \"customHeaders\", EmitDefaultValue = true)] public Dictionary<string, string> CustomHeaders { get; set; } Property Value Type Description Dictionary<string, string> Optional custom headers View Source From The from header that should be used. Optional Declaration [DataMember(Name = \"from\", EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string The from header that should be used. Optional View Source Html Gets or Sets Html Declaration [DataMember(Name = \"html\", EmitDefaultValue = true)] public bool Html { get; set; } Property Value Type Description bool View Source IsHTML Is the reply HTML Declaration [DataMember(Name = \"isHTML\", IsRequired = true, EmitDefaultValue = true)] public bool IsHTML { get; set; } Property Value Type Description bool Is the reply HTML View Source ReplyTo The replyTo header that should be used. Optional Declaration [DataMember(Name = \"replyTo\", EmitDefaultValue = true)] public string ReplyTo { get; set; } Property Value Type Description string The replyTo header that should be used. Optional View Source SendStrategy How an email should be sent based on its recipients Declaration [DataMember(Name = \"sendStrategy\", EmitDefaultValue = true)] public ReplyToEmailOptions.SendStrategyEnum? SendStrategy { get; set; } Property Value Type Description ReplyToEmailOptions.SendStrategyEnum? How an email should be sent based on its recipients View Source Template Template ID to use instead of body. Will use template variable map to fill defined variable slots. Declaration [DataMember(Name = \"template\", EmitDefaultValue = true)] public Guid? Template { get; set; } Property Value Type Description Guid? Template ID to use instead of body. Will use template variable map to fill defined variable slots. View Source TemplateVariables Template variables if using a template Declaration [DataMember(Name = \"templateVariables\", EmitDefaultValue = true)] public Dictionary<string, object> TemplateVariables { get; set; } Property Value Type Description Dictionary<string, object> Template variables if using a template View Source UseInboxName Optionally use inbox name as display name for sender email address Declaration [DataMember(Name = \"useInboxName\", EmitDefaultValue = true)] public bool? UseInboxName { get; set; } Property Value Type Description bool? Optionally use inbox name as display name for sender email address Methods View Source Equals(ReplyToEmailOptions) Returns true if ReplyToEmailOptions instances are equal Declaration public bool Equals(ReplyToEmailOptions input) Parameters Type Name Description ReplyToEmailOptions input Instance of ReplyToEmailOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ReplyToEmailOptions.SendStrategyEnum.html": {
    "href": "api/mailslurp.Model.ReplyToEmailOptions.SendStrategyEnum.html",
    "title": "Enum ReplyToEmailOptions.SendStrategyEnum | MailSlurp",
    "keywords": "Enum ReplyToEmailOptions.SendStrategyEnum How an email should be sent based on its recipients Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ReplyToEmailOptions.SendStrategyEnum Fields Name Description SINGLEMESSAGE Enum SINGLEMESSAGE for value: SINGLE_MESSAGE"
  },
  "api/mailslurp.Model.ScheduledJob.html": {
    "href": "api/mailslurp.Model.ScheduledJob.html",
    "title": "Class ScheduledJob | MailSlurp",
    "keywords": "Class ScheduledJob ScheduledJob Inheritance object ScheduledJob Implements IEquatable<ScheduledJob> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ScheduledJob\")] public class ScheduledJob : IEquatable<ScheduledJob>, IValidatableObject Constructors View Source ScheduledJob() Initializes a new instance of the ScheduledJob class. Declaration [JsonConstructor] protected ScheduledJob() View Source ScheduledJob(Guid, Guid, Guid, string, string, string, StatusEnum, DateTime, DateTime, DateTime) Initializes a new instance of the ScheduledJob class. Declaration public ScheduledJob(Guid id = default, Guid userId = default, Guid inboxId = default, string jobId = null, string groupId = null, string triggerId = null, ScheduledJob.StatusEnum status = (ScheduledJob.StatusEnum)0, DateTime sendAtTimestamp = default, DateTime createdAt = default, DateTime updatedAt = default) Parameters Type Name Description Guid id id (required). Guid userId userId (required). Guid inboxId inboxId (required). string jobId jobId (required). string groupId groupId (required). string triggerId triggerId (required). ScheduledJob.StatusEnum status status (required). DateTime sendAtTimestamp sendAtTimestamp (required). DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source GroupId Gets or Sets GroupId Declaration [DataMember(Name = \"groupId\", IsRequired = true, EmitDefaultValue = true)] public string GroupId { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source JobId Gets or Sets JobId Declaration [DataMember(Name = \"jobId\", IsRequired = true, EmitDefaultValue = true)] public string JobId { get; set; } Property Value Type Description string View Source SendAtTimestamp Gets or Sets SendAtTimestamp Declaration [DataMember(Name = \"sendAtTimestamp\", IsRequired = true, EmitDefaultValue = true)] public DateTime SendAtTimestamp { get; set; } Property Value Type Description DateTime View Source Status Gets or Sets Status Declaration [DataMember(Name = \"status\", IsRequired = true, EmitDefaultValue = true)] public ScheduledJob.StatusEnum Status { get; set; } Property Value Type Description ScheduledJob.StatusEnum View Source TriggerId Gets or Sets TriggerId Declaration [DataMember(Name = \"triggerId\", IsRequired = true, EmitDefaultValue = true)] public string TriggerId { get; set; } Property Value Type Description string View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(ScheduledJob) Returns true if ScheduledJob instances are equal Declaration public bool Equals(ScheduledJob input) Parameters Type Name Description ScheduledJob input Instance of ScheduledJob to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ScheduledJob.StatusEnum.html": {
    "href": "api/mailslurp.Model.ScheduledJob.StatusEnum.html",
    "title": "Enum ScheduledJob.StatusEnum | MailSlurp",
    "keywords": "Enum ScheduledJob.StatusEnum Defines Status Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ScheduledJob.StatusEnum Fields Name Description ABORTED Enum ABORTED for value: ABORTED CANCELLED Enum CANCELLED for value: CANCELLED COMPLETED Enum COMPLETED for value: COMPLETED FAILED Enum FAILED for value: FAILED SUBMITTED Enum SUBMITTED for value: SUBMITTED"
  },
  "api/mailslurp.Model.ScheduledJobDto.html": {
    "href": "api/mailslurp.Model.ScheduledJobDto.html",
    "title": "Class ScheduledJobDto | MailSlurp",
    "keywords": "Class ScheduledJobDto ScheduledJobDto Inheritance object ScheduledJobDto Implements IEquatable<ScheduledJobDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ScheduledJobDto\")] public class ScheduledJobDto : IEquatable<ScheduledJobDto>, IValidatableObject Constructors View Source ScheduledJobDto() Initializes a new instance of the ScheduledJobDto class. Declaration [JsonConstructor] protected ScheduledJobDto() View Source ScheduledJobDto(Guid, Guid, Guid, string, string, string, StatusEnum, DateTime, DateTime, DateTime) Initializes a new instance of the ScheduledJobDto class. Declaration public ScheduledJobDto(Guid id = default, Guid userId = default, Guid inboxId = default, string jobId = null, string groupId = null, string triggerId = null, ScheduledJobDto.StatusEnum status = (ScheduledJobDto.StatusEnum)0, DateTime sendAtTimestamp = default, DateTime createdAt = default, DateTime updatedAt = default) Parameters Type Name Description Guid id id (required). Guid userId userId (required). Guid inboxId inboxId (required). string jobId jobId (required). string groupId groupId (required). string triggerId triggerId (required). ScheduledJobDto.StatusEnum status status (required). DateTime sendAtTimestamp sendAtTimestamp (required). DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source GroupId Gets or Sets GroupId Declaration [DataMember(Name = \"groupId\", IsRequired = true, EmitDefaultValue = true)] public string GroupId { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source JobId Gets or Sets JobId Declaration [DataMember(Name = \"jobId\", IsRequired = true, EmitDefaultValue = true)] public string JobId { get; set; } Property Value Type Description string View Source SendAtTimestamp Gets or Sets SendAtTimestamp Declaration [DataMember(Name = \"sendAtTimestamp\", IsRequired = true, EmitDefaultValue = true)] public DateTime SendAtTimestamp { get; set; } Property Value Type Description DateTime View Source Status Gets or Sets Status Declaration [DataMember(Name = \"status\", IsRequired = true, EmitDefaultValue = true)] public ScheduledJobDto.StatusEnum Status { get; set; } Property Value Type Description ScheduledJobDto.StatusEnum View Source TriggerId Gets or Sets TriggerId Declaration [DataMember(Name = \"triggerId\", IsRequired = true, EmitDefaultValue = true)] public string TriggerId { get; set; } Property Value Type Description string View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(ScheduledJobDto) Returns true if ScheduledJobDto instances are equal Declaration public bool Equals(ScheduledJobDto input) Parameters Type Name Description ScheduledJobDto input Instance of ScheduledJobDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ScheduledJobDto.StatusEnum.html": {
    "href": "api/mailslurp.Model.ScheduledJobDto.StatusEnum.html",
    "title": "Enum ScheduledJobDto.StatusEnum | MailSlurp",
    "keywords": "Enum ScheduledJobDto.StatusEnum Defines Status Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum ScheduledJobDto.StatusEnum Fields Name Description ABORTED Enum ABORTED for value: ABORTED CANCELLED Enum CANCELLED for value: CANCELLED COMPLETED Enum COMPLETED for value: COMPLETED FAILED Enum FAILED for value: FAILED SUBMITTED Enum SUBMITTED for value: SUBMITTED"
  },
  "api/mailslurp.Model.SearchEmailsOptions.html": {
    "href": "api/mailslurp.Model.SearchEmailsOptions.html",
    "title": "Class SearchEmailsOptions | MailSlurp",
    "keywords": "Class SearchEmailsOptions SearchEmailsOptions Inheritance object SearchEmailsOptions Implements IEquatable<SearchEmailsOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SearchEmailsOptions\")] public class SearchEmailsOptions : IEquatable<SearchEmailsOptions>, IValidatableObject Constructors View Source SearchEmailsOptions(List<Guid>, int, int, SortDirectionEnum?, bool, string, DateTime, DateTime) Initializes a new instance of the SearchEmailsOptions class. Declaration public SearchEmailsOptions(List<Guid> inboxIds = null, int pageIndex = 0, int pageSize = 0, SearchEmailsOptions.SortDirectionEnum? sortDirection = null, bool unreadOnly = false, string searchFilter = null, DateTime since = default, DateTime before = default) Parameters Type Name Description List<Guid> inboxIds Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account.. int pageIndex Optional page index in email list pagination. int pageSize Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results. SearchEmailsOptions.SortDirectionEnum? sortDirection Optional createdAt sort direction ASC or DESC. bool unreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly. string searchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body. DateTime since Optional filter emails received after given date time. DateTime before Optional filter emails received before given date time. Properties View Source Before Optional filter emails received before given date time Declaration [DataMember(Name = \"before\", EmitDefaultValue = false)] public DateTime Before { get; set; } Property Value Type Description DateTime Optional filter emails received before given date time View Source InboxIds Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. Declaration [DataMember(Name = \"inboxIds\", EmitDefaultValue = false)] public List<Guid> InboxIds { get; set; } Property Value Type Description List<Guid> Optional inbox ids to filter by. Can be repeated. By default will use all inboxes belonging to your account. View Source PageIndex Optional page index in email list pagination Declaration [DataMember(Name = \"pageIndex\", EmitDefaultValue = false)] public int PageIndex { get; set; } Property Value Type Description int Optional page index in email list pagination View Source PageSize Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results Declaration [DataMember(Name = \"pageSize\", EmitDefaultValue = false)] public int PageSize { get; set; } Property Value Type Description int Optional page size in email list pagination. Maximum size is 100. Use page index and sort to page through larger results View Source SearchFilter Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body Declaration [DataMember(Name = \"searchFilter\", EmitDefaultValue = false)] public string SearchFilter { get; set; } Property Value Type Description string Optional search filter. Searches email recipients, sender, subject, email address and ID. Does not search email body View Source Since Optional filter emails received after given date time Declaration [DataMember(Name = \"since\", EmitDefaultValue = false)] public DateTime Since { get; set; } Property Value Type Description DateTime Optional filter emails received after given date time View Source SortDirection Optional createdAt sort direction ASC or DESC Declaration [DataMember(Name = \"sortDirection\", EmitDefaultValue = false)] public SearchEmailsOptions.SortDirectionEnum? SortDirection { get; set; } Property Value Type Description SearchEmailsOptions.SortDirectionEnum? Optional createdAt sort direction ASC or DESC View Source UnreadOnly Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly Declaration [DataMember(Name = \"unreadOnly\", EmitDefaultValue = true)] public bool UnreadOnly { get; set; } Property Value Type Description bool Optional filter for unread emails only. All emails are considered unread until they are viewed in the dashboard or requested directly Methods View Source Equals(SearchEmailsOptions) Returns true if SearchEmailsOptions instances are equal Declaration public bool Equals(SearchEmailsOptions input) Parameters Type Name Description SearchEmailsOptions input Instance of SearchEmailsOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SearchEmailsOptions.SortDirectionEnum.html": {
    "href": "api/mailslurp.Model.SearchEmailsOptions.SortDirectionEnum.html",
    "title": "Enum SearchEmailsOptions.SortDirectionEnum | MailSlurp",
    "keywords": "Enum SearchEmailsOptions.SortDirectionEnum Optional createdAt sort direction ASC or DESC Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum SearchEmailsOptions.SortDirectionEnum Fields Name Description ASC Enum ASC for value: ASC DESC Enum DESC for value: DESC"
  },
  "api/mailslurp.Model.SearchInboxesOptions.html": {
    "href": "api/mailslurp.Model.SearchInboxesOptions.html",
    "title": "Class SearchInboxesOptions | MailSlurp",
    "keywords": "Class SearchInboxesOptions SearchInboxesOptions Inheritance object SearchInboxesOptions Implements IEquatable<SearchInboxesOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SearchInboxesOptions\")] public class SearchInboxesOptions : IEquatable<SearchInboxesOptions>, IValidatableObject Constructors View Source SearchInboxesOptions(int?, int?, SortDirectionEnum?, bool?, string, string, DateTime?, DateTime?, InboxTypeEnum?, InboxFunctionEnum?, Guid?) Initializes a new instance of the SearchInboxesOptions class. Declaration public SearchInboxesOptions(int? pageIndex = null, int? pageSize = null, SearchInboxesOptions.SortDirectionEnum? sortDirection = null, bool? favourite = null, string search = null, string tag = null, DateTime? since = null, DateTime? before = null, SearchInboxesOptions.InboxTypeEnum? inboxType = null, SearchInboxesOptions.InboxFunctionEnum? inboxFunction = null, Guid? domainId = null) Parameters Type Name Description int? pageIndex Optional page index in list pagination. int? pageSize Optional page size in list pagination. SearchInboxesOptions.SortDirectionEnum? sortDirection Optional createdAt sort direction ASC or DESC. bool? favourite Optionally filter results for favourites only. string search Optionally filter by search words partial matching ID, tags, name, and email address. string tag Optionally filter by tags. Will return inboxes that include given tags. DateTime? since Optional filter by created after given date time. DateTime? before Optional filter by created before given date time. SearchInboxesOptions.InboxTypeEnum? inboxType Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send).. SearchInboxesOptions.InboxFunctionEnum? inboxFunction Optional filter by inbox function. Guid? domainId Optional domain ID filter. Properties View Source Before Optional filter by created before given date time Declaration [DataMember(Name = \"before\", EmitDefaultValue = true)] public DateTime? Before { get; set; } Property Value Type Description DateTime? Optional filter by created before given date time View Source DomainId Optional domain ID filter Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? Optional domain ID filter View Source Favourite Optionally filter results for favourites only Declaration [DataMember(Name = \"favourite\", EmitDefaultValue = true)] public bool? Favourite { get; set; } Property Value Type Description bool? Optionally filter results for favourites only View Source InboxFunction Optional filter by inbox function Declaration [DataMember(Name = \"inboxFunction\", EmitDefaultValue = true)] public SearchInboxesOptions.InboxFunctionEnum? InboxFunction { get; set; } Property Value Type Description SearchInboxesOptions.InboxFunctionEnum? Optional filter by inbox function View Source InboxType Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). Declaration [DataMember(Name = \"inboxType\", EmitDefaultValue = true)] public SearchInboxesOptions.InboxTypeEnum? InboxType { get; set; } Property Value Type Description SearchInboxesOptions.InboxTypeEnum? Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). View Source PageIndex Optional page index in list pagination Declaration [DataMember(Name = \"pageIndex\", EmitDefaultValue = true)] public int? PageIndex { get; set; } Property Value Type Description int? Optional page index in list pagination View Source PageSize Optional page size in list pagination Declaration [DataMember(Name = \"pageSize\", EmitDefaultValue = true)] public int? PageSize { get; set; } Property Value Type Description int? Optional page size in list pagination View Source Search Optionally filter by search words partial matching ID, tags, name, and email address Declaration [DataMember(Name = \"search\", EmitDefaultValue = true)] public string Search { get; set; } Property Value Type Description string Optionally filter by search words partial matching ID, tags, name, and email address View Source Since Optional filter by created after given date time Declaration [DataMember(Name = \"since\", EmitDefaultValue = true)] public DateTime? Since { get; set; } Property Value Type Description DateTime? Optional filter by created after given date time View Source SortDirection Optional createdAt sort direction ASC or DESC Declaration [DataMember(Name = \"sortDirection\", EmitDefaultValue = true)] public SearchInboxesOptions.SortDirectionEnum? SortDirection { get; set; } Property Value Type Description SearchInboxesOptions.SortDirectionEnum? Optional createdAt sort direction ASC or DESC View Source Tag Optionally filter by tags. Will return inboxes that include given tags Declaration [DataMember(Name = \"tag\", EmitDefaultValue = true)] public string Tag { get; set; } Property Value Type Description string Optionally filter by tags. Will return inboxes that include given tags Methods View Source Equals(SearchInboxesOptions) Returns true if SearchInboxesOptions instances are equal Declaration public bool Equals(SearchInboxesOptions input) Parameters Type Name Description SearchInboxesOptions input Instance of SearchInboxesOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SearchInboxesOptions.InboxFunctionEnum.html": {
    "href": "api/mailslurp.Model.SearchInboxesOptions.InboxFunctionEnum.html",
    "title": "Enum SearchInboxesOptions.InboxFunctionEnum | MailSlurp",
    "keywords": "Enum SearchInboxesOptions.InboxFunctionEnum Optional filter by inbox function Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum SearchInboxesOptions.InboxFunctionEnum Fields Name Description ALIAS Enum ALIAS for value: ALIAS CATCHALL Enum CATCHALL for value: CATCH_ALL CONNECTOR Enum CONNECTOR for value: CONNECTOR THREAD Enum THREAD for value: THREAD"
  },
  "api/mailslurp.Model.SearchInboxesOptions.InboxTypeEnum.html": {
    "href": "api/mailslurp.Model.SearchInboxesOptions.InboxTypeEnum.html",
    "title": "Enum SearchInboxesOptions.InboxTypeEnum | MailSlurp",
    "keywords": "Enum SearchInboxesOptions.InboxTypeEnum Type of inbox. HTTP inboxes are faster and better for most cases. SMTP inboxes are more suited for public facing inbound messages (but cannot send). Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum SearchInboxesOptions.InboxTypeEnum Fields Name Description HTTPINBOX Enum HTTPINBOX for value: HTTP_INBOX SMTPINBOX Enum SMTPINBOX for value: SMTP_INBOX"
  },
  "api/mailslurp.Model.SearchInboxesOptions.SortDirectionEnum.html": {
    "href": "api/mailslurp.Model.SearchInboxesOptions.SortDirectionEnum.html",
    "title": "Enum SearchInboxesOptions.SortDirectionEnum | MailSlurp",
    "keywords": "Enum SearchInboxesOptions.SortDirectionEnum Optional createdAt sort direction ASC or DESC Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum SearchInboxesOptions.SortDirectionEnum Fields Name Description ASC Enum ASC for value: ASC DESC Enum DESC for value: DESC"
  },
  "api/mailslurp.Model.SendEmailBodyPart.html": {
    "href": "api/mailslurp.Model.SendEmailBodyPart.html",
    "title": "Class SendEmailBodyPart | MailSlurp",
    "keywords": "Class SendEmailBodyPart Email body content parts for multipart mime message. Will override body. Inheritance object SendEmailBodyPart Implements IEquatable<SendEmailBodyPart> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SendEmailBodyPart\")] public class SendEmailBodyPart : IEquatable<SendEmailBodyPart>, IValidatableObject Constructors View Source SendEmailBodyPart() Initializes a new instance of the SendEmailBodyPart class. Declaration [JsonConstructor] protected SendEmailBodyPart() View Source SendEmailBodyPart(string, string) Initializes a new instance of the SendEmailBodyPart class. Declaration public SendEmailBodyPart(string contentType = null, string contentBody = null) Parameters Type Name Description string contentType contentType (required). string contentBody contentBody (required). Properties View Source ContentBody Gets or Sets ContentBody Declaration [DataMember(Name = \"contentBody\", IsRequired = true, EmitDefaultValue = true)] public string ContentBody { get; set; } Property Value Type Description string View Source ContentType Gets or Sets ContentType Declaration [DataMember(Name = \"contentType\", IsRequired = true, EmitDefaultValue = true)] public string ContentType { get; set; } Property Value Type Description string Methods View Source Equals(SendEmailBodyPart) Returns true if SendEmailBodyPart instances are equal Declaration public bool Equals(SendEmailBodyPart input) Parameters Type Name Description SendEmailBodyPart input Instance of SendEmailBodyPart to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SendEmailOptions.html": {
    "href": "api/mailslurp.Model.SendEmailOptions.html",
    "title": "Class SendEmailOptions | MailSlurp",
    "keywords": "Class SendEmailOptions Options for the email to be sent Inheritance object SendEmailOptions Implements IEquatable<SendEmailOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SendEmailOptions\")] public class SendEmailOptions : IEquatable<SendEmailOptions>, IValidatableObject Constructors View Source SendEmailOptions(List<Guid?>, Guid?, List<string>, string, List<string>, List<string>, string, string, Dictionary<string, string>, string, bool?, bool?, string, List<string>, Dictionary<string, object>, Guid?, SendStrategyEnum?, bool?, bool?, bool?, ValidateEmailAddressesEnum?, bool?, bool?, List<SendEmailBodyPart>) Initializes a new instance of the SendEmailOptions class. Declaration public SendEmailOptions(List<Guid?> toContacts = null, Guid? toGroup = null, List<string> to = null, string from = null, List<string> cc = null, List<string> bcc = null, string subject = null, string replyTo = null, Dictionary<string, string> customHeaders = null, string body = null, bool? html = null, bool? isHTML = null, string charset = null, List<string> attachments = null, Dictionary<string, object> templateVariables = null, Guid? template = null, SendEmailOptions.SendStrategyEnum? sendStrategy = null, bool? useInboxName = null, bool? addTrackingPixel = null, bool? filterBouncedRecipients = null, SendEmailOptions.ValidateEmailAddressesEnum? validateEmailAddresses = null, bool? ignoreEmptyRecipients = null, bool? isXAmpHtml = null, List<SendEmailBodyPart> bodyParts = null) Parameters Type Name Description List<Guid?> toContacts Optional list of contact IDs to send email to. Manage your contacts via the API or dashboard. When contacts are used the email is sent to each contact separately so they will not see other recipients.. Guid? toGroup Optional contact group ID to send email to. You can create contacts and contact groups in the API or dashboard and use them for email campaigns. When contact groups are used the email is sent to each contact separately so they will not see other recipients. List<string> to List of destination email addresses. Each email address must be RFC 5322 format. Even single recipients must be in array form. Maximum recipients per email depends on your plan. If you need to send many emails try using contacts or contact groups or use a non standard sendStrategy to ensure that spam filters are not triggered (many recipients in one email can affect your spam rating). Be cautious when sending emails that your recipients exist. High bounce rates (meaning a high percentage of emails cannot be delivered because an address does not exist) can result in account freezing.. string from Optional from address. Email address is RFC 5322 format and may include a display name and email in angle brackets (my@address.com or My inbox &lt;my@address.com>). If no sender is set the source inbox address will be used for this field. If you set useInboxName to true the from field will include the inbox name as a display name: inbox_name &lt;inbox@address.com>. For this to work use the name field when creating an inbox. Beware of potential spam penalties when setting the from field to an address not used by the inbox. Your emails may get blocked by services if you impersonate another address. To use a custom email addresses use a custom domain. You can create domains with the DomainController. The domain must be verified in the dashboard before it can be used.. List<string> cc Optional list of cc destination email addresses. List<string> bcc Optional list of bcc destination email addresses. string subject Optional email subject line. string replyTo Optional replyTo header. Dictionary<string, string> customHeaders Optional custom headers. string body Optional contents of email. If body contains HTML then set isHTML to true to ensure that email clients render it correctly. You can use moustache template syntax in the email body in conjunction with toGroup contact variables or templateVariables data. If you need more templating control consider creating a template and using the template property instead of the body.. bool? html Optional HTML flag to indicate that contents is HTML. Set's a content-type: text/html for email. (Deprecated: use isHTML instead.). bool? isHTML Optional HTML flag. If true the content-type of the email will be text/html. Set to true when sending HTML to ensure proper rending on email clients. string charset Optional charset. List<string> attachments Optional list of attachment IDs to send with this email. You must first upload each attachment separately via method call or dashboard in order to obtain attachment IDs. This way you can reuse attachments with different emails once uploaded. There are several ways to upload that support multi-part form, base64 file encoding, and octet stream binary uploads. See the UploadController for available methods. . Dictionary<string, object> templateVariables Optional map of template variables. Will replace moustache syntax variables in subject and body or template with the associated values if found.. Guid? template Optional template ID to use for body. Will override body if provided. When using a template make sure you pass the corresponding map of templateVariables. You can find which variables are needed by fetching the template itself or viewing it in the dashboard.. SendEmailOptions.SendStrategyEnum? sendStrategy How an email should be sent based on its recipients. bool? useInboxName Use name of inbox as sender email address name. Will construct RFC 5322 email address with Inbox name &lt;inbox@address.com> if the inbox has a name.. bool? addTrackingPixel Add tracking pixel to email. bool? filterBouncedRecipients Filter recipients to remove any bounced recipients from to, bcc, and cc before sending. SendEmailOptions.ValidateEmailAddressesEnum? validateEmailAddresses Validate recipient email addresses before sending. bool? ignoreEmptyRecipients Ignore empty recipients after validation removes all recipients as invalid and fail silently. bool? isXAmpHtml Is content AMP4EMAIL compatible. If set will send as x-amp-html part.. List<SendEmailBodyPart> bodyParts Email body content parts for multipart mime message. Will override body.. Properties View Source AddTrackingPixel Add tracking pixel to email Declaration [DataMember(Name = \"addTrackingPixel\", EmitDefaultValue = true)] public bool? AddTrackingPixel { get; set; } Property Value Type Description bool? Add tracking pixel to email View Source Attachments Optional list of attachment IDs to send with this email. You must first upload each attachment separately via method call or dashboard in order to obtain attachment IDs. This way you can reuse attachments with different emails once uploaded. There are several ways to upload that support multi-part form, base64 file encoding, and octet stream binary uploads. See the UploadController for available methods. Declaration [DataMember(Name = \"attachments\", EmitDefaultValue = true)] public List<string> Attachments { get; set; } Property Value Type Description List<string> Optional list of attachment IDs to send with this email. You must first upload each attachment separately via method call or dashboard in order to obtain attachment IDs. This way you can reuse attachments with different emails once uploaded. There are several ways to upload that support multi-part form, base64 file encoding, and octet stream binary uploads. See the UploadController for available methods. View Source Bcc Optional list of bcc destination email addresses Declaration [DataMember(Name = \"bcc\", EmitDefaultValue = true)] public List<string> Bcc { get; set; } Property Value Type Description List<string> Optional list of bcc destination email addresses View Source Body Optional contents of email. If body contains HTML then set isHTML to true to ensure that email clients render it correctly. You can use moustache template syntax in the email body in conjunction with toGroup contact variables or templateVariables data. If you need more templating control consider creating a template and using the template property instead of the body. Declaration [DataMember(Name = \"body\", EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string Optional contents of email. If body contains HTML then set isHTML to true to ensure that email clients render it correctly. You can use moustache template syntax in the email body in conjunction with toGroup contact variables or templateVariables data. If you need more templating control consider creating a template and using the template property instead of the body. View Source BodyParts Email body content parts for multipart mime message. Will override body. Declaration [DataMember(Name = \"bodyParts\", EmitDefaultValue = true)] public List<SendEmailBodyPart> BodyParts { get; set; } Property Value Type Description List<SendEmailBodyPart> Email body content parts for multipart mime message. Will override body. View Source Cc Optional list of cc destination email addresses Declaration [DataMember(Name = \"cc\", EmitDefaultValue = true)] public List<string> Cc { get; set; } Property Value Type Description List<string> Optional list of cc destination email addresses View Source Charset Optional charset Declaration [DataMember(Name = \"charset\", EmitDefaultValue = true)] public string Charset { get; set; } Property Value Type Description string Optional charset View Source CustomHeaders Optional custom headers Declaration [DataMember(Name = \"customHeaders\", EmitDefaultValue = true)] public Dictionary<string, string> CustomHeaders { get; set; } Property Value Type Description Dictionary<string, string> Optional custom headers View Source FilterBouncedRecipients Filter recipients to remove any bounced recipients from to, bcc, and cc before sending Declaration [DataMember(Name = \"filterBouncedRecipients\", EmitDefaultValue = true)] public bool? FilterBouncedRecipients { get; set; } Property Value Type Description bool? Filter recipients to remove any bounced recipients from to, bcc, and cc before sending View Source From Optional from address. Email address is RFC 5322 format and may include a display name and email in angle brackets (my@address.com or My inbox &lt;my@address.com>). If no sender is set the source inbox address will be used for this field. If you set useInboxName to true the from field will include the inbox name as a display name: inbox_name &lt;inbox@address.com>. For this to work use the name field when creating an inbox. Beware of potential spam penalties when setting the from field to an address not used by the inbox. Your emails may get blocked by services if you impersonate another address. To use a custom email addresses use a custom domain. You can create domains with the DomainController. The domain must be verified in the dashboard before it can be used. Declaration [DataMember(Name = \"from\", EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string Optional from address. Email address is RFC 5322 format and may include a display name and email in angle brackets (my@address.com or My inbox &lt;my@address.com>). If no sender is set the source inbox address will be used for this field. If you set useInboxName to true the from field will include the inbox name as a display name: inbox_name &lt;inbox@address.com>. For this to work use the name field when creating an inbox. Beware of potential spam penalties when setting the from field to an address not used by the inbox. Your emails may get blocked by services if you impersonate another address. To use a custom email addresses use a custom domain. You can create domains with the DomainController. The domain must be verified in the dashboard before it can be used. View Source Html Optional HTML flag to indicate that contents is HTML. Set's a content-type: text/html for email. (Deprecated: use isHTML instead.) Declaration [DataMember(Name = \"html\", EmitDefaultValue = true)] public bool? Html { get; set; } Property Value Type Description bool? Optional HTML flag to indicate that contents is HTML. Set's a content-type: text/html for email. (Deprecated: use isHTML instead.) View Source IgnoreEmptyRecipients Ignore empty recipients after validation removes all recipients as invalid and fail silently Declaration [DataMember(Name = \"ignoreEmptyRecipients\", EmitDefaultValue = true)] public bool? IgnoreEmptyRecipients { get; set; } Property Value Type Description bool? Ignore empty recipients after validation removes all recipients as invalid and fail silently View Source IsHTML Optional HTML flag. If true the content-type of the email will be text/html. Set to true when sending HTML to ensure proper rending on email clients Declaration [DataMember(Name = \"isHTML\", EmitDefaultValue = true)] public bool? IsHTML { get; set; } Property Value Type Description bool? Optional HTML flag. If true the content-type of the email will be text/html. Set to true when sending HTML to ensure proper rending on email clients View Source IsXAmpHtml Is content AMP4EMAIL compatible. If set will send as x-amp-html part. Declaration [DataMember(Name = \"isXAmpHtml\", EmitDefaultValue = true)] public bool? IsXAmpHtml { get; set; } Property Value Type Description bool? Is content AMP4EMAIL compatible. If set will send as x-amp-html part. View Source ReplyTo Optional replyTo header Declaration [DataMember(Name = \"replyTo\", EmitDefaultValue = true)] public string ReplyTo { get; set; } Property Value Type Description string Optional replyTo header View Source SendStrategy How an email should be sent based on its recipients Declaration [DataMember(Name = \"sendStrategy\", EmitDefaultValue = true)] public SendEmailOptions.SendStrategyEnum? SendStrategy { get; set; } Property Value Type Description SendEmailOptions.SendStrategyEnum? How an email should be sent based on its recipients View Source Subject Optional email subject line Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string Optional email subject line View Source Template Optional template ID to use for body. Will override body if provided. When using a template make sure you pass the corresponding map of templateVariables. You can find which variables are needed by fetching the template itself or viewing it in the dashboard. Declaration [DataMember(Name = \"template\", EmitDefaultValue = true)] public Guid? Template { get; set; } Property Value Type Description Guid? Optional template ID to use for body. Will override body if provided. When using a template make sure you pass the corresponding map of templateVariables. You can find which variables are needed by fetching the template itself or viewing it in the dashboard. View Source TemplateVariables Optional map of template variables. Will replace moustache syntax variables in subject and body or template with the associated values if found. Declaration [DataMember(Name = \"templateVariables\", EmitDefaultValue = true)] public Dictionary<string, object> TemplateVariables { get; set; } Property Value Type Description Dictionary<string, object> Optional map of template variables. Will replace moustache syntax variables in subject and body or template with the associated values if found. View Source To List of destination email addresses. Each email address must be RFC 5322 format. Even single recipients must be in array form. Maximum recipients per email depends on your plan. If you need to send many emails try using contacts or contact groups or use a non standard sendStrategy to ensure that spam filters are not triggered (many recipients in one email can affect your spam rating). Be cautious when sending emails that your recipients exist. High bounce rates (meaning a high percentage of emails cannot be delivered because an address does not exist) can result in account freezing. Declaration [DataMember(Name = \"to\", EmitDefaultValue = true)] public List<string> To { get; set; } Property Value Type Description List<string> List of destination email addresses. Each email address must be RFC 5322 format. Even single recipients must be in array form. Maximum recipients per email depends on your plan. If you need to send many emails try using contacts or contact groups or use a non standard sendStrategy to ensure that spam filters are not triggered (many recipients in one email can affect your spam rating). Be cautious when sending emails that your recipients exist. High bounce rates (meaning a high percentage of emails cannot be delivered because an address does not exist) can result in account freezing. View Source ToContacts Optional list of contact IDs to send email to. Manage your contacts via the API or dashboard. When contacts are used the email is sent to each contact separately so they will not see other recipients. Declaration [DataMember(Name = \"toContacts\", EmitDefaultValue = true)] public List<Guid?> ToContacts { get; set; } Property Value Type Description List<Guid?> Optional list of contact IDs to send email to. Manage your contacts via the API or dashboard. When contacts are used the email is sent to each contact separately so they will not see other recipients. View Source ToGroup Optional contact group ID to send email to. You can create contacts and contact groups in the API or dashboard and use them for email campaigns. When contact groups are used the email is sent to each contact separately so they will not see other recipients Declaration [DataMember(Name = \"toGroup\", EmitDefaultValue = true)] public Guid? ToGroup { get; set; } Property Value Type Description Guid? Optional contact group ID to send email to. You can create contacts and contact groups in the API or dashboard and use them for email campaigns. When contact groups are used the email is sent to each contact separately so they will not see other recipients View Source UseInboxName Use name of inbox as sender email address name. Will construct RFC 5322 email address with Inbox name &lt;inbox@address.com> if the inbox has a name. Declaration [DataMember(Name = \"useInboxName\", EmitDefaultValue = true)] public bool? UseInboxName { get; set; } Property Value Type Description bool? Use name of inbox as sender email address name. Will construct RFC 5322 email address with Inbox name &lt;inbox@address.com> if the inbox has a name. View Source ValidateEmailAddresses Validate recipient email addresses before sending Declaration [DataMember(Name = \"validateEmailAddresses\", EmitDefaultValue = true)] public SendEmailOptions.ValidateEmailAddressesEnum? ValidateEmailAddresses { get; set; } Property Value Type Description SendEmailOptions.ValidateEmailAddressesEnum? Validate recipient email addresses before sending Methods View Source Equals(SendEmailOptions) Returns true if SendEmailOptions instances are equal Declaration public bool Equals(SendEmailOptions input) Parameters Type Name Description SendEmailOptions input Instance of SendEmailOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SendEmailOptions.SendStrategyEnum.html": {
    "href": "api/mailslurp.Model.SendEmailOptions.SendStrategyEnum.html",
    "title": "Enum SendEmailOptions.SendStrategyEnum | MailSlurp",
    "keywords": "Enum SendEmailOptions.SendStrategyEnum How an email should be sent based on its recipients Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum SendEmailOptions.SendStrategyEnum Fields Name Description SINGLEMESSAGE Enum SINGLEMESSAGE for value: SINGLE_MESSAGE"
  },
  "api/mailslurp.Model.SendEmailOptions.ValidateEmailAddressesEnum.html": {
    "href": "api/mailslurp.Model.SendEmailOptions.ValidateEmailAddressesEnum.html",
    "title": "Enum SendEmailOptions.ValidateEmailAddressesEnum | MailSlurp",
    "keywords": "Enum SendEmailOptions.ValidateEmailAddressesEnum Validate recipient email addresses before sending Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum SendEmailOptions.ValidateEmailAddressesEnum Fields Name Description NOVALIDATION Enum NOVALIDATION for value: NO_VALIDATION VALIDATEERRORIFINVALID Enum VALIDATEERRORIFINVALID for value: VALIDATE_ERROR_IF_INVALID VALIDATEFILTERREMOVEINVALID Enum VALIDATEFILTERREMOVEINVALID for value: VALIDATE_FILTER_REMOVE_INVALID"
  },
  "api/mailslurp.Model.Sender.html": {
    "href": "api/mailslurp.Model.Sender.html",
    "title": "Class Sender | MailSlurp",
    "keywords": "Class Sender Sender object containing from email address and from personal name if provided in address Inheritance object Sender Implements IEquatable<Sender> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"Sender\")] public class Sender : IEquatable<Sender>, IValidatableObject Constructors View Source Sender() Initializes a new instance of the Sender class. Declaration [JsonConstructor] protected Sender() View Source Sender(string, string, string) Initializes a new instance of the Sender class. Declaration public Sender(string rawValue = null, string emailAddress = null, string name = null) Parameters Type Name Description string rawValue rawValue (required). string emailAddress emailAddress (required). string name name. Properties View Source EmailAddress Gets or Sets EmailAddress Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", EmitDefaultValue = false)] public string Name { get; set; } Property Value Type Description string View Source RawValue Gets or Sets RawValue Declaration [DataMember(Name = \"rawValue\", IsRequired = true, EmitDefaultValue = true)] public string RawValue { get; set; } Property Value Type Description string Methods View Source Equals(Sender) Returns true if Sender instances are equal Declaration public bool Equals(Sender input) Parameters Type Name Description Sender input Instance of Sender to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SendSMTPEnvelopeOptions.html": {
    "href": "api/mailslurp.Model.SendSMTPEnvelopeOptions.html",
    "title": "Class SendSMTPEnvelopeOptions | MailSlurp",
    "keywords": "Class SendSMTPEnvelopeOptions Options for the email envelope Inheritance object SendSMTPEnvelopeOptions Implements IEquatable<SendSMTPEnvelopeOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SendSMTPEnvelopeOptions\")] public class SendSMTPEnvelopeOptions : IEquatable<SendSMTPEnvelopeOptions>, IValidatableObject Constructors View Source SendSMTPEnvelopeOptions() Initializes a new instance of the SendSMTPEnvelopeOptions class. Declaration [JsonConstructor] protected SendSMTPEnvelopeOptions() View Source SendSMTPEnvelopeOptions(List<string>, string, string) Initializes a new instance of the SendSMTPEnvelopeOptions class. Declaration public SendSMTPEnvelopeOptions(List<string> rcptTo = null, string mailFrom = null, string data = null) Parameters Type Name Description List<string> rcptTo rcptTo (required). string mailFrom mailFrom (required). string data data (required). Properties View Source Data Gets or Sets Data Declaration [DataMember(Name = \"data\", IsRequired = true, EmitDefaultValue = true)] public string Data { get; set; } Property Value Type Description string View Source MailFrom Gets or Sets MailFrom Declaration [DataMember(Name = \"mailFrom\", IsRequired = true, EmitDefaultValue = true)] public string MailFrom { get; set; } Property Value Type Description string View Source RcptTo Gets or Sets RcptTo Declaration [DataMember(Name = \"rcptTo\", IsRequired = true, EmitDefaultValue = true)] public List<string> RcptTo { get; set; } Property Value Type Description List<string> Methods View Source Equals(SendSMTPEnvelopeOptions) Returns true if SendSMTPEnvelopeOptions instances are equal Declaration public bool Equals(SendSMTPEnvelopeOptions input) Parameters Type Name Description SendSMTPEnvelopeOptions input Instance of SendSMTPEnvelopeOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SendWithQueueResult.html": {
    "href": "api/mailslurp.Model.SendWithQueueResult.html",
    "title": "Class SendWithQueueResult | MailSlurp",
    "keywords": "Class SendWithQueueResult SendWithQueueResult Inheritance object SendWithQueueResult Implements IEquatable<SendWithQueueResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SendWithQueueResult\")] public class SendWithQueueResult : IEquatable<SendWithQueueResult>, IValidatableObject Constructors View Source SendWithQueueResult() Initializes a new instance of the SendWithQueueResult class. Declaration [JsonConstructor] protected SendWithQueueResult() View Source SendWithQueueResult(Guid, Guid, string, Guid, string, bool, string, string, DateTime, DateTime) Initializes a new instance of the SendWithQueueResult class. Declaration public SendWithQueueResult(Guid id = default, Guid userId = default, string subject = null, Guid inboxId = default, string headerId = null, bool delivered = false, string exceptionName = null, string message = null, DateTime createdAt = default, DateTime updatedAt = default) Parameters Type Name Description Guid id id (required). Guid userId userId (required). string subject subject. Guid inboxId inboxId. string headerId headerId (required). bool delivered delivered (required). string exceptionName exceptionName. string message message. DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Delivered Gets or Sets Delivered Declaration [DataMember(Name = \"delivered\", IsRequired = true, EmitDefaultValue = true)] public bool Delivered { get; set; } Property Value Type Description bool View Source ExceptionName Gets or Sets ExceptionName Declaration [DataMember(Name = \"exceptionName\", EmitDefaultValue = false)] public string ExceptionName { get; set; } Property Value Type Description string View Source HeaderId Gets or Sets HeaderId Declaration [DataMember(Name = \"headerId\", IsRequired = true, EmitDefaultValue = true)] public string HeaderId { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = false)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description string View Source Subject Gets or Sets Subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = false)] public string Subject { get; set; } Property Value Type Description string View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(SendWithQueueResult) Returns true if SendWithQueueResult instances are equal Declaration public bool Equals(SendWithQueueResult input) Parameters Type Name Description SendWithQueueResult input Instance of SendWithQueueResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SentEmailDto.html": {
    "href": "api/mailslurp.Model.SentEmailDto.html",
    "title": "Class SentEmailDto | MailSlurp",
    "keywords": "Class SentEmailDto Sent email details Inheritance object SentEmailDto Implements IEquatable<SentEmailDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SentEmailDto\")] public class SentEmailDto : IEquatable<SentEmailDto>, IValidatableObject Constructors View Source SentEmailDto() Initializes a new instance of the SentEmailDto class. Declaration [JsonConstructor] protected SentEmailDto() View Source SentEmailDto(Guid, Guid, Guid, Guid?, List<string>, string, string, List<string>, List<string>, List<string>, string, string, string, List<Guid?>, Guid?, string, bool?, DateTime, List<Guid?>, string, List<string>, bool?, Guid?, Dictionary<string, object>, Dictionary<string, string>, bool) Initializes a new instance of the SentEmailDto class. Declaration public SentEmailDto(Guid id = default, Guid userId = default, Guid inboxId = default, Guid? domainId = null, List<string> to = null, string from = null, string replyTo = null, List<string> cc = null, List<string> bcc = null, List<string> attachments = null, string subject = null, string bodyMD5Hash = null, string body = null, List<Guid?> toContacts = null, Guid? toGroup = null, string charset = null, bool? isHTML = null, DateTime sentAt = default, List<Guid?> pixelIds = null, string messageId = null, List<string> messageIds = null, bool? virtualSend = null, Guid? templateId = null, Dictionary<string, object> templateVariables = null, Dictionary<string, string> headers = null, bool html = false) Parameters Type Name Description Guid id ID of sent email (required). Guid userId User ID (required). Guid inboxId Inbox ID email was sent from (required). Guid? domainId Domain ID. List<string> to Recipients email was sent to. string from Sent from address. string replyTo replyTo. List<string> cc cc. List<string> bcc bcc. List<string> attachments Array of IDs of attachments that were sent with this email. string subject subject. string bodyMD5Hash MD5 Hash. string body Sent email body. List<Guid?> toContacts toContacts. Guid? toGroup toGroup. string charset charset. bool? isHTML isHTML. DateTime sentAt sentAt (required). List<Guid?> pixelIds pixelIds. string messageId messageId. List<string> messageIds messageIds. bool? virtualSend virtualSend. Guid? templateId templateId. Dictionary<string, object> templateVariables templateVariables. Dictionary<string, string> headers headers. bool html html. Properties View Source Attachments Array of IDs of attachments that were sent with this email Declaration [DataMember(Name = \"attachments\", EmitDefaultValue = true)] public List<string> Attachments { get; set; } Property Value Type Description List<string> Array of IDs of attachments that were sent with this email View Source Bcc Gets or Sets Bcc Declaration [DataMember(Name = \"bcc\", EmitDefaultValue = true)] public List<string> Bcc { get; set; } Property Value Type Description List<string> View Source Body Sent email body Declaration [DataMember(Name = \"body\", EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string Sent email body View Source BodyMD5Hash MD5 Hash Declaration [DataMember(Name = \"bodyMD5Hash\", EmitDefaultValue = true)] public string BodyMD5Hash { get; set; } Property Value Type Description string MD5 Hash View Source Cc Gets or Sets Cc Declaration [DataMember(Name = \"cc\", EmitDefaultValue = true)] public List<string> Cc { get; set; } Property Value Type Description List<string> View Source Charset Gets or Sets Charset Declaration [DataMember(Name = \"charset\", EmitDefaultValue = true)] public string Charset { get; set; } Property Value Type Description string View Source DomainId Domain ID Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? Domain ID View Source From Sent from address Declaration [DataMember(Name = \"from\", EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string Sent from address View Source Headers Gets or Sets Headers Declaration [DataMember(Name = \"headers\", EmitDefaultValue = true)] public Dictionary<string, string> Headers { get; set; } Property Value Type Description Dictionary<string, string> View Source Html Gets or Sets Html Declaration [DataMember(Name = \"html\", EmitDefaultValue = true)] public bool Html { get; set; } Property Value Type Description bool View Source Id ID of sent email Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid ID of sent email View Source InboxId Inbox ID email was sent from Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid Inbox ID email was sent from View Source IsHTML Gets or Sets IsHTML Declaration [DataMember(Name = \"isHTML\", EmitDefaultValue = true)] public bool? IsHTML { get; set; } Property Value Type Description bool? View Source MessageId Gets or Sets MessageId Declaration [DataMember(Name = \"messageId\", EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string View Source MessageIds Gets or Sets MessageIds Declaration [DataMember(Name = \"messageIds\", EmitDefaultValue = true)] public List<string> MessageIds { get; set; } Property Value Type Description List<string> View Source PixelIds Gets or Sets PixelIds Declaration [DataMember(Name = \"pixelIds\", EmitDefaultValue = true)] public List<Guid?> PixelIds { get; set; } Property Value Type Description List<Guid?> View Source ReplyTo Gets or Sets ReplyTo Declaration [DataMember(Name = \"replyTo\", EmitDefaultValue = true)] public string ReplyTo { get; set; } Property Value Type Description string View Source SentAt Gets or Sets SentAt Declaration [DataMember(Name = \"sentAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime SentAt { get; set; } Property Value Type Description DateTime View Source Subject Gets or Sets Subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string View Source TemplateId Gets or Sets TemplateId Declaration [DataMember(Name = \"templateId\", EmitDefaultValue = true)] public Guid? TemplateId { get; set; } Property Value Type Description Guid? View Source TemplateVariables Gets or Sets TemplateVariables Declaration [DataMember(Name = \"templateVariables\", EmitDefaultValue = true)] public Dictionary<string, object> TemplateVariables { get; set; } Property Value Type Description Dictionary<string, object> View Source To Recipients email was sent to Declaration [DataMember(Name = \"to\", EmitDefaultValue = true)] public List<string> To { get; set; } Property Value Type Description List<string> Recipients email was sent to View Source ToContacts Gets or Sets ToContacts Declaration [DataMember(Name = \"toContacts\", EmitDefaultValue = true)] public List<Guid?> ToContacts { get; set; } Property Value Type Description List<Guid?> View Source ToGroup Gets or Sets ToGroup Declaration [DataMember(Name = \"toGroup\", EmitDefaultValue = true)] public Guid? ToGroup { get; set; } Property Value Type Description Guid? View Source UserId User ID Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid User ID View Source VirtualSend Gets or Sets VirtualSend Declaration [DataMember(Name = \"virtualSend\", EmitDefaultValue = true)] public bool? VirtualSend { get; set; } Property Value Type Description bool? Methods View Source Equals(SentEmailDto) Returns true if SentEmailDto instances are equal Declaration public bool Equals(SentEmailDto input) Parameters Type Name Description SentEmailDto input Instance of SentEmailDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SentEmailProjection.html": {
    "href": "api/mailslurp.Model.SentEmailProjection.html",
    "title": "Class SentEmailProjection | MailSlurp",
    "keywords": "Class SentEmailProjection SentEmailProjection Inheritance object SentEmailProjection Implements IEquatable<SentEmailProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SentEmailProjection\")] public class SentEmailProjection : IEquatable<SentEmailProjection>, IValidatableObject Constructors View Source SentEmailProjection() Initializes a new instance of the SentEmailProjection class. Declaration [JsonConstructor] protected SentEmailProjection() View Source SentEmailProjection(DateTime, Guid, string, string, List<string>, Guid, Guid, List<string>, List<string>, List<string>, string, bool) Initializes a new instance of the SentEmailProjection class. Declaration public SentEmailProjection(DateTime createdAt = default, Guid id = default, string subject = null, string from = null, List<string> attachments = null, Guid userId = default, Guid inboxId = default, List<string> to = null, List<string> bcc = null, List<string> cc = null, string bodyMD5Hash = null, bool virtualSend = false) Parameters Type Name Description DateTime createdAt createdAt (required). Guid id id (required). string subject subject. string from from. List<string> attachments attachments (required). Guid userId userId (required). Guid inboxId inboxId (required). List<string> to to (required). List<string> bcc bcc (required). List<string> cc cc (required). string bodyMD5Hash bodyMD5Hash. bool virtualSend virtualSend (required). Properties View Source Attachments Gets or Sets Attachments Declaration [DataMember(Name = \"attachments\", IsRequired = true, EmitDefaultValue = true)] public List<string> Attachments { get; set; } Property Value Type Description List<string> View Source Bcc Gets or Sets Bcc Declaration [DataMember(Name = \"bcc\", IsRequired = true, EmitDefaultValue = true)] public List<string> Bcc { get; set; } Property Value Type Description List<string> View Source BodyMD5Hash Gets or Sets BodyMD5Hash Declaration [DataMember(Name = \"bodyMD5Hash\", EmitDefaultValue = false)] public string BodyMD5Hash { get; set; } Property Value Type Description string View Source Cc Gets or Sets Cc Declaration [DataMember(Name = \"cc\", IsRequired = true, EmitDefaultValue = true)] public List<string> Cc { get; set; } Property Value Type Description List<string> View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source From Gets or Sets From Declaration [DataMember(Name = \"from\", EmitDefaultValue = false)] public string From { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source Subject Gets or Sets Subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = false)] public string Subject { get; set; } Property Value Type Description string View Source To Gets or Sets To Declaration [DataMember(Name = \"to\", IsRequired = true, EmitDefaultValue = true)] public List<string> To { get; set; } Property Value Type Description List<string> View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid View Source VirtualSend Gets or Sets VirtualSend Declaration [DataMember(Name = \"virtualSend\", IsRequired = true, EmitDefaultValue = true)] public bool VirtualSend { get; set; } Property Value Type Description bool Methods View Source Equals(SentEmailProjection) Returns true if SentEmailProjection instances are equal Declaration public bool Equals(SentEmailProjection input) Parameters Type Name Description SentEmailProjection input Instance of SentEmailProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SentSmsDto.html": {
    "href": "api/mailslurp.Model.SentSmsDto.html",
    "title": "Class SentSmsDto | MailSlurp",
    "keywords": "Class SentSmsDto SentSmsDto Inheritance object SentSmsDto Implements IEquatable<SentSmsDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SentSmsDto\")] public class SentSmsDto : IEquatable<SentSmsDto>, IValidatableObject Constructors View Source SentSmsDto() Initializes a new instance of the SentSmsDto class. Declaration [JsonConstructor] protected SentSmsDto() View Source SentSmsDto(Guid, Guid, Guid, string, string, string, string, string, Guid, DateTime, DateTime) Initializes a new instance of the SentSmsDto class. Declaration public SentSmsDto(Guid id = default, Guid userId = default, Guid phoneNumber = default, string fromNumber = null, string toNumber = null, string body = null, string sid = null, string replyToSid = null, Guid replyToId = default, DateTime createdAt = default, DateTime updatedAt = default) Parameters Type Name Description Guid id id (required). Guid userId userId (required). Guid phoneNumber phoneNumber (required). string fromNumber fromNumber (required). string toNumber toNumber (required). string body body (required). string sid sid (required). string replyToSid replyToSid (required). Guid replyToId replyToId (required). DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Properties View Source Body Gets or Sets Body Declaration [DataMember(Name = \"body\", IsRequired = true, EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source FromNumber Gets or Sets FromNumber Declaration [DataMember(Name = \"fromNumber\", IsRequired = true, EmitDefaultValue = true)] public string FromNumber { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source PhoneNumber Gets or Sets PhoneNumber Declaration [DataMember(Name = \"phoneNumber\", IsRequired = true, EmitDefaultValue = true)] public Guid PhoneNumber { get; set; } Property Value Type Description Guid View Source ReplyToId Gets or Sets ReplyToId Declaration [DataMember(Name = \"replyToId\", IsRequired = true, EmitDefaultValue = true)] public Guid ReplyToId { get; set; } Property Value Type Description Guid View Source ReplyToSid Gets or Sets ReplyToSid Declaration [DataMember(Name = \"replyToSid\", IsRequired = true, EmitDefaultValue = true)] public string ReplyToSid { get; set; } Property Value Type Description string View Source Sid Gets or Sets Sid Declaration [DataMember(Name = \"sid\", IsRequired = true, EmitDefaultValue = true)] public string Sid { get; set; } Property Value Type Description string View Source ToNumber Gets or Sets ToNumber Declaration [DataMember(Name = \"toNumber\", IsRequired = true, EmitDefaultValue = true)] public string ToNumber { get; set; } Property Value Type Description string View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(SentSmsDto) Returns true if SentSmsDto instances are equal Declaration public bool Equals(SentSmsDto input) Parameters Type Name Description SentSmsDto input Instance of SentSmsDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SetInboxFavouritedOptions.html": {
    "href": "api/mailslurp.Model.SetInboxFavouritedOptions.html",
    "title": "Class SetInboxFavouritedOptions | MailSlurp",
    "keywords": "Class SetInboxFavouritedOptions Options for setting inbox favourite state Inheritance object SetInboxFavouritedOptions Implements IEquatable<SetInboxFavouritedOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SetInboxFavouritedOptions\")] public class SetInboxFavouritedOptions : IEquatable<SetInboxFavouritedOptions>, IValidatableObject Constructors View Source SetInboxFavouritedOptions() Initializes a new instance of the SetInboxFavouritedOptions class. Declaration [JsonConstructor] protected SetInboxFavouritedOptions() View Source SetInboxFavouritedOptions(bool) Initializes a new instance of the SetInboxFavouritedOptions class. Declaration public SetInboxFavouritedOptions(bool state = false) Parameters Type Name Description bool state Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering (required). Properties View Source State Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering Declaration [DataMember(Name = \"state\", IsRequired = true, EmitDefaultValue = true)] public bool State { get; set; } Property Value Type Description bool Is the inbox a favorite. Marking an inbox as a favorite is typically done in the dashboard for quick access or filtering Methods View Source Equals(SetInboxFavouritedOptions) Returns true if SetInboxFavouritedOptions instances are equal Declaration public bool Equals(SetInboxFavouritedOptions input) Parameters Type Name Description SetInboxFavouritedOptions input Instance of SetInboxFavouritedOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SimpleSendEmailOptions.html": {
    "href": "api/mailslurp.Model.SimpleSendEmailOptions.html",
    "title": "Class SimpleSendEmailOptions | MailSlurp",
    "keywords": "Class SimpleSendEmailOptions Simplified send email options Inheritance object SimpleSendEmailOptions Implements IEquatable<SimpleSendEmailOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SimpleSendEmailOptions\")] public class SimpleSendEmailOptions : IEquatable<SimpleSendEmailOptions>, IValidatableObject Constructors View Source SimpleSendEmailOptions() Initializes a new instance of the SimpleSendEmailOptions class. Declaration [JsonConstructor] protected SimpleSendEmailOptions() View Source SimpleSendEmailOptions(Guid?, string, string, string) Initializes a new instance of the SimpleSendEmailOptions class. Declaration public SimpleSendEmailOptions(Guid? senderId = null, string to = null, string body = null, string subject = null) Parameters Type Name Description Guid? senderId ID of inbox to send from. If null an inbox will be created for sending. string to Email address to send to (required). string body Body of the email message. Supports HTML. string subject Subject line of the email. Properties View Source Body Body of the email message. Supports HTML Declaration [DataMember(Name = \"body\", EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string Body of the email message. Supports HTML View Source SenderId ID of inbox to send from. If null an inbox will be created for sending Declaration [DataMember(Name = \"senderId\", EmitDefaultValue = true)] public Guid? SenderId { get; set; } Property Value Type Description Guid? ID of inbox to send from. If null an inbox will be created for sending View Source Subject Subject line of the email Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string Subject line of the email View Source To Email address to send to Declaration [DataMember(Name = \"to\", IsRequired = true, EmitDefaultValue = true)] public string To { get; set; } Property Value Type Description string Email address to send to Methods View Source Equals(SimpleSendEmailOptions) Returns true if SimpleSendEmailOptions instances are equal Declaration public bool Equals(SimpleSendEmailOptions input) Parameters Type Name Description SimpleSendEmailOptions input Instance of SimpleSendEmailOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SmsDto.html": {
    "href": "api/mailslurp.Model.SmsDto.html",
    "title": "Class SmsDto | MailSlurp",
    "keywords": "Class SmsDto SmsDto Inheritance object SmsDto Implements IEquatable<SmsDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SmsDto\")] public class SmsDto : IEquatable<SmsDto>, IValidatableObject Constructors View Source SmsDto() Initializes a new instance of the SmsDto class. Declaration [JsonConstructor] protected SmsDto() View Source SmsDto(Guid, Guid, Guid, string, string, bool, DateTime, DateTime) Initializes a new instance of the SmsDto class. Declaration public SmsDto(Guid id = default, Guid userId = default, Guid phoneNumber = default, string fromNumber = null, string body = null, bool read = false, DateTime createdAt = default, DateTime updatedAt = default) Parameters Type Name Description Guid id id (required). Guid userId userId (required). Guid phoneNumber phoneNumber (required). string fromNumber fromNumber (required). string body body (required). bool read read (required). DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). Properties View Source Body Gets or Sets Body Declaration [DataMember(Name = \"body\", IsRequired = true, EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source FromNumber Gets or Sets FromNumber Declaration [DataMember(Name = \"fromNumber\", IsRequired = true, EmitDefaultValue = true)] public string FromNumber { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source PhoneNumber Gets or Sets PhoneNumber Declaration [DataMember(Name = \"phoneNumber\", IsRequired = true, EmitDefaultValue = true)] public Guid PhoneNumber { get; set; } Property Value Type Description Guid View Source Read Gets or Sets Read Declaration [DataMember(Name = \"read\", IsRequired = true, EmitDefaultValue = true)] public bool Read { get; set; } Property Value Type Description bool View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(SmsDto) Returns true if SmsDto instances are equal Declaration public bool Equals(SmsDto input) Parameters Type Name Description SmsDto input Instance of SmsDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SmsMatchOption.FieldEnum.html": {
    "href": "api/mailslurp.Model.SmsMatchOption.FieldEnum.html",
    "title": "Enum SmsMatchOption.FieldEnum | MailSlurp",
    "keywords": "Enum SmsMatchOption.FieldEnum Fields of an SMS object that can be used to filter results Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum SmsMatchOption.FieldEnum Fields Name Description BODY Enum BODY for value: BODY FROM Enum FROM for value: FROM"
  },
  "api/mailslurp.Model.SmsMatchOption.html": {
    "href": "api/mailslurp.Model.SmsMatchOption.html",
    "title": "Class SmsMatchOption | MailSlurp",
    "keywords": "Class SmsMatchOption Options for matching SMS messages in a phone number. Each match option object contains a field, should and value property. Together they form logical conditions such as BODY should CONTAIN value. Inheritance object SmsMatchOption Implements IEquatable<SmsMatchOption> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SmsMatchOption\")] public class SmsMatchOption : IEquatable<SmsMatchOption>, IValidatableObject Constructors View Source SmsMatchOption() Initializes a new instance of the SmsMatchOption class. Declaration [JsonConstructor] protected SmsMatchOption() View Source SmsMatchOption(FieldEnum, ShouldEnum, string) Initializes a new instance of the SmsMatchOption class. Declaration public SmsMatchOption(SmsMatchOption.FieldEnum field = (SmsMatchOption.FieldEnum)0, SmsMatchOption.ShouldEnum should = (SmsMatchOption.ShouldEnum)0, string value = null) Parameters Type Name Description SmsMatchOption.FieldEnum field Fields of an SMS object that can be used to filter results (required). SmsMatchOption.ShouldEnum should How the value of the email field specified should be compared to the value given in the match options. (required). string value The value you wish to compare with the value of the field specified using the should value passed. For example BODY should CONTAIN a value passed. (required). Properties View Source Field Fields of an SMS object that can be used to filter results Declaration [DataMember(Name = \"field\", IsRequired = true, EmitDefaultValue = true)] public SmsMatchOption.FieldEnum Field { get; set; } Property Value Type Description SmsMatchOption.FieldEnum Fields of an SMS object that can be used to filter results View Source Should How the value of the email field specified should be compared to the value given in the match options. Declaration [DataMember(Name = \"should\", IsRequired = true, EmitDefaultValue = true)] public SmsMatchOption.ShouldEnum Should { get; set; } Property Value Type Description SmsMatchOption.ShouldEnum How the value of the email field specified should be compared to the value given in the match options. View Source Value The value you wish to compare with the value of the field specified using the should value passed. For example BODY should CONTAIN a value passed. Declaration [DataMember(Name = \"value\", IsRequired = true, EmitDefaultValue = true)] public string Value { get; set; } Property Value Type Description string The value you wish to compare with the value of the field specified using the should value passed. For example BODY should CONTAIN a value passed. Methods View Source Equals(SmsMatchOption) Returns true if SmsMatchOption instances are equal Declaration public bool Equals(SmsMatchOption input) Parameters Type Name Description SmsMatchOption input Instance of SmsMatchOption to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SmsMatchOption.ShouldEnum.html": {
    "href": "api/mailslurp.Model.SmsMatchOption.ShouldEnum.html",
    "title": "Enum SmsMatchOption.ShouldEnum | MailSlurp",
    "keywords": "Enum SmsMatchOption.ShouldEnum How the value of the email field specified should be compared to the value given in the match options. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum SmsMatchOption.ShouldEnum Fields Name Description CONTAIN Enum CONTAIN for value: CONTAIN EQUAL Enum EQUAL for value: EQUAL"
  },
  "api/mailslurp.Model.SmsPreview.html": {
    "href": "api/mailslurp.Model.SmsPreview.html",
    "title": "Class SmsPreview | MailSlurp",
    "keywords": "Class SmsPreview SmsPreview Inheritance object SmsPreview Implements IEquatable<SmsPreview> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SmsPreview\")] public class SmsPreview : IEquatable<SmsPreview>, IValidatableObject Constructors View Source SmsPreview() Initializes a new instance of the SmsPreview class. Declaration [JsonConstructor] protected SmsPreview() View Source SmsPreview(Guid, Guid, string, Guid, string, DateTime) Initializes a new instance of the SmsPreview class. Declaration public SmsPreview(Guid id = default, Guid userId = default, string body = null, Guid phoneNumber = default, string fromNumber = null, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). Guid userId userId (required). string body body (required). Guid phoneNumber phoneNumber (required). string fromNumber fromNumber (required). DateTime createdAt createdAt (required). Properties View Source Body Gets or Sets Body Declaration [DataMember(Name = \"body\", IsRequired = true, EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source FromNumber Gets or Sets FromNumber Declaration [DataMember(Name = \"fromNumber\", IsRequired = true, EmitDefaultValue = true)] public string FromNumber { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source PhoneNumber Gets or Sets PhoneNumber Declaration [DataMember(Name = \"phoneNumber\", IsRequired = true, EmitDefaultValue = true)] public Guid PhoneNumber { get; set; } Property Value Type Description Guid View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(SmsPreview) Returns true if SmsPreview instances are equal Declaration public bool Equals(SmsPreview input) Parameters Type Name Description SmsPreview input Instance of SmsPreview to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SmsProjection.html": {
    "href": "api/mailslurp.Model.SmsProjection.html",
    "title": "Class SmsProjection | MailSlurp",
    "keywords": "Class SmsProjection SMS projection Inheritance object SmsProjection Implements IEquatable<SmsProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SmsProjection\")] public class SmsProjection : IEquatable<SmsProjection>, IValidatableObject Constructors View Source SmsProjection() Initializes a new instance of the SmsProjection class. Declaration [JsonConstructor] protected SmsProjection() View Source SmsProjection(string, DateTime, Guid, Guid, string, bool, Guid) Initializes a new instance of the SmsProjection class. Declaration public SmsProjection(string body = null, DateTime createdAt = default, Guid userId = default, Guid phoneNumber = default, string fromNumber = null, bool read = false, Guid id = default) Parameters Type Name Description string body body (required). DateTime createdAt createdAt (required). Guid userId userId (required). Guid phoneNumber phoneNumber (required). string fromNumber fromNumber (required). bool read read (required). Guid id id (required). Properties View Source Body Gets or Sets Body Declaration [DataMember(Name = \"body\", IsRequired = true, EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source FromNumber Gets or Sets FromNumber Declaration [DataMember(Name = \"fromNumber\", IsRequired = true, EmitDefaultValue = true)] public string FromNumber { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source PhoneNumber Gets or Sets PhoneNumber Declaration [DataMember(Name = \"phoneNumber\", IsRequired = true, EmitDefaultValue = true)] public Guid PhoneNumber { get; set; } Property Value Type Description Guid View Source Read Gets or Sets Read Declaration [DataMember(Name = \"read\", IsRequired = true, EmitDefaultValue = true)] public bool Read { get; set; } Property Value Type Description bool View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(SmsProjection) Returns true if SmsProjection instances are equal Declaration public bool Equals(SmsProjection input) Parameters Type Name Description SmsProjection input Instance of SmsProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SmsReplyOptions.html": {
    "href": "api/mailslurp.Model.SmsReplyOptions.html",
    "title": "Class SmsReplyOptions | MailSlurp",
    "keywords": "Class SmsReplyOptions SmsReplyOptions Inheritance object SmsReplyOptions Implements IEquatable<SmsReplyOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SmsReplyOptions\")] public class SmsReplyOptions : IEquatable<SmsReplyOptions>, IValidatableObject Constructors View Source SmsReplyOptions() Initializes a new instance of the SmsReplyOptions class. Declaration [JsonConstructor] protected SmsReplyOptions() View Source SmsReplyOptions(string) Initializes a new instance of the SmsReplyOptions class. Declaration public SmsReplyOptions(string body = null) Parameters Type Name Description string body body (required). Properties View Source Body Gets or Sets Body Declaration [DataMember(Name = \"body\", IsRequired = true, EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string Methods View Source Equals(SmsReplyOptions) Returns true if SmsReplyOptions instances are equal Declaration public bool Equals(SmsReplyOptions input) Parameters Type Name Description SmsReplyOptions input Instance of SmsReplyOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.SortObject.html": {
    "href": "api/mailslurp.Model.SortObject.html",
    "title": "Class SortObject | MailSlurp",
    "keywords": "Class SortObject SortObject Inheritance object SortObject Implements IEquatable<SortObject> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"SortObject\")] public class SortObject : IEquatable<SortObject>, IValidatableObject Constructors View Source SortObject(bool, bool, bool) Initializes a new instance of the SortObject class. Declaration public SortObject(bool sorted = false, bool unsorted = false, bool empty = false) Parameters Type Name Description bool sorted sorted. bool unsorted unsorted. bool empty empty. Properties View Source Empty Gets or Sets Empty Declaration [DataMember(Name = \"empty\", EmitDefaultValue = true)] public bool Empty { get; set; } Property Value Type Description bool View Source Sorted Gets or Sets Sorted Declaration [DataMember(Name = \"sorted\", EmitDefaultValue = true)] public bool Sorted { get; set; } Property Value Type Description bool View Source Unsorted Gets or Sets Unsorted Declaration [DataMember(Name = \"unsorted\", EmitDefaultValue = true)] public bool Unsorted { get; set; } Property Value Type Description bool Methods View Source Equals(SortObject) Returns true if SortObject instances are equal Declaration public bool Equals(SortObject input) Parameters Type Name Description SortObject input Instance of SortObject to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TemplateDto.html": {
    "href": "api/mailslurp.Model.TemplateDto.html",
    "title": "Class TemplateDto | MailSlurp",
    "keywords": "Class TemplateDto Email template Inheritance object TemplateDto Implements IEquatable<TemplateDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TemplateDto\")] public class TemplateDto : IEquatable<TemplateDto>, IValidatableObject Constructors View Source TemplateDto() Initializes a new instance of the TemplateDto class. Declaration [JsonConstructor] protected TemplateDto() View Source TemplateDto(Guid, string, List<TemplateVariable>, string, DateTime) Initializes a new instance of the TemplateDto class. Declaration public TemplateDto(Guid id = default, string name = null, List<TemplateVariable> variables = null, string content = null, DateTime createdAt = default) Parameters Type Name Description Guid id ID of template (required). string name Template name (required). List<TemplateVariable> variables Variables available in template that can be replaced with values (required). string content Content of the template (required). DateTime createdAt Created at time (required). Properties View Source Content Content of the template Declaration [DataMember(Name = \"content\", IsRequired = true, EmitDefaultValue = true)] public string Content { get; set; } Property Value Type Description string Content of the template View Source CreatedAt Created at time Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime Created at time View Source Id ID of template Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid ID of template View Source Name Template name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Template name View Source Variables Variables available in template that can be replaced with values Declaration [DataMember(Name = \"variables\", IsRequired = true, EmitDefaultValue = true)] public List<TemplateVariable> Variables { get; set; } Property Value Type Description List<TemplateVariable> Variables available in template that can be replaced with values Methods View Source Equals(TemplateDto) Returns true if TemplateDto instances are equal Declaration public bool Equals(TemplateDto input) Parameters Type Name Description TemplateDto input Instance of TemplateDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TemplatePreview.html": {
    "href": "api/mailslurp.Model.TemplatePreview.html",
    "title": "Class TemplatePreview | MailSlurp",
    "keywords": "Class TemplatePreview TemplatePreview Inheritance object TemplatePreview Implements IEquatable<TemplatePreview> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TemplatePreview\")] public class TemplatePreview : IEquatable<TemplatePreview>, IValidatableObject Constructors View Source TemplatePreview() Initializes a new instance of the TemplatePreview class. Declaration [JsonConstructor] protected TemplatePreview() View Source TemplatePreview(string) Initializes a new instance of the TemplatePreview class. Declaration public TemplatePreview(string preview = null) Parameters Type Name Description string preview preview (required). Properties View Source Preview Gets or Sets Preview Declaration [DataMember(Name = \"preview\", IsRequired = true, EmitDefaultValue = true)] public string Preview { get; set; } Property Value Type Description string Methods View Source Equals(TemplatePreview) Returns true if TemplatePreview instances are equal Declaration public bool Equals(TemplatePreview input) Parameters Type Name Description TemplatePreview input Instance of TemplatePreview to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TemplateProjection.html": {
    "href": "api/mailslurp.Model.TemplateProjection.html",
    "title": "Class TemplateProjection | MailSlurp",
    "keywords": "Class TemplateProjection Email template data Inheritance object TemplateProjection Implements IEquatable<TemplateProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TemplateProjection\")] public class TemplateProjection : IEquatable<TemplateProjection>, IValidatableObject Constructors View Source TemplateProjection() Initializes a new instance of the TemplateProjection class. Declaration [JsonConstructor] protected TemplateProjection() View Source TemplateProjection(DateTime, DateTime, List<string>, string, Guid) Initializes a new instance of the TemplateProjection class. Declaration public TemplateProjection(DateTime createdAt = default, DateTime updatedAt = default, List<string> variables = null, string name = null, Guid id = default) Parameters Type Name Description DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). List<string> variables variables (required). string name name (required). Guid id id (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source Variables Gets or Sets Variables Declaration [DataMember(Name = \"variables\", IsRequired = true, EmitDefaultValue = true)] public List<string> Variables { get; set; } Property Value Type Description List<string> Methods View Source Equals(TemplateProjection) Returns true if TemplateProjection instances are equal Declaration public bool Equals(TemplateProjection input) Parameters Type Name Description TemplateProjection input Instance of TemplateProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TemplateVariable.html": {
    "href": "api/mailslurp.Model.TemplateVariable.html",
    "title": "Class TemplateVariable | MailSlurp",
    "keywords": "Class TemplateVariable Variable for use with email template Inheritance object TemplateVariable Implements IEquatable<TemplateVariable> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TemplateVariable\")] public class TemplateVariable : IEquatable<TemplateVariable>, IValidatableObject Constructors View Source TemplateVariable() Initializes a new instance of the TemplateVariable class. Declaration [JsonConstructor] protected TemplateVariable() View Source TemplateVariable(string, VariableTypeEnum) Initializes a new instance of the TemplateVariable class. Declaration public TemplateVariable(string name = null, TemplateVariable.VariableTypeEnum variableType = (TemplateVariable.VariableTypeEnum)0) Parameters Type Name Description string name Name of variable. This can be used in a template as {{name}} (required). TemplateVariable.VariableTypeEnum variableType The type of variable (required). Properties View Source Name Name of variable. This can be used in a template as {{name}} Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Name of variable. This can be used in a template as {{name}} View Source VariableType The type of variable Declaration [DataMember(Name = \"variableType\", IsRequired = true, EmitDefaultValue = true)] public TemplateVariable.VariableTypeEnum VariableType { get; set; } Property Value Type Description TemplateVariable.VariableTypeEnum The type of variable Methods View Source Equals(TemplateVariable) Returns true if TemplateVariable instances are equal Declaration public bool Equals(TemplateVariable input) Parameters Type Name Description TemplateVariable input Instance of TemplateVariable to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TemplateVariable.VariableTypeEnum.html": {
    "href": "api/mailslurp.Model.TemplateVariable.VariableTypeEnum.html",
    "title": "Enum TemplateVariable.VariableTypeEnum | MailSlurp",
    "keywords": "Enum TemplateVariable.VariableTypeEnum The type of variable Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum TemplateVariable.VariableTypeEnum Fields Name Description STRING Enum STRING for value: STRING"
  },
  "api/mailslurp.Model.TestInboxRulesetReceivingOptions.html": {
    "href": "api/mailslurp.Model.TestInboxRulesetReceivingOptions.html",
    "title": "Class TestInboxRulesetReceivingOptions | MailSlurp",
    "keywords": "Class TestInboxRulesetReceivingOptions Test options for inbox ruleset receiving test Inheritance object TestInboxRulesetReceivingOptions Implements IEquatable<TestInboxRulesetReceivingOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TestInboxRulesetReceivingOptions\")] public class TestInboxRulesetReceivingOptions : IEquatable<TestInboxRulesetReceivingOptions>, IValidatableObject Constructors View Source TestInboxRulesetReceivingOptions() Initializes a new instance of the TestInboxRulesetReceivingOptions class. Declaration [JsonConstructor] protected TestInboxRulesetReceivingOptions() View Source TestInboxRulesetReceivingOptions(Guid, string) Initializes a new instance of the TestInboxRulesetReceivingOptions class. Declaration public TestInboxRulesetReceivingOptions(Guid inboxId = default, string fromSender = null) Parameters Type Name Description Guid inboxId inboxId (required). string fromSender fromSender (required). Properties View Source FromSender Gets or Sets FromSender Declaration [DataMember(Name = \"fromSender\", IsRequired = true, EmitDefaultValue = true)] public string FromSender { get; set; } Property Value Type Description string View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid Methods View Source Equals(TestInboxRulesetReceivingOptions) Returns true if TestInboxRulesetReceivingOptions instances are equal Declaration public bool Equals(TestInboxRulesetReceivingOptions input) Parameters Type Name Description TestInboxRulesetReceivingOptions input Instance of TestInboxRulesetReceivingOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TestInboxRulesetReceivingResult.html": {
    "href": "api/mailslurp.Model.TestInboxRulesetReceivingResult.html",
    "title": "Class TestInboxRulesetReceivingResult | MailSlurp",
    "keywords": "Class TestInboxRulesetReceivingResult TestInboxRulesetReceivingResult Inheritance object TestInboxRulesetReceivingResult Implements IEquatable<TestInboxRulesetReceivingResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TestInboxRulesetReceivingResult\")] public class TestInboxRulesetReceivingResult : IEquatable<TestInboxRulesetReceivingResult>, IValidatableObject Constructors View Source TestInboxRulesetReceivingResult() Initializes a new instance of the TestInboxRulesetReceivingResult class. Declaration [JsonConstructor] protected TestInboxRulesetReceivingResult() View Source TestInboxRulesetReceivingResult(bool) Initializes a new instance of the TestInboxRulesetReceivingResult class. Declaration public TestInboxRulesetReceivingResult(bool canReceive = false) Parameters Type Name Description bool canReceive canReceive (required). Properties View Source CanReceive Gets or Sets CanReceive Declaration [DataMember(Name = \"canReceive\", IsRequired = true, EmitDefaultValue = true)] public bool CanReceive { get; set; } Property Value Type Description bool Methods View Source Equals(TestInboxRulesetReceivingResult) Returns true if TestInboxRulesetReceivingResult instances are equal Declaration public bool Equals(TestInboxRulesetReceivingResult input) Parameters Type Name Description TestInboxRulesetReceivingResult input Instance of TestInboxRulesetReceivingResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TestInboxRulesetSendingOptions.html": {
    "href": "api/mailslurp.Model.TestInboxRulesetSendingOptions.html",
    "title": "Class TestInboxRulesetSendingOptions | MailSlurp",
    "keywords": "Class TestInboxRulesetSendingOptions Test options for inbox ruleset sending test Inheritance object TestInboxRulesetSendingOptions Implements IEquatable<TestInboxRulesetSendingOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TestInboxRulesetSendingOptions\")] public class TestInboxRulesetSendingOptions : IEquatable<TestInboxRulesetSendingOptions>, IValidatableObject Constructors View Source TestInboxRulesetSendingOptions() Initializes a new instance of the TestInboxRulesetSendingOptions class. Declaration [JsonConstructor] protected TestInboxRulesetSendingOptions() View Source TestInboxRulesetSendingOptions(Guid, string) Initializes a new instance of the TestInboxRulesetSendingOptions class. Declaration public TestInboxRulesetSendingOptions(Guid inboxId = default, string recipient = null) Parameters Type Name Description Guid inboxId inboxId (required). string recipient recipient (required). Properties View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source Recipient Gets or Sets Recipient Declaration [DataMember(Name = \"recipient\", IsRequired = true, EmitDefaultValue = true)] public string Recipient { get; set; } Property Value Type Description string Methods View Source Equals(TestInboxRulesetSendingOptions) Returns true if TestInboxRulesetSendingOptions instances are equal Declaration public bool Equals(TestInboxRulesetSendingOptions input) Parameters Type Name Description TestInboxRulesetSendingOptions input Instance of TestInboxRulesetSendingOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TestInboxRulesetSendingResult.html": {
    "href": "api/mailslurp.Model.TestInboxRulesetSendingResult.html",
    "title": "Class TestInboxRulesetSendingResult | MailSlurp",
    "keywords": "Class TestInboxRulesetSendingResult TestInboxRulesetSendingResult Inheritance object TestInboxRulesetSendingResult Implements IEquatable<TestInboxRulesetSendingResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TestInboxRulesetSendingResult\")] public class TestInboxRulesetSendingResult : IEquatable<TestInboxRulesetSendingResult>, IValidatableObject Constructors View Source TestInboxRulesetSendingResult() Initializes a new instance of the TestInboxRulesetSendingResult class. Declaration [JsonConstructor] protected TestInboxRulesetSendingResult() View Source TestInboxRulesetSendingResult(bool) Initializes a new instance of the TestInboxRulesetSendingResult class. Declaration public TestInboxRulesetSendingResult(bool canSend = false) Parameters Type Name Description bool canSend canSend (required). Properties View Source CanSend Gets or Sets CanSend Declaration [DataMember(Name = \"canSend\", IsRequired = true, EmitDefaultValue = true)] public bool CanSend { get; set; } Property Value Type Description bool Methods View Source Equals(TestInboxRulesetSendingResult) Returns true if TestInboxRulesetSendingResult instances are equal Declaration public bool Equals(TestInboxRulesetSendingResult input) Parameters Type Name Description TestInboxRulesetSendingResult input Instance of TestInboxRulesetSendingResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TestNewInboxForwarderOptions.html": {
    "href": "api/mailslurp.Model.TestNewInboxForwarderOptions.html",
    "title": "Class TestNewInboxForwarderOptions | MailSlurp",
    "keywords": "Class TestNewInboxForwarderOptions Options for testing new inbox forwarder rules Inheritance object TestNewInboxForwarderOptions Implements IEquatable<TestNewInboxForwarderOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TestNewInboxForwarderOptions\")] public class TestNewInboxForwarderOptions : IEquatable<TestNewInboxForwarderOptions>, IValidatableObject Constructors View Source TestNewInboxForwarderOptions() Initializes a new instance of the TestNewInboxForwarderOptions class. Declaration [JsonConstructor] protected TestNewInboxForwarderOptions() View Source TestNewInboxForwarderOptions(InboxForwarderTestOptions, CreateInboxForwarderOptions) Initializes a new instance of the TestNewInboxForwarderOptions class. Declaration public TestNewInboxForwarderOptions(InboxForwarderTestOptions inboxForwarderTestOptions = null, CreateInboxForwarderOptions createInboxForwarderOptions = null) Parameters Type Name Description InboxForwarderTestOptions inboxForwarderTestOptions inboxForwarderTestOptions (required). CreateInboxForwarderOptions createInboxForwarderOptions createInboxForwarderOptions (required). Properties View Source CreateInboxForwarderOptions Gets or Sets CreateInboxForwarderOptions Declaration [DataMember(Name = \"createInboxForwarderOptions\", IsRequired = true, EmitDefaultValue = true)] public CreateInboxForwarderOptions CreateInboxForwarderOptions { get; set; } Property Value Type Description CreateInboxForwarderOptions View Source InboxForwarderTestOptions Gets or Sets InboxForwarderTestOptions Declaration [DataMember(Name = \"inboxForwarderTestOptions\", IsRequired = true, EmitDefaultValue = true)] public InboxForwarderTestOptions InboxForwarderTestOptions { get; set; } Property Value Type Description InboxForwarderTestOptions Methods View Source Equals(TestNewInboxForwarderOptions) Returns true if TestNewInboxForwarderOptions instances are equal Declaration public bool Equals(TestNewInboxForwarderOptions input) Parameters Type Name Description TestNewInboxForwarderOptions input Instance of TestNewInboxForwarderOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TestNewInboxRulesetOptions.html": {
    "href": "api/mailslurp.Model.TestNewInboxRulesetOptions.html",
    "title": "Class TestNewInboxRulesetOptions | MailSlurp",
    "keywords": "Class TestNewInboxRulesetOptions Test inbox ruleset options Inheritance object TestNewInboxRulesetOptions Implements IEquatable<TestNewInboxRulesetOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TestNewInboxRulesetOptions\")] public class TestNewInboxRulesetOptions : IEquatable<TestNewInboxRulesetOptions>, IValidatableObject Constructors View Source TestNewInboxRulesetOptions() Initializes a new instance of the TestNewInboxRulesetOptions class. Declaration [JsonConstructor] protected TestNewInboxRulesetOptions() View Source TestNewInboxRulesetOptions(InboxRulesetTestOptions, CreateInboxRulesetOptions) Initializes a new instance of the TestNewInboxRulesetOptions class. Declaration public TestNewInboxRulesetOptions(InboxRulesetTestOptions inboxRulesetTestOptions = null, CreateInboxRulesetOptions createInboxRulesetOptions = null) Parameters Type Name Description InboxRulesetTestOptions inboxRulesetTestOptions inboxRulesetTestOptions (required). CreateInboxRulesetOptions createInboxRulesetOptions createInboxRulesetOptions (required). Properties View Source CreateInboxRulesetOptions Gets or Sets CreateInboxRulesetOptions Declaration [DataMember(Name = \"createInboxRulesetOptions\", IsRequired = true, EmitDefaultValue = true)] public CreateInboxRulesetOptions CreateInboxRulesetOptions { get; set; } Property Value Type Description CreateInboxRulesetOptions View Source InboxRulesetTestOptions Gets or Sets InboxRulesetTestOptions Declaration [DataMember(Name = \"inboxRulesetTestOptions\", IsRequired = true, EmitDefaultValue = true)] public InboxRulesetTestOptions InboxRulesetTestOptions { get; set; } Property Value Type Description InboxRulesetTestOptions Methods View Source Equals(TestNewInboxRulesetOptions) Returns true if TestNewInboxRulesetOptions instances are equal Declaration public bool Equals(TestNewInboxRulesetOptions input) Parameters Type Name Description TestNewInboxRulesetOptions input Instance of TestNewInboxRulesetOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TestPhoneNumberOptions.html": {
    "href": "api/mailslurp.Model.TestPhoneNumberOptions.html",
    "title": "Class TestPhoneNumberOptions | MailSlurp",
    "keywords": "Class TestPhoneNumberOptions TestPhoneNumberOptions Inheritance object TestPhoneNumberOptions Implements IEquatable<TestPhoneNumberOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TestPhoneNumberOptions\")] public class TestPhoneNumberOptions : IEquatable<TestPhoneNumberOptions>, IValidatableObject Constructors View Source TestPhoneNumberOptions() Initializes a new instance of the TestPhoneNumberOptions class. Declaration [JsonConstructor] protected TestPhoneNumberOptions() View Source TestPhoneNumberOptions(string) Initializes a new instance of the TestPhoneNumberOptions class. Declaration public TestPhoneNumberOptions(string message = null) Parameters Type Name Description string message message (required). Properties View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", IsRequired = true, EmitDefaultValue = true)] public string Message { get; set; } Property Value Type Description string Methods View Source Equals(TestPhoneNumberOptions) Returns true if TestPhoneNumberOptions instances are equal Declaration public bool Equals(TestPhoneNumberOptions input) Parameters Type Name Description TestPhoneNumberOptions input Instance of TestPhoneNumberOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ThreadProjection.html": {
    "href": "api/mailslurp.Model.ThreadProjection.html",
    "title": "Class ThreadProjection | MailSlurp",
    "keywords": "Class ThreadProjection A thread is a message thread created for a message received by an alias Inheritance object ThreadProjection Implements IEquatable<ThreadProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ThreadProjection\")] public class ThreadProjection : IEquatable<ThreadProjection>, IValidatableObject Constructors View Source ThreadProjection() Initializes a new instance of the ThreadProjection class. Declaration [JsonConstructor] protected ThreadProjection() View Source ThreadProjection(DateTime, DateTime, Guid, Guid, List<string>, List<string>, List<string>, Guid, string, string, Guid) Initializes a new instance of the ThreadProjection class. Declaration public ThreadProjection(DateTime createdAt = default, DateTime updatedAt = default, Guid userId = default, Guid inboxId = default, List<string> to = null, List<string> bcc = null, List<string> cc = null, Guid aliasId = default, string subject = null, string name = null, Guid id = default) Parameters Type Name Description DateTime createdAt Created at DateTime (required). DateTime updatedAt Updated at DateTime (required). Guid userId User ID (required). Guid inboxId Inbox ID (required). List<string> to To recipients (required). List<string> bcc BCC recipients. List<string> cc CC recipients. Guid aliasId Alias ID (required). string subject Thread subject. string name Name of thread. Guid id ID of email thread (required). Properties View Source AliasId Alias ID Declaration [DataMember(Name = \"aliasId\", IsRequired = true, EmitDefaultValue = true)] public Guid AliasId { get; set; } Property Value Type Description Guid Alias ID View Source Bcc BCC recipients Declaration [DataMember(Name = \"bcc\", EmitDefaultValue = false)] public List<string> Bcc { get; set; } Property Value Type Description List<string> BCC recipients View Source Cc CC recipients Declaration [DataMember(Name = \"cc\", EmitDefaultValue = false)] public List<string> Cc { get; set; } Property Value Type Description List<string> CC recipients View Source CreatedAt Created at DateTime Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime Created at DateTime View Source Id ID of email thread Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid ID of email thread View Source InboxId Inbox ID Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid Inbox ID View Source Name Name of thread Declaration [DataMember(Name = \"name\", EmitDefaultValue = false)] public string Name { get; set; } Property Value Type Description string Name of thread View Source Subject Thread subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = false)] public string Subject { get; set; } Property Value Type Description string Thread subject View Source To To recipients Declaration [DataMember(Name = \"to\", IsRequired = true, EmitDefaultValue = true)] public List<string> To { get; set; } Property Value Type Description List<string> To recipients View Source UpdatedAt Updated at DateTime Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime Updated at DateTime View Source UserId User ID Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid User ID Methods View Source Equals(ThreadProjection) Returns true if ThreadProjection instances are equal Declaration public bool Equals(ThreadProjection input) Parameters Type Name Description ThreadProjection input Instance of ThreadProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TrackingPixelDto.html": {
    "href": "api/mailslurp.Model.TrackingPixelDto.html",
    "title": "Class TrackingPixelDto | MailSlurp",
    "keywords": "Class TrackingPixelDto Tracking pixel Inheritance object TrackingPixelDto Implements IEquatable<TrackingPixelDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TrackingPixelDto\")] public class TrackingPixelDto : IEquatable<TrackingPixelDto>, IValidatableObject Constructors View Source TrackingPixelDto() Initializes a new instance of the TrackingPixelDto class. Declaration [JsonConstructor] protected TrackingPixelDto() View Source TrackingPixelDto(Guid, bool, string, string, string, Guid?, Guid?, DateTime?, DateTime) Initializes a new instance of the TrackingPixelDto class. Declaration public TrackingPixelDto(Guid id = default, bool seen = false, string recipient = null, string html = null, string url = null, Guid? inboxId = null, Guid? sentEmailId = null, DateTime? seenAt = null, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). bool seen seen (required). string recipient recipient. string html html (required). string url url (required). Guid? inboxId inboxId. Guid? sentEmailId sentEmailId. DateTime? seenAt seenAt. DateTime createdAt createdAt (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Html Gets or Sets Html Declaration [DataMember(Name = \"html\", IsRequired = true, EmitDefaultValue = true)] public string Html { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = true)] public Guid? InboxId { get; set; } Property Value Type Description Guid? View Source Recipient Gets or Sets Recipient Declaration [DataMember(Name = \"recipient\", EmitDefaultValue = true)] public string Recipient { get; set; } Property Value Type Description string View Source Seen Gets or Sets Seen Declaration [DataMember(Name = \"seen\", IsRequired = true, EmitDefaultValue = true)] public bool Seen { get; set; } Property Value Type Description bool View Source SeenAt Gets or Sets SeenAt Declaration [DataMember(Name = \"seenAt\", EmitDefaultValue = true)] public DateTime? SeenAt { get; set; } Property Value Type Description DateTime? View Source SentEmailId Gets or Sets SentEmailId Declaration [DataMember(Name = \"sentEmailId\", EmitDefaultValue = true)] public Guid? SentEmailId { get; set; } Property Value Type Description Guid? View Source Url Gets or Sets Url Declaration [DataMember(Name = \"url\", IsRequired = true, EmitDefaultValue = true)] public string Url { get; set; } Property Value Type Description string Methods View Source Equals(TrackingPixelDto) Returns true if TrackingPixelDto instances are equal Declaration public bool Equals(TrackingPixelDto input) Parameters Type Name Description TrackingPixelDto input Instance of TrackingPixelDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.TrackingPixelProjection.html": {
    "href": "api/mailslurp.Model.TrackingPixelProjection.html",
    "title": "Class TrackingPixelProjection | MailSlurp",
    "keywords": "Class TrackingPixelProjection Tracking pixel data Inheritance object TrackingPixelProjection Implements IEquatable<TrackingPixelProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"TrackingPixelProjection\")] public class TrackingPixelProjection : IEquatable<TrackingPixelProjection>, IValidatableObject Constructors View Source TrackingPixelProjection() Initializes a new instance of the TrackingPixelProjection class. Declaration [JsonConstructor] protected TrackingPixelProjection() View Source TrackingPixelProjection(DateTime, Guid, Guid, Guid, string, bool, DateTime, string, Guid) Initializes a new instance of the TrackingPixelProjection class. Declaration public TrackingPixelProjection(DateTime createdAt = default, Guid sentEmailId = default, Guid userId = default, Guid inboxId = default, string recipient = null, bool seen = false, DateTime seenAt = default, string name = null, Guid id = default) Parameters Type Name Description DateTime createdAt createdAt (required). Guid sentEmailId sentEmailId. Guid userId userId (required). Guid inboxId inboxId. string recipient recipient. bool seen seen (required). DateTime seenAt seenAt. string name name. Guid id id (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = false)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", EmitDefaultValue = false)] public string Name { get; set; } Property Value Type Description string View Source Recipient Gets or Sets Recipient Declaration [DataMember(Name = \"recipient\", EmitDefaultValue = false)] public string Recipient { get; set; } Property Value Type Description string View Source Seen Gets or Sets Seen Declaration [DataMember(Name = \"seen\", IsRequired = true, EmitDefaultValue = true)] public bool Seen { get; set; } Property Value Type Description bool View Source SeenAt Gets or Sets SeenAt Declaration [DataMember(Name = \"seenAt\", EmitDefaultValue = false)] public DateTime SeenAt { get; set; } Property Value Type Description DateTime View Source SentEmailId Gets or Sets SentEmailId Declaration [DataMember(Name = \"sentEmailId\", EmitDefaultValue = false)] public Guid SentEmailId { get; set; } Property Value Type Description Guid View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid Methods View Source Equals(TrackingPixelProjection) Returns true if TrackingPixelProjection instances are equal Declaration public bool Equals(TrackingPixelProjection input) Parameters Type Name Description TrackingPixelProjection input Instance of TrackingPixelProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.UnknownMissedEmailProjection.html": {
    "href": "api/mailslurp.Model.UnknownMissedEmailProjection.html",
    "title": "Class UnknownMissedEmailProjection | MailSlurp",
    "keywords": "Class UnknownMissedEmailProjection Unknown missed email projection Inheritance object UnknownMissedEmailProjection Implements IEquatable<UnknownMissedEmailProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"UnknownMissedEmailProjection\")] public class UnknownMissedEmailProjection : IEquatable<UnknownMissedEmailProjection>, IValidatableObject Constructors View Source UnknownMissedEmailProjection() Initializes a new instance of the UnknownMissedEmailProjection class. Declaration [JsonConstructor] protected UnknownMissedEmailProjection() View Source UnknownMissedEmailProjection(DateTime, List<string>, string, Guid, string) Initializes a new instance of the UnknownMissedEmailProjection class. Declaration public UnknownMissedEmailProjection(DateTime createdAt = default, List<string> to = null, string subject = null, Guid id = default, string from = null) Parameters Type Name Description DateTime createdAt createdAt (required). List<string> to to. string subject subject. Guid id id (required). string from from. Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source From Gets or Sets From Declaration [DataMember(Name = \"from\", EmitDefaultValue = false)] public string From { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source Subject Gets or Sets Subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = false)] public string Subject { get; set; } Property Value Type Description string View Source To Gets or Sets To Declaration [DataMember(Name = \"to\", EmitDefaultValue = false)] public List<string> To { get; set; } Property Value Type Description List<string> Methods View Source Equals(UnknownMissedEmailProjection) Returns true if UnknownMissedEmailProjection instances are equal Declaration public bool Equals(UnknownMissedEmailProjection input) Parameters Type Name Description UnknownMissedEmailProjection input Instance of UnknownMissedEmailProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.UnreadCount.html": {
    "href": "api/mailslurp.Model.UnreadCount.html",
    "title": "Class UnreadCount | MailSlurp",
    "keywords": "Class UnreadCount Number of unread entities Inheritance object UnreadCount Implements IEquatable<UnreadCount> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"UnreadCount\")] public class UnreadCount : IEquatable<UnreadCount>, IValidatableObject Constructors View Source UnreadCount() Initializes a new instance of the UnreadCount class. Declaration [JsonConstructor] protected UnreadCount() View Source UnreadCount(long) Initializes a new instance of the UnreadCount class. Declaration public UnreadCount(long count = 0) Parameters Type Name Description long count count (required). Properties View Source Count Gets or Sets Count Declaration [DataMember(Name = \"count\", IsRequired = true, EmitDefaultValue = true)] public long Count { get; set; } Property Value Type Description long Methods View Source Equals(UnreadCount) Returns true if UnreadCount instances are equal Declaration public bool Equals(UnreadCount input) Parameters Type Name Description UnreadCount input Instance of UnreadCount to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.UnseenErrorCountDto.html": {
    "href": "api/mailslurp.Model.UnseenErrorCountDto.html",
    "title": "Class UnseenErrorCountDto | MailSlurp",
    "keywords": "Class UnseenErrorCountDto Number of unseen errors Inheritance object UnseenErrorCountDto Implements IEquatable<UnseenErrorCountDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"UnseenErrorCountDto\")] public class UnseenErrorCountDto : IEquatable<UnseenErrorCountDto>, IValidatableObject Constructors View Source UnseenErrorCountDto() Initializes a new instance of the UnseenErrorCountDto class. Declaration [JsonConstructor] protected UnseenErrorCountDto() View Source UnseenErrorCountDto(long) Initializes a new instance of the UnseenErrorCountDto class. Declaration public UnseenErrorCountDto(long count = 0) Parameters Type Name Description long count count (required). Properties View Source Count Gets or Sets Count Declaration [DataMember(Name = \"count\", IsRequired = true, EmitDefaultValue = true)] public long Count { get; set; } Property Value Type Description long Methods View Source Equals(UnseenErrorCountDto) Returns true if UnseenErrorCountDto instances are equal Declaration public bool Equals(UnseenErrorCountDto input) Parameters Type Name Description UnseenErrorCountDto input Instance of UnseenErrorCountDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.UpdateAliasOptions.html": {
    "href": "api/mailslurp.Model.UpdateAliasOptions.html",
    "title": "Class UpdateAliasOptions | MailSlurp",
    "keywords": "Class UpdateAliasOptions Update an email alias Inheritance object UpdateAliasOptions Implements IEquatable<UpdateAliasOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"UpdateAliasOptions\")] public class UpdateAliasOptions : IEquatable<UpdateAliasOptions>, IValidatableObject Constructors View Source UpdateAliasOptions(string) Initializes a new instance of the UpdateAliasOptions class. Declaration public UpdateAliasOptions(string name = null) Parameters Type Name Description string name Optional name for alias. Properties View Source Name Optional name for alias Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Optional name for alias Methods View Source Equals(UpdateAliasOptions) Returns true if UpdateAliasOptions instances are equal Declaration public bool Equals(UpdateAliasOptions input) Parameters Type Name Description UpdateAliasOptions input Instance of UpdateAliasOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.UpdateDomainOptions.html": {
    "href": "api/mailslurp.Model.UpdateDomainOptions.html",
    "title": "Class UpdateDomainOptions | MailSlurp",
    "keywords": "Class UpdateDomainOptions Options for creating a domain to use with MailSlurp. You must have ownership access to this domain in order to verify it. Domains will not functionally currently until the domain has been verified. See https://www.mailslurp.com/guides/custom-domains for help. Inheritance object UpdateDomainOptions Implements IEquatable<UpdateDomainOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"UpdateDomainOptions\")] public class UpdateDomainOptions : IEquatable<UpdateDomainOptions>, IValidatableObject Constructors View Source UpdateDomainOptions(Guid?) Initializes a new instance of the UpdateDomainOptions class. Declaration public UpdateDomainOptions(Guid? catchAllInboxId = null) Parameters Type Name Description Guid? catchAllInboxId catchAllInboxId. Properties View Source CatchAllInboxId Gets or Sets CatchAllInboxId Declaration [DataMember(Name = \"catchAllInboxId\", EmitDefaultValue = true)] public Guid? CatchAllInboxId { get; set; } Property Value Type Description Guid? Methods View Source Equals(UpdateDomainOptions) Returns true if UpdateDomainOptions instances are equal Declaration public bool Equals(UpdateDomainOptions input) Parameters Type Name Description UpdateDomainOptions input Instance of UpdateDomainOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.UpdateGroupContacts.html": {
    "href": "api/mailslurp.Model.UpdateGroupContacts.html",
    "title": "Class UpdateGroupContacts | MailSlurp",
    "keywords": "Class UpdateGroupContacts Update group contacts options. Pass a list of contact ids to replace existing group contacts. Inheritance object UpdateGroupContacts Implements IEquatable<UpdateGroupContacts> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"UpdateGroupContacts\")] public class UpdateGroupContacts : IEquatable<UpdateGroupContacts>, IValidatableObject Constructors View Source UpdateGroupContacts() Initializes a new instance of the UpdateGroupContacts class. Declaration [JsonConstructor] protected UpdateGroupContacts() View Source UpdateGroupContacts(List<Guid>) Initializes a new instance of the UpdateGroupContacts class. Declaration public UpdateGroupContacts(List<Guid> contactIds = null) Parameters Type Name Description List<Guid> contactIds contactIds (required). Properties View Source ContactIds Gets or Sets ContactIds Declaration [DataMember(Name = \"contactIds\", IsRequired = true, EmitDefaultValue = true)] public List<Guid> ContactIds { get; set; } Property Value Type Description List<Guid> Methods View Source Equals(UpdateGroupContacts) Returns true if UpdateGroupContacts instances are equal Declaration public bool Equals(UpdateGroupContacts input) Parameters Type Name Description UpdateGroupContacts input Instance of UpdateGroupContacts to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.UpdateInboxOptions.html": {
    "href": "api/mailslurp.Model.UpdateInboxOptions.html",
    "title": "Class UpdateInboxOptions | MailSlurp",
    "keywords": "Class UpdateInboxOptions Options for updating inbox properties Inheritance object UpdateInboxOptions Implements IEquatable<UpdateInboxOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"UpdateInboxOptions\")] public class UpdateInboxOptions : IEquatable<UpdateInboxOptions>, IValidatableObject Constructors View Source UpdateInboxOptions(string, string, List<string>, DateTime?, bool?) Initializes a new instance of the UpdateInboxOptions class. Declaration public UpdateInboxOptions(string name = null, string description = null, List<string> tags = null, DateTime? expiresAt = null, bool? favourite = null) Parameters Type Name Description string name Name of the inbox and used as the sender name when sending emails .Displayed in the dashboard for easier search. string description Description of an inbox for labelling and searching purposes. List<string> tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI.. DateTime? expiresAt Inbox expiration time. When, if ever, the inbox should expire and be deleted. If null then this inbox is permanent and the emails in it won't be deleted. This is the default behavior unless expiration date is set. If an expiration date is set and the time is reached MailSlurp will expire the inbox and move it to an expired inbox entity. You can still access the emails belonging to it but it can no longer send or receive email.. bool? favourite Is the inbox a favorite inbox. Make an inbox a favorite is typically done in the dashboard for quick access or filtering. Properties View Source Description Description of an inbox for labelling and searching purposes Declaration [DataMember(Name = \"description\", EmitDefaultValue = true)] public string Description { get; set; } Property Value Type Description string Description of an inbox for labelling and searching purposes View Source ExpiresAt Inbox expiration time. When, if ever, the inbox should expire and be deleted. If null then this inbox is permanent and the emails in it won't be deleted. This is the default behavior unless expiration date is set. If an expiration date is set and the time is reached MailSlurp will expire the inbox and move it to an expired inbox entity. You can still access the emails belonging to it but it can no longer send or receive email. Declaration [DataMember(Name = \"expiresAt\", EmitDefaultValue = true)] public DateTime? ExpiresAt { get; set; } Property Value Type Description DateTime? Inbox expiration time. When, if ever, the inbox should expire and be deleted. If null then this inbox is permanent and the emails in it won't be deleted. This is the default behavior unless expiration date is set. If an expiration date is set and the time is reached MailSlurp will expire the inbox and move it to an expired inbox entity. You can still access the emails belonging to it but it can no longer send or receive email. View Source Favourite Is the inbox a favorite inbox. Make an inbox a favorite is typically done in the dashboard for quick access or filtering Declaration [DataMember(Name = \"favourite\", EmitDefaultValue = true)] public bool? Favourite { get; set; } Property Value Type Description bool? Is the inbox a favorite inbox. Make an inbox a favorite is typically done in the dashboard for quick access or filtering View Source Name Name of the inbox and used as the sender name when sending emails .Displayed in the dashboard for easier search Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Name of the inbox and used as the sender name when sending emails .Displayed in the dashboard for easier search View Source Tags Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. Declaration [DataMember(Name = \"tags\", EmitDefaultValue = true)] public List<string> Tags { get; set; } Property Value Type Description List<string> Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. Methods View Source Equals(UpdateInboxOptions) Returns true if UpdateInboxOptions instances are equal Declaration public bool Equals(UpdateInboxOptions input) Parameters Type Name Description UpdateInboxOptions input Instance of UpdateInboxOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.UpdateInboxReplierOptions.FieldEnum.html": {
    "href": "api/mailslurp.Model.UpdateInboxReplierOptions.FieldEnum.html",
    "title": "Enum UpdateInboxReplierOptions.FieldEnum | MailSlurp",
    "keywords": "Enum UpdateInboxReplierOptions.FieldEnum Field to match against to trigger inbox replier for inbound email Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum UpdateInboxReplierOptions.FieldEnum Fields Name Description ATTACHMENTS Enum ATTACHMENTS for value: ATTACHMENTS RECIPIENTS Enum RECIPIENTS for value: RECIPIENTS SENDER Enum SENDER for value: SENDER SUBJECT Enum SUBJECT for value: SUBJECT"
  },
  "api/mailslurp.Model.UpdateInboxReplierOptions.html": {
    "href": "api/mailslurp.Model.UpdateInboxReplierOptions.html",
    "title": "Class UpdateInboxReplierOptions | MailSlurp",
    "keywords": "Class UpdateInboxReplierOptions Options for updating an inbox replier Inheritance object UpdateInboxReplierOptions Implements IEquatable<UpdateInboxReplierOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"UpdateInboxReplierOptions\")] public class UpdateInboxReplierOptions : IEquatable<UpdateInboxReplierOptions>, IValidatableObject Constructors View Source UpdateInboxReplierOptions() Initializes a new instance of the UpdateInboxReplierOptions class. Declaration [JsonConstructor] protected UpdateInboxReplierOptions() View Source UpdateInboxReplierOptions(Guid, string, FieldEnum, string, string, string, string, string, bool?, bool?, string, Guid?, Dictionary<string, object>) Initializes a new instance of the UpdateInboxReplierOptions class. Declaration public UpdateInboxReplierOptions(Guid inboxId = default, string name = null, UpdateInboxReplierOptions.FieldEnum field = (UpdateInboxReplierOptions.FieldEnum)0, string match = null, string replyTo = null, string subject = null, string from = null, string charset = null, bool? isHTML = null, bool? ignoreReplyTo = null, string body = null, Guid? templateId = null, Dictionary<string, object> templateVariables = null) Parameters Type Name Description Guid inboxId Inbox ID to attach replier to (required). string name Name for replier. UpdateInboxReplierOptions.FieldEnum field Field to match against to trigger inbox replier for inbound email (required). string match String or wildcard style match for field specified when evaluating reply rules (required). string replyTo Reply-to email address when sending replying. string subject Subject override when replying to email. string from Send email from address. string charset Email reply charset. bool? isHTML Send HTML email. bool? ignoreReplyTo Ignore sender replyTo when responding. Send directly to the sender if enabled.. string body Email body for reply. Guid? templateId ID of template to use when sending a reply. Dictionary<string, object> templateVariables Template variable values. Properties View Source Body Email body for reply Declaration [DataMember(Name = \"body\", EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string Email body for reply View Source Charset Email reply charset Declaration [DataMember(Name = \"charset\", EmitDefaultValue = true)] public string Charset { get; set; } Property Value Type Description string Email reply charset View Source Field Field to match against to trigger inbox replier for inbound email Declaration [DataMember(Name = \"field\", IsRequired = true, EmitDefaultValue = true)] public UpdateInboxReplierOptions.FieldEnum Field { get; set; } Property Value Type Description UpdateInboxReplierOptions.FieldEnum Field to match against to trigger inbox replier for inbound email View Source From Send email from address Declaration [DataMember(Name = \"from\", EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string Send email from address View Source IgnoreReplyTo Ignore sender replyTo when responding. Send directly to the sender if enabled. Declaration [DataMember(Name = \"ignoreReplyTo\", EmitDefaultValue = true)] public bool? IgnoreReplyTo { get; set; } Property Value Type Description bool? Ignore sender replyTo when responding. Send directly to the sender if enabled. View Source InboxId Inbox ID to attach replier to Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid Inbox ID to attach replier to View Source IsHTML Send HTML email Declaration [DataMember(Name = \"isHTML\", EmitDefaultValue = true)] public bool? IsHTML { get; set; } Property Value Type Description bool? Send HTML email View Source Match String or wildcard style match for field specified when evaluating reply rules Declaration [DataMember(Name = \"match\", IsRequired = true, EmitDefaultValue = true)] public string Match { get; set; } Property Value Type Description string String or wildcard style match for field specified when evaluating reply rules View Source Name Name for replier Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Name for replier View Source ReplyTo Reply-to email address when sending replying Declaration [DataMember(Name = \"replyTo\", EmitDefaultValue = true)] public string ReplyTo { get; set; } Property Value Type Description string Reply-to email address when sending replying View Source Subject Subject override when replying to email Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string Subject override when replying to email View Source TemplateId ID of template to use when sending a reply Declaration [DataMember(Name = \"templateId\", EmitDefaultValue = true)] public Guid? TemplateId { get; set; } Property Value Type Description Guid? ID of template to use when sending a reply View Source TemplateVariables Template variable values Declaration [DataMember(Name = \"templateVariables\", EmitDefaultValue = true)] public Dictionary<string, object> TemplateVariables { get; set; } Property Value Type Description Dictionary<string, object> Template variable values Methods View Source Equals(UpdateInboxReplierOptions) Returns true if UpdateInboxReplierOptions instances are equal Declaration public bool Equals(UpdateInboxReplierOptions input) Parameters Type Name Description UpdateInboxReplierOptions input Instance of UpdateInboxReplierOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.UploadAttachmentOptions.html": {
    "href": "api/mailslurp.Model.UploadAttachmentOptions.html",
    "title": "Class UploadAttachmentOptions | MailSlurp",
    "keywords": "Class UploadAttachmentOptions Options for uploading files for attachments. When sending emails with the API that require attachments first upload each attachment. Then use the returned attachment ID in your SendEmailOptions when sending an email. This way you can use attachments multiple times once they have been uploaded. Inheritance object UploadAttachmentOptions Implements IEquatable<UploadAttachmentOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"UploadAttachmentOptions\")] public class UploadAttachmentOptions : IEquatable<UploadAttachmentOptions>, IValidatableObject Constructors View Source UploadAttachmentOptions() Initializes a new instance of the UploadAttachmentOptions class. Declaration [JsonConstructor] protected UploadAttachmentOptions() View Source UploadAttachmentOptions(string, string, string, string) Initializes a new instance of the UploadAttachmentOptions class. Declaration public UploadAttachmentOptions(string contentId = null, string contentType = null, string filename = null, string base64Contents = null) Parameters Type Name Description string contentId Optional contentId for file.. string contentType Optional contentType for file. For instance application/pdf. string filename Optional filename to save upload with. Will be the name that is shown in email clients. string base64Contents Base64 encoded string of file contents. Typically this means reading the bytes or string content of a file and then converting that to a base64 encoded string. For examples of how to do this see https://www.mailslurp.com/guides/base64-file-uploads/ (required). Properties View Source Base64Contents Base64 encoded string of file contents. Typically this means reading the bytes or string content of a file and then converting that to a base64 encoded string. For examples of how to do this see https://www.mailslurp.com/guides/base64-file-uploads/ Declaration [DataMember(Name = \"base64Contents\", IsRequired = true, EmitDefaultValue = true)] public string Base64Contents { get; set; } Property Value Type Description string Base64 encoded string of file contents. Typically this means reading the bytes or string content of a file and then converting that to a base64 encoded string. For examples of how to do this see https://www.mailslurp.com/guides/base64-file-uploads/ View Source ContentId Optional contentId for file. Declaration [DataMember(Name = \"contentId\", EmitDefaultValue = true)] public string ContentId { get; set; } Property Value Type Description string Optional contentId for file. View Source ContentType Optional contentType for file. For instance application/pdf Declaration [DataMember(Name = \"contentType\", EmitDefaultValue = true)] public string ContentType { get; set; } Property Value Type Description string Optional contentType for file. For instance application/pdf View Source Filename Optional filename to save upload with. Will be the name that is shown in email clients Declaration [DataMember(Name = \"filename\", EmitDefaultValue = true)] public string Filename { get; set; } Property Value Type Description string Optional filename to save upload with. Will be the name that is shown in email clients Methods View Source Equals(UploadAttachmentOptions) Returns true if UploadAttachmentOptions instances are equal Declaration public bool Equals(UploadAttachmentOptions input) Parameters Type Name Description UploadAttachmentOptions input Instance of UploadAttachmentOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.UploadMultipartFormRequest.html": {
    "href": "api/mailslurp.Model.UploadMultipartFormRequest.html",
    "title": "Class UploadMultipartFormRequest | MailSlurp",
    "keywords": "Class UploadMultipartFormRequest UploadMultipartFormRequest Inheritance object UploadMultipartFormRequest Implements IEquatable<UploadMultipartFormRequest> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"uploadMultipartForm_request\")] public class UploadMultipartFormRequest : IEquatable<UploadMultipartFormRequest>, IValidatableObject Constructors View Source UploadMultipartFormRequest() Initializes a new instance of the UploadMultipartFormRequest class. Declaration [JsonConstructor] protected UploadMultipartFormRequest() View Source UploadMultipartFormRequest(string, Stream) Initializes a new instance of the UploadMultipartFormRequest class. Declaration public UploadMultipartFormRequest(string contentTypeHeader = null, Stream file = null) Parameters Type Name Description string contentTypeHeader Optional content type header of attachment. Stream file file (required). Properties View Source ContentTypeHeader Optional content type header of attachment Declaration [DataMember(Name = \"contentTypeHeader\", EmitDefaultValue = false)] public string ContentTypeHeader { get; set; } Property Value Type Description string Optional content type header of attachment View Source File Gets or Sets File Declaration [DataMember(Name = \"file\", IsRequired = true, EmitDefaultValue = true)] public Stream File { get; set; } Property Value Type Description Stream Methods View Source Equals(UploadMultipartFormRequest) Returns true if UploadMultipartFormRequest instances are equal Declaration public bool Equals(UploadMultipartFormRequest input) Parameters Type Name Description UploadMultipartFormRequest input Instance of UploadMultipartFormRequest to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.UserInfoDto.AccountStateEnum.html": {
    "href": "api/mailslurp.Model.UserInfoDto.AccountStateEnum.html",
    "title": "Enum UserInfoDto.AccountStateEnum | MailSlurp",
    "keywords": "Enum UserInfoDto.AccountStateEnum Defines AccountState Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum UserInfoDto.AccountStateEnum Fields Name Description ACTIVE Enum ACTIVE for value: ACTIVE FROZEN Enum FROZEN for value: FROZEN"
  },
  "api/mailslurp.Model.UserInfoDto.AccountTypeEnum.html": {
    "href": "api/mailslurp.Model.UserInfoDto.AccountTypeEnum.html",
    "title": "Enum UserInfoDto.AccountTypeEnum | MailSlurp",
    "keywords": "Enum UserInfoDto.AccountTypeEnum Defines AccountType Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum UserInfoDto.AccountTypeEnum Fields Name Description CHILDADMIN Enum CHILDADMIN for value: CHILD_ADMIN CHILDSOLO Enum CHILDSOLO for value: CHILD_SOLO CHILDTEAM Enum CHILDTEAM for value: CHILD_TEAM SOLO Enum SOLO for value: SOLO"
  },
  "api/mailslurp.Model.UserInfoDto.html": {
    "href": "api/mailslurp.Model.UserInfoDto.html",
    "title": "Class UserInfoDto | MailSlurp",
    "keywords": "Class UserInfoDto UserInfoDto Inheritance object UserInfoDto Implements IEquatable<UserInfoDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"UserInfoDto\")] public class UserInfoDto : IEquatable<UserInfoDto>, IValidatableObject Constructors View Source UserInfoDto() Initializes a new instance of the UserInfoDto class. Declaration [JsonConstructor] protected UserInfoDto() View Source UserInfoDto(Guid, string, AccountStateEnum, SubscriptionTypeEnum?, AccountTypeEnum, DateTime) Initializes a new instance of the UserInfoDto class. Declaration public UserInfoDto(Guid id = default, string emailAddress = null, UserInfoDto.AccountStateEnum accountState = (UserInfoDto.AccountStateEnum)0, UserInfoDto.SubscriptionTypeEnum? subscriptionType = null, UserInfoDto.AccountTypeEnum accountType = (UserInfoDto.AccountTypeEnum)0, DateTime createdAt = default) Parameters Type Name Description Guid id id (required). string emailAddress emailAddress (required). UserInfoDto.AccountStateEnum accountState accountState (required). UserInfoDto.SubscriptionTypeEnum? subscriptionType subscriptionType. UserInfoDto.AccountTypeEnum accountType accountType (required). DateTime createdAt createdAt (required). Properties View Source AccountState Gets or Sets AccountState Declaration [DataMember(Name = \"accountState\", IsRequired = true, EmitDefaultValue = true)] public UserInfoDto.AccountStateEnum AccountState { get; set; } Property Value Type Description UserInfoDto.AccountStateEnum View Source AccountType Gets or Sets AccountType Declaration [DataMember(Name = \"accountType\", IsRequired = true, EmitDefaultValue = true)] public UserInfoDto.AccountTypeEnum AccountType { get; set; } Property Value Type Description UserInfoDto.AccountTypeEnum View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EmailAddress Gets or Sets EmailAddress Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source SubscriptionType Gets or Sets SubscriptionType Declaration [DataMember(Name = \"subscriptionType\", EmitDefaultValue = false)] public UserInfoDto.SubscriptionTypeEnum? SubscriptionType { get; set; } Property Value Type Description UserInfoDto.SubscriptionTypeEnum? Methods View Source Equals(UserInfoDto) Returns true if UserInfoDto instances are equal Declaration public bool Equals(UserInfoDto input) Parameters Type Name Description UserInfoDto input Instance of UserInfoDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.UserInfoDto.SubscriptionTypeEnum.html": {
    "href": "api/mailslurp.Model.UserInfoDto.SubscriptionTypeEnum.html",
    "title": "Enum UserInfoDto.SubscriptionTypeEnum | MailSlurp",
    "keywords": "Enum UserInfoDto.SubscriptionTypeEnum Defines SubscriptionType Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum UserInfoDto.SubscriptionTypeEnum Fields Name Description ENTERPRISE Enum ENTERPRISE for value: ENTERPRISE PRO Enum PRO for value: PRO PROMONTHLY Enum PROMONTHLY for value: PRO_MONTHLY STARTER Enum STARTER for value: STARTER TEAM Enum TEAM for value: TEAM"
  },
  "api/mailslurp.Model.ValidateEmailAddressListOptions.html": {
    "href": "api/mailslurp.Model.ValidateEmailAddressListOptions.html",
    "title": "Class ValidateEmailAddressListOptions | MailSlurp",
    "keywords": "Class ValidateEmailAddressListOptions Options for validating a list of email addresses Inheritance object ValidateEmailAddressListOptions Implements IEquatable<ValidateEmailAddressListOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ValidateEmailAddressListOptions\")] public class ValidateEmailAddressListOptions : IEquatable<ValidateEmailAddressListOptions>, IValidatableObject Constructors View Source ValidateEmailAddressListOptions() Initializes a new instance of the ValidateEmailAddressListOptions class. Declaration [JsonConstructor] protected ValidateEmailAddressListOptions() View Source ValidateEmailAddressListOptions(List<string>, bool?) Initializes a new instance of the ValidateEmailAddressListOptions class. Declaration public ValidateEmailAddressListOptions(List<string> emailAddressList = null, bool? ignoreOldResults = null) Parameters Type Name Description List<string> emailAddressList emailAddressList (required). bool? ignoreOldResults ignoreOldResults. Properties View Source EmailAddressList Gets or Sets EmailAddressList Declaration [DataMember(Name = \"emailAddressList\", IsRequired = true, EmitDefaultValue = true)] public List<string> EmailAddressList { get; set; } Property Value Type Description List<string> View Source IgnoreOldResults Gets or Sets IgnoreOldResults Declaration [DataMember(Name = \"ignoreOldResults\", EmitDefaultValue = true)] public bool? IgnoreOldResults { get; set; } Property Value Type Description bool? Methods View Source Equals(ValidateEmailAddressListOptions) Returns true if ValidateEmailAddressListOptions instances are equal Declaration public bool Equals(ValidateEmailAddressListOptions input) Parameters Type Name Description ValidateEmailAddressListOptions input Instance of ValidateEmailAddressListOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ValidateEmailAddressListResult.html": {
    "href": "api/mailslurp.Model.ValidateEmailAddressListResult.html",
    "title": "Class ValidateEmailAddressListResult | MailSlurp",
    "keywords": "Class ValidateEmailAddressListResult Result of validating a list of email addresses Inheritance object ValidateEmailAddressListResult Implements IEquatable<ValidateEmailAddressListResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ValidateEmailAddressListResult\")] public class ValidateEmailAddressListResult : IEquatable<ValidateEmailAddressListResult>, IValidatableObject Constructors View Source ValidateEmailAddressListResult() Initializes a new instance of the ValidateEmailAddressListResult class. Declaration [JsonConstructor] protected ValidateEmailAddressListResult() View Source ValidateEmailAddressListResult(List<string>, List<string>, Dictionary<string, bool>) Initializes a new instance of the ValidateEmailAddressListResult class. Declaration public ValidateEmailAddressListResult(List<string> validEmailAddresses = null, List<string> invalidEmailAddresses = null, Dictionary<string, bool> resultMapEmailAddressIsValid = null) Parameters Type Name Description List<string> validEmailAddresses validEmailAddresses (required). List<string> invalidEmailAddresses invalidEmailAddresses (required). Dictionary<string, bool> resultMapEmailAddressIsValid resultMapEmailAddressIsValid (required). Properties View Source InvalidEmailAddresses Gets or Sets InvalidEmailAddresses Declaration [DataMember(Name = \"invalidEmailAddresses\", IsRequired = true, EmitDefaultValue = true)] public List<string> InvalidEmailAddresses { get; set; } Property Value Type Description List<string> View Source ResultMapEmailAddressIsValid Gets or Sets ResultMapEmailAddressIsValid Declaration [DataMember(Name = \"resultMapEmailAddressIsValid\", IsRequired = true, EmitDefaultValue = true)] public Dictionary<string, bool> ResultMapEmailAddressIsValid { get; set; } Property Value Type Description Dictionary<string, bool> View Source ValidEmailAddresses Gets or Sets ValidEmailAddresses Declaration [DataMember(Name = \"validEmailAddresses\", IsRequired = true, EmitDefaultValue = true)] public List<string> ValidEmailAddresses { get; set; } Property Value Type Description List<string> Methods View Source Equals(ValidateEmailAddressListResult) Returns true if ValidateEmailAddressListResult instances are equal Declaration public bool Equals(ValidateEmailAddressListResult input) Parameters Type Name Description ValidateEmailAddressListResult input Instance of ValidateEmailAddressListResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ValidationDto.html": {
    "href": "api/mailslurp.Model.ValidationDto.html",
    "title": "Class ValidationDto | MailSlurp",
    "keywords": "Class ValidationDto Response object for email validation operation Inheritance object ValidationDto Implements IEquatable<ValidationDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ValidationDto\")] public class ValidationDto : IEquatable<ValidationDto>, IValidatableObject Constructors View Source ValidationDto() Initializes a new instance of the ValidationDto class. Declaration [JsonConstructor] protected ValidationDto() View Source ValidationDto(Guid, HTMLValidationResult) Initializes a new instance of the ValidationDto class. Declaration public ValidationDto(Guid emailId = default, HTMLValidationResult html = null) Parameters Type Name Description Guid emailId ID of the email validated (required). HTMLValidationResult html html (required). Properties View Source EmailId ID of the email validated Declaration [DataMember(Name = \"emailId\", IsRequired = true, EmitDefaultValue = true)] public Guid EmailId { get; set; } Property Value Type Description Guid ID of the email validated View Source Html Gets or Sets Html Declaration [DataMember(Name = \"html\", IsRequired = true, EmitDefaultValue = true)] public HTMLValidationResult Html { get; set; } Property Value Type Description HTMLValidationResult Methods View Source Equals(ValidationDto) Returns true if ValidationDto instances are equal Declaration public bool Equals(ValidationDto input) Parameters Type Name Description ValidationDto input Instance of ValidationDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.ValidationMessage.html": {
    "href": "api/mailslurp.Model.ValidationMessage.html",
    "title": "Class ValidationMessage | MailSlurp",
    "keywords": "Class ValidationMessage Optional warnings resulting from HTML validation Inheritance object ValidationMessage Implements IEquatable<ValidationMessage> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"ValidationMessage\")] public class ValidationMessage : IEquatable<ValidationMessage>, IValidatableObject Constructors View Source ValidationMessage() Initializes a new instance of the ValidationMessage class. Declaration [JsonConstructor] protected ValidationMessage() View Source ValidationMessage(int, string) Initializes a new instance of the ValidationMessage class. Declaration public ValidationMessage(int lineNumber = 0, string message = null) Parameters Type Name Description int lineNumber lineNumber (required). string message message. Properties View Source LineNumber Gets or Sets LineNumber Declaration [DataMember(Name = \"lineNumber\", IsRequired = true, EmitDefaultValue = true)] public int LineNumber { get; set; } Property Value Type Description int View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description string Methods View Source Equals(ValidationMessage) Returns true if ValidationMessage instances are equal Declaration public bool Equals(ValidationMessage input) Parameters Type Name Description ValidationMessage input Instance of ValidationMessage to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.VerifyEmailAddressOptions.html": {
    "href": "api/mailslurp.Model.VerifyEmailAddressOptions.html",
    "title": "Class VerifyEmailAddressOptions | MailSlurp",
    "keywords": "Class VerifyEmailAddressOptions Options for verifying that an email address exists at a remote mail server. Inheritance object VerifyEmailAddressOptions Implements IEquatable<VerifyEmailAddressOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"VerifyEmailAddressOptions\")] public class VerifyEmailAddressOptions : IEquatable<VerifyEmailAddressOptions>, IValidatableObject Constructors View Source VerifyEmailAddressOptions() Initializes a new instance of the VerifyEmailAddressOptions class. Declaration [JsonConstructor] protected VerifyEmailAddressOptions() View Source VerifyEmailAddressOptions(string, string, string, int?) Initializes a new instance of the VerifyEmailAddressOptions class. Declaration public VerifyEmailAddressOptions(string mailServerDomain = null, string emailAddress = null, string senderEmailAddress = null, int? port = null) Parameters Type Name Description string mailServerDomain mailServerDomain. string emailAddress emailAddress (required). string senderEmailAddress senderEmailAddress. int? port port. Properties View Source EmailAddress Gets or Sets EmailAddress Declaration [DataMember(Name = \"emailAddress\", IsRequired = true, EmitDefaultValue = true)] public string EmailAddress { get; set; } Property Value Type Description string View Source MailServerDomain Gets or Sets MailServerDomain Declaration [DataMember(Name = \"mailServerDomain\", EmitDefaultValue = true)] public string MailServerDomain { get; set; } Property Value Type Description string View Source Port Gets or Sets Port Declaration [DataMember(Name = \"port\", EmitDefaultValue = true)] public int? Port { get; set; } Property Value Type Description int? View Source SenderEmailAddress Gets or Sets SenderEmailAddress Declaration [DataMember(Name = \"senderEmailAddress\", EmitDefaultValue = true)] public string SenderEmailAddress { get; set; } Property Value Type Description string Methods View Source Equals(VerifyEmailAddressOptions) Returns true if VerifyEmailAddressOptions instances are equal Declaration public bool Equals(VerifyEmailAddressOptions input) Parameters Type Name Description VerifyEmailAddressOptions input Instance of VerifyEmailAddressOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.VerifyWebhookSignatureOptions.html": {
    "href": "api/mailslurp.Model.VerifyWebhookSignatureOptions.html",
    "title": "Class VerifyWebhookSignatureOptions | MailSlurp",
    "keywords": "Class VerifyWebhookSignatureOptions VerifyWebhookSignatureOptions Inheritance object VerifyWebhookSignatureOptions Implements IEquatable<VerifyWebhookSignatureOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"VerifyWebhookSignatureOptions\")] public class VerifyWebhookSignatureOptions : IEquatable<VerifyWebhookSignatureOptions>, IValidatableObject Constructors View Source VerifyWebhookSignatureOptions() Initializes a new instance of the VerifyWebhookSignatureOptions class. Declaration [JsonConstructor] protected VerifyWebhookSignatureOptions() View Source VerifyWebhookSignatureOptions(string, string) Initializes a new instance of the VerifyWebhookSignatureOptions class. Declaration public VerifyWebhookSignatureOptions(string messageId = null, string signature = null) Parameters Type Name Description string messageId messageId (required). string signature signature (required). Properties View Source MessageId Gets or Sets MessageId Declaration [DataMember(Name = \"messageId\", IsRequired = true, EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string View Source Signature Gets or Sets Signature Declaration [DataMember(Name = \"signature\", IsRequired = true, EmitDefaultValue = true)] public string Signature { get; set; } Property Value Type Description string Methods View Source Equals(VerifyWebhookSignatureOptions) Returns true if VerifyWebhookSignatureOptions instances are equal Declaration public bool Equals(VerifyWebhookSignatureOptions input) Parameters Type Name Description VerifyWebhookSignatureOptions input Instance of VerifyWebhookSignatureOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.VerifyWebhookSignatureResults.html": {
    "href": "api/mailslurp.Model.VerifyWebhookSignatureResults.html",
    "title": "Class VerifyWebhookSignatureResults | MailSlurp",
    "keywords": "Class VerifyWebhookSignatureResults VerifyWebhookSignatureResults Inheritance object VerifyWebhookSignatureResults Implements IEquatable<VerifyWebhookSignatureResults> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"VerifyWebhookSignatureResults\")] public class VerifyWebhookSignatureResults : IEquatable<VerifyWebhookSignatureResults>, IValidatableObject Constructors View Source VerifyWebhookSignatureResults() Initializes a new instance of the VerifyWebhookSignatureResults class. Declaration [JsonConstructor] protected VerifyWebhookSignatureResults() View Source VerifyWebhookSignatureResults(bool) Initializes a new instance of the VerifyWebhookSignatureResults class. Declaration public VerifyWebhookSignatureResults(bool isValid = false) Parameters Type Name Description bool isValid isValid (required). Properties View Source IsValid Gets or Sets IsValid Declaration [DataMember(Name = \"isValid\", IsRequired = true, EmitDefaultValue = true)] public bool IsValid { get; set; } Property Value Type Description bool Methods View Source Equals(VerifyWebhookSignatureResults) Returns true if VerifyWebhookSignatureResults instances are equal Declaration public bool Equals(VerifyWebhookSignatureResults input) Parameters Type Name Description VerifyWebhookSignatureResults input Instance of VerifyWebhookSignatureResults to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WaitForConditions.CountTypeEnum.html": {
    "href": "api/mailslurp.Model.WaitForConditions.CountTypeEnum.html",
    "title": "Enum WaitForConditions.CountTypeEnum | MailSlurp",
    "keywords": "Enum WaitForConditions.CountTypeEnum How result size should be compared with the expected size. Exactly or at-least matching result? Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WaitForConditions.CountTypeEnum Fields Name Description ATLEAST Enum ATLEAST for value: ATLEAST EXACTLY Enum EXACTLY for value: EXACTLY"
  },
  "api/mailslurp.Model.WaitForConditions.html": {
    "href": "api/mailslurp.Model.WaitForConditions.html",
    "title": "Class WaitForConditions | MailSlurp",
    "keywords": "Class WaitForConditions Conditions to apply to emails that you are waiting for Inheritance object WaitForConditions Implements IEquatable<WaitForConditions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WaitForConditions\")] public class WaitForConditions : IEquatable<WaitForConditions>, IValidatableObject Constructors View Source WaitForConditions() Initializes a new instance of the WaitForConditions class. Declaration [JsonConstructor] protected WaitForConditions() View Source WaitForConditions(Guid, int?, long?, long, bool?, CountTypeEnum?, List<MatchOption>, SortDirectionEnum?, DateTime?, DateTime?) Initializes a new instance of the WaitForConditions class. Declaration public WaitForConditions(Guid inboxId = default, int? count = null, long? delayTimeout = null, long timeout = 0, bool? unreadOnly = null, WaitForConditions.CountTypeEnum? countType = null, List<MatchOption> matches = null, WaitForConditions.SortDirectionEnum? sortDirection = null, DateTime? since = null, DateTime? before = null) Parameters Type Name Description Guid inboxId ID of inbox to search within and apply conditions to. Essentially filtering the emails found to give a count. (required). int? count Number of results that should match conditions. Either exactly or at least this amount based on the countType. If count condition is not met and the timeout has not been reached the waitFor method will retry the operation.. long? delayTimeout Max time in milliseconds to wait between retries if a timeout is specified.. long timeout Max time in milliseconds to retry the waitFor operation until conditions are met. (required). bool? unreadOnly Apply conditions only to unread emails. All emails begin with read=false. An email is marked read=true when an EmailDto representation of it has been returned to the user at least once. For example you have called getEmail or waitForLatestEmail etc., or you have viewed the email in the dashboard.. WaitForConditions.CountTypeEnum? countType How result size should be compared with the expected size. Exactly or at-least matching result?. List<MatchOption> matches Conditions that should be matched for an email to qualify for results. Each condition will be applied in order to each email within an inbox to filter a result list of matching emails you are waiting for.. WaitForConditions.SortDirectionEnum? sortDirection Direction to sort matching emails by created time. DateTime? since ISO Date Time earliest time of email to consider. Filter for matching emails that were received after this date. DateTime? before ISO Date Time latest time of email to consider. Filter for matching emails that were received before this date. Properties View Source Before ISO Date Time latest time of email to consider. Filter for matching emails that were received before this date Declaration [DataMember(Name = \"before\", EmitDefaultValue = true)] public DateTime? Before { get; set; } Property Value Type Description DateTime? ISO Date Time latest time of email to consider. Filter for matching emails that were received before this date View Source Count Number of results that should match conditions. Either exactly or at least this amount based on the countType. If count condition is not met and the timeout has not been reached the waitFor method will retry the operation. Declaration [DataMember(Name = \"count\", EmitDefaultValue = true)] public int? Count { get; set; } Property Value Type Description int? Number of results that should match conditions. Either exactly or at least this amount based on the countType. If count condition is not met and the timeout has not been reached the waitFor method will retry the operation. View Source CountType How result size should be compared with the expected size. Exactly or at-least matching result? Declaration [DataMember(Name = \"countType\", EmitDefaultValue = true)] public WaitForConditions.CountTypeEnum? CountType { get; set; } Property Value Type Description WaitForConditions.CountTypeEnum? How result size should be compared with the expected size. Exactly or at-least matching result? View Source DelayTimeout Max time in milliseconds to wait between retries if a timeout is specified. Declaration [DataMember(Name = \"delayTimeout\", EmitDefaultValue = true)] public long? DelayTimeout { get; set; } Property Value Type Description long? Max time in milliseconds to wait between retries if a timeout is specified. View Source InboxId ID of inbox to search within and apply conditions to. Essentially filtering the emails found to give a count. Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid ID of inbox to search within and apply conditions to. Essentially filtering the emails found to give a count. View Source Matches Conditions that should be matched for an email to qualify for results. Each condition will be applied in order to each email within an inbox to filter a result list of matching emails you are waiting for. Declaration [DataMember(Name = \"matches\", EmitDefaultValue = true)] public List<MatchOption> Matches { get; set; } Property Value Type Description List<MatchOption> Conditions that should be matched for an email to qualify for results. Each condition will be applied in order to each email within an inbox to filter a result list of matching emails you are waiting for. View Source Since ISO Date Time earliest time of email to consider. Filter for matching emails that were received after this date Declaration [DataMember(Name = \"since\", EmitDefaultValue = true)] public DateTime? Since { get; set; } Property Value Type Description DateTime? ISO Date Time earliest time of email to consider. Filter for matching emails that were received after this date View Source SortDirection Direction to sort matching emails by created time Declaration [DataMember(Name = \"sortDirection\", EmitDefaultValue = true)] public WaitForConditions.SortDirectionEnum? SortDirection { get; set; } Property Value Type Description WaitForConditions.SortDirectionEnum? Direction to sort matching emails by created time View Source Timeout Max time in milliseconds to retry the waitFor operation until conditions are met. Declaration [DataMember(Name = \"timeout\", IsRequired = true, EmitDefaultValue = true)] public long Timeout { get; set; } Property Value Type Description long Max time in milliseconds to retry the waitFor operation until conditions are met. View Source UnreadOnly Apply conditions only to unread emails. All emails begin with read=false. An email is marked read=true when an EmailDto representation of it has been returned to the user at least once. For example you have called getEmail or waitForLatestEmail etc., or you have viewed the email in the dashboard. Declaration [DataMember(Name = \"unreadOnly\", EmitDefaultValue = true)] public bool? UnreadOnly { get; set; } Property Value Type Description bool? Apply conditions only to unread emails. All emails begin with read=false. An email is marked read=true when an EmailDto representation of it has been returned to the user at least once. For example you have called getEmail or waitForLatestEmail etc., or you have viewed the email in the dashboard. Methods View Source Equals(WaitForConditions) Returns true if WaitForConditions instances are equal Declaration public bool Equals(WaitForConditions input) Parameters Type Name Description WaitForConditions input Instance of WaitForConditions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WaitForConditions.SortDirectionEnum.html": {
    "href": "api/mailslurp.Model.WaitForConditions.SortDirectionEnum.html",
    "title": "Enum WaitForConditions.SortDirectionEnum | MailSlurp",
    "keywords": "Enum WaitForConditions.SortDirectionEnum Direction to sort matching emails by created time Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WaitForConditions.SortDirectionEnum Fields Name Description ASC Enum ASC for value: ASC DESC Enum DESC for value: DESC"
  },
  "api/mailslurp.Model.WaitForSingleSmsOptions.html": {
    "href": "api/mailslurp.Model.WaitForSingleSmsOptions.html",
    "title": "Class WaitForSingleSmsOptions | MailSlurp",
    "keywords": "Class WaitForSingleSmsOptions WaitForSingleSmsOptions Inheritance object WaitForSingleSmsOptions Implements IEquatable<WaitForSingleSmsOptions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WaitForSingleSmsOptions\")] public class WaitForSingleSmsOptions : IEquatable<WaitForSingleSmsOptions>, IValidatableObject Constructors View Source WaitForSingleSmsOptions() Initializes a new instance of the WaitForSingleSmsOptions class. Declaration [JsonConstructor] protected WaitForSingleSmsOptions() View Source WaitForSingleSmsOptions(Guid, long, bool, DateTime, DateTime, SortDirectionEnum?, long) Initializes a new instance of the WaitForSingleSmsOptions class. Declaration public WaitForSingleSmsOptions(Guid phoneNumberId = default, long timeout = 0, bool unreadOnly = false, DateTime before = default, DateTime since = default, WaitForSingleSmsOptions.SortDirectionEnum? sortDirection = null, long delay = 0) Parameters Type Name Description Guid phoneNumberId phoneNumberId (required). long timeout timeout (required). bool unreadOnly unreadOnly. DateTime before before. DateTime since since. WaitForSingleSmsOptions.SortDirectionEnum? sortDirection sortDirection. long delay delay. Properties View Source Before Gets or Sets Before Declaration [DataMember(Name = \"before\", EmitDefaultValue = false)] public DateTime Before { get; set; } Property Value Type Description DateTime View Source Delay Gets or Sets Delay Declaration [DataMember(Name = \"delay\", EmitDefaultValue = false)] public long Delay { get; set; } Property Value Type Description long View Source PhoneNumberId Gets or Sets PhoneNumberId Declaration [DataMember(Name = \"phoneNumberId\", IsRequired = true, EmitDefaultValue = true)] public Guid PhoneNumberId { get; set; } Property Value Type Description Guid View Source Since Gets or Sets Since Declaration [DataMember(Name = \"since\", EmitDefaultValue = false)] public DateTime Since { get; set; } Property Value Type Description DateTime View Source SortDirection Gets or Sets SortDirection Declaration [DataMember(Name = \"sortDirection\", EmitDefaultValue = false)] public WaitForSingleSmsOptions.SortDirectionEnum? SortDirection { get; set; } Property Value Type Description WaitForSingleSmsOptions.SortDirectionEnum? View Source Timeout Gets or Sets Timeout Declaration [DataMember(Name = \"timeout\", IsRequired = true, EmitDefaultValue = true)] public long Timeout { get; set; } Property Value Type Description long View Source UnreadOnly Gets or Sets UnreadOnly Declaration [DataMember(Name = \"unreadOnly\", EmitDefaultValue = true)] public bool UnreadOnly { get; set; } Property Value Type Description bool Methods View Source Equals(WaitForSingleSmsOptions) Returns true if WaitForSingleSmsOptions instances are equal Declaration public bool Equals(WaitForSingleSmsOptions input) Parameters Type Name Description WaitForSingleSmsOptions input Instance of WaitForSingleSmsOptions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WaitForSingleSmsOptions.SortDirectionEnum.html": {
    "href": "api/mailslurp.Model.WaitForSingleSmsOptions.SortDirectionEnum.html",
    "title": "Enum WaitForSingleSmsOptions.SortDirectionEnum | MailSlurp",
    "keywords": "Enum WaitForSingleSmsOptions.SortDirectionEnum Defines SortDirection Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WaitForSingleSmsOptions.SortDirectionEnum Fields Name Description ASC Enum ASC for value: ASC DESC Enum DESC for value: DESC"
  },
  "api/mailslurp.Model.WaitForSmsConditions.CountTypeEnum.html": {
    "href": "api/mailslurp.Model.WaitForSmsConditions.CountTypeEnum.html",
    "title": "Enum WaitForSmsConditions.CountTypeEnum | MailSlurp",
    "keywords": "Enum WaitForSmsConditions.CountTypeEnum How result size should be compared with the expected size. Exactly or at-least matching result? Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WaitForSmsConditions.CountTypeEnum Fields Name Description ATLEAST Enum ATLEAST for value: ATLEAST EXACTLY Enum EXACTLY for value: EXACTLY"
  },
  "api/mailslurp.Model.WaitForSmsConditions.html": {
    "href": "api/mailslurp.Model.WaitForSmsConditions.html",
    "title": "Class WaitForSmsConditions | MailSlurp",
    "keywords": "Class WaitForSmsConditions Conditions to apply to emails that you are waiting for Inheritance object WaitForSmsConditions Implements IEquatable<WaitForSmsConditions> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WaitForSmsConditions\")] public class WaitForSmsConditions : IEquatable<WaitForSmsConditions>, IValidatableObject Constructors View Source WaitForSmsConditions() Initializes a new instance of the WaitForSmsConditions class. Declaration [JsonConstructor] protected WaitForSmsConditions() View Source WaitForSmsConditions(Guid, int?, long, long?, long, bool?, CountTypeEnum?, List<SmsMatchOption>, SortDirectionEnum?, DateTime?, DateTime?) Initializes a new instance of the WaitForSmsConditions class. Declaration public WaitForSmsConditions(Guid phoneNumberId = default, int? limit = null, long count = 0, long? delayTimeout = null, long timeout = 0, bool? unreadOnly = null, WaitForSmsConditions.CountTypeEnum? countType = null, List<SmsMatchOption> matches = null, WaitForSmsConditions.SortDirectionEnum? sortDirection = null, DateTime? since = null, DateTime? before = null) Parameters Type Name Description Guid phoneNumberId ID of phone number to search within and apply conditions to. Essentially filtering the SMS found to give a count. (required). int? limit Limit results. long count Number of results that should match conditions. Either exactly or at least this amount based on the countType. If count condition is not met and the timeout has not been reached the waitFor method will retry the operation. (required). long? delayTimeout Max time in milliseconds to wait between retries if a timeout is specified.. long timeout Max time in milliseconds to retry the waitFor operation until conditions are met. (required). bool? unreadOnly Apply conditions only to unread SMS. All SMS messages begin with read=false. An SMS is marked read=true when an SMS has been returned to the user at least once. For example you have called getSms or waitForSms etc., or you have viewed the SMS in the dashboard.. WaitForSmsConditions.CountTypeEnum? countType How result size should be compared with the expected size. Exactly or at-least matching result?. List<SmsMatchOption> matches Conditions that should be matched for an SMS to qualify for results. Each condition will be applied in order to each SMS within a phone number to filter a result list of matching SMSs you are waiting for.. WaitForSmsConditions.SortDirectionEnum? sortDirection Direction to sort matching SMSs by created time. DateTime? since ISO Date Time earliest time of SMS to consider. Filter for matching SMSs that were received after this date. DateTime? before ISO Date Time latest time of SMS to consider. Filter for matching SMSs that were received before this date. Properties View Source Before ISO Date Time latest time of SMS to consider. Filter for matching SMSs that were received before this date Declaration [DataMember(Name = \"before\", EmitDefaultValue = true)] public DateTime? Before { get; set; } Property Value Type Description DateTime? ISO Date Time latest time of SMS to consider. Filter for matching SMSs that were received before this date View Source Count Number of results that should match conditions. Either exactly or at least this amount based on the countType. If count condition is not met and the timeout has not been reached the waitFor method will retry the operation. Declaration [DataMember(Name = \"count\", IsRequired = true, EmitDefaultValue = true)] public long Count { get; set; } Property Value Type Description long Number of results that should match conditions. Either exactly or at least this amount based on the countType. If count condition is not met and the timeout has not been reached the waitFor method will retry the operation. View Source CountType How result size should be compared with the expected size. Exactly or at-least matching result? Declaration [DataMember(Name = \"countType\", EmitDefaultValue = true)] public WaitForSmsConditions.CountTypeEnum? CountType { get; set; } Property Value Type Description WaitForSmsConditions.CountTypeEnum? How result size should be compared with the expected size. Exactly or at-least matching result? View Source DelayTimeout Max time in milliseconds to wait between retries if a timeout is specified. Declaration [DataMember(Name = \"delayTimeout\", EmitDefaultValue = true)] public long? DelayTimeout { get; set; } Property Value Type Description long? Max time in milliseconds to wait between retries if a timeout is specified. View Source Limit Limit results Declaration [DataMember(Name = \"limit\", EmitDefaultValue = true)] public int? Limit { get; set; } Property Value Type Description int? Limit results View Source Matches Conditions that should be matched for an SMS to qualify for results. Each condition will be applied in order to each SMS within a phone number to filter a result list of matching SMSs you are waiting for. Declaration [DataMember(Name = \"matches\", EmitDefaultValue = true)] public List<SmsMatchOption> Matches { get; set; } Property Value Type Description List<SmsMatchOption> Conditions that should be matched for an SMS to qualify for results. Each condition will be applied in order to each SMS within a phone number to filter a result list of matching SMSs you are waiting for. View Source PhoneNumberId ID of phone number to search within and apply conditions to. Essentially filtering the SMS found to give a count. Declaration [DataMember(Name = \"phoneNumberId\", IsRequired = true, EmitDefaultValue = true)] public Guid PhoneNumberId { get; set; } Property Value Type Description Guid ID of phone number to search within and apply conditions to. Essentially filtering the SMS found to give a count. View Source Since ISO Date Time earliest time of SMS to consider. Filter for matching SMSs that were received after this date Declaration [DataMember(Name = \"since\", EmitDefaultValue = true)] public DateTime? Since { get; set; } Property Value Type Description DateTime? ISO Date Time earliest time of SMS to consider. Filter for matching SMSs that were received after this date View Source SortDirection Direction to sort matching SMSs by created time Declaration [DataMember(Name = \"sortDirection\", EmitDefaultValue = true)] public WaitForSmsConditions.SortDirectionEnum? SortDirection { get; set; } Property Value Type Description WaitForSmsConditions.SortDirectionEnum? Direction to sort matching SMSs by created time View Source Timeout Max time in milliseconds to retry the waitFor operation until conditions are met. Declaration [DataMember(Name = \"timeout\", IsRequired = true, EmitDefaultValue = true)] public long Timeout { get; set; } Property Value Type Description long Max time in milliseconds to retry the waitFor operation until conditions are met. View Source UnreadOnly Apply conditions only to unread SMS. All SMS messages begin with read=false. An SMS is marked read=true when an SMS has been returned to the user at least once. For example you have called getSms or waitForSms etc., or you have viewed the SMS in the dashboard. Declaration [DataMember(Name = \"unreadOnly\", EmitDefaultValue = true)] public bool? UnreadOnly { get; set; } Property Value Type Description bool? Apply conditions only to unread SMS. All SMS messages begin with read=false. An SMS is marked read=true when an SMS has been returned to the user at least once. For example you have called getSms or waitForSms etc., or you have viewed the SMS in the dashboard. Methods View Source Equals(WaitForSmsConditions) Returns true if WaitForSmsConditions instances are equal Declaration public bool Equals(WaitForSmsConditions input) Parameters Type Name Description WaitForSmsConditions input Instance of WaitForSmsConditions to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WaitForSmsConditions.SortDirectionEnum.html": {
    "href": "api/mailslurp.Model.WaitForSmsConditions.SortDirectionEnum.html",
    "title": "Enum WaitForSmsConditions.SortDirectionEnum | MailSlurp",
    "keywords": "Enum WaitForSmsConditions.SortDirectionEnum Direction to sort matching SMSs by created time Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WaitForSmsConditions.SortDirectionEnum Fields Name Description ASC Enum ASC for value: ASC DESC Enum DESC for value: DESC"
  },
  "api/mailslurp.Model.WebhookBouncePayload.EventNameEnum.html": {
    "href": "api/mailslurp.Model.WebhookBouncePayload.EventNameEnum.html",
    "title": "Enum WebhookBouncePayload.EventNameEnum | MailSlurp",
    "keywords": "Enum WebhookBouncePayload.EventNameEnum Name of the event type webhook is being triggered for. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookBouncePayload.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.WebhookBouncePayload.html": {
    "href": "api/mailslurp.Model.WebhookBouncePayload.html",
    "title": "Class WebhookBouncePayload | MailSlurp",
    "keywords": "Class WebhookBouncePayload BOUNCE webhook payload. Sent to your webhook url endpoint via HTTP POST when an email bounced or was rejected by a recipient. Save the recipients to a ban list on your server and avoid emailing them again. It is recommended you also listen to the BOUNCE_RECIPIENT payload. Inheritance object WebhookBouncePayload Implements IEquatable<WebhookBouncePayload> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookBouncePayload\")] public class WebhookBouncePayload : IEquatable<WebhookBouncePayload>, IValidatableObject Constructors View Source WebhookBouncePayload() Initializes a new instance of the WebhookBouncePayload class. Declaration [JsonConstructor] protected WebhookBouncePayload() View Source WebhookBouncePayload(string, Guid, EventNameEnum, string, Guid, List<string>, string, List<string>) Initializes a new instance of the WebhookBouncePayload class. Declaration public WebhookBouncePayload(string messageId = null, Guid webhookId = default, WebhookBouncePayload.EventNameEnum eventName = (WebhookBouncePayload.EventNameEnum)0, string webhookName = null, Guid bounceId = default, List<string> sentToRecipients = null, string sender = null, List<string> bounceRecipients = null) Parameters Type Name Description string messageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. (required). Guid webhookId ID of webhook entity being triggered (required). WebhookBouncePayload.EventNameEnum eventName Name of the event type webhook is being triggered for. (required). string webhookName Name of the webhook being triggered. Guid bounceId ID of the bounce email record. Use the ID with the bounce controller to view more information (required). List<string> sentToRecipients Email sent to recipients. string sender Sender causing bounce (required). List<string> bounceRecipients Email addresses that resulted in a bounce or email being rejected. Please save these recipients and avoid emailing them in the future to maintain your reputation.. Properties View Source BounceId ID of the bounce email record. Use the ID with the bounce controller to view more information Declaration [DataMember(Name = \"bounceId\", IsRequired = true, EmitDefaultValue = true)] public Guid BounceId { get; set; } Property Value Type Description Guid ID of the bounce email record. Use the ID with the bounce controller to view more information View Source BounceRecipients Email addresses that resulted in a bounce or email being rejected. Please save these recipients and avoid emailing them in the future to maintain your reputation. Declaration [DataMember(Name = \"bounceRecipients\", EmitDefaultValue = true)] public List<string> BounceRecipients { get; set; } Property Value Type Description List<string> Email addresses that resulted in a bounce or email being rejected. Please save these recipients and avoid emailing them in the future to maintain your reputation. View Source EventName Name of the event type webhook is being triggered for. Declaration [DataMember(Name = \"eventName\", IsRequired = true, EmitDefaultValue = true)] public WebhookBouncePayload.EventNameEnum EventName { get; set; } Property Value Type Description WebhookBouncePayload.EventNameEnum Name of the event type webhook is being triggered for. View Source MessageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. Declaration [DataMember(Name = \"messageId\", IsRequired = true, EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string Idempotent message ID. Store this ID locally or in a database to prevent message duplication. View Source Sender Sender causing bounce Declaration [DataMember(Name = \"sender\", IsRequired = true, EmitDefaultValue = true)] public string Sender { get; set; } Property Value Type Description string Sender causing bounce View Source SentToRecipients Email sent to recipients Declaration [DataMember(Name = \"sentToRecipients\", EmitDefaultValue = true)] public List<string> SentToRecipients { get; set; } Property Value Type Description List<string> Email sent to recipients View Source WebhookId ID of webhook entity being triggered Declaration [DataMember(Name = \"webhookId\", IsRequired = true, EmitDefaultValue = true)] public Guid WebhookId { get; set; } Property Value Type Description Guid ID of webhook entity being triggered View Source WebhookName Name of the webhook being triggered Declaration [DataMember(Name = \"webhookName\", EmitDefaultValue = true)] public string WebhookName { get; set; } Property Value Type Description string Name of the webhook being triggered Methods View Source Equals(WebhookBouncePayload) Returns true if WebhookBouncePayload instances are equal Declaration public bool Equals(WebhookBouncePayload input) Parameters Type Name Description WebhookBouncePayload input Instance of WebhookBouncePayload to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookBounceRecipientPayload.EventNameEnum.html": {
    "href": "api/mailslurp.Model.WebhookBounceRecipientPayload.EventNameEnum.html",
    "title": "Enum WebhookBounceRecipientPayload.EventNameEnum | MailSlurp",
    "keywords": "Enum WebhookBounceRecipientPayload.EventNameEnum Name of the event type webhook is being triggered for. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookBounceRecipientPayload.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.WebhookBounceRecipientPayload.html": {
    "href": "api/mailslurp.Model.WebhookBounceRecipientPayload.html",
    "title": "Class WebhookBounceRecipientPayload | MailSlurp",
    "keywords": "Class WebhookBounceRecipientPayload BOUNCE_RECIPIENT webhook payload. Sent to your webhook url endpoint via HTTP POST when an email caused a bounce to occur for a recipient. Save the recipient to a ban list of your server and avoid email them again. Inheritance object WebhookBounceRecipientPayload Implements IEquatable<WebhookBounceRecipientPayload> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookBounceRecipientPayload\")] public class WebhookBounceRecipientPayload : IEquatable<WebhookBounceRecipientPayload>, IValidatableObject Constructors View Source WebhookBounceRecipientPayload() Initializes a new instance of the WebhookBounceRecipientPayload class. Declaration [JsonConstructor] protected WebhookBounceRecipientPayload() View Source WebhookBounceRecipientPayload(string, Guid, EventNameEnum, string, string) Initializes a new instance of the WebhookBounceRecipientPayload class. Declaration public WebhookBounceRecipientPayload(string messageId = null, Guid webhookId = default, WebhookBounceRecipientPayload.EventNameEnum eventName = (WebhookBounceRecipientPayload.EventNameEnum)0, string webhookName = null, string recipient = null) Parameters Type Name Description string messageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. (required). Guid webhookId ID of webhook entity being triggered (required). WebhookBounceRecipientPayload.EventNameEnum eventName Name of the event type webhook is being triggered for. (required). string webhookName Name of the webhook being triggered. string recipient Email address that caused a bounce. Make note of the address and try not to message it again to preserve your reputation. (required). Properties View Source EventName Name of the event type webhook is being triggered for. Declaration [DataMember(Name = \"eventName\", IsRequired = true, EmitDefaultValue = true)] public WebhookBounceRecipientPayload.EventNameEnum EventName { get; set; } Property Value Type Description WebhookBounceRecipientPayload.EventNameEnum Name of the event type webhook is being triggered for. View Source MessageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. Declaration [DataMember(Name = \"messageId\", IsRequired = true, EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string Idempotent message ID. Store this ID locally or in a database to prevent message duplication. View Source Recipient Email address that caused a bounce. Make note of the address and try not to message it again to preserve your reputation. Declaration [DataMember(Name = \"recipient\", IsRequired = true, EmitDefaultValue = true)] public string Recipient { get; set; } Property Value Type Description string Email address that caused a bounce. Make note of the address and try not to message it again to preserve your reputation. View Source WebhookId ID of webhook entity being triggered Declaration [DataMember(Name = \"webhookId\", IsRequired = true, EmitDefaultValue = true)] public Guid WebhookId { get; set; } Property Value Type Description Guid ID of webhook entity being triggered View Source WebhookName Name of the webhook being triggered Declaration [DataMember(Name = \"webhookName\", EmitDefaultValue = true)] public string WebhookName { get; set; } Property Value Type Description string Name of the webhook being triggered Methods View Source Equals(WebhookBounceRecipientPayload) Returns true if WebhookBounceRecipientPayload instances are equal Declaration public bool Equals(WebhookBounceRecipientPayload input) Parameters Type Name Description WebhookBounceRecipientPayload input Instance of WebhookBounceRecipientPayload to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookDeliveryStatusPayload.EventNameEnum.html": {
    "href": "api/mailslurp.Model.WebhookDeliveryStatusPayload.EventNameEnum.html",
    "title": "Enum WebhookDeliveryStatusPayload.EventNameEnum | MailSlurp",
    "keywords": "Enum WebhookDeliveryStatusPayload.EventNameEnum Name of the event type webhook is being triggered for. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookDeliveryStatusPayload.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.WebhookDeliveryStatusPayload.html": {
    "href": "api/mailslurp.Model.WebhookDeliveryStatusPayload.html",
    "title": "Class WebhookDeliveryStatusPayload | MailSlurp",
    "keywords": "Class WebhookDeliveryStatusPayload DELIVERY_STATUS webhook payload. Sent to your webhook url endpoint via HTTP POST when an email delivery status is created. This could be a successful delivery or a delivery failure. Inheritance object WebhookDeliveryStatusPayload Implements IEquatable<WebhookDeliveryStatusPayload> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookDeliveryStatusPayload\")] public class WebhookDeliveryStatusPayload : IEquatable<WebhookDeliveryStatusPayload>, IValidatableObject Constructors View Source WebhookDeliveryStatusPayload() Initializes a new instance of the WebhookDeliveryStatusPayload class. Declaration [JsonConstructor] protected WebhookDeliveryStatusPayload() View Source WebhookDeliveryStatusPayload(string, Guid, EventNameEnum, string, Guid, Guid, Guid?, string, Guid?, string, List<string>, string, int?, long?, DateTime?, string) Initializes a new instance of the WebhookDeliveryStatusPayload class. Declaration public WebhookDeliveryStatusPayload(string messageId = null, Guid webhookId = default, WebhookDeliveryStatusPayload.EventNameEnum eventName = (WebhookDeliveryStatusPayload.EventNameEnum)0, string webhookName = null, Guid id = default, Guid userId = default, Guid? sentId = null, string remoteMtaIp = null, Guid? inboxId = null, string reportingMta = null, List<string> recipients = null, string smtpResponse = null, int? smtpStatusCode = null, long? processingTimeMillis = null, DateTime? received = null, string subject = null) Parameters Type Name Description string messageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. (required). Guid webhookId ID of webhook entity being triggered (required). WebhookDeliveryStatusPayload.EventNameEnum eventName Name of the event type webhook is being triggered for. (required). string webhookName Name of the webhook being triggered. Guid id ID of delivery status (required). Guid userId User ID of event (required). Guid? sentId ID of sent email. string remoteMtaIp IP address of the remote Mail Transfer Agent. Guid? inboxId Id of the inbox. string reportingMta Mail Transfer Agent reporting delivery status. List<string> recipients Recipients for delivery. string smtpResponse SMTP server response message. int? smtpStatusCode SMTP server status. long? processingTimeMillis Time in milliseconds for delivery processing. DateTime? received Time event was received. string subject Email subject. Properties View Source EventName Name of the event type webhook is being triggered for. Declaration [DataMember(Name = \"eventName\", IsRequired = true, EmitDefaultValue = true)] public WebhookDeliveryStatusPayload.EventNameEnum EventName { get; set; } Property Value Type Description WebhookDeliveryStatusPayload.EventNameEnum Name of the event type webhook is being triggered for. View Source Id ID of delivery status Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid ID of delivery status View Source InboxId Id of the inbox Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = true)] public Guid? InboxId { get; set; } Property Value Type Description Guid? Id of the inbox View Source MessageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. Declaration [DataMember(Name = \"messageId\", IsRequired = true, EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string Idempotent message ID. Store this ID locally or in a database to prevent message duplication. View Source ProcessingTimeMillis Time in milliseconds for delivery processing Declaration [DataMember(Name = \"processingTimeMillis\", EmitDefaultValue = true)] public long? ProcessingTimeMillis { get; set; } Property Value Type Description long? Time in milliseconds for delivery processing View Source Received Time event was received Declaration [DataMember(Name = \"received\", EmitDefaultValue = true)] public DateTime? Received { get; set; } Property Value Type Description DateTime? Time event was received View Source Recipients Recipients for delivery Declaration [DataMember(Name = \"recipients\", EmitDefaultValue = true)] public List<string> Recipients { get; set; } Property Value Type Description List<string> Recipients for delivery View Source RemoteMtaIp IP address of the remote Mail Transfer Agent Declaration [DataMember(Name = \"remoteMtaIp\", EmitDefaultValue = true)] public string RemoteMtaIp { get; set; } Property Value Type Description string IP address of the remote Mail Transfer Agent View Source ReportingMta Mail Transfer Agent reporting delivery status Declaration [DataMember(Name = \"reportingMta\", EmitDefaultValue = true)] public string ReportingMta { get; set; } Property Value Type Description string Mail Transfer Agent reporting delivery status View Source SentId ID of sent email Declaration [DataMember(Name = \"sentId\", EmitDefaultValue = true)] public Guid? SentId { get; set; } Property Value Type Description Guid? ID of sent email View Source SmtpResponse SMTP server response message Declaration [DataMember(Name = \"smtpResponse\", EmitDefaultValue = true)] public string SmtpResponse { get; set; } Property Value Type Description string SMTP server response message View Source SmtpStatusCode SMTP server status Declaration [DataMember(Name = \"smtpStatusCode\", EmitDefaultValue = true)] public int? SmtpStatusCode { get; set; } Property Value Type Description int? SMTP server status View Source Subject Email subject Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string Email subject View Source UserId User ID of event Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid User ID of event View Source WebhookId ID of webhook entity being triggered Declaration [DataMember(Name = \"webhookId\", IsRequired = true, EmitDefaultValue = true)] public Guid WebhookId { get; set; } Property Value Type Description Guid ID of webhook entity being triggered View Source WebhookName Name of the webhook being triggered Declaration [DataMember(Name = \"webhookName\", EmitDefaultValue = true)] public string WebhookName { get; set; } Property Value Type Description string Name of the webhook being triggered Methods View Source Equals(WebhookDeliveryStatusPayload) Returns true if WebhookDeliveryStatusPayload instances are equal Declaration public bool Equals(WebhookDeliveryStatusPayload input) Parameters Type Name Description WebhookDeliveryStatusPayload input Instance of WebhookDeliveryStatusPayload to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookDto.EventNameEnum.html": {
    "href": "api/mailslurp.Model.WebhookDto.EventNameEnum.html",
    "title": "Enum WebhookDto.EventNameEnum | MailSlurp",
    "keywords": "Enum WebhookDto.EventNameEnum Webhook trigger event name Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookDto.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.WebhookDto.html": {
    "href": "api/mailslurp.Model.WebhookDto.html",
    "title": "Class WebhookDto | MailSlurp",
    "keywords": "Class WebhookDto Representation of a webhook for an inbox. The URL specified will be using by MailSlurp whenever an email is received by the attached inbox. A webhook entity should have a URL that points to your server. Your server should accept HTTP/S POST requests and return a success 200. MailSlurp will retry your webhooks if they fail. See https://csharp.api.mailslurp.com/schemas/webhook-payload for the payload schema. Inheritance object WebhookDto Implements IEquatable<WebhookDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookDto\")] public class WebhookDto : IEquatable<WebhookDto>, IValidatableObject Constructors View Source WebhookDto() Initializes a new instance of the WebhookDto class. Declaration [JsonConstructor] protected WebhookDto() View Source WebhookDto(Guid, Guid, bool, string, Guid?, Guid?, string, string, MethodEnum, string, DateTime?, DateTime, EventNameEnum?, WebhookHeaders, bool?, bool?) Initializes a new instance of the WebhookDto class. Declaration public WebhookDto(Guid id = default, Guid userId = default, bool basicAuth = false, string name = null, Guid? phoneId = null, Guid? inboxId = null, string requestBodyTemplate = null, string url = null, WebhookDto.MethodEnum method = (WebhookDto.MethodEnum)0, string payloadJsonSchema = null, DateTime? createdAt = null, DateTime updatedAt = default, WebhookDto.EventNameEnum? eventName = null, WebhookHeaders requestHeaders = null, bool? ignoreInsecureSslCertificates = null, bool? useStaticIpRange = null) Parameters Type Name Description Guid id ID of the Webhook (required). Guid userId User ID of the Webhook (required). bool basicAuth Does webhook expect basic authentication? If true it means you created this webhook with a username and password. MailSlurp will use these in the URL to authenticate itself. (required). string name Name of the webhook. Guid? phoneId The phoneNumberId that the Webhook will be triggered by. If null then webhook triggered at account level or inbox level if inboxId set. Guid? inboxId The inbox that the Webhook will be triggered by. If null then webhook triggered at account level or phone level if phoneId set. string requestBodyTemplate Request body template for HTTP request that will be sent for the webhook. Use Moustache style template variables to insert values from the original event payload.. string url URL of your server that the webhook will be sent to. The schema of the JSON that is sent is described by the payloadJsonSchema. (required). WebhookDto.MethodEnum method HTTP method that your server endpoint must listen for (required). string payloadJsonSchema Deprecated. Fetch JSON Schema for webhook using the getJsonSchemaForWebhookPayload method (required). DateTime? createdAt When the webhook was created (required). DateTime updatedAt updatedAt (required). WebhookDto.EventNameEnum? eventName Webhook trigger event name. WebhookHeaders requestHeaders requestHeaders. bool? ignoreInsecureSslCertificates Should notifier ignore insecure SSL certificates. bool? useStaticIpRange Should notifier use static IP range when sending webhook payload. Properties View Source BasicAuth Does webhook expect basic authentication? If true it means you created this webhook with a username and password. MailSlurp will use these in the URL to authenticate itself. Declaration [DataMember(Name = \"basicAuth\", IsRequired = true, EmitDefaultValue = true)] public bool BasicAuth { get; set; } Property Value Type Description bool Does webhook expect basic authentication? If true it means you created this webhook with a username and password. MailSlurp will use these in the URL to authenticate itself. View Source CreatedAt When the webhook was created Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime? CreatedAt { get; set; } Property Value Type Description DateTime? When the webhook was created View Source EventName Webhook trigger event name Declaration [DataMember(Name = \"eventName\", EmitDefaultValue = true)] public WebhookDto.EventNameEnum? EventName { get; set; } Property Value Type Description WebhookDto.EventNameEnum? Webhook trigger event name View Source Id ID of the Webhook Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid ID of the Webhook View Source IgnoreInsecureSslCertificates Should notifier ignore insecure SSL certificates Declaration [DataMember(Name = \"ignoreInsecureSslCertificates\", EmitDefaultValue = true)] public bool? IgnoreInsecureSslCertificates { get; set; } Property Value Type Description bool? Should notifier ignore insecure SSL certificates View Source InboxId The inbox that the Webhook will be triggered by. If null then webhook triggered at account level or phone level if phoneId set Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = true)] public Guid? InboxId { get; set; } Property Value Type Description Guid? The inbox that the Webhook will be triggered by. If null then webhook triggered at account level or phone level if phoneId set View Source Method HTTP method that your server endpoint must listen for Declaration [DataMember(Name = \"method\", IsRequired = true, EmitDefaultValue = true)] public WebhookDto.MethodEnum Method { get; set; } Property Value Type Description WebhookDto.MethodEnum HTTP method that your server endpoint must listen for View Source Name Name of the webhook Declaration [DataMember(Name = \"name\", EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Name of the webhook View Source PayloadJsonSchema Deprecated. Fetch JSON Schema for webhook using the getJsonSchemaForWebhookPayload method Declaration [DataMember(Name = \"payloadJsonSchema\", IsRequired = true, EmitDefaultValue = true)] public string PayloadJsonSchema { get; set; } Property Value Type Description string Deprecated. Fetch JSON Schema for webhook using the getJsonSchemaForWebhookPayload method View Source PhoneId The phoneNumberId that the Webhook will be triggered by. If null then webhook triggered at account level or inbox level if inboxId set Declaration [DataMember(Name = \"phoneId\", EmitDefaultValue = true)] public Guid? PhoneId { get; set; } Property Value Type Description Guid? The phoneNumberId that the Webhook will be triggered by. If null then webhook triggered at account level or inbox level if inboxId set View Source RequestBodyTemplate Request body template for HTTP request that will be sent for the webhook. Use Moustache style template variables to insert values from the original event payload. Declaration [DataMember(Name = \"requestBodyTemplate\", EmitDefaultValue = true)] public string RequestBodyTemplate { get; set; } Property Value Type Description string Request body template for HTTP request that will be sent for the webhook. Use Moustache style template variables to insert values from the original event payload. View Source RequestHeaders Gets or Sets RequestHeaders Declaration [DataMember(Name = \"requestHeaders\", EmitDefaultValue = false)] public WebhookHeaders RequestHeaders { get; set; } Property Value Type Description WebhookHeaders View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source Url URL of your server that the webhook will be sent to. The schema of the JSON that is sent is described by the payloadJsonSchema. Declaration [DataMember(Name = \"url\", IsRequired = true, EmitDefaultValue = true)] public string Url { get; set; } Property Value Type Description string URL of your server that the webhook will be sent to. The schema of the JSON that is sent is described by the payloadJsonSchema. View Source UserId User ID of the Webhook Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid User ID of the Webhook View Source UseStaticIpRange Should notifier use static IP range when sending webhook payload Declaration [DataMember(Name = \"useStaticIpRange\", EmitDefaultValue = true)] public bool? UseStaticIpRange { get; set; } Property Value Type Description bool? Should notifier use static IP range when sending webhook payload Methods View Source Equals(WebhookDto) Returns true if WebhookDto instances are equal Declaration public bool Equals(WebhookDto input) Parameters Type Name Description WebhookDto input Instance of WebhookDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookDto.MethodEnum.html": {
    "href": "api/mailslurp.Model.WebhookDto.MethodEnum.html",
    "title": "Enum WebhookDto.MethodEnum | MailSlurp",
    "keywords": "Enum WebhookDto.MethodEnum HTTP method that your server endpoint must listen for Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookDto.MethodEnum Fields Name Description DELETE Enum DELETE for value: DELETE GET Enum GET for value: GET HEAD Enum HEAD for value: HEAD OPTIONS Enum OPTIONS for value: OPTIONS PATCH Enum PATCH for value: PATCH POST Enum POST for value: POST PUT Enum PUT for value: PUT TRACE Enum TRACE for value: TRACE"
  },
  "api/mailslurp.Model.WebhookEmailOpenedPayload.EventNameEnum.html": {
    "href": "api/mailslurp.Model.WebhookEmailOpenedPayload.EventNameEnum.html",
    "title": "Enum WebhookEmailOpenedPayload.EventNameEnum | MailSlurp",
    "keywords": "Enum WebhookEmailOpenedPayload.EventNameEnum Name of the event type webhook is being triggered for. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookEmailOpenedPayload.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.WebhookEmailOpenedPayload.html": {
    "href": "api/mailslurp.Model.WebhookEmailOpenedPayload.html",
    "title": "Class WebhookEmailOpenedPayload | MailSlurp",
    "keywords": "Class WebhookEmailOpenedPayload EMAIL_OPENED webhook payload. Sent to your webhook url endpoint via HTTP POST when an email containing a tracking pixel is opened and the pixel image is loaded by a reader. Inheritance object WebhookEmailOpenedPayload Implements IEquatable<WebhookEmailOpenedPayload> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookEmailOpenedPayload\")] public class WebhookEmailOpenedPayload : IEquatable<WebhookEmailOpenedPayload>, IValidatableObject Constructors View Source WebhookEmailOpenedPayload() Initializes a new instance of the WebhookEmailOpenedPayload class. Declaration [JsonConstructor] protected WebhookEmailOpenedPayload() View Source WebhookEmailOpenedPayload(string, Guid, EventNameEnum, string, Guid, Guid, Guid, string, DateTime) Initializes a new instance of the WebhookEmailOpenedPayload class. Declaration public WebhookEmailOpenedPayload(string messageId = null, Guid webhookId = default, WebhookEmailOpenedPayload.EventNameEnum eventName = (WebhookEmailOpenedPayload.EventNameEnum)0, string webhookName = null, Guid inboxId = default, Guid pixelId = default, Guid sentEmailId = default, string recipient = null, DateTime createdAt = default) Parameters Type Name Description string messageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. (required). Guid webhookId ID of webhook entity being triggered (required). WebhookEmailOpenedPayload.EventNameEnum eventName Name of the event type webhook is being triggered for. (required). string webhookName Name of the webhook being triggered. Guid inboxId Id of the inbox (required). Guid pixelId ID of the tracking pixel (required). Guid sentEmailId ID of sent email (required). string recipient Email address for the recipient of the tracking pixel (required). DateTime createdAt Date time of event creation (required). Properties View Source CreatedAt Date time of event creation Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime Date time of event creation View Source EventName Name of the event type webhook is being triggered for. Declaration [DataMember(Name = \"eventName\", IsRequired = true, EmitDefaultValue = true)] public WebhookEmailOpenedPayload.EventNameEnum EventName { get; set; } Property Value Type Description WebhookEmailOpenedPayload.EventNameEnum Name of the event type webhook is being triggered for. View Source InboxId Id of the inbox Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid Id of the inbox View Source MessageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. Declaration [DataMember(Name = \"messageId\", IsRequired = true, EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string Idempotent message ID. Store this ID locally or in a database to prevent message duplication. View Source PixelId ID of the tracking pixel Declaration [DataMember(Name = \"pixelId\", IsRequired = true, EmitDefaultValue = true)] public Guid PixelId { get; set; } Property Value Type Description Guid ID of the tracking pixel View Source Recipient Email address for the recipient of the tracking pixel Declaration [DataMember(Name = \"recipient\", IsRequired = true, EmitDefaultValue = true)] public string Recipient { get; set; } Property Value Type Description string Email address for the recipient of the tracking pixel View Source SentEmailId ID of sent email Declaration [DataMember(Name = \"sentEmailId\", IsRequired = true, EmitDefaultValue = true)] public Guid SentEmailId { get; set; } Property Value Type Description Guid ID of sent email View Source WebhookId ID of webhook entity being triggered Declaration [DataMember(Name = \"webhookId\", IsRequired = true, EmitDefaultValue = true)] public Guid WebhookId { get; set; } Property Value Type Description Guid ID of webhook entity being triggered View Source WebhookName Name of the webhook being triggered Declaration [DataMember(Name = \"webhookName\", EmitDefaultValue = true)] public string WebhookName { get; set; } Property Value Type Description string Name of the webhook being triggered Methods View Source Equals(WebhookEmailOpenedPayload) Returns true if WebhookEmailOpenedPayload instances are equal Declaration public bool Equals(WebhookEmailOpenedPayload input) Parameters Type Name Description WebhookEmailOpenedPayload input Instance of WebhookEmailOpenedPayload to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookEmailReadPayload.EventNameEnum.html": {
    "href": "api/mailslurp.Model.WebhookEmailReadPayload.EventNameEnum.html",
    "title": "Enum WebhookEmailReadPayload.EventNameEnum | MailSlurp",
    "keywords": "Enum WebhookEmailReadPayload.EventNameEnum Name of the event type webhook is being triggered for. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookEmailReadPayload.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.WebhookEmailReadPayload.html": {
    "href": "api/mailslurp.Model.WebhookEmailReadPayload.html",
    "title": "Class WebhookEmailReadPayload | MailSlurp",
    "keywords": "Class WebhookEmailReadPayload EMAIL_READ webhook payload. Sent to your webhook url endpoint via HTTP POST when an email is read. This happens when an email is requested in full from the API or a user views the email in the dashboard. Inheritance object WebhookEmailReadPayload Implements IEquatable<WebhookEmailReadPayload> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookEmailReadPayload\")] public class WebhookEmailReadPayload : IEquatable<WebhookEmailReadPayload>, IValidatableObject Constructors View Source WebhookEmailReadPayload() Initializes a new instance of the WebhookEmailReadPayload class. Declaration [JsonConstructor] protected WebhookEmailReadPayload() View Source WebhookEmailReadPayload(string, Guid, EventNameEnum, string, Guid, Guid, bool, DateTime) Initializes a new instance of the WebhookEmailReadPayload class. Declaration public WebhookEmailReadPayload(string messageId = null, Guid webhookId = default, WebhookEmailReadPayload.EventNameEnum eventName = (WebhookEmailReadPayload.EventNameEnum)0, string webhookName = null, Guid emailId = default, Guid inboxId = default, bool emailIsRead = false, DateTime createdAt = default) Parameters Type Name Description string messageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. (required). Guid webhookId ID of webhook entity being triggered (required). WebhookEmailReadPayload.EventNameEnum eventName Name of the event type webhook is being triggered for. (required). string webhookName Name of the webhook being triggered. Guid emailId ID of the email that was received. Use this ID for fetching the email with the EmailController. (required). Guid inboxId Id of the inbox (required). bool emailIsRead Is the email read (required). DateTime createdAt Date time of event creation (required). Properties View Source CreatedAt Date time of event creation Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime Date time of event creation View Source EmailId ID of the email that was received. Use this ID for fetching the email with the EmailController. Declaration [DataMember(Name = \"emailId\", IsRequired = true, EmitDefaultValue = true)] public Guid EmailId { get; set; } Property Value Type Description Guid ID of the email that was received. Use this ID for fetching the email with the EmailController. View Source EmailIsRead Is the email read Declaration [DataMember(Name = \"emailIsRead\", IsRequired = true, EmitDefaultValue = true)] public bool EmailIsRead { get; set; } Property Value Type Description bool Is the email read View Source EventName Name of the event type webhook is being triggered for. Declaration [DataMember(Name = \"eventName\", IsRequired = true, EmitDefaultValue = true)] public WebhookEmailReadPayload.EventNameEnum EventName { get; set; } Property Value Type Description WebhookEmailReadPayload.EventNameEnum Name of the event type webhook is being triggered for. View Source InboxId Id of the inbox Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid Id of the inbox View Source MessageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. Declaration [DataMember(Name = \"messageId\", IsRequired = true, EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string Idempotent message ID. Store this ID locally or in a database to prevent message duplication. View Source WebhookId ID of webhook entity being triggered Declaration [DataMember(Name = \"webhookId\", IsRequired = true, EmitDefaultValue = true)] public Guid WebhookId { get; set; } Property Value Type Description Guid ID of webhook entity being triggered View Source WebhookName Name of the webhook being triggered Declaration [DataMember(Name = \"webhookName\", EmitDefaultValue = true)] public string WebhookName { get; set; } Property Value Type Description string Name of the webhook being triggered Methods View Source Equals(WebhookEmailReadPayload) Returns true if WebhookEmailReadPayload instances are equal Declaration public bool Equals(WebhookEmailReadPayload input) Parameters Type Name Description WebhookEmailReadPayload input Instance of WebhookEmailReadPayload to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookHeaderNameValue.html": {
    "href": "api/mailslurp.Model.WebhookHeaderNameValue.html",
    "title": "Class WebhookHeaderNameValue | MailSlurp",
    "keywords": "Class WebhookHeaderNameValue Name value pair for webhook header Inheritance object WebhookHeaderNameValue Implements IEquatable<WebhookHeaderNameValue> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookHeaderNameValue\")] public class WebhookHeaderNameValue : IEquatable<WebhookHeaderNameValue>, IValidatableObject Constructors View Source WebhookHeaderNameValue() Initializes a new instance of the WebhookHeaderNameValue class. Declaration [JsonConstructor] protected WebhookHeaderNameValue() View Source WebhookHeaderNameValue(string, string) Initializes a new instance of the WebhookHeaderNameValue class. Declaration public WebhookHeaderNameValue(string name = null, string value = null) Parameters Type Name Description string name Name of header (required). string value Value of header (required). Properties View Source Name Name of header Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Name of header View Source Value Value of header Declaration [DataMember(Name = \"value\", IsRequired = true, EmitDefaultValue = true)] public string Value { get; set; } Property Value Type Description string Value of header Methods View Source Equals(WebhookHeaderNameValue) Returns true if WebhookHeaderNameValue instances are equal Declaration public bool Equals(WebhookHeaderNameValue input) Parameters Type Name Description WebhookHeaderNameValue input Instance of WebhookHeaderNameValue to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookHeaders.html": {
    "href": "api/mailslurp.Model.WebhookHeaders.html",
    "title": "Class WebhookHeaders | MailSlurp",
    "keywords": "Class WebhookHeaders Webhook HTTP headers to include with each request from MailSlurp to your server Inheritance object WebhookHeaders Implements IEquatable<WebhookHeaders> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookHeaders\")] public class WebhookHeaders : IEquatable<WebhookHeaders>, IValidatableObject Constructors View Source WebhookHeaders() Initializes a new instance of the WebhookHeaders class. Declaration [JsonConstructor] protected WebhookHeaders() View Source WebhookHeaders(List<WebhookHeaderNameValue>) Initializes a new instance of the WebhookHeaders class. Declaration public WebhookHeaders(List<WebhookHeaderNameValue> headers = null) Parameters Type Name Description List<WebhookHeaderNameValue> headers List of header name value pairs to include with webhook requests (required). Properties View Source Headers List of header name value pairs to include with webhook requests Declaration [DataMember(Name = \"headers\", IsRequired = true, EmitDefaultValue = true)] public List<WebhookHeaderNameValue> Headers { get; set; } Property Value Type Description List<WebhookHeaderNameValue> List of header name value pairs to include with webhook requests Methods View Source Equals(WebhookHeaders) Returns true if WebhookHeaders instances are equal Declaration public bool Equals(WebhookHeaders input) Parameters Type Name Description WebhookHeaders input Instance of WebhookHeaders to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookNewAttachmentPayload.EventNameEnum.html": {
    "href": "api/mailslurp.Model.WebhookNewAttachmentPayload.EventNameEnum.html",
    "title": "Enum WebhookNewAttachmentPayload.EventNameEnum | MailSlurp",
    "keywords": "Enum WebhookNewAttachmentPayload.EventNameEnum Name of the event type webhook is being triggered for. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookNewAttachmentPayload.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.WebhookNewAttachmentPayload.html": {
    "href": "api/mailslurp.Model.WebhookNewAttachmentPayload.html",
    "title": "Class WebhookNewAttachmentPayload | MailSlurp",
    "keywords": "Class WebhookNewAttachmentPayload NEW_ATTACHMENT webhook payload. Sent to your webhook url endpoint via HTTP POST when an email is received by the inbox that your webhook is attached to that contains an attachment. You can use the attachmentId to download the attachment. Inheritance object WebhookNewAttachmentPayload Implements IEquatable<WebhookNewAttachmentPayload> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookNewAttachmentPayload\")] public class WebhookNewAttachmentPayload : IEquatable<WebhookNewAttachmentPayload>, IValidatableObject Constructors View Source WebhookNewAttachmentPayload() Initializes a new instance of the WebhookNewAttachmentPayload class. Declaration [JsonConstructor] protected WebhookNewAttachmentPayload() View Source WebhookNewAttachmentPayload(string, Guid, string, EventNameEnum, string, string, string, long) Initializes a new instance of the WebhookNewAttachmentPayload class. Declaration public WebhookNewAttachmentPayload(string messageId = null, Guid webhookId = default, string webhookName = null, WebhookNewAttachmentPayload.EventNameEnum eventName = (WebhookNewAttachmentPayload.EventNameEnum)0, string attachmentId = null, string name = null, string contentType = null, long contentLength = 0) Parameters Type Name Description string messageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. (required). Guid webhookId ID of webhook entity being triggered (required). string webhookName Name of the webhook being triggered. WebhookNewAttachmentPayload.EventNameEnum eventName Name of the event type webhook is being triggered for. (required). string attachmentId ID of attachment. Use the AttachmentController to (required). string name Filename of the attachment if present (required). string contentType Content type of attachment such as 'image/png' or 'application/pdf (required). long contentLength Size of attachment in bytes (required). Properties View Source AttachmentId ID of attachment. Use the AttachmentController to Declaration [DataMember(Name = \"attachmentId\", IsRequired = true, EmitDefaultValue = true)] public string AttachmentId { get; set; } Property Value Type Description string ID of attachment. Use the AttachmentController to View Source ContentLength Size of attachment in bytes Declaration [DataMember(Name = \"contentLength\", IsRequired = true, EmitDefaultValue = true)] public long ContentLength { get; set; } Property Value Type Description long Size of attachment in bytes View Source ContentType Content type of attachment such as 'image/png' or 'application/pdf Declaration [DataMember(Name = \"contentType\", IsRequired = true, EmitDefaultValue = true)] public string ContentType { get; set; } Property Value Type Description string Content type of attachment such as 'image/png' or 'application/pdf View Source EventName Name of the event type webhook is being triggered for. Declaration [DataMember(Name = \"eventName\", IsRequired = true, EmitDefaultValue = true)] public WebhookNewAttachmentPayload.EventNameEnum EventName { get; set; } Property Value Type Description WebhookNewAttachmentPayload.EventNameEnum Name of the event type webhook is being triggered for. View Source MessageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. Declaration [DataMember(Name = \"messageId\", IsRequired = true, EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string Idempotent message ID. Store this ID locally or in a database to prevent message duplication. View Source Name Filename of the attachment if present Declaration [DataMember(Name = \"name\", IsRequired = true, EmitDefaultValue = true)] public string Name { get; set; } Property Value Type Description string Filename of the attachment if present View Source WebhookId ID of webhook entity being triggered Declaration [DataMember(Name = \"webhookId\", IsRequired = true, EmitDefaultValue = true)] public Guid WebhookId { get; set; } Property Value Type Description Guid ID of webhook entity being triggered View Source WebhookName Name of the webhook being triggered Declaration [DataMember(Name = \"webhookName\", EmitDefaultValue = true)] public string WebhookName { get; set; } Property Value Type Description string Name of the webhook being triggered Methods View Source Equals(WebhookNewAttachmentPayload) Returns true if WebhookNewAttachmentPayload instances are equal Declaration public bool Equals(WebhookNewAttachmentPayload input) Parameters Type Name Description WebhookNewAttachmentPayload input Instance of WebhookNewAttachmentPayload to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookNewContactPayload.EventNameEnum.html": {
    "href": "api/mailslurp.Model.WebhookNewContactPayload.EventNameEnum.html",
    "title": "Enum WebhookNewContactPayload.EventNameEnum | MailSlurp",
    "keywords": "Enum WebhookNewContactPayload.EventNameEnum Name of the event type webhook is being triggered for. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookNewContactPayload.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.WebhookNewContactPayload.html": {
    "href": "api/mailslurp.Model.WebhookNewContactPayload.html",
    "title": "Class WebhookNewContactPayload | MailSlurp",
    "keywords": "Class WebhookNewContactPayload NEW_CONTACT webhook payload. Sent to your webhook url endpoint via HTTP POST when an email is received by the inbox that your webhook is attached to that contains a recipient that has not been saved as a contact. Inheritance object WebhookNewContactPayload Implements IEquatable<WebhookNewContactPayload> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookNewContactPayload\")] public class WebhookNewContactPayload : IEquatable<WebhookNewContactPayload>, IValidatableObject Constructors View Source WebhookNewContactPayload() Initializes a new instance of the WebhookNewContactPayload class. Declaration [JsonConstructor] protected WebhookNewContactPayload() View Source WebhookNewContactPayload(string, Guid, string, EventNameEnum, Guid, Guid?, string, string, string, string, List<string>, List<string>, object, bool, DateTime) Initializes a new instance of the WebhookNewContactPayload class. Declaration public WebhookNewContactPayload(string messageId = null, Guid webhookId = default, string webhookName = null, WebhookNewContactPayload.EventNameEnum eventName = (WebhookNewContactPayload.EventNameEnum)0, Guid contactId = default, Guid? groupId = null, string firstName = null, string lastName = null, string company = null, string primaryEmailAddress = null, List<string> emailAddresses = null, List<string> tags = null, object metaData = null, bool optOut = false, DateTime createdAt = default) Parameters Type Name Description string messageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. (required). Guid webhookId ID of webhook entity being triggered (required). string webhookName Name of the webhook being triggered. WebhookNewContactPayload.EventNameEnum eventName Name of the event type webhook is being triggered for. (required). Guid contactId Contact ID (required). Guid? groupId Contact group ID. string firstName Contact first name. string lastName Contact last name. string company Contact company name. string primaryEmailAddress Primary email address for contact. List<string> emailAddresses Email addresses for contact (required). List<string> tags Tags for contact (required). object metaData metaData. bool optOut Has contact opted out of emails (required). DateTime createdAt Date time of event creation (required). Properties View Source Company Contact company name Declaration [DataMember(Name = \"company\", EmitDefaultValue = true)] public string Company { get; set; } Property Value Type Description string Contact company name View Source ContactId Contact ID Declaration [DataMember(Name = \"contactId\", IsRequired = true, EmitDefaultValue = true)] public Guid ContactId { get; set; } Property Value Type Description Guid Contact ID View Source CreatedAt Date time of event creation Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime Date time of event creation View Source EmailAddresses Email addresses for contact Declaration [DataMember(Name = \"emailAddresses\", IsRequired = true, EmitDefaultValue = true)] public List<string> EmailAddresses { get; set; } Property Value Type Description List<string> Email addresses for contact View Source EventName Name of the event type webhook is being triggered for. Declaration [DataMember(Name = \"eventName\", IsRequired = true, EmitDefaultValue = true)] public WebhookNewContactPayload.EventNameEnum EventName { get; set; } Property Value Type Description WebhookNewContactPayload.EventNameEnum Name of the event type webhook is being triggered for. View Source FirstName Contact first name Declaration [DataMember(Name = \"firstName\", EmitDefaultValue = true)] public string FirstName { get; set; } Property Value Type Description string Contact first name View Source GroupId Contact group ID Declaration [DataMember(Name = \"groupId\", EmitDefaultValue = true)] public Guid? GroupId { get; set; } Property Value Type Description Guid? Contact group ID View Source LastName Contact last name Declaration [DataMember(Name = \"lastName\", EmitDefaultValue = true)] public string LastName { get; set; } Property Value Type Description string Contact last name View Source MessageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. Declaration [DataMember(Name = \"messageId\", IsRequired = true, EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string Idempotent message ID. Store this ID locally or in a database to prevent message duplication. View Source MetaData Gets or Sets MetaData Declaration [DataMember(Name = \"metaData\", EmitDefaultValue = true)] public object MetaData { get; set; } Property Value Type Description object View Source OptOut Has contact opted out of emails Declaration [DataMember(Name = \"optOut\", IsRequired = true, EmitDefaultValue = true)] public bool OptOut { get; set; } Property Value Type Description bool Has contact opted out of emails View Source PrimaryEmailAddress Primary email address for contact Declaration [DataMember(Name = \"primaryEmailAddress\", EmitDefaultValue = true)] public string PrimaryEmailAddress { get; set; } Property Value Type Description string Primary email address for contact View Source Tags Tags for contact Declaration [DataMember(Name = \"tags\", IsRequired = true, EmitDefaultValue = true)] public List<string> Tags { get; set; } Property Value Type Description List<string> Tags for contact View Source WebhookId ID of webhook entity being triggered Declaration [DataMember(Name = \"webhookId\", IsRequired = true, EmitDefaultValue = true)] public Guid WebhookId { get; set; } Property Value Type Description Guid ID of webhook entity being triggered View Source WebhookName Name of the webhook being triggered Declaration [DataMember(Name = \"webhookName\", EmitDefaultValue = true)] public string WebhookName { get; set; } Property Value Type Description string Name of the webhook being triggered Methods View Source Equals(WebhookNewContactPayload) Returns true if WebhookNewContactPayload instances are equal Declaration public bool Equals(WebhookNewContactPayload input) Parameters Type Name Description WebhookNewContactPayload input Instance of WebhookNewContactPayload to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookNewEmailPayload.EventNameEnum.html": {
    "href": "api/mailslurp.Model.WebhookNewEmailPayload.EventNameEnum.html",
    "title": "Enum WebhookNewEmailPayload.EventNameEnum | MailSlurp",
    "keywords": "Enum WebhookNewEmailPayload.EventNameEnum Name of the event type webhook is being triggered for. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookNewEmailPayload.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.WebhookNewEmailPayload.html": {
    "href": "api/mailslurp.Model.WebhookNewEmailPayload.html",
    "title": "Class WebhookNewEmailPayload | MailSlurp",
    "keywords": "Class WebhookNewEmailPayload NEW_EMAIL webhook payload. Sent to your webhook url endpoint via HTTP POST when an email is received by the inbox that your webhook is attached to. Use the email ID to fetch the full email body or attachments. Inheritance object WebhookNewEmailPayload Implements IEquatable<WebhookNewEmailPayload> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookNewEmailPayload\")] public class WebhookNewEmailPayload : IEquatable<WebhookNewEmailPayload>, IValidatableObject Constructors View Source WebhookNewEmailPayload() Initializes a new instance of the WebhookNewEmailPayload class. Declaration [JsonConstructor] protected WebhookNewEmailPayload() View Source WebhookNewEmailPayload(string, Guid, EventNameEnum, string, Guid, Guid?, Guid, DateTime, List<string>, string, List<string>, List<string>, string, List<AttachmentMetaData>) Initializes a new instance of the WebhookNewEmailPayload class. Declaration public WebhookNewEmailPayload(string messageId = null, Guid webhookId = default, WebhookNewEmailPayload.EventNameEnum eventName = (WebhookNewEmailPayload.EventNameEnum)0, string webhookName = null, Guid inboxId = default, Guid? domainId = null, Guid emailId = default, DateTime createdAt = default, List<string> to = null, string from = null, List<string> cc = null, List<string> bcc = null, string subject = null, List<AttachmentMetaData> attachmentMetaDatas = null) Parameters Type Name Description string messageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. (required). Guid webhookId ID of webhook entity being triggered (required). WebhookNewEmailPayload.EventNameEnum eventName Name of the event type webhook is being triggered for. (required). string webhookName Name of the webhook being triggered. Guid inboxId Id of the inbox (required). Guid? domainId Id of the domain that received an email. Guid emailId ID of the email that was received. Use this ID for fetching the email with the EmailController. (required). DateTime createdAt Date time of event creation (required). List<string> to List of To recipient email addresses that the email was addressed to. See recipients object for names. (required). string from Who the email was sent from. An email address - see fromName for the sender name. (required). List<string> cc List of CC recipients email addresses that the email was addressed to. See recipients object for names. (required). List<string> bcc List of BCC recipients email addresses that the email was addressed to. See recipients object for names. (required). string subject The subject line of the email message as specified by SMTP subject header. List<AttachmentMetaData> attachmentMetaDatas List of attachment meta data objects if attachments present (required). Properties View Source AttachmentMetaDatas List of attachment meta data objects if attachments present Declaration [DataMember(Name = \"attachmentMetaDatas\", IsRequired = true, EmitDefaultValue = true)] public List<AttachmentMetaData> AttachmentMetaDatas { get; set; } Property Value Type Description List<AttachmentMetaData> List of attachment meta data objects if attachments present View Source Bcc List of BCC recipients email addresses that the email was addressed to. See recipients object for names. Declaration [DataMember(Name = \"bcc\", IsRequired = true, EmitDefaultValue = true)] public List<string> Bcc { get; set; } Property Value Type Description List<string> List of BCC recipients email addresses that the email was addressed to. See recipients object for names. View Source Cc List of CC recipients email addresses that the email was addressed to. See recipients object for names. Declaration [DataMember(Name = \"cc\", IsRequired = true, EmitDefaultValue = true)] public List<string> Cc { get; set; } Property Value Type Description List<string> List of CC recipients email addresses that the email was addressed to. See recipients object for names. View Source CreatedAt Date time of event creation Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime Date time of event creation View Source DomainId Id of the domain that received an email Declaration [DataMember(Name = \"domainId\", EmitDefaultValue = true)] public Guid? DomainId { get; set; } Property Value Type Description Guid? Id of the domain that received an email View Source EmailId ID of the email that was received. Use this ID for fetching the email with the EmailController. Declaration [DataMember(Name = \"emailId\", IsRequired = true, EmitDefaultValue = true)] public Guid EmailId { get; set; } Property Value Type Description Guid ID of the email that was received. Use this ID for fetching the email with the EmailController. View Source EventName Name of the event type webhook is being triggered for. Declaration [DataMember(Name = \"eventName\", IsRequired = true, EmitDefaultValue = true)] public WebhookNewEmailPayload.EventNameEnum EventName { get; set; } Property Value Type Description WebhookNewEmailPayload.EventNameEnum Name of the event type webhook is being triggered for. View Source From Who the email was sent from. An email address - see fromName for the sender name. Declaration [DataMember(Name = \"from\", IsRequired = true, EmitDefaultValue = true)] public string From { get; set; } Property Value Type Description string Who the email was sent from. An email address - see fromName for the sender name. View Source InboxId Id of the inbox Declaration [DataMember(Name = \"inboxId\", IsRequired = true, EmitDefaultValue = true)] public Guid InboxId { get; set; } Property Value Type Description Guid Id of the inbox View Source MessageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. Declaration [DataMember(Name = \"messageId\", IsRequired = true, EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string Idempotent message ID. Store this ID locally or in a database to prevent message duplication. View Source Subject The subject line of the email message as specified by SMTP subject header Declaration [DataMember(Name = \"subject\", EmitDefaultValue = true)] public string Subject { get; set; } Property Value Type Description string The subject line of the email message as specified by SMTP subject header View Source To List of To recipient email addresses that the email was addressed to. See recipients object for names. Declaration [DataMember(Name = \"to\", IsRequired = true, EmitDefaultValue = true)] public List<string> To { get; set; } Property Value Type Description List<string> List of To recipient email addresses that the email was addressed to. See recipients object for names. View Source WebhookId ID of webhook entity being triggered Declaration [DataMember(Name = \"webhookId\", IsRequired = true, EmitDefaultValue = true)] public Guid WebhookId { get; set; } Property Value Type Description Guid ID of webhook entity being triggered View Source WebhookName Name of the webhook being triggered Declaration [DataMember(Name = \"webhookName\", EmitDefaultValue = true)] public string WebhookName { get; set; } Property Value Type Description string Name of the webhook being triggered Methods View Source Equals(WebhookNewEmailPayload) Returns true if WebhookNewEmailPayload instances are equal Declaration public bool Equals(WebhookNewEmailPayload input) Parameters Type Name Description WebhookNewEmailPayload input Instance of WebhookNewEmailPayload to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookNewSmsPayload.EventNameEnum.html": {
    "href": "api/mailslurp.Model.WebhookNewSmsPayload.EventNameEnum.html",
    "title": "Enum WebhookNewSmsPayload.EventNameEnum | MailSlurp",
    "keywords": "Enum WebhookNewSmsPayload.EventNameEnum Name of the event type webhook is being triggered for. Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookNewSmsPayload.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.WebhookNewSmsPayload.html": {
    "href": "api/mailslurp.Model.WebhookNewSmsPayload.html",
    "title": "Class WebhookNewSmsPayload | MailSlurp",
    "keywords": "Class WebhookNewSmsPayload NEW_SMS webhook payload. Sent to your webhook url endpoint via HTTP POST when an sms is received by the phone number that your webhook is attached to. Use the SMS ID to fetch the full SMS details. Inheritance object WebhookNewSmsPayload Implements IEquatable<WebhookNewSmsPayload> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookNewSmsPayload\")] public class WebhookNewSmsPayload : IEquatable<WebhookNewSmsPayload>, IValidatableObject Constructors View Source WebhookNewSmsPayload() Initializes a new instance of the WebhookNewSmsPayload class. Declaration [JsonConstructor] protected WebhookNewSmsPayload() View Source WebhookNewSmsPayload(string, Guid, EventNameEnum, string, Guid, Guid, Guid, string, string, string, bool) Initializes a new instance of the WebhookNewSmsPayload class. Declaration public WebhookNewSmsPayload(string messageId = null, Guid webhookId = default, WebhookNewSmsPayload.EventNameEnum eventName = (WebhookNewSmsPayload.EventNameEnum)0, string webhookName = null, Guid smsId = default, Guid userId = default, Guid phoneNumber = default, string toNumber = null, string fromNumber = null, string body = null, bool read = false) Parameters Type Name Description string messageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. (required). Guid webhookId ID of webhook entity being triggered (required). WebhookNewSmsPayload.EventNameEnum eventName Name of the event type webhook is being triggered for. (required). string webhookName Name of the webhook being triggered. Guid smsId ID of SMS message (required). Guid userId User ID of event (required). Guid phoneNumber ID of phone number receiving SMS (required). string toNumber Recipient phone number (required). string fromNumber Sender phone number (required). string body SMS message body (required). bool read SMS has been read (required). Properties View Source Body SMS message body Declaration [DataMember(Name = \"body\", IsRequired = true, EmitDefaultValue = true)] public string Body { get; set; } Property Value Type Description string SMS message body View Source EventName Name of the event type webhook is being triggered for. Declaration [DataMember(Name = \"eventName\", IsRequired = true, EmitDefaultValue = true)] public WebhookNewSmsPayload.EventNameEnum EventName { get; set; } Property Value Type Description WebhookNewSmsPayload.EventNameEnum Name of the event type webhook is being triggered for. View Source FromNumber Sender phone number Declaration [DataMember(Name = \"fromNumber\", IsRequired = true, EmitDefaultValue = true)] public string FromNumber { get; set; } Property Value Type Description string Sender phone number View Source MessageId Idempotent message ID. Store this ID locally or in a database to prevent message duplication. Declaration [DataMember(Name = \"messageId\", IsRequired = true, EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string Idempotent message ID. Store this ID locally or in a database to prevent message duplication. View Source PhoneNumber ID of phone number receiving SMS Declaration [DataMember(Name = \"phoneNumber\", IsRequired = true, EmitDefaultValue = true)] public Guid PhoneNumber { get; set; } Property Value Type Description Guid ID of phone number receiving SMS View Source Read SMS has been read Declaration [DataMember(Name = \"read\", IsRequired = true, EmitDefaultValue = true)] public bool Read { get; set; } Property Value Type Description bool SMS has been read View Source SmsId ID of SMS message Declaration [DataMember(Name = \"smsId\", IsRequired = true, EmitDefaultValue = true)] public Guid SmsId { get; set; } Property Value Type Description Guid ID of SMS message View Source ToNumber Recipient phone number Declaration [DataMember(Name = \"toNumber\", IsRequired = true, EmitDefaultValue = true)] public string ToNumber { get; set; } Property Value Type Description string Recipient phone number View Source UserId User ID of event Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid User ID of event View Source WebhookId ID of webhook entity being triggered Declaration [DataMember(Name = \"webhookId\", IsRequired = true, EmitDefaultValue = true)] public Guid WebhookId { get; set; } Property Value Type Description Guid ID of webhook entity being triggered View Source WebhookName Name of the webhook being triggered Declaration [DataMember(Name = \"webhookName\", EmitDefaultValue = true)] public string WebhookName { get; set; } Property Value Type Description string Name of the webhook being triggered Methods View Source Equals(WebhookNewSmsPayload) Returns true if WebhookNewSmsPayload instances are equal Declaration public bool Equals(WebhookNewSmsPayload input) Parameters Type Name Description WebhookNewSmsPayload input Instance of WebhookNewSmsPayload to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookProjection.EventNameEnum.html": {
    "href": "api/mailslurp.Model.WebhookProjection.EventNameEnum.html",
    "title": "Enum WebhookProjection.EventNameEnum | MailSlurp",
    "keywords": "Enum WebhookProjection.EventNameEnum Defines EventName Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookProjection.EventNameEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.WebhookProjection.html": {
    "href": "api/mailslurp.Model.WebhookProjection.html",
    "title": "Class WebhookProjection | MailSlurp",
    "keywords": "Class WebhookProjection Representation of a webhook Inheritance object WebhookProjection Implements IEquatable<WebhookProjection> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookProjection\")] public class WebhookProjection : IEquatable<WebhookProjection>, IValidatableObject Constructors View Source WebhookProjection() Initializes a new instance of the WebhookProjection class. Declaration [JsonConstructor] protected WebhookProjection() View Source WebhookProjection(DateTime, DateTime, string, Guid, EventNameEnum?, Guid, string, Guid) Initializes a new instance of the WebhookProjection class. Declaration public WebhookProjection(DateTime createdAt = default, DateTime updatedAt = default, string url = null, Guid inboxId = default, WebhookProjection.EventNameEnum? eventName = null, Guid phoneNumberId = default, string name = null, Guid id = default) Parameters Type Name Description DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). string url url (required). Guid inboxId inboxId. WebhookProjection.EventNameEnum? eventName eventName. Guid phoneNumberId phoneNumberId. string name name. Guid id id (required). Properties View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EventName Gets or Sets EventName Declaration [DataMember(Name = \"eventName\", EmitDefaultValue = false)] public WebhookProjection.EventNameEnum? EventName { get; set; } Property Value Type Description WebhookProjection.EventNameEnum? View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", IsRequired = true, EmitDefaultValue = true)] public Guid Id { get; set; } Property Value Type Description Guid View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = false)] public Guid InboxId { get; set; } Property Value Type Description Guid View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", EmitDefaultValue = false)] public string Name { get; set; } Property Value Type Description string View Source PhoneNumberId Gets or Sets PhoneNumberId Declaration [DataMember(Name = \"phoneNumberId\", EmitDefaultValue = false)] public Guid PhoneNumberId { get; set; } Property Value Type Description Guid View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source Url Gets or Sets Url Declaration [DataMember(Name = \"url\", IsRequired = true, EmitDefaultValue = true)] public string Url { get; set; } Property Value Type Description string Methods View Source Equals(WebhookProjection) Returns true if WebhookProjection instances are equal Declaration public bool Equals(WebhookProjection input) Parameters Type Name Description WebhookProjection input Instance of WebhookProjection to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookRedriveAllResult.html": {
    "href": "api/mailslurp.Model.WebhookRedriveAllResult.html",
    "title": "Class WebhookRedriveAllResult | MailSlurp",
    "keywords": "Class WebhookRedriveAllResult Result of retrying all failed webhook Inheritance object WebhookRedriveAllResult Implements IEquatable<WebhookRedriveAllResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookRedriveAllResult\")] public class WebhookRedriveAllResult : IEquatable<WebhookRedriveAllResult>, IValidatableObject Constructors View Source WebhookRedriveAllResult() Initializes a new instance of the WebhookRedriveAllResult class. Declaration [JsonConstructor] protected WebhookRedriveAllResult() View Source WebhookRedriveAllResult(bool, string) Initializes a new instance of the WebhookRedriveAllResult class. Declaration public WebhookRedriveAllResult(bool success = false, string message = null) Parameters Type Name Description bool success success (required). string message message. Properties View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = true)] public string Message { get; set; } Property Value Type Description string View Source Success Gets or Sets Success Declaration [DataMember(Name = \"success\", IsRequired = true, EmitDefaultValue = true)] public bool Success { get; set; } Property Value Type Description bool Methods View Source Equals(WebhookRedriveAllResult) Returns true if WebhookRedriveAllResult instances are equal Declaration public bool Equals(WebhookRedriveAllResult input) Parameters Type Name Description WebhookRedriveAllResult input Instance of WebhookRedriveAllResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookRedriveResult.html": {
    "href": "api/mailslurp.Model.WebhookRedriveResult.html",
    "title": "Class WebhookRedriveResult | MailSlurp",
    "keywords": "Class WebhookRedriveResult Result of retrying webhook Inheritance object WebhookRedriveResult Implements IEquatable<WebhookRedriveResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookRedriveResult\")] public class WebhookRedriveResult : IEquatable<WebhookRedriveResult>, IValidatableObject Constructors View Source WebhookRedriveResult() Initializes a new instance of the WebhookRedriveResult class. Declaration [JsonConstructor] protected WebhookRedriveResult() View Source WebhookRedriveResult(Guid, bool, string) Initializes a new instance of the WebhookRedriveResult class. Declaration public WebhookRedriveResult(Guid webhookResultId = default, bool success = false, string message = null) Parameters Type Name Description Guid webhookResultId webhookResultId (required). bool success success (required). string message message. Properties View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = true)] public string Message { get; set; } Property Value Type Description string View Source Success Gets or Sets Success Declaration [DataMember(Name = \"success\", IsRequired = true, EmitDefaultValue = true)] public bool Success { get; set; } Property Value Type Description bool View Source WebhookResultId Gets or Sets WebhookResultId Declaration [DataMember(Name = \"webhookResultId\", IsRequired = true, EmitDefaultValue = true)] public Guid WebhookResultId { get; set; } Property Value Type Description Guid Methods View Source Equals(WebhookRedriveResult) Returns true if WebhookRedriveResult instances are equal Declaration public bool Equals(WebhookRedriveResult input) Parameters Type Name Description WebhookRedriveResult input Instance of WebhookRedriveResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookResultDto.html": {
    "href": "api/mailslurp.Model.WebhookResultDto.html",
    "title": "Class WebhookResultDto | MailSlurp",
    "keywords": "Class WebhookResultDto Result of a webhook notification Inheritance object WebhookResultDto Implements IEquatable<WebhookResultDto> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookResultDto\")] public class WebhookResultDto : IEquatable<WebhookResultDto>, IValidatableObject Constructors View Source WebhookResultDto() Initializes a new instance of the WebhookResultDto class. Declaration [JsonConstructor] protected WebhookResultDto() View Source WebhookResultDto(Guid?, Guid, Guid, string, string, Guid?, HttpMethodEnum, WebhookEventEnum, int?, long, string, ResultTypeEnum?, DateTime, DateTime, bool, Guid?, Guid?, Guid?, Guid?, Guid?) Initializes a new instance of the WebhookResultDto class. Declaration public WebhookResultDto(Guid? id = null, Guid userId = default, Guid webhookId = default, string webhookUrl = null, string messageId = null, Guid? redriveId = null, WebhookResultDto.HttpMethodEnum httpMethod = (WebhookResultDto.HttpMethodEnum)0, WebhookResultDto.WebhookEventEnum webhookEvent = (WebhookResultDto.WebhookEventEnum)0, int? responseStatus = null, long responseTimeMillis = 0, string responseBodyExtract = null, WebhookResultDto.ResultTypeEnum? resultType = null, DateTime createdAt = default, DateTime updatedAt = default, bool seen = false, Guid? inboxId = null, Guid? emailId = null, Guid? attachmentId = null, Guid? phoneId = null, Guid? smsId = null) Parameters Type Name Description Guid? id id. Guid userId userId (required). Guid webhookId webhookId (required). string webhookUrl webhookUrl (required). string messageId messageId (required). Guid? redriveId redriveId. WebhookResultDto.HttpMethodEnum httpMethod httpMethod (required). WebhookResultDto.WebhookEventEnum webhookEvent webhookEvent (required). int? responseStatus responseStatus. long responseTimeMillis responseTimeMillis (required). string responseBodyExtract responseBodyExtract. WebhookResultDto.ResultTypeEnum? resultType resultType. DateTime createdAt createdAt (required). DateTime updatedAt updatedAt (required). bool seen seen (required). Guid? inboxId inboxId. Guid? emailId emailId. Guid? attachmentId attachmentId. Guid? phoneId phoneId. Guid? smsId smsId. Properties View Source AttachmentId Gets or Sets AttachmentId Declaration [DataMember(Name = \"attachmentId\", EmitDefaultValue = true)] public Guid? AttachmentId { get; set; } Property Value Type Description Guid? View Source CreatedAt Gets or Sets CreatedAt Declaration [DataMember(Name = \"createdAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime CreatedAt { get; set; } Property Value Type Description DateTime View Source EmailId Gets or Sets EmailId Declaration [DataMember(Name = \"emailId\", EmitDefaultValue = true)] public Guid? EmailId { get; set; } Property Value Type Description Guid? View Source HttpMethod Gets or Sets HttpMethod Declaration [DataMember(Name = \"httpMethod\", IsRequired = true, EmitDefaultValue = true)] public WebhookResultDto.HttpMethodEnum HttpMethod { get; set; } Property Value Type Description WebhookResultDto.HttpMethodEnum View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", EmitDefaultValue = true)] public Guid? Id { get; set; } Property Value Type Description Guid? View Source InboxId Gets or Sets InboxId Declaration [DataMember(Name = \"inboxId\", EmitDefaultValue = true)] public Guid? InboxId { get; set; } Property Value Type Description Guid? View Source MessageId Gets or Sets MessageId Declaration [DataMember(Name = \"messageId\", IsRequired = true, EmitDefaultValue = true)] public string MessageId { get; set; } Property Value Type Description string View Source PhoneId Gets or Sets PhoneId Declaration [DataMember(Name = \"phoneId\", EmitDefaultValue = true)] public Guid? PhoneId { get; set; } Property Value Type Description Guid? View Source RedriveId Gets or Sets RedriveId Declaration [DataMember(Name = \"redriveId\", EmitDefaultValue = true)] public Guid? RedriveId { get; set; } Property Value Type Description Guid? View Source ResponseBodyExtract Gets or Sets ResponseBodyExtract Declaration [DataMember(Name = \"responseBodyExtract\", EmitDefaultValue = true)] public string ResponseBodyExtract { get; set; } Property Value Type Description string View Source ResponseStatus Gets or Sets ResponseStatus Declaration [DataMember(Name = \"responseStatus\", EmitDefaultValue = true)] public int? ResponseStatus { get; set; } Property Value Type Description int? View Source ResponseTimeMillis Gets or Sets ResponseTimeMillis Declaration [DataMember(Name = \"responseTimeMillis\", IsRequired = true, EmitDefaultValue = true)] public long ResponseTimeMillis { get; set; } Property Value Type Description long View Source ResultType Gets or Sets ResultType Declaration [DataMember(Name = \"resultType\", EmitDefaultValue = true)] public WebhookResultDto.ResultTypeEnum? ResultType { get; set; } Property Value Type Description WebhookResultDto.ResultTypeEnum? View Source Seen Gets or Sets Seen Declaration [DataMember(Name = \"seen\", IsRequired = true, EmitDefaultValue = true)] public bool Seen { get; set; } Property Value Type Description bool View Source SmsId Gets or Sets SmsId Declaration [DataMember(Name = \"smsId\", EmitDefaultValue = true)] public Guid? SmsId { get; set; } Property Value Type Description Guid? View Source UpdatedAt Gets or Sets UpdatedAt Declaration [DataMember(Name = \"updatedAt\", IsRequired = true, EmitDefaultValue = true)] public DateTime UpdatedAt { get; set; } Property Value Type Description DateTime View Source UserId Gets or Sets UserId Declaration [DataMember(Name = \"userId\", IsRequired = true, EmitDefaultValue = true)] public Guid UserId { get; set; } Property Value Type Description Guid View Source WebhookEvent Gets or Sets WebhookEvent Declaration [DataMember(Name = \"webhookEvent\", IsRequired = true, EmitDefaultValue = true)] public WebhookResultDto.WebhookEventEnum WebhookEvent { get; set; } Property Value Type Description WebhookResultDto.WebhookEventEnum View Source WebhookId Gets or Sets WebhookId Declaration [DataMember(Name = \"webhookId\", IsRequired = true, EmitDefaultValue = true)] public Guid WebhookId { get; set; } Property Value Type Description Guid View Source WebhookUrl Gets or Sets WebhookUrl Declaration [DataMember(Name = \"webhookUrl\", IsRequired = true, EmitDefaultValue = true)] public string WebhookUrl { get; set; } Property Value Type Description string Methods View Source Equals(WebhookResultDto) Returns true if WebhookResultDto instances are equal Declaration public bool Equals(WebhookResultDto input) Parameters Type Name Description WebhookResultDto input Instance of WebhookResultDto to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookResultDto.HttpMethodEnum.html": {
    "href": "api/mailslurp.Model.WebhookResultDto.HttpMethodEnum.html",
    "title": "Enum WebhookResultDto.HttpMethodEnum | MailSlurp",
    "keywords": "Enum WebhookResultDto.HttpMethodEnum Defines HttpMethod Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookResultDto.HttpMethodEnum Fields Name Description DELETE Enum DELETE for value: DELETE GET Enum GET for value: GET HEAD Enum HEAD for value: HEAD OPTIONS Enum OPTIONS for value: OPTIONS PATCH Enum PATCH for value: PATCH POST Enum POST for value: POST PUT Enum PUT for value: PUT TRACE Enum TRACE for value: TRACE"
  },
  "api/mailslurp.Model.WebhookResultDto.ResultTypeEnum.html": {
    "href": "api/mailslurp.Model.WebhookResultDto.ResultTypeEnum.html",
    "title": "Enum WebhookResultDto.ResultTypeEnum | MailSlurp",
    "keywords": "Enum WebhookResultDto.ResultTypeEnum Defines ResultType Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookResultDto.ResultTypeEnum Fields Name Description BADRESPONSE Enum BADRESPONSE for value: BAD_RESPONSE EXCEPTION Enum EXCEPTION for value: EXCEPTION REDRIVEN Enum REDRIVEN for value: REDRIVEN SUCCESS Enum SUCCESS for value: SUCCESS"
  },
  "api/mailslurp.Model.WebhookResultDto.WebhookEventEnum.html": {
    "href": "api/mailslurp.Model.WebhookResultDto.WebhookEventEnum.html",
    "title": "Enum WebhookResultDto.WebhookEventEnum | MailSlurp",
    "keywords": "Enum WebhookResultDto.WebhookEventEnum Defines WebhookEvent Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookResultDto.WebhookEventEnum Fields Name Description BOUNCE Enum BOUNCE for value: BOUNCE BOUNCERECIPIENT Enum BOUNCERECIPIENT for value: BOUNCE_RECIPIENT DELIVERYSTATUS Enum DELIVERYSTATUS for value: DELIVERY_STATUS EMAILOPENED Enum EMAILOPENED for value: EMAIL_OPENED EMAILREAD Enum EMAILREAD for value: EMAIL_READ EMAILRECEIVED Enum EMAILRECEIVED for value: EMAIL_RECEIVED NEWATTACHMENT Enum NEWATTACHMENT for value: NEW_ATTACHMENT NEWCONTACT Enum NEWCONTACT for value: NEW_CONTACT NEWEMAIL Enum NEWEMAIL for value: NEW_EMAIL NEWSMS Enum NEWSMS for value: NEW_SMS"
  },
  "api/mailslurp.Model.WebhookTestRequest.html": {
    "href": "api/mailslurp.Model.WebhookTestRequest.html",
    "title": "Class WebhookTestRequest | MailSlurp",
    "keywords": "Class WebhookTestRequest Result of webhook test request Inheritance object WebhookTestRequest Implements IEquatable<WebhookTestRequest> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookTestRequest\")] public class WebhookTestRequest : IEquatable<WebhookTestRequest>, IValidatableObject Constructors View Source WebhookTestRequest() Initializes a new instance of the WebhookTestRequest class. Declaration [JsonConstructor] protected WebhookTestRequest() View Source WebhookTestRequest(string, MethodEnum, Dictionary<string, string>, string) Initializes a new instance of the WebhookTestRequest class. Declaration public WebhookTestRequest(string url = null, WebhookTestRequest.MethodEnum method = (WebhookTestRequest.MethodEnum)0, Dictionary<string, string> headers = null, string payload = null) Parameters Type Name Description string url url (required). WebhookTestRequest.MethodEnum method method (required). Dictionary<string, string> headers headers (required). string payload payload. Properties View Source Headers Gets or Sets Headers Declaration [DataMember(Name = \"headers\", IsRequired = true, EmitDefaultValue = true)] public Dictionary<string, string> Headers { get; set; } Property Value Type Description Dictionary<string, string> View Source Method Gets or Sets Method Declaration [DataMember(Name = \"method\", IsRequired = true, EmitDefaultValue = true)] public WebhookTestRequest.MethodEnum Method { get; set; } Property Value Type Description WebhookTestRequest.MethodEnum View Source Payload Gets or Sets Payload Declaration [DataMember(Name = \"payload\", EmitDefaultValue = true)] public string Payload { get; set; } Property Value Type Description string View Source Url Gets or Sets Url Declaration [DataMember(Name = \"url\", IsRequired = true, EmitDefaultValue = true)] public string Url { get; set; } Property Value Type Description string Methods View Source Equals(WebhookTestRequest) Returns true if WebhookTestRequest instances are equal Declaration public bool Equals(WebhookTestRequest input) Parameters Type Name Description WebhookTestRequest input Instance of WebhookTestRequest to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookTestRequest.MethodEnum.html": {
    "href": "api/mailslurp.Model.WebhookTestRequest.MethodEnum.html",
    "title": "Enum WebhookTestRequest.MethodEnum | MailSlurp",
    "keywords": "Enum WebhookTestRequest.MethodEnum Defines Method Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum WebhookTestRequest.MethodEnum Fields Name Description DELETE Enum DELETE for value: DELETE GET Enum GET for value: GET HEAD Enum HEAD for value: HEAD OPTIONS Enum OPTIONS for value: OPTIONS PATCH Enum PATCH for value: PATCH POST Enum POST for value: POST PUT Enum PUT for value: PUT TRACE Enum TRACE for value: TRACE"
  },
  "api/mailslurp.Model.WebhookTestResponse.html": {
    "href": "api/mailslurp.Model.WebhookTestResponse.html",
    "title": "Class WebhookTestResponse | MailSlurp",
    "keywords": "Class WebhookTestResponse Response from webhook test request Inheritance object WebhookTestResponse Implements IEquatable<WebhookTestResponse> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookTestResponse\")] public class WebhookTestResponse : IEquatable<WebhookTestResponse>, IValidatableObject Constructors View Source WebhookTestResponse(int?, string) Initializes a new instance of the WebhookTestResponse class. Declaration public WebhookTestResponse(int? statusCode = null, string message = null) Parameters Type Name Description int? statusCode statusCode. string message message. Properties View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = true)] public string Message { get; set; } Property Value Type Description string View Source StatusCode Gets or Sets StatusCode Declaration [DataMember(Name = \"statusCode\", EmitDefaultValue = true)] public int? StatusCode { get; set; } Property Value Type Description int? Methods View Source Equals(WebhookTestResponse) Returns true if WebhookTestResponse instances are equal Declaration public bool Equals(WebhookTestResponse input) Parameters Type Name Description WebhookTestResponse input Instance of WebhookTestResponse to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/mailslurp.Model.WebhookTestResult.html": {
    "href": "api/mailslurp.Model.WebhookTestResult.html",
    "title": "Class WebhookTestResult | MailSlurp",
    "keywords": "Class WebhookTestResult Results of testing a webhook Inheritance object WebhookTestResult Implements IEquatable<WebhookTestResult> IValidatableObject Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: mailslurp.Model Assembly: mailslurp.dll Syntax [DataContract(Name = \"WebhookTestResult\")] public class WebhookTestResult : IEquatable<WebhookTestResult>, IValidatableObject Constructors View Source WebhookTestResult() Initializes a new instance of the WebhookTestResult class. Declaration [JsonConstructor] protected WebhookTestResult() View Source WebhookTestResult(string, WebhookTestResponse, WebhookTestRequest) Initializes a new instance of the WebhookTestResult class. Declaration public WebhookTestResult(string message = null, WebhookTestResponse response = null, WebhookTestRequest request = null) Parameters Type Name Description string message message. WebhookTestResponse response response (required). WebhookTestRequest request request (required). Properties View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = true)] public string Message { get; set; } Property Value Type Description string View Source Request Gets or Sets Request Declaration [DataMember(Name = \"request\", IsRequired = true, EmitDefaultValue = true)] public WebhookTestRequest Request { get; set; } Property Value Type Description WebhookTestRequest View Source Response Gets or Sets Response Declaration [DataMember(Name = \"response\", IsRequired = true, EmitDefaultValue = true)] public WebhookTestResponse Response { get; set; } Property Value Type Description WebhookTestResponse Methods View Source Equals(WebhookTestResult) Returns true if WebhookTestResult instances are equal Declaration public bool Equals(WebhookTestResult input) Parameters Type Name Description WebhookTestResult input Instance of WebhookTestResult to be compared Returns Type Description bool Boolean View Source Equals(object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description object input Object to be compared Returns Type Description bool Boolean Overrides Object.Equals(Object) View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description int Hash code Overrides Object.GetHashCode() View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description string JSON string presentation of the object View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description string String presentation of the object Overrides Object.ToString() View Source Validate(ValidationContext) To validate all properties of the instance Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext Validation context Returns Type Description IEnumerable<ValidationResult> Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "index.html": {
    "href": "index.html",
    "title": "MailSlurp C# Client | MailSlurp",
    "keywords": "MailSlurp C# Client Create real email addresses on demand. Send and receive emails and attachments from code and tests using CSharp (C# DotNet Core). MailSlurp is an email API service that lets you create real email addresses in code. You can then send and receive emails and attachments in C# applications and tests. // create client var config = new Configuration(); config.ApiKey.Add(\"x-api-key\", ApiKey); // create inboxes var inboxControllerApi = new InboxControllerApi(config); var inbox1 = inboxControllerApi.CreateInbox(); var inbox2 = inboxControllerApi.CreateInbox(); // send email inboxControllerApi.SendEmail(inbox1.Id, new SendEmailOptions( to: new List<string> { inbox2.EmailAddress }, subject: \"Test CSharp\", body: \"<span>Hello</span>\", isHTML: true )); // receive email with wait controller var email = new WaitForControllerApi(config).WaitForLatestEmail(inbox2.Id, 60000, true); StringAssert.Contains(email.Body, \"Hello\"); // list emails in inbox var emails = inboxControllerApi.GetInboxEmailsPaginated(inbox2.Id); Assert.AreEqual(emails.TotalElements, 1); Video Quick links API documentation Method Documentation NuGet Package Code Examples Github Source CSharp SMTP access Tutorials SpecFlow email integration test Selenium DotNet email tutorial Get started This section describes how to get up and running with the CSharp client. The client targets DotNet-Core 2.1 and greater. If you need a different target see the .NET Standard targets below or consider calling the REST API. .NET Core 2.1 .NET Standard 2.1 See the method documentation for a list of all functions Create API Key First you'll need an API Key. Create a free account and copy the key from your dashboard. Install NuGet Package MailSlurp's CSharp library is hosted on NuGet. With .NET CLI dotnet add package mailslurp dotnet restore Package Manager Install-Package mailslurp Configure client Once your MailSlurp package is installed you can import the package like so: using mailslurp.Api; using mailslurp.Client; using mailslurp.Model; Then configure a client with using your API Key. var configuration = new Configuration(); configuration.ApiKey.Add(\"x-api-key\", YOUR_API_KEY); configuration.Timeout = 120_000; Create controllers You can call API controllers using the corresponding ControllerApi classes. var apiInstance = new InboxControllerApi(_configuration); Common controllers EmailController read and send emails InboxController create email addresses WaitForController wait for emails to arrive WebhookController manage http server webhooks Email usage examples MailSlurp has many functions. Here are some common uses: Create an inbox Inboxes have an ID and a real email address. You can create them using the InboxController. For more information see the creating inboxes guide. var inboxController = new InboxControllerApi(_configuration); var inbox = inboxController.CreateInboxWithDefaults(); Assert.That(inbox.EmailAddress, Does.Contain(\"@mailslurp\")); Inbox options var options = new CreateInboxDto( name: \"Test inbox\", inboxType: CreateInboxDto.InboxTypeEnum.SMTPINBOX ); var inbox = inboxController.CreateInboxWithOptions(options); Assert.That(inbox.EmailAddress.Contains(\"@mailslurp\"), Is.True); Get an inbox // get by id var inboxDto = inboxController.GetInbox(inbox.Id); // get by name var inboxByName = inboxController.GetInboxByName(inboxDto.Name); Assert.That(inboxByName.Exists, Is.True); // get by email address var inboxByEmailAddress = inboxController.GetInboxByEmailAddress(inboxDto.EmailAddress); Assert.That(inboxByEmailAddress.Exists, Is.True); Access mailbox using SMTP client You can access inboxes via IMAP and SMTP: var imapSmtpAccess = inboxController.GetImapSmtpAccess(inbox.Id); Assert.Multiple(() => { Assert.That(imapSmtpAccess.SecureSmtpServerHost, Is.Not.Null); Assert.That(imapSmtpAccess.SecureSmtpServerPort, Is.GreaterThan(0)); Assert.That(imapSmtpAccess.SecureSmtpUsername, Is.Not.Null); Assert.That(imapSmtpAccess.SecureSmtpPassword, Is.Not.Null); }); Send with SMTP client var smtpClient = new SmtpClient(imapSmtpAccess.SecureSmtpServerHost) { Port = imapSmtpAccess.SecureSmtpServerPort, Credentials = new NetworkCredential(userName: imapSmtpAccess.SecureSmtpUsername, password: imapSmtpAccess.SecureSmtpPassword), EnableSsl = true }; // smtpClient.Send(...); Can list inboxes Inboxes are listed in paginated format: var inboxes = inboxController.GetAllInboxes(page: 0, size: 10); Assert.Multiple(() => { // pagination Assert.That(inboxes.Pageable.PageNumber, Is.EqualTo(0)); Assert.That(inboxes.Pageable.PageSize, Is.EqualTo(10)); // inboxes var inboxItem = inboxes.Content.First(); Assert.That(inboxItem.EmailAddress, Is.Not.Null); }); See the InboxController docs for help. Delete an inbox inboxController.DeleteInbox(inbox.Id); Verify email address Validate email recipients to maintain a good sender reputation and reduce bounces. var verificationController = new EmailVerificationControllerApi(_configuration); var emails = new List<string> { \"contact@mailslurp.dev\", \"bad@mailslurp.dev\" }; var result = verificationController.ValidateEmailAddressList(new ValidateEmailAddressListOptions(emails)); Assert.Multiple(() => { Assert.That(result.InvalidEmailAddresses, Does.Contain(\"bad@mailslurp.dev\")); Assert.That(result.ValidEmailAddresses, Does.Contain(\"contact@mailslurp.dev\")); }); Upload attachments To send attachments first upload them. The method returns a list of attachment IDs that can be used when sending. var attachmentController = new AttachmentControllerApi(_configuration); var uploadOptions = new UploadAttachmentOptions( contentType: \"text/plain\", filename: \"test.txt\", base64Contents: Convert.ToBase64String(\"hello world\"u8.ToArray()) ); var attachmentIds = attachmentController.UploadAttachment(uploadOptions); Send emails You can send an email by first creating an inbox. Then use the inbox ID to send an email from it. var sendEmailOptions = new SendEmailOptions { To = new List<string>() { recipient.EmailAddress }, Subject = \"Hello friend\", Body = \"<h1>MailSlurp supports HTML</h1>\", Attachments = attachmentIds, UseInboxName = true }; var sentEmail = inboxController.SendEmailAndConfirm(inbox.Id, sendEmailOptions); Assert.That(sentEmail.Subject, Does.Contain(\"Hello\")); See the SendEmailOptions for sending options. Receive emails You can fetch and read emails that already exist using the EmailControllerApi. To wait for expected emails to arrive use the WaitForControllerApi to wait for conditions to be met. You can receive emails using waitFor methods on the WaitForControllerApi class. var inboxId = recipient.Id; var waitForController = new WaitForControllerApi(_configuration); var email = waitForController.WaitForLatestEmail(inboxId: inboxId, timeout: 60_000, unreadOnly: true); Assert.That(email.Body, Does.Contain(\"MailSlurp supports HTML\")); You can extract content from email bodies using RegExps: // imagine that email body is `Your code is: 123` and you want to get the number var rx = new Regex(@\"Your code is: ([0-9]{3})\", RegexOptions.Compiled); var match = rx.Match(email.Body); var code = match.Groups[1].Value; Assert.Equal(\"123\", code); If you are having trouble receiving emails please see the email receiving guide or the inbox not receiving support page. Email matching You can wait for matching emails like so: var matchOptions = new MatchOptions( conditions: new List<ConditionOption> { new( condition: ConditionOption.ConditionEnum.HASATTACHMENTS, value: ConditionOption.ValueEnum.TRUE ) }, matches: new List<MatchOption> { new( field: MatchOption.FieldEnum.FROM, should: MatchOption.ShouldEnum.EQUAL, value: sender ) }); var matchingEmails = waitForController.WaitForMatchingEmails(inboxId: inboxId, timeout: 60_000, count: 1, matchOptions: matchOptions); Assert.That(matchingEmails.First().Subject, Does.Contain(\"Hello\")); Fetch email by ID var emailController = new EmailControllerApi(_configuration); var fullEmail = emailController.GetEmail(email.Id); Assert.That(fullEmail.Attachments, Has.Count.EqualTo(1)); Get sent emails [TestMethod] public void Can_Get_Sent_Emails() { var sentEmailsControllerApi = new SentEmailsControllerApi(_config); var inboxControllerApi = new InboxControllerApi(_config); var inbox = inboxControllerApi.CreateInbox(); var sentEmails = sentEmailsControllerApi.GetSentEmails(inboxId:inbox.Id, page:0, size: 20); Assert.IsNotNull(sentEmails.Content); Assert.IsNotNull(sentEmails.TotalPages); Assert.AreEqual(sentEmails.Pageable.PageNumber, 0); Assert.AreEqual(sentEmails.Pageable.PageSize, 20); } Extract email content You can extract content using pattern matching with the WaitForController [TestMethod] public void Can_Extract_Codes() { // create an inbox var inboxControllerApi = new InboxControllerApi(_config); var inbox = inboxControllerApi.CreateInbox(); // send a code to the inbox var sendEmailOptions = new SendEmailOptions( to: new List<string>() {inbox.EmailAddress}, subject: \"Welcome email\", body: \"Hello. Your code is X-456\" ); inboxControllerApi.SendEmail(inbox.Id, sendEmailOptions); // wait for the email to arrive var waitForController = new WaitForControllerApi(_config); var emailController = new EmailControllerApi(_config); var email = waitForController.WaitForLatestEmail(inboxId:inbox.Id, timeout: 30000, unreadOnly: true); StringAssert.Contains(email.Body, \"Hello\"); // extract the code var matchOptions = new ContentMatchOptions(pattern:\"Your code is ([A-Z]-[0-9]{3})\"); var matchResults = emailController.GetEmailContentMatch(email.Id, matchOptions); Assert.AreEqual(matchResults.Matches[1], \"X-456\"); } SDK Documentation See the GitHub source code for more Method Documentation."
  },
  "README.html": {
    "href": "README.html",
    "title": "MailSlurp C# Client | MailSlurp",
    "keywords": "MailSlurp C# Client Create real email addresses on demand. Send and receive emails and attachments from code and tests using CSharp (C# DotNet Core). MailSlurp is an email API service that lets you create real email addresses in code. You can then send and receive emails and attachments in C# applications and tests. // create client var config = new Configuration(); config.ApiKey.Add(\"x-api-key\", ApiKey); // create inboxes var inboxControllerApi = new InboxControllerApi(config); var inbox1 = inboxControllerApi.CreateInbox(); var inbox2 = inboxControllerApi.CreateInbox(); // send email inboxControllerApi.SendEmail(inbox1.Id, new SendEmailOptions( to: new List<string> { inbox2.EmailAddress }, subject: \"Test CSharp\", body: \"<span>Hello</span>\", isHTML: true )); // receive email with wait controller var email = new WaitForControllerApi(config).WaitForLatestEmail(inbox2.Id, 60000, true); StringAssert.Contains(email.Body, \"Hello\"); // list emails in inbox var emails = inboxControllerApi.GetInboxEmailsPaginated(inbox2.Id); Assert.AreEqual(emails.TotalElements, 1); Video Quick links API documentation Method Documentation NuGet Package Code Examples Github Source CSharp SMTP access Tutorials SpecFlow email integration test Selenium DotNet email tutorial Get started This section describes how to get up and running with the CSharp client. The client targets DotNet-Core 2.1 and greater. If you need a different target see the .NET Standard targets below or consider calling the REST API. .NET Core 2.1 .NET Standard 2.1 See the method documentation for a list of all functions Create API Key First you'll need an API Key. Create a free account and copy the key from your dashboard. Install NuGet Package MailSlurp's CSharp library is hosted on NuGet. With .NET CLI dotnet add package mailslurp dotnet restore Package Manager Install-Package mailslurp Configure client Once your MailSlurp package is installed you can import the package like so: using mailslurp.Api; using mailslurp.Client; using mailslurp.Model; Then configure a client with using your API Key. var configuration = new Configuration(); configuration.ApiKey.Add(\"x-api-key\", YOUR_API_KEY); configuration.Timeout = 120_000; Create controllers You can call API controllers using the corresponding ControllerApi classes. var apiInstance = new InboxControllerApi(_configuration); Common controllers EmailController read and send emails InboxController create email addresses WaitForController wait for emails to arrive WebhookController manage http server webhooks Email usage examples MailSlurp has many functions. Here are some common uses: Create an inbox Inboxes have an ID and a real email address. You can create them using the InboxController. For more information see the creating inboxes guide. var inboxController = new InboxControllerApi(_configuration); var inbox = inboxController.CreateInboxWithDefaults(); Assert.That(inbox.EmailAddress, Does.Contain(\"@mailslurp\")); Inbox options var options = new CreateInboxDto( name: \"Test inbox\", inboxType: CreateInboxDto.InboxTypeEnum.SMTPINBOX ); var inbox = inboxController.CreateInboxWithOptions(options); Assert.That(inbox.EmailAddress.Contains(\"@mailslurp\"), Is.True); Get an inbox // get by id var inboxDto = inboxController.GetInbox(inbox.Id); // get by name var inboxByName = inboxController.GetInboxByName(inboxDto.Name); Assert.That(inboxByName.Exists, Is.True); // get by email address var inboxByEmailAddress = inboxController.GetInboxByEmailAddress(inboxDto.EmailAddress); Assert.That(inboxByEmailAddress.Exists, Is.True); Access mailbox using SMTP client You can access inboxes via IMAP and SMTP: var imapSmtpAccess = inboxController.GetImapSmtpAccess(inbox.Id); Assert.Multiple(() => { Assert.That(imapSmtpAccess.SecureSmtpServerHost, Is.Not.Null); Assert.That(imapSmtpAccess.SecureSmtpServerPort, Is.GreaterThan(0)); Assert.That(imapSmtpAccess.SecureSmtpUsername, Is.Not.Null); Assert.That(imapSmtpAccess.SecureSmtpPassword, Is.Not.Null); }); Send with SMTP client var smtpClient = new SmtpClient(imapSmtpAccess.SecureSmtpServerHost) { Port = imapSmtpAccess.SecureSmtpServerPort, Credentials = new NetworkCredential(userName: imapSmtpAccess.SecureSmtpUsername, password: imapSmtpAccess.SecureSmtpPassword), EnableSsl = true }; // smtpClient.Send(...); Can list inboxes Inboxes are listed in paginated format: var inboxes = inboxController.GetAllInboxes(page: 0, size: 10); Assert.Multiple(() => { // pagination Assert.That(inboxes.Pageable.PageNumber, Is.EqualTo(0)); Assert.That(inboxes.Pageable.PageSize, Is.EqualTo(10)); // inboxes var inboxItem = inboxes.Content.First(); Assert.That(inboxItem.EmailAddress, Is.Not.Null); }); See the InboxController docs for help. Delete an inbox inboxController.DeleteInbox(inbox.Id); Verify email address Validate email recipients to maintain a good sender reputation and reduce bounces. var verificationController = new EmailVerificationControllerApi(_configuration); var emails = new List<string> { \"contact@mailslurp.dev\", \"bad@mailslurp.dev\" }; var result = verificationController.ValidateEmailAddressList(new ValidateEmailAddressListOptions(emails)); Assert.Multiple(() => { Assert.That(result.InvalidEmailAddresses, Does.Contain(\"bad@mailslurp.dev\")); Assert.That(result.ValidEmailAddresses, Does.Contain(\"contact@mailslurp.dev\")); }); Upload attachments To send attachments first upload them. The method returns a list of attachment IDs that can be used when sending. var attachmentController = new AttachmentControllerApi(_configuration); var uploadOptions = new UploadAttachmentOptions( contentType: \"text/plain\", filename: \"test.txt\", base64Contents: Convert.ToBase64String(\"hello world\"u8.ToArray()) ); var attachmentIds = attachmentController.UploadAttachment(uploadOptions); Send emails You can send an email by first creating an inbox. Then use the inbox ID to send an email from it. var sendEmailOptions = new SendEmailOptions { To = new List<string>() { recipient.EmailAddress }, Subject = \"Hello friend\", Body = \"<h1>MailSlurp supports HTML</h1>\", Attachments = attachmentIds, UseInboxName = true }; var sentEmail = inboxController.SendEmailAndConfirm(inbox.Id, sendEmailOptions); Assert.That(sentEmail.Subject, Does.Contain(\"Hello\")); See the SendEmailOptions for sending options. Receive emails You can fetch and read emails that already exist using the EmailControllerApi. To wait for expected emails to arrive use the WaitForControllerApi to wait for conditions to be met. You can receive emails using waitFor methods on the WaitForControllerApi class. var inboxId = recipient.Id; var waitForController = new WaitForControllerApi(_configuration); var email = waitForController.WaitForLatestEmail(inboxId: inboxId, timeout: 60_000, unreadOnly: true); Assert.That(email.Body, Does.Contain(\"MailSlurp supports HTML\")); You can extract content from email bodies using RegExps: // imagine that email body is `Your code is: 123` and you want to get the number var rx = new Regex(@\"Your code is: ([0-9]{3})\", RegexOptions.Compiled); var match = rx.Match(email.Body); var code = match.Groups[1].Value; Assert.Equal(\"123\", code); If you are having trouble receiving emails please see the email receiving guide or the inbox not receiving support page. Email matching You can wait for matching emails like so: var matchOptions = new MatchOptions( conditions: new List<ConditionOption> { new( condition: ConditionOption.ConditionEnum.HASATTACHMENTS, value: ConditionOption.ValueEnum.TRUE ) }, matches: new List<MatchOption> { new( field: MatchOption.FieldEnum.FROM, should: MatchOption.ShouldEnum.EQUAL, value: sender ) }); var matchingEmails = waitForController.WaitForMatchingEmails(inboxId: inboxId, timeout: 60_000, count: 1, matchOptions: matchOptions); Assert.That(matchingEmails.First().Subject, Does.Contain(\"Hello\")); Fetch email by ID var emailController = new EmailControllerApi(_configuration); var fullEmail = emailController.GetEmail(email.Id); Assert.That(fullEmail.Attachments, Has.Count.EqualTo(1)); Get sent emails [TestMethod] public void Can_Get_Sent_Emails() { var sentEmailsControllerApi = new SentEmailsControllerApi(_config); var inboxControllerApi = new InboxControllerApi(_config); var inbox = inboxControllerApi.CreateInbox(); var sentEmails = sentEmailsControllerApi.GetSentEmails(inboxId:inbox.Id, page:0, size: 20); Assert.IsNotNull(sentEmails.Content); Assert.IsNotNull(sentEmails.TotalPages); Assert.AreEqual(sentEmails.Pageable.PageNumber, 0); Assert.AreEqual(sentEmails.Pageable.PageSize, 20); } Extract email content You can extract content using pattern matching with the WaitForController [TestMethod] public void Can_Extract_Codes() { // create an inbox var inboxControllerApi = new InboxControllerApi(_config); var inbox = inboxControllerApi.CreateInbox(); // send a code to the inbox var sendEmailOptions = new SendEmailOptions( to: new List<string>() {inbox.EmailAddress}, subject: \"Welcome email\", body: \"Hello. Your code is X-456\" ); inboxControllerApi.SendEmail(inbox.Id, sendEmailOptions); // wait for the email to arrive var waitForController = new WaitForControllerApi(_config); var emailController = new EmailControllerApi(_config); var email = waitForController.WaitForLatestEmail(inboxId:inbox.Id, timeout: 30000, unreadOnly: true); StringAssert.Contains(email.Body, \"Hello\"); // extract the code var matchOptions = new ContentMatchOptions(pattern:\"Your code is ([A-Z]-[0-9]{3})\"); var matchResults = emailController.GetEmailContentMatch(email.Id, matchOptions); Assert.AreEqual(matchResults.Matches[1], \"X-456\"); } SDK Documentation See the GitHub source code for more Method Documentation."
  },
  "SECURITY.html": {
    "href": "SECURITY.html",
    "title": "Security | MailSlurp",
    "keywords": "Security This client calls the MailSlurp API endpoints. Connections should be made over secure HTTPS using your secure API Token. Do not share or commit the token if you can avoid doing so. To report security issues or talk with MailSlurp support please email contact@mailslurp.dev."
  },
  "SUPPORT.html": {
    "href": "SUPPORT.html",
    "title": "Support | MailSlurp",
    "keywords": "Support To report issues or talk with MailSlurp support please email contact@mailslurp.dev. Alternatively you can visit our support portal or open a ticket in the corresponding Github repository."
  }
}